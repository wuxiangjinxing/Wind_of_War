from header_terrain_types import *
from header_common import *
from header_presentations import *
from header_mission_templates import *
from ID_meshes import *
from header_operations import *
from header_triggers import *
from module_constants import *
import string

## CC
from header_skills import *
from header_items import *
from module_items import *
from module_my_mod_set import *
## CC
####################################################################################################################
#  Each presentation record contains the following fields:
#  1) Presentation id: used for referencing presentations in other files. The prefix prsnt_ is automatically added before each presentation id.
#  2) Presentation flags. See header_presentations.py for a list of available flags
#  3) Presentation background mesh: See module_meshes.py for a list of available background meshes
#  4) Triggers: Simple triggers that are associated with the presentation
####################################################################################################################


presentations = [
  ## CC
  ("game_start",prsntf_read_only,0,[
    (ti_on_presentation_load,
      [
        (presentation_set_duration, 999999),
        (set_fixed_point_multiplier, 1000),

        (store_div, reg1, mod_version, 1000),
        (store_mod, reg2, mod_version, 1000),
        (try_begin),
          (eq, reg2, 0),
          (str_store_string, s1, "@{reg1}.0"),
        (else_try),
          (lt, reg2, 10),
          (str_store_string, s1, "@{reg1}.00{reg2}"),
        (else_try),
          (lt, reg2, 100),
          (try_begin),
            (store_mod, ":result", reg2, 10),
            (eq,  ":result", 0),
            (val_div, reg2, 10),
          (try_end),
          (str_store_string, s1, "@{reg1}.0{reg2}"),
        (else_try),
          (try_begin),
            (store_mod, ":result", reg2, 100),
            (eq,  ":result", 0),
            (val_div, reg2, 100),
          (else_try),
            (store_mod, ":result", reg2, 10),
            (eq,  ":result", 0),
            (val_div, reg2, 10),
          (try_end),  
          (str_store_string, s1, "@{reg1}.{reg2}"),
        (try_end),
        (create_text_overlay, "$g_presentation_credits_obj_1", "@Custom Commander:", tf_double_space),
        (create_text_overlay, "$g_presentation_credits_obj_2", "@Warband Expanded v{s1} ", tf_double_space),
        (position_set_x, pos1, 1300),
        (position_set_y, pos1, 1300),
        (overlay_set_size, "$g_presentation_credits_obj_1", pos1),
        (overlay_set_size, "$g_presentation_credits_obj_2", pos1),
        (overlay_set_color, "$g_presentation_credits_obj_1", 0xFF0000),
        (overlay_set_color, "$g_presentation_credits_obj_2", 0xFF0000),

        (position_set_x, pos1, -300),
        (position_set_y, pos1, 650),
        (overlay_set_position, "$g_presentation_credits_obj_1", pos1),
        (position_set_x, pos1, 300),
        (position_set_y, pos1, 650),
        (overlay_animate_to_position, "$g_presentation_credits_obj_1", 600, pos1),

        (position_set_x, pos1, 1300),
        (position_set_y, pos1, 600),
        (overlay_set_position, "$g_presentation_credits_obj_2", pos1),
        (position_set_x, pos1, 350),
        (position_set_y, pos1, 600),
        (overlay_animate_to_position, "$g_presentation_credits_obj_2", 600, pos1),
      ]),
    ]),
  ## CC
  ("game_credits",prsntf_read_only,mesh_load_window,[
      (ti_on_presentation_load,
       [(assign, "$g_presentation_credits_obj_1", -1),
        (assign, "$g_presentation_credits_obj_2", -1),
        (assign, "$g_presentation_credits_obj_3", -1),
        (assign, "$g_presentation_credits_obj_4", -1),
        (assign, "$g_presentation_credits_obj_5", -1),
        (assign, "$g_presentation_credits_obj_6", -1),
        (assign, "$g_presentation_credits_obj_7", -1),
        (assign, "$g_presentation_credits_obj_8", -1),
        (assign, "$g_presentation_credits_obj_9", -1),
        (assign, "$g_presentation_credits_obj_10", -1),
        (assign, "$g_presentation_credits_obj_11", -1),
        (assign, "$g_presentation_credits_obj_12", -1),
        (assign, "$g_presentation_credits_obj_1_alpha", 0),
        (assign, "$g_presentation_credits_obj_2_alpha", 0),
        (assign, "$g_presentation_credits_obj_3_alpha", 0),
        (assign, "$g_presentation_credits_obj_4_alpha", 0),
        (assign, "$g_presentation_credits_obj_5_alpha", 0),
        (assign, "$g_presentation_credits_obj_6_alpha", 0),
        (assign, "$g_presentation_credits_obj_7_alpha", 0),
        (assign, "$g_presentation_credits_obj_8_alpha", 0),
        (assign, "$g_presentation_credits_obj_9_alpha", 0),
        ]),
      (ti_on_presentation_run,
       [
        (store_trigger_param_1, ":cur_time"),
        (set_fixed_point_multiplier, 1000),
        (presentation_set_duration, 1000000),
        (try_begin),
          (this_or_next|key_clicked, key_space),
          (this_or_next|key_clicked, key_enter),
          (this_or_next|key_clicked, key_escape),
          (this_or_next|key_clicked, key_back_space),
          (this_or_next|key_clicked, key_left_mouse_button),
          (this_or_next|key_clicked, key_right_mouse_button),
          (this_or_next|key_clicked, key_xbox_ltrigger),
          (key_clicked, key_xbox_rtrigger),
          (presentation_set_duration, 0),
        (try_end),
        (try_begin),
          (lt, "$g_presentation_credits_obj_1", 0),
          (str_store_string, s1, "str_credits_1"),
          (create_text_overlay, "$g_presentation_credits_obj_1", s1, tf_center_justify|tf_double_space|tf_vertical_align_center),
          (overlay_set_color, "$g_presentation_credits_obj_1", 0),
          (overlay_set_alpha, "$g_presentation_credits_obj_1", 0),
          (position_set_x, pos1, 1500),
          (position_set_y, pos1, 1500),
          (overlay_set_size, "$g_presentation_credits_obj_1", pos1),
          (position_set_x, pos1, 500),
          (position_set_y, pos1, 375),
          (overlay_set_position, "$g_presentation_credits_obj_1", pos1),
          (overlay_animate_to_alpha, "$g_presentation_credits_obj_1", 1000, 0xFF),
        (else_try),
          (gt, ":cur_time", 2000),
          (eq, "$g_presentation_credits_obj_1_alpha", 0),
          (assign, "$g_presentation_credits_obj_1_alpha", 1),
          (overlay_animate_to_alpha, "$g_presentation_credits_obj_1", 1000, 0x00),
        (else_try),
          (gt, ":cur_time", 3500),
          (lt, "$g_presentation_credits_obj_2", 0),
          (str_store_string, s1, "str_credits_2"),
          (create_text_overlay, "$g_presentation_credits_obj_2", s1, tf_center_justify|tf_double_space|tf_vertical_align_center),
          (overlay_set_color, "$g_presentation_credits_obj_2", 0),
          (overlay_set_alpha, "$g_presentation_credits_obj_2", 0),
          (position_set_x, pos1, 1750),
          (position_set_y, pos1, 1750),
          (overlay_set_size, "$g_presentation_credits_obj_2", pos1),
          (position_set_x, pos1, 500),
          (position_set_y, pos1, 375),
          (overlay_set_position, "$g_presentation_credits_obj_2", pos1),
          (overlay_animate_to_alpha, "$g_presentation_credits_obj_2", 1000, 0xFF),
        (else_try),
          (gt, ":cur_time", 5500),
          (eq, "$g_presentation_credits_obj_2_alpha", 0),
          (assign, "$g_presentation_credits_obj_2_alpha", 1),
          (overlay_animate_to_alpha, "$g_presentation_credits_obj_2", 1000, 0x00),
        (else_try),
          (gt, ":cur_time", 7000),
          (lt, "$g_presentation_credits_obj_3", 0),
          (str_store_string, s1, "str_credits_3"),
          (create_text_overlay, "$g_presentation_credits_obj_3", s1, tf_center_justify|tf_double_space|tf_vertical_align_center),
          (overlay_set_color, "$g_presentation_credits_obj_3", 0),
          (overlay_set_alpha, "$g_presentation_credits_obj_3", 0),
          (position_set_x, pos1, 1750),
          (position_set_y, pos1, 1750),
          (overlay_set_size, "$g_presentation_credits_obj_3", pos1),
          (position_set_x, pos1, 500),
          (position_set_y, pos1, 375),
          (overlay_set_position, "$g_presentation_credits_obj_3", pos1),
          (overlay_animate_to_alpha, "$g_presentation_credits_obj_3", 1000, 0xFF),
        (else_try),
          (gt, ":cur_time", 9000),
          (eq, "$g_presentation_credits_obj_3_alpha", 0),
          (assign, "$g_presentation_credits_obj_3_alpha", 1),
          (overlay_animate_to_alpha, "$g_presentation_credits_obj_3", 1000, 0),
        (else_try),
          (gt, ":cur_time", 10500),
          (lt, "$g_presentation_credits_obj_4", 0),
          (str_store_string, s1, "str_credits_4"),
          (create_text_overlay, "$g_presentation_credits_obj_4", s1, tf_center_justify|tf_double_space|tf_vertical_align_center),
          (overlay_set_color, "$g_presentation_credits_obj_4", 0),
          (overlay_set_alpha, "$g_presentation_credits_obj_4", 0),
          (position_set_x, pos1, 1750),
          (position_set_y, pos1, 1750),
          (overlay_set_size, "$g_presentation_credits_obj_4", pos1),
          (position_set_x, pos1, 500),
          (position_set_y, pos1, 375),
          (overlay_set_position, "$g_presentation_credits_obj_4", pos1),
          (overlay_animate_to_alpha, "$g_presentation_credits_obj_4", 1000, 0xFF),
        (else_try),
          (gt, ":cur_time", 12500),
          (eq, "$g_presentation_credits_obj_4_alpha", 0),
          (assign, "$g_presentation_credits_obj_4_alpha", 1),
          (overlay_animate_to_alpha, "$g_presentation_credits_obj_4", 1000, 0),
        (else_try),
          (gt, ":cur_time", 14000),
          (lt, "$g_presentation_credits_obj_5", 0),
          (str_store_string, s1, "str_credits_5"),
          (create_text_overlay, "$g_presentation_credits_obj_5", s1, tf_center_justify|tf_double_space|tf_vertical_align_center),
          (overlay_set_color, "$g_presentation_credits_obj_5", 0),
          (overlay_set_alpha, "$g_presentation_credits_obj_5", 0),
          (position_set_x, pos1, 1750),
          (position_set_y, pos1, 1750),
          (overlay_set_size, "$g_presentation_credits_obj_5", pos1),
          (position_set_x, pos1, 500),
          (position_set_y, pos1, 375),
          (overlay_set_position, "$g_presentation_credits_obj_5", pos1),
          (overlay_animate_to_alpha, "$g_presentation_credits_obj_5", 1000, 0xFF),
        (else_try),
          (gt, ":cur_time", 16000),
          (eq, "$g_presentation_credits_obj_5_alpha", 0),
          (assign, "$g_presentation_credits_obj_5_alpha", 1),
          (overlay_animate_to_alpha, "$g_presentation_credits_obj_5", 1000, 0),
        (else_try),
          (gt, ":cur_time", 17500),
          (lt, "$g_presentation_credits_obj_6", 0),
          (str_store_string, s1, "str_credits_6"),
          (create_text_overlay, "$g_presentation_credits_obj_6", s1, tf_center_justify|tf_double_space|tf_vertical_align_center),
          (overlay_set_color, "$g_presentation_credits_obj_6", 0),
          (overlay_set_alpha, "$g_presentation_credits_obj_6", 0),
          (position_set_x, pos1, 1750),
          (position_set_y, pos1, 1750),
          (overlay_set_size, "$g_presentation_credits_obj_6", pos1),
          (position_set_x, pos1, 500),
          (position_set_y, pos1, 375),
          (overlay_set_position, "$g_presentation_credits_obj_6", pos1),
          (overlay_animate_to_alpha, "$g_presentation_credits_obj_6", 1000, 0xFF),
        (else_try),
          (gt, ":cur_time", 19500),
          (eq, "$g_presentation_credits_obj_6_alpha", 0),
          (assign, "$g_presentation_credits_obj_6_alpha", 1),
          (overlay_animate_to_alpha, "$g_presentation_credits_obj_6", 1000, 0),
        (else_try),
          (gt, ":cur_time", 21000),
          (lt, "$g_presentation_credits_obj_7", 0),
          (str_store_string, s1, "str_credits_7"),
          (create_text_overlay, "$g_presentation_credits_obj_7", s1, tf_center_justify|tf_double_space|tf_vertical_align_center),
          (overlay_set_color, "$g_presentation_credits_obj_7", 0),
          (overlay_set_alpha, "$g_presentation_credits_obj_7", 0),
          (position_set_x, pos1, 1750),
          (position_set_y, pos1, 1750),
          (overlay_set_size, "$g_presentation_credits_obj_7", pos1),
          (position_set_x, pos1, 500),
          (position_set_y, pos1, 375),
          (overlay_set_position, "$g_presentation_credits_obj_7", pos1),
          (overlay_animate_to_alpha, "$g_presentation_credits_obj_7", 1000, 0xFF),
        (else_try),
          (gt, ":cur_time", 23000),
          (eq, "$g_presentation_credits_obj_7_alpha", 0),
          (assign, "$g_presentation_credits_obj_7_alpha", 1),
          (overlay_animate_to_alpha, "$g_presentation_credits_obj_7", 1000, 0),
        (else_try),
          (gt, ":cur_time", 24500),
          (lt, "$g_presentation_credits_obj_8", 0),
          (str_store_string, s1, "str_credits_8"),
          (create_text_overlay, "$g_presentation_credits_obj_8", s1, tf_center_justify|tf_double_space|tf_vertical_align_center),
          (overlay_set_color, "$g_presentation_credits_obj_8", 0),
          (overlay_set_alpha, "$g_presentation_credits_obj_8", 0),
          (position_set_x, pos1, 1750),
          (position_set_y, pos1, 1750),
          (overlay_set_size, "$g_presentation_credits_obj_8", pos1),
          (position_set_x, pos1, 500),
          (position_set_y, pos1, 375),
          (overlay_set_position, "$g_presentation_credits_obj_8", pos1),
          (overlay_animate_to_alpha, "$g_presentation_credits_obj_8", 1000, 0xFF),
        (else_try),
          (gt, ":cur_time", 26500),
          (eq, "$g_presentation_credits_obj_8_alpha", 0),
          (assign, "$g_presentation_credits_obj_8_alpha", 1),
          (overlay_animate_to_alpha, "$g_presentation_credits_obj_8", 1000, 0),
        (else_try),
          (gt, ":cur_time", 28000),
          (lt, "$g_presentation_credits_obj_9", 0),
          (str_store_string, s1, "str_credits_10"),
          (create_text_overlay, "$g_presentation_credits_obj_9", s1, tf_center_justify|tf_double_space|tf_vertical_align_center),
          (overlay_set_color, "$g_presentation_credits_obj_9", 0),
          (overlay_set_alpha, "$g_presentation_credits_obj_9", 0),
          (position_set_x, pos1, 750),
          (position_set_y, pos1, 750),
          (overlay_set_size, "$g_presentation_credits_obj_9", pos1),
          (position_set_x, pos1, 250),
          (position_set_y, pos1, 485),
          (overlay_set_position, "$g_presentation_credits_obj_9", pos1),
          (overlay_animate_to_alpha, "$g_presentation_credits_obj_9", 1000, 0xFF),

          (str_store_string, s1, "str_credits_11"),
          (create_text_overlay, "$g_presentation_credits_obj_10", s1, tf_center_justify|tf_double_space|tf_vertical_align_center),
          (overlay_set_color, "$g_presentation_credits_obj_10", 0),
          (overlay_set_alpha, "$g_presentation_credits_obj_10", 0),
          (position_set_x, pos1, 750),
          (position_set_y, pos1, 750),
          (overlay_set_size, "$g_presentation_credits_obj_10", pos1),
          (position_set_x, pos1, 750),
          (position_set_y, pos1, 470),
          (overlay_set_position, "$g_presentation_credits_obj_10", pos1),
          (overlay_animate_to_alpha, "$g_presentation_credits_obj_10", 1000, 0xFF),

          (str_store_string, s1, "str_credits_12"),
          (create_text_overlay, "$g_presentation_credits_obj_11", s1, tf_center_justify|tf_double_space|tf_vertical_align_center),
          (overlay_set_color, "$g_presentation_credits_obj_11", 0),
          (overlay_set_alpha, "$g_presentation_credits_obj_11", 0),
          (position_set_x, pos1, 750),
          (position_set_y, pos1, 750),
          (overlay_set_size, "$g_presentation_credits_obj_11", pos1),
          (position_set_x, pos1, 500),
          (position_set_y, pos1, 105),
          (overlay_set_position, "$g_presentation_credits_obj_11", pos1),
          (overlay_animate_to_alpha, "$g_presentation_credits_obj_11", 1000, 0xFF),
        (else_try),
          (gt, ":cur_time", 34000),
          (eq, "$g_presentation_credits_obj_9_alpha", 0),
          (assign, "$g_presentation_credits_obj_9_alpha", 1),
          (overlay_animate_to_alpha, "$g_presentation_credits_obj_9", 1000, 0),
          (overlay_animate_to_alpha, "$g_presentation_credits_obj_10", 1000, 0),
          (overlay_animate_to_alpha, "$g_presentation_credits_obj_11", 1000, 0),
        (else_try),
          (gt, ":cur_time", 35500),
          (lt, "$g_presentation_credits_obj_12", 0),
          (str_store_string, s1, "str_credits_9"),
          (create_text_overlay, "$g_presentation_credits_obj_12", s1, tf_center_justify|tf_double_space),
          (overlay_set_color, "$g_presentation_credits_obj_12", 0),
          (overlay_set_alpha, "$g_presentation_credits_obj_12", 0xFF),
          (position_set_x, pos1, 1000),
          (position_set_y, pos1, 1000),
          (overlay_set_size, "$g_presentation_credits_obj_12", pos1),
          (position_set_x, pos1, 500),
          (position_set_y, pos1, -4800),
          (overlay_set_position, "$g_presentation_credits_obj_12", pos1),
          (position_set_x, pos1, 500),
          (position_set_y, pos1, 760),
          (overlay_animate_to_position, "$g_presentation_credits_obj_12", 70000, pos1),
        (else_try),
          (gt, ":cur_time", 105500),
          (presentation_set_duration, 0),
        (try_end),
        ]),
      ]),

  ("game_profile_banner_selection", 0, mesh_load_window, [
    (ti_on_presentation_load, [
      (set_fixed_point_multiplier, 1000),
      (str_store_string, s1, "str_profile_banner_selection_text"),
      (create_text_overlay, reg1, s1, tf_center_justify),
      (position_set_x, pos1, 500),
      (position_set_y, pos1, 600),
      (overlay_set_position, reg1, pos1),
      (overlay_set_text, reg1, s1),
      (create_button_overlay, "$g_presentation_obj_profile_banner_selection_1", "@Next Page", tf_center_justify),
      (position_set_x, pos1, 700),
      (position_set_y, pos1, 50),
      (overlay_set_position, "$g_presentation_obj_profile_banner_selection_1", pos1),

      (create_button_overlay, "$g_presentation_obj_profile_banner_selection_2", "str_use_default_banner", tf_center_justify),
      (position_set_x, pos1, 300),
      (position_set_y, pos1, 50),
      (overlay_set_position, "$g_presentation_obj_profile_banner_selection_2", pos1),

      (assign, ":x_pos", 150),
      (assign, ":y_pos", 575),
      (store_mul, ":starting_banner", 16, "$g_presentation_page_no"),
      (store_add, ":ending_banner", ":starting_banner", 16),
      (store_add, "$g_presentation_banner_start", "$g_presentation_obj_profile_banner_selection_2", 1),
      (assign, ":num_valid_banners", 0),
      (try_for_range, ":cur_banner_mesh", banner_meshes_begin, banner_meshes_end_minus_one),
        (assign, ":already_used", 0),
        (try_for_range, ":cur_faction", npc_kingdoms_begin, npc_kingdoms_end),
          (faction_slot_eq, ":cur_faction", slot_faction_banner, ":cur_banner_mesh"),
          (assign, ":already_used", 1),
        (try_end),
        (eq, ":already_used", 0),
        (val_add, ":num_valid_banners", 1),
        (gt, ":num_valid_banners", ":starting_banner"),
        (le, ":num_valid_banners", ":ending_banner"),
        (create_image_button_overlay, reg1, ":cur_banner_mesh", ":cur_banner_mesh"),
        (position_set_x, pos1, ":x_pos"),
        (position_set_y, pos1, ":y_pos"),
        (overlay_set_position, reg1, pos1),
        (position_set_x, pos1, 100),
        (position_set_y, pos1, 100),
        (overlay_set_size, reg1, pos1),
        (val_add, ":x_pos", 100),
        (ge, ":x_pos", 900),
        (assign, ":x_pos", 150),
        (val_sub, ":y_pos", 250),
      (try_end),
      (presentation_set_duration, 999999),
      ]),

    (ti_on_presentation_event_state_change, [
      (store_trigger_param_1, ":object"),
      (try_begin),
        (eq, ":object", "$g_presentation_obj_profile_banner_selection_1"),
        (val_add, "$g_presentation_page_no", 1),
        (val_mod, "$g_presentation_page_no", 19),
        (presentation_set_duration, 0),
        (start_presentation, "prsnt_game_profile_banner_selection"),
      (else_try),
        (eq, ":object", "$g_presentation_obj_profile_banner_selection_2"),
        (profile_set_banner_id, -1),
        (presentation_set_duration, 0),
      (else_try),
        (store_sub, ":selected_banner", ":object", "$g_presentation_banner_start"),
        (store_mul, ":page_adder", 16, "$g_presentation_page_no"),
        (val_add, ":selected_banner", ":page_adder"),
        (assign, ":num_valid_banners", 0),
        (assign, ":end_cond", banner_meshes_end_minus_one),
        (try_for_range, ":cur_banner_mesh", banner_meshes_begin, ":end_cond"),
          (assign, ":already_used", 0),
          (try_for_range, ":cur_faction", npc_kingdoms_begin, npc_kingdoms_end),
            (faction_slot_eq, ":cur_faction", slot_faction_banner, ":cur_banner_mesh"),
            (assign, ":already_used", 1),
          (try_end),
          (eq, ":already_used", 0),
          (try_begin),
            (eq, ":selected_banner", ":num_valid_banners"),
            (store_sub, ":selected_banner_index", ":cur_banner_mesh", banner_meshes_begin),
            (profile_set_banner_id, ":selected_banner_index"),
            (assign, ":end_cond", 0), #break
          (try_end),
          (val_add, ":num_valid_banners", 1),
        (try_end),
        (presentation_set_duration, 0),
      (try_end),
      ]),
    ]),

  ("game_custom_battle_designer", prsntf_manual_end_only, mesh_cb_ui_main, [
    (ti_on_presentation_load,
     [(set_fixed_point_multiplier, 1000),

      (create_text_overlay, reg0, "str_player", tf_center_justify|tf_single_line|tf_with_outline),
      (overlay_set_color, reg0, 0xFFFFFFFF),
      (position_set_x, pos1, 1500),
      (position_set_y, pos1, 1500),
      (overlay_set_size, reg0, pos1),
      (position_set_x, pos1, 175),
      (position_set_y, pos1, 700),
      (overlay_set_position, reg0, pos1),

      (create_text_overlay, reg0, "str_enemy",  tf_center_justify|tf_single_line|tf_with_outline),
      (overlay_set_color, reg0, 0xFFFFFFFF),
      (position_set_x, pos1, 1500),
      (position_set_y, pos1, 1500),
      (overlay_set_size, reg0, pos1),
      (position_set_x, pos1, 820),
      (position_set_y, pos1, 700),
      (overlay_set_position, reg0, pos1),

      (create_text_overlay, reg0, "str_character", tf_center_justify),
      (position_set_x, pos1, 175),
      (position_set_y, pos1, 670),
      (overlay_set_position, reg0, pos1),

      (create_combo_label_overlay, "$g_presentation_obj_custom_battle_designer_18"),
      (position_set_x, pos1, 800),
      (position_set_y, pos1, 800),
      (overlay_set_size, "$g_presentation_obj_custom_battle_designer_18", pos1),
      (position_set_x, pos1, 175),
      (position_set_y, pos1, 635),
      (overlay_set_position, "$g_presentation_obj_custom_battle_designer_18", pos1),
      (try_for_range, ":cur_troop", adventurer_troops_begin, adventurer_troops_end),
        (str_store_troop_name, s0, ":cur_troop"),
        (overlay_add_item, "$g_presentation_obj_custom_battle_designer_18", s0),
      (try_end),
      (store_sub, ":cur_troop", "$g_quick_battle_troop", adventurer_troops_begin),
      (overlay_set_val, "$g_presentation_obj_custom_battle_designer_18", ":cur_troop"),

      (store_mul, ":cur_troop", "$g_quick_battle_troop", 2), #with weapons
      (create_mesh_overlay_with_tableau_material, reg0, -1, "tableau_game_party_window", ":cur_troop"),
      (position_set_x, pos1, 25),
      (position_set_y, pos1, 370),
      (overlay_set_position, reg0, pos1),

      (try_begin),
        (eq, "$g_quick_battle_team_2_faction", "fac_kingdom_1"),
        (assign, ":cur_troop", "trp_france_knight_4"),
      (else_try),
        (eq, "$g_quick_battle_team_2_faction", "fac_kingdom_3"),
        (assign, ":cur_troop", "trp_khergit_general"),
      (else_try),
        (eq, "$g_quick_battle_team_2_faction", "fac_kingdom_4"),
        (assign, ":cur_troop", "trp_england_knight_3"),
      (else_try),
        (eq, "$g_quick_battle_team_2_faction", "fac_kingdom_5"),
        (assign, ":cur_troop", "trp_italian_horse_4"),
      (else_try),
        (eq, "$g_quick_battle_team_2_faction", "fac_kingdom_7"),
        (assign, ":cur_troop", "trp_german_knight_4"),
      (else_try),
        (eq, "$g_quick_battle_team_2_faction", "fac_kingdom_8"),
        (assign, ":cur_troop", "trp_polish_horse_4"),
      (else_try),
        (eq, "$g_quick_battle_team_2_faction", "fac_kingdom_9"),
        (assign, ":cur_troop", "trp_turk_roy_sipahi"),
      (else_try),
        (eq, "$g_quick_battle_team_2_faction", "fac_kingdom_10"),
        (assign, ":cur_troop", "trp_nord_knight_3"),
      (else_try),
        (eq, "$g_quick_battle_team_2_faction", "fac_kingdoms_end"),
        (assign, ":cur_troop", "trp_troll_2"),
      (else_try),
        (eq, "$g_quick_battle_team_2_faction", "fac_gaelic"),
        (assign, ":cur_troop", "trp_woodelf_sharpshooter"),
      (else_try),
        (eq, "$g_quick_battle_team_2_faction", "fac_robber_knights"),
        (assign, ":cur_troop", "trp_grandelf_guard"),
      (else_try),
        (eq, "$g_quick_battle_team_2_faction", "fac_khergits"),
        (assign, ":cur_troop", "trp_dwarf_guard_1"),
      (else_try),
        (eq, "$g_quick_battle_team_2_faction", "fac_manhunters"),
        (assign, ":cur_troop", "trp_undead_horse_3"),
      (else_try),
        (eq, "$g_quick_battle_team_2_faction", "fac_deserters"),
        (assign, ":cur_troop", "trp_human_magic_3"),
      (else_try),
        (eq, "$g_quick_battle_team_2_faction", "fac_welsh"),
        (assign, ":cur_troop", "trp_sissofbattle"),
      (else_try),
        (eq, "$g_quick_battle_team_2_faction", "fac_swiss"),
        (assign, ":cur_troop", "trp_demon_5"),
      (else_try),
        (eq, "$g_quick_battle_team_2_faction", "fac_scotland"),
        (assign, ":cur_troop", "trp_drowelf_which_2"),
      (else_try),
        (eq, "$g_quick_battle_team_2_faction", "fac_dark_knights"),
        (assign, ":cur_troop", "trp_scottish_swordman"),
      (else_try),
        (eq, "$g_quick_battle_team_2_faction", "fac_outlaws"),
        (assign, ":cur_troop", "trp_mummy_4"),
      (else_try),
        (assign, ":cur_troop", "trp_we_knight_3"),
      (try_end),
      (val_mul, ":cur_troop", 2), #with weapons
      (create_mesh_overlay_with_tableau_material, reg0, -1, "tableau_game_party_window", ":cur_troop"),
      (position_set_x, pos1, 670),
      (position_set_y, pos1, 370),
      (overlay_set_position, reg0, pos1),

      (create_text_overlay, reg0, "str_biography", tf_center_justify),
      (position_set_x, pos1, 500),
      (position_set_y, pos1, 700),
      (overlay_set_position, reg0, pos1),

      (try_begin),
        (is_between, "$g_quick_battle_troop", quick_battle_troops_begin, quick_battle_troops_end),
        (store_sub, ":cur_troop_text", "$g_quick_battle_troop", quick_battle_troops_begin),
        (val_add, ":cur_troop_text", quick_battle_troop_texts_begin),
        (create_text_overlay, reg0, ":cur_troop_text", tf_scrollable),
        (position_set_x, pos1, 850),
        (position_set_y, pos1, 850),
        (overlay_set_size, reg0, pos1),
        (position_set_x, pos1, 320),
        (position_set_y, pos1, 560),
        (overlay_set_position, reg0, pos1),
        (position_set_x, pos1, 360),
        (position_set_y, pos1, 130),
        (overlay_set_area_size, reg0, pos1),
      (try_end),
      
      (create_text_overlay, reg0, "str_map_basic", tf_center_justify),
      (overlay_set_color, reg0, 0xFFFFFF),
      (position_set_x, pos1, 1500),
      (position_set_y, pos1, 1500),
      (overlay_set_size, reg0, pos1),
      (position_set_x, pos1, 500),
      (position_set_y, pos1, 450),
      (overlay_set_position, reg0, pos1),

      (create_combo_label_overlay, "$g_presentation_obj_custom_battle_designer_1"),
      (position_set_x, pos1, 700),
      (position_set_y, pos1, 700),
      (overlay_set_size, "$g_presentation_obj_custom_battle_designer_1", pos1),
      (position_set_x, pos1, 500),
      (position_set_y, pos1, 415),
      (overlay_set_position, "$g_presentation_obj_custom_battle_designer_1", pos1),
      (try_begin),
        (eq, "$g_quick_battle_game_type", 0), #battle
        (try_for_range, ":cur_scene", quick_battle_battle_scenes_begin, quick_battle_battle_scenes_end),
          (store_sub, ":cur_scene_name", ":cur_scene", quick_battle_scenes_begin),
          (val_add, ":cur_scene_name", quick_battle_scene_names_begin),
          (overlay_add_item, "$g_presentation_obj_custom_battle_designer_1", ":cur_scene_name"),
        (try_end),
        (try_begin),
          (is_between, "$g_quick_battle_map", quick_battle_battle_scenes_begin, quick_battle_battle_scenes_end),
          (store_sub, ":cur_map", "$g_quick_battle_map", quick_battle_battle_scenes_begin),
          (overlay_set_val, "$g_presentation_obj_custom_battle_designer_1", ":cur_map"),
        (else_try),
          (overlay_set_val, "$g_presentation_obj_custom_battle_designer_1", 0),
          (assign, "$g_quick_battle_map", quick_battle_battle_scenes_begin),
        (try_end),
      (else_try),
        (try_for_range, ":cur_scene", quick_battle_siege_scenes_begin, quick_battle_siege_scenes_end),
          (store_sub, ":cur_scene_name", ":cur_scene", quick_battle_scenes_begin),
          (val_add, ":cur_scene_name", quick_battle_scene_names_begin),
          (overlay_add_item, "$g_presentation_obj_custom_battle_designer_1", ":cur_scene_name"),
        (try_end),
        (try_begin),
          (is_between, "$g_quick_battle_map", quick_battle_siege_scenes_begin, quick_battle_siege_scenes_end),
          (store_sub, ":cur_map", "$g_quick_battle_map", quick_battle_siege_scenes_begin),
          (overlay_set_val, "$g_presentation_obj_custom_battle_designer_1", ":cur_map"),
        (else_try),
          (overlay_set_val, "$g_presentation_obj_custom_battle_designer_1", 0),
          (assign, "$g_quick_battle_map", quick_battle_siege_scenes_begin),
        (try_end),
      (try_end),

      (store_sub, ":cur_mesh", "$g_quick_battle_map", quick_battle_scenes_begin),
      (val_add, ":cur_mesh", quick_battle_scene_images_begin),
      (create_mesh_overlay, reg0, ":cur_mesh"),
      (position_set_x, pos1, 700),
      (position_set_y, pos1, 700),
      (overlay_set_size, reg0, pos1),
      (position_set_x, pos1, 380),
      (position_set_y, pos1, 220),
      (overlay_set_position, reg0, pos1),

      (create_text_overlay, reg0, "str_game_type_basic", tf_center_justify),
      (overlay_set_color, reg0, 0xFFFFFF),
      (position_set_x, pos1, 1500),
      (position_set_y, pos1, 1500),
      (overlay_set_size, reg0, pos1),
      (position_set_x, pos1, 500),
      (position_set_y, pos1, 180),
      (overlay_set_position, reg0, pos1),

      (create_combo_label_overlay, "$g_presentation_obj_custom_battle_designer_23"),
      (position_set_x, pos1, 700),
      (position_set_y, pos1, 700),
      (overlay_set_size, "$g_presentation_obj_custom_battle_designer_23", pos1),
      (position_set_x, pos1, 500),
      (position_set_y, pos1, 150),
      (overlay_set_position, "$g_presentation_obj_custom_battle_designer_23", pos1),
      (overlay_add_item, "$g_presentation_obj_custom_battle_designer_23", "str_battle"),
      (overlay_add_item, "$g_presentation_obj_custom_battle_designer_23", "str_siege_offense"),
      (overlay_add_item, "$g_presentation_obj_custom_battle_designer_23", "str_siege_defense"),
      (overlay_set_val, "$g_presentation_obj_custom_battle_designer_23", "$g_quick_battle_game_type"),

      (create_game_button_overlay, "$g_presentation_obj_custom_battle_designer_24", "str_randomize"),
      (position_set_x, pos1, 500),
      (position_set_y, pos1, 60),
      (overlay_set_position, "$g_presentation_obj_custom_battle_designer_24", pos1),

      (assign, ":cur_y", 330),
      (assign, ":cur_y", 350),
      (assign, ":cur_y_adder", 40),

      (create_text_overlay, reg0, "str_faction", tf_center_justify),
      (position_set_x, pos1, 175),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, reg0, pos1),

      (create_text_overlay, reg0, "str_faction", tf_center_justify),
      (position_set_x, pos1, 820),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, reg0, pos1),
      
      (val_sub, ":cur_y", ":cur_y_adder"),

      (create_combo_label_overlay, "$g_presentation_obj_custom_battle_designer_4"),
##      (position_set_x, pos1, 800),
##      (position_set_y, pos1, 800),
##      (overlay_set_size, "$g_presentation_obj_custom_battle_designer_4", pos1),
      (position_set_x, pos1, 175),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, "$g_presentation_obj_custom_battle_designer_4", pos1),
      (try_begin),
        (try_for_range, ":cur_faction", npc_kingdoms_begin, quick_battle_kingdoms_end),
          (try_begin),
            (is_between, ":cur_faction", npc_kingdoms_begin ,"fac_kingdoms_end"),
            (str_store_faction_name, s0, ":cur_faction"),
          (else_try),
            (eq, ":cur_faction", "fac_kingdoms_end"),
            (str_store_faction_name, s0, "fac_orc"),
          (else_try),
            (eq, ":cur_faction", "fac_robber_knights"),
            (str_store_faction_name, s0, "fac_elf"),
          (else_try),
            (eq, ":cur_faction", "fac_khergits"),
            (str_store_faction_name, s0, "fac_dwarf"),
          (else_try),
            (eq, ":cur_faction", "fac_manhunters"),
            (str_store_faction_name, s0, "fac_undeads_2"),
          (else_try),
            (eq, ":cur_faction", "fac_deserters"),
            (str_store_faction_name, s0, "fac_dark_knights"),
          (else_try),
            (eq, ":cur_faction", "fac_scotland"),
            (str_store_faction_name, s0, "fac_beast"),
          (else_try),
            (eq, ":cur_faction", "fac_welsh"),
            (str_store_faction_name, s0, "fac_demon_hunters"),
          (else_try),
            (eq, ":cur_faction", "fac_swiss"),
            (str_store_faction_name, s0, "fac_demon"),
          (else_try),
            (eq, ":cur_faction", "fac_gaelic"),
            (str_store_faction_name, s0, "fac_forest_ranger"),
          (else_try),
            (eq, ":cur_faction", "fac_dark_knights"),
            (str_store_faction_name, s0, "fac_scotland"),
          (else_try),
            (str_store_faction_name, s0, "fac_neutral"),
            

          (try_end),
          (overlay_add_item, "$g_presentation_obj_custom_battle_designer_4", s0),
        (try_end),
        (str_store_faction_name, s0, "fac_outlaws"),
        (overlay_add_item, "$g_presentation_obj_custom_battle_designer_4", s0),
      (try_end),
      (try_begin),
        (eq, "$g_quick_battle_team_1_faction", "fac_outlaws"),
        (store_sub, ":overlay_value", quick_battle_kingdoms_end, npc_kingdoms_begin),
        (overlay_set_val, "$g_presentation_obj_custom_battle_designer_4", ":overlay_value"),
      (else_try),
        (store_sub, ":team_1_faction", "$g_quick_battle_team_1_faction", npc_kingdoms_begin),
        (overlay_set_val, "$g_presentation_obj_custom_battle_designer_4", ":team_1_faction"),
      (try_end),

      (create_combo_label_overlay, "$g_presentation_obj_custom_battle_designer_5"),
##      (position_set_x, pos1, 800),
##      (position_set_y, pos1, 800),
##      (overlay_set_size, "$g_presentation_obj_custom_battle_designer_5", pos1),
      (position_set_x, pos1, 820),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, "$g_presentation_obj_custom_battle_designer_5", pos1),
      (try_begin),
        (try_for_range, ":cur_faction", npc_kingdoms_begin, quick_battle_kingdoms_end),
          (try_begin),
            (is_between, ":cur_faction", npc_kingdoms_begin ,"fac_kingdoms_end"),
            (str_store_faction_name, s0, ":cur_faction"),
          (else_try),
            (eq, ":cur_faction", "fac_kingdoms_end"),
            (str_store_faction_name, s0, "fac_orc"),
          (else_try),
            (eq, ":cur_faction", "fac_robber_knights"),
            (str_store_faction_name, s0, "fac_elf"),
          (else_try),
            (eq, ":cur_faction", "fac_khergits"),
            (str_store_faction_name, s0, "fac_dwarf"),
          (else_try),
            (eq, ":cur_faction", "fac_manhunters"),
            (str_store_faction_name, s0, "fac_undeads_2"),
          (else_try),
            (eq, ":cur_faction", "fac_deserters"),
            (str_store_faction_name, s0, "fac_dark_knights"),
          (else_try),
            (eq, ":cur_faction", "fac_scotland"),
            (str_store_faction_name, s0, "fac_beast"),
          (else_try),
            (eq, ":cur_faction", "fac_welsh"),
            (str_store_faction_name, s0, "fac_demon_hunters"),
          (else_try),
            (eq, ":cur_faction", "fac_swiss"),
            (str_store_faction_name, s0, "fac_demon"),
          (else_try),
            (eq, ":cur_faction", "fac_gaelic"),
            (str_store_faction_name, s0, "fac_forest_ranger"),
          (else_try),
            (eq, ":cur_faction", "fac_dark_knights"),
            (str_store_faction_name, s0, "fac_scotland"),
          (else_try),
            (str_store_faction_name, s0, "fac_neutral"),
          (try_end),
          (overlay_add_item, "$g_presentation_obj_custom_battle_designer_5", s0),
        (try_end),
        (str_store_faction_name, s0, "fac_outlaws"),
        (overlay_add_item, "$g_presentation_obj_custom_battle_designer_5", s0),
      (try_end),
      (try_begin),
        (eq, "$g_quick_battle_team_2_faction", "fac_outlaws"),
        (store_sub, ":overlay_value", quick_battle_kingdoms_end, npc_kingdoms_begin),
        (overlay_set_val, "$g_presentation_obj_custom_battle_designer_5", ":overlay_value"),
      (else_try),
        (store_sub, ":team_2_faction", "$g_quick_battle_team_2_faction", npc_kingdoms_begin),
        (overlay_set_val, "$g_presentation_obj_custom_battle_designer_5", ":team_2_faction"),
      (try_end),

      (val_sub, ":cur_y", ":cur_y_adder"),

      (create_text_overlay, reg0, "str_army_composition", tf_center_justify),
      (position_set_x, pos1, 175),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, reg0, pos1),

      (create_text_overlay, reg0, "str_army_composition", tf_center_justify),
      (position_set_x, pos1, 820),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, reg0, pos1),

      (val_sub, ":cur_y", ":cur_y_adder"),

      (try_begin),
        (eq, "$g_presentation_obj_custom_battle_designer_6_last_value", 0),
        (eq, "$g_presentation_obj_custom_battle_designer_7_last_value", 0),
        (eq, "$g_presentation_obj_custom_battle_designer_8_last_value", 0),
        (eq, "$g_presentation_obj_custom_battle_designer_9_last_value", 0),
        (eq, "$g_presentation_obj_custom_battle_designer_10_last_value", 0),
        (eq, "$g_presentation_obj_custom_battle_designer_11_last_value", 0),
        (assign, "$g_presentation_obj_custom_battle_designer_6_last_value", 34),
        (assign, "$g_presentation_obj_custom_battle_designer_7_last_value", 33),
        (assign, "$g_presentation_obj_custom_battle_designer_8_last_value", 33),
        (assign, "$g_presentation_obj_custom_battle_designer_9_last_value", 34),
        (assign, "$g_presentation_obj_custom_battle_designer_10_last_value", 33),
        (assign, "$g_presentation_obj_custom_battle_designer_11_last_value", 33),
        (assign, "$g_presentation_obj_custom_battle_designer_6_locked", 0),
        (assign, "$g_presentation_obj_custom_battle_designer_7_locked", 0),
        (assign, "$g_presentation_obj_custom_battle_designer_8_locked", 0),
        (assign, "$g_presentation_obj_custom_battle_designer_9_locked", 0),
        (assign, "$g_presentation_obj_custom_battle_designer_10_locked", 0),
        (assign, "$g_presentation_obj_custom_battle_designer_11_locked", 0),
      (try_end),

      (create_mesh_overlay, reg0, "mesh_cb_ui_icon_infantry"),
      (position_set_x, pos1, 5),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, reg0, pos1),
      (position_set_x, pos1, 400),
      (position_set_y, pos1, 400),
      (overlay_set_size, reg0, pos1),

      (create_mesh_overlay, reg0, "mesh_cb_ui_icon_infantry"),
      (position_set_x, pos1, 650),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, reg0, pos1),
      (position_set_x, pos1, 400),
      (position_set_y, pos1, 400),
      (overlay_set_size, reg0, pos1),

      (create_slider_overlay, "$g_presentation_obj_custom_battle_designer_6", 0, 100),
      (overlay_set_val, "$g_presentation_obj_custom_battle_designer_6", "$g_presentation_obj_custom_battle_designer_6_last_value"),
      (position_set_x, pos1, 900),
      (position_set_y, pos1, 1000),
      (overlay_set_size, "$g_presentation_obj_custom_battle_designer_6", pos1),
      (position_set_x, pos1, 175),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, "$g_presentation_obj_custom_battle_designer_6", pos1),

      (assign, reg0, "$g_presentation_obj_custom_battle_designer_6_last_value"),
      (create_text_overlay, "$g_presentation_obj_custom_battle_designer_12", "str_reg0_percent", 0),
      (position_set_x, pos1, 295),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, "$g_presentation_obj_custom_battle_designer_12", pos1),

      (create_slider_overlay, "$g_presentation_obj_custom_battle_designer_9", 0, 100),
      (overlay_set_val, "$g_presentation_obj_custom_battle_designer_9", "$g_presentation_obj_custom_battle_designer_9_last_value"),
      (position_set_x, pos1, 900),
      (position_set_y, pos1, 1000),
      (overlay_set_size, "$g_presentation_obj_custom_battle_designer_9", pos1),
      (position_set_x, pos1, 820),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, "$g_presentation_obj_custom_battle_designer_9", pos1),

      (assign, reg0, "$g_presentation_obj_custom_battle_designer_9_last_value"),
      (create_text_overlay, "$g_presentation_obj_custom_battle_designer_15", "str_reg0_percent", 0),
      (position_set_x, pos1, 940),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, "$g_presentation_obj_custom_battle_designer_15", pos1),

      (val_sub, ":cur_y", ":cur_y_adder"),

      (create_mesh_overlay, reg0, "mesh_cb_ui_icon_archer"),
      (position_set_x, pos1, 15),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, reg0, pos1),
      (position_set_x, pos1, 400),
      (position_set_y, pos1, 400),
      (overlay_set_size, reg0, pos1),

      (create_mesh_overlay, reg0, "mesh_cb_ui_icon_archer"),
      (position_set_x, pos1, 660),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, reg0, pos1),
      (position_set_x, pos1, 400),
      (position_set_y, pos1, 400),
      (overlay_set_size, reg0, pos1),

      (create_slider_overlay, "$g_presentation_obj_custom_battle_designer_7", 0, 100),
      (overlay_set_val, "$g_presentation_obj_custom_battle_designer_7", "$g_presentation_obj_custom_battle_designer_7_last_value"),
      (position_set_x, pos1, 900),
      (position_set_y, pos1, 1000),
      (overlay_set_size, "$g_presentation_obj_custom_battle_designer_7", pos1),
      (position_set_x, pos1, 175),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, "$g_presentation_obj_custom_battle_designer_7", pos1),

      (assign, reg0, "$g_presentation_obj_custom_battle_designer_7_last_value"),
      (create_text_overlay, "$g_presentation_obj_custom_battle_designer_13", "str_reg0_percent", 0),
      (position_set_x, pos1, 295),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, "$g_presentation_obj_custom_battle_designer_13", pos1),

      (create_slider_overlay, "$g_presentation_obj_custom_battle_designer_10", 0, 100),
      (overlay_set_val, "$g_presentation_obj_custom_battle_designer_10", "$g_presentation_obj_custom_battle_designer_10_last_value"),
      (position_set_x, pos1, 900),
      (position_set_y, pos1, 1000),
      (overlay_set_size, "$g_presentation_obj_custom_battle_designer_10", pos1),
      (position_set_x, pos1, 820),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, "$g_presentation_obj_custom_battle_designer_10", pos1),

      (assign, reg0, "$g_presentation_obj_custom_battle_designer_10_last_value"),
      (create_text_overlay, "$g_presentation_obj_custom_battle_designer_16", "str_reg0_percent", 0),
      (position_set_x, pos1, 940),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, "$g_presentation_obj_custom_battle_designer_16", pos1),

      (val_sub, ":cur_y", ":cur_y_adder"),

      (create_mesh_overlay, reg0, "mesh_cb_ui_icon_horseman"),
      (position_set_x, pos1, 10),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, reg0, pos1),
      (position_set_x, pos1, 400),
      (position_set_y, pos1, 400),
      (overlay_set_size, reg0, pos1),

      (create_mesh_overlay, reg0, "mesh_cb_ui_icon_horseman"),
      (position_set_x, pos1, 655),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, reg0, pos1),
      (position_set_x, pos1, 400),
      (position_set_y, pos1, 400),
      (overlay_set_size, reg0, pos1),

      (create_slider_overlay, "$g_presentation_obj_custom_battle_designer_8", 0, 100),
      (overlay_set_val, "$g_presentation_obj_custom_battle_designer_8", "$g_presentation_obj_custom_battle_designer_8_last_value"),
      (position_set_x, pos1, 900),
      (position_set_y, pos1, 1000),
      (overlay_set_size, "$g_presentation_obj_custom_battle_designer_8", pos1),
      (position_set_x, pos1, 175),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, "$g_presentation_obj_custom_battle_designer_8", pos1),

      (assign, reg0, "$g_presentation_obj_custom_battle_designer_8_last_value"),
      (create_text_overlay, "$g_presentation_obj_custom_battle_designer_14", "str_reg0_percent", 0),
      (position_set_x, pos1, 295),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, "$g_presentation_obj_custom_battle_designer_14", pos1),

      (create_slider_overlay, "$g_presentation_obj_custom_battle_designer_11", 0, 100),
      (overlay_set_val, "$g_presentation_obj_custom_battle_designer_11", "$g_presentation_obj_custom_battle_designer_11_last_value"),
      (position_set_x, pos1, 900),
      (position_set_y, pos1, 1000),
      (overlay_set_size, "$g_presentation_obj_custom_battle_designer_11", pos1),
      (position_set_x, pos1, 820),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, "$g_presentation_obj_custom_battle_designer_11", pos1),

      (assign, reg0, "$g_presentation_obj_custom_battle_designer_11_last_value"),
      (create_text_overlay, "$g_presentation_obj_custom_battle_designer_17", "str_reg0_percent", 0),
      (position_set_x, pos1, 940),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, "$g_presentation_obj_custom_battle_designer_17", pos1),

      (val_sub, ":cur_y", ":cur_y_adder"),

      (create_text_overlay, reg0, "str_army_size", tf_center_justify),
      (position_set_x, pos1, 175),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, reg0, pos1),

      (create_text_overlay, reg0, "str_army_size", tf_center_justify),
      (position_set_x, pos1, 820),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, reg0, pos1),

      (val_sub, ":cur_y", ":cur_y_adder"),

      (create_slider_overlay, "$g_presentation_obj_custom_battle_designer_2", 0, 100),
      (overlay_set_boundaries, "$g_presentation_obj_custom_battle_designer_2", 1000, 75000),
      (overlay_set_val, "$g_presentation_obj_custom_battle_designer_2", "$g_quick_battle_army_1_size"),
      (position_set_x, pos1, 900),
      (position_set_y, pos1, 1000),
      (overlay_set_size, "$g_presentation_obj_custom_battle_designer_2", pos1),
      (position_set_x, pos1, 135),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, "$g_presentation_obj_custom_battle_designer_2", pos1),

      (call_script, "script_get_army_size_from_slider_value", "$g_quick_battle_army_1_size"),
      (create_text_overlay, "$g_presentation_obj_custom_battle_designer_21", "str_reg0_men", 0),
      (position_set_x, pos1, 255),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, "$g_presentation_obj_custom_battle_designer_21", pos1),

      (create_slider_overlay, "$g_presentation_obj_custom_battle_designer_3", 200),
      (overlay_set_boundaries, "$g_presentation_obj_custom_battle_designer_3", 1000, 75000),
      (overlay_set_val, "$g_presentation_obj_custom_battle_designer_3", "$g_quick_battle_army_2_size"),
      (position_set_x, pos1, 900),
      (position_set_y, pos1, 1000),
      (overlay_set_size, "$g_presentation_obj_custom_battle_designer_3", pos1),
      (position_set_x, pos1, 780),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, "$g_presentation_obj_custom_battle_designer_3", pos1),

      (call_script, "script_get_army_size_from_slider_value", "$g_quick_battle_army_2_size"),
      (create_text_overlay, "$g_presentation_obj_custom_battle_designer_22", "str_reg0_men", 0),
      (position_set_x, pos1, 900),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, "$g_presentation_obj_custom_battle_designer_22", pos1),

      (create_game_button_overlay, "$g_presentation_obj_custom_battle_designer_19", "str_start", 0),
      (position_set_x, pos1, 415),
      (position_set_y, pos1, 10),
      (overlay_set_position, "$g_presentation_obj_custom_battle_designer_19", pos1),

      (create_game_button_overlay, "$g_presentation_obj_custom_battle_designer_20", "str_back", 0),
      (position_set_x, pos1, 585),
      (position_set_y, pos1, 10),
      (overlay_set_position, "$g_presentation_obj_custom_battle_designer_20", pos1),

      (presentation_set_duration, 999999),
      ]),
    
    (ti_on_presentation_event_state_change,
     [
       (store_trigger_param_1, ":object"),
       (store_trigger_param_2, ":value"),
       (try_begin),
         (eq, ":object", "$g_presentation_obj_custom_battle_designer_1"),
         (try_begin),
           (eq, "$g_quick_battle_game_type", 0),
           (store_add, "$g_quick_battle_map", ":value", quick_battle_battle_scenes_begin),
         (else_try),
           (store_add, "$g_quick_battle_map", ":value", quick_battle_siege_scenes_begin),
         (try_end),
         (presentation_set_duration, 0),
         (start_presentation, "prsnt_game_custom_battle_designer"),
       (else_try),
         (eq, ":object", "$g_presentation_obj_custom_battle_designer_23"),
         (assign, "$g_quick_battle_game_type", ":value"),
         (presentation_set_duration, 0),
         (start_presentation, "prsnt_game_custom_battle_designer"),
       (else_try),
         (eq, ":object", "$g_presentation_obj_custom_battle_designer_24"),
         (store_random_in_range, "$g_quick_battle_game_type", 0, 3),
         (store_random_in_range, "$g_quick_battle_troop", adventurer_troops_begin, adventurer_troops_end),
         (try_begin),
           (store_sub, ":num_factions", quick_battle_kingdoms_end, npc_kingdoms_begin),
           (val_add, ":num_factions", 1),
           (store_random_in_range, "$g_quick_battle_team_1_faction", 0, ":num_factions"),
           (try_begin),
             (eq, "$g_quick_battle_team_1_faction", 0),
             (assign, "$g_quick_battle_team_1_faction", "fac_outlaws"),
           (else_try),
             (val_add, "$g_quick_battle_team_1_faction", npc_kingdoms_begin),
             (val_sub, "$g_quick_battle_team_1_faction", 1),
           (try_end),
           (assign, ":end_cond", 1000),
           (try_for_range, ":unused", 0, ":end_cond"),
             (store_random_in_range, "$g_quick_battle_team_2_faction", 0, ":num_factions"),
             (try_begin),
               (eq, "$g_quick_battle_team_2_faction", 0),
               (assign, "$g_quick_battle_team_2_faction", "fac_outlaws"),
           (else_try),
               (val_add, "$g_quick_battle_team_2_faction", npc_kingdoms_begin),
               (val_sub, "$g_quick_battle_team_2_faction", 1),
             (try_end),
             (neq, "$g_quick_battle_team_1_faction", "$g_quick_battle_team_2_faction"),
             (assign, ":end_cond", 0),
           (try_end),
           (store_random_in_range, "$g_quick_battle_army_1_size", 10, 21),
           (store_random_in_range, ":random_army_size", 0, 11),
           (val_add, "$g_quick_battle_army_1_size", ":random_army_size"),
           (store_random_in_range, ":random_army_size", 0, 11),
           (val_add, "$g_quick_battle_army_1_size", ":random_army_size"),
         (try_end),
         (assign, "$g_quick_battle_army_2_size", "$g_quick_battle_army_1_size"),
         (try_begin),
           (eq, "$g_quick_battle_game_type", 0), #battle
           (store_random_in_range, "$g_quick_battle_map", quick_battle_battle_scenes_begin, quick_battle_battle_scenes_end),
           (store_random_in_range, ":random_type", 0, 3),
           (store_random_in_range, ":random_type_2", 0, 2),
           (store_random_in_range, ":random_composition", 0, 100),
           (store_sub, ":left_max", 100, ":random_composition"),
           (store_random_in_range, ":random_composition_2", 0, ":left_max"),
           (store_sub, ":random_composition_3", ":left_max", ":random_composition_2"),
           (try_begin),
             (eq, ":random_type", 0),
             (assign, "$g_presentation_obj_custom_battle_designer_6_last_value", ":random_composition"),
             (try_begin),
               (eq, ":random_type_2", 0),
               (assign, "$g_presentation_obj_custom_battle_designer_7_last_value", ":random_composition_2"),
               (assign, "$g_presentation_obj_custom_battle_designer_8_last_value", ":random_composition_3"),
             (else_try),
               (assign, "$g_presentation_obj_custom_battle_designer_8_last_value", ":random_composition_2"),
               (assign, "$g_presentation_obj_custom_battle_designer_7_last_value", ":random_composition_3"),
             (try_end),
           (else_try),
             (eq, ":random_type", 1),
             (assign, "$g_presentation_obj_custom_battle_designer_7_last_value", ":random_composition"),
             (try_begin),
               (eq, ":random_type_2", 0),
               (assign, "$g_presentation_obj_custom_battle_designer_6_last_value", ":random_composition_2"),
               (assign, "$g_presentation_obj_custom_battle_designer_8_last_value", ":random_composition_3"),
             (else_try),
               (assign, "$g_presentation_obj_custom_battle_designer_8_last_value", ":random_composition_2"),
               (assign, "$g_presentation_obj_custom_battle_designer_6_last_value", ":random_composition_3"),
             (try_end),
           (else_try),
             (assign, "$g_presentation_obj_custom_battle_designer_8_last_value", ":random_composition"),
             (try_begin),
               (eq, ":random_type_2", 0),
               (assign, "$g_presentation_obj_custom_battle_designer_6_last_value", ":random_composition_2"),
               (assign, "$g_presentation_obj_custom_battle_designer_7_last_value", ":random_composition_3"),
             (else_try),
               (assign, "$g_presentation_obj_custom_battle_designer_7_last_value", ":random_composition_2"),
               (assign, "$g_presentation_obj_custom_battle_designer_6_last_value", ":random_composition_3"),
             (try_end),
           (try_end),
           (store_random_in_range, ":random_type", 0, 3),
           (store_random_in_range, ":random_type_2", 0, 2),
           (store_random_in_range, ":random_composition", 0, 100),
           (store_sub, ":left_max", 100, ":random_composition"),
           (store_random_in_range, ":random_composition_2", 0, ":left_max"),
           (store_sub, ":random_composition_3", ":left_max", ":random_composition_2"),
           (try_begin),
             (eq, ":random_type", 0),
             (assign, "$g_presentation_obj_custom_battle_designer_9_last_value", ":random_composition"),
             (try_begin),
               (eq, ":random_type_2", 0),
               (assign, "$g_presentation_obj_custom_battle_designer_10_last_value", ":random_composition_2"),
               (assign, "$g_presentation_obj_custom_battle_designer_11_last_value", ":random_composition_3"),
             (else_try),
               (assign, "$g_presentation_obj_custom_battle_designer_11_last_value", ":random_composition_2"),
               (assign, "$g_presentation_obj_custom_battle_designer_10_last_value", ":random_composition_3"),
             (try_end),
           (else_try),
             (eq, ":random_type", 1),
             (assign, "$g_presentation_obj_custom_battle_designer_10_last_value", ":random_composition"),
             (try_begin),
               (eq, ":random_type_2", 0),
               (assign, "$g_presentation_obj_custom_battle_designer_9_last_value", ":random_composition_2"),
               (assign, "$g_presentation_obj_custom_battle_designer_11_last_value", ":random_composition_3"),
             (else_try),
               (assign, "$g_presentation_obj_custom_battle_designer_11_last_value", ":random_composition_2"),
               (assign, "$g_presentation_obj_custom_battle_designer_9_last_value", ":random_composition_3"),
             (try_end),
           (else_try),
             (assign, "$g_presentation_obj_custom_battle_designer_11_last_value", ":random_composition"),
             (try_begin),
               (eq, ":random_type_2", 0),
               (assign, "$g_presentation_obj_custom_battle_designer_9_last_value", ":random_composition_2"),
               (assign, "$g_presentation_obj_custom_battle_designer_10_last_value", ":random_composition_3"),
             (else_try),
               (assign, "$g_presentation_obj_custom_battle_designer_10_last_value", ":random_composition_2"),
               (assign, "$g_presentation_obj_custom_battle_designer_9_last_value", ":random_composition_3"),
             (try_end),
           (try_end),
         (else_try),
           (eq, "$g_quick_battle_game_type", 1), #siege offense
           (store_random_in_range, "$g_quick_battle_map", quick_battle_siege_scenes_begin, quick_battle_siege_scenes_end),
           #defender is enemy
           (store_random_in_range, "$g_presentation_obj_custom_battle_designer_10_last_value", 30, 100), #min 30% archer
           (store_sub, "$g_presentation_obj_custom_battle_designer_9_last_value", 100, "$g_presentation_obj_custom_battle_designer_10_last_value"),
           (assign, "$g_presentation_obj_custom_battle_designer_11_last_value", 0), #no cavalry
           (store_random_in_range, "$g_presentation_obj_custom_battle_designer_6_last_value", 20, 100), #min 20% infantry
           (store_sub, "$g_presentation_obj_custom_battle_designer_7_last_value", 100, "$g_presentation_obj_custom_battle_designer_6_last_value"),
           (assign, "$g_presentation_obj_custom_battle_designer_8_last_value", 0), #no cavalry
         (else_try),
           #siege defense
           (store_random_in_range, "$g_quick_battle_map", quick_battle_siege_scenes_begin, quick_battle_siege_scenes_end),
           #defender is player
           (store_random_in_range, "$g_presentation_obj_custom_battle_designer_7_last_value", 30, 100), #min 30% archer
           (store_sub, "$g_presentation_obj_custom_battle_designer_6_last_value", 100, "$g_presentation_obj_custom_battle_designer_7_last_value"),
           (assign, "$g_presentation_obj_custom_battle_designer_8_last_value", 0), #no cavalry
           (store_random_in_range, "$g_presentation_obj_custom_battle_designer_9_last_value", 20, 100), #min 20% infantry
           (store_sub, "$g_presentation_obj_custom_battle_designer_10_last_value", 100, "$g_presentation_obj_custom_battle_designer_9_last_value"),
           (assign, "$g_presentation_obj_custom_battle_designer_11_last_value", 0), #no cavalry
         (try_end),
         (presentation_set_duration, 0),
         (start_presentation, "prsnt_game_custom_battle_designer"),
       (else_try),
         (eq, ":object", "$g_presentation_obj_custom_battle_designer_2"),
         (assign, "$g_quick_battle_army_1_size", ":value"),
         (call_script, "script_get_army_size_from_slider_value", "$g_quick_battle_army_1_size"),
         (overlay_set_text, "$g_presentation_obj_custom_battle_designer_21", "str_reg0_men"),
       (else_try),
         (eq, ":object", "$g_presentation_obj_custom_battle_designer_3"),
         (assign, "$g_quick_battle_army_2_size", ":value"),
         (call_script, "script_get_army_size_from_slider_value", "$g_quick_battle_army_2_size"),
         (overlay_set_text, "$g_presentation_obj_custom_battle_designer_22", "str_reg0_men"),
       (else_try),
         (eq, ":object", "$g_presentation_obj_custom_battle_designer_4"),
         (try_begin),
           (store_sub, ":outlaw_index", quick_battle_kingdoms_end, npc_kingdoms_begin),
           (eq, ":value", ":outlaw_index"),
           (assign, "$g_quick_battle_team_1_faction", "fac_outlaws"),
         (else_try),
           (store_add, "$g_quick_battle_team_1_faction", ":value", npc_kingdoms_begin),
         (try_end),
       (else_try),
         (eq, ":object", "$g_presentation_obj_custom_battle_designer_5"),
         (try_begin),
           (store_sub, ":outlaw_index", quick_battle_kingdoms_end, npc_kingdoms_begin),
           (eq, ":value", ":outlaw_index"),
           (assign, "$g_quick_battle_team_2_faction", "fac_outlaws"),
         (else_try),
           (store_add, "$g_quick_battle_team_2_faction", ":value", npc_kingdoms_begin),
         (try_end),
         (presentation_set_duration, 0),
         (start_presentation, "prsnt_game_custom_battle_designer"),
       (else_try),
         (eq, ":object", "$g_presentation_obj_custom_battle_designer_18"),
         (store_add, "$g_quick_battle_troop", ":value", adventurer_troops_begin),
         (presentation_set_duration, 0),
         (start_presentation, "prsnt_game_custom_battle_designer"),
       (else_try),
         (eq, ":object", "$g_presentation_obj_custom_battle_designer_6"),
         (try_begin),
           (eq, "$g_presentation_obj_custom_battle_designer_6_locked", 1),
           (neq, ":value", "$g_presentation_obj_custom_battle_designer_6_last_value"),
           (overlay_set_val, "$g_presentation_obj_custom_battle_designer_6", "$g_presentation_obj_custom_battle_designer_6_last_value"),
         (else_try),
           (try_begin),
             (lt, ":value", "$g_presentation_obj_custom_battle_designer_6_last_value"),
             (store_sub, ":dif", "$g_presentation_obj_custom_battle_designer_6_last_value", ":value"),
             (try_begin),
               (eq, "$g_presentation_obj_custom_battle_designer_7_locked", 1),
               (assign, ":first_dif", 0),
               (assign, ":second_dif", ":dif"),
             (else_try),
               (eq, "$g_presentation_obj_custom_battle_designer_8_locked", 1),
               (assign, ":first_dif", ":dif"),
               (assign, ":second_dif", 0),
             (else_try),
               (store_div, ":first_dif", ":dif", 2),
               (store_sub, ":second_dif", ":dif", ":first_dif"),
               (try_begin),
                 (neq, ":first_dif", ":second_dif"),
                 (store_random_in_range, ":random_no", 0, 2),
                 (eq, ":random_no", 0),
                 (val_sub, ":second_dif", 1),
                 (val_add, ":first_dif", 1),
               (try_end),
             (try_end),
             (assign, "$g_presentation_obj_custom_battle_designer_6_last_value", ":value"),
             (val_add, "$g_presentation_obj_custom_battle_designer_7_last_value", ":first_dif"),
             (val_add, "$g_presentation_obj_custom_battle_designer_8_last_value", ":second_dif"),
             (try_begin),
               (gt, "$g_presentation_obj_custom_battle_designer_7_last_value", 100),
               (store_sub, ":dif", "$g_presentation_obj_custom_battle_designer_7_last_value", 100),
               (val_add, "$g_presentation_obj_custom_battle_designer_8_last_value", ":dif"),
               (assign, "$g_presentation_obj_custom_battle_designer_7_last_value", 100),
             (else_try),
               (gt, "$g_presentation_obj_custom_battle_designer_8_last_value", 100),
               (store_sub, ":dif", "$g_presentation_obj_custom_battle_designer_8_last_value", 100),
               (val_add, "$g_presentation_obj_custom_battle_designer_7_last_value", ":dif"),
               (assign, "$g_presentation_obj_custom_battle_designer_8_last_value", 100),
             (try_end),
             (overlay_set_val, "$g_presentation_obj_custom_battle_designer_7", "$g_presentation_obj_custom_battle_designer_7_last_value"),
             (overlay_set_val, "$g_presentation_obj_custom_battle_designer_8", "$g_presentation_obj_custom_battle_designer_8_last_value"),
           (else_try),
             (gt, ":value", "$g_presentation_obj_custom_battle_designer_6_last_value"),
             (store_sub, ":dif", ":value", "$g_presentation_obj_custom_battle_designer_6_last_value"),
             (try_begin),
               (eq, "$g_presentation_obj_custom_battle_designer_7_locked", 1),
               (assign, ":first_dif", 0),
               (assign, ":second_dif", ":dif"),
             (else_try),
               (eq, "$g_presentation_obj_custom_battle_designer_8_locked", 1),
               (assign, ":first_dif", ":dif"),
               (assign, ":second_dif", 0),
             (else_try),
               (store_div, ":first_dif", ":dif", 2),
               (store_sub, ":second_dif", ":dif", ":first_dif"),
               (try_begin),
                 (neq, ":first_dif", ":second_dif"),
                 (store_random_in_range, ":random_no", 0, 2),
                 (eq, ":random_no", 0),
                 (val_sub, ":second_dif", 1),
                 (val_add, ":first_dif", 1),
               (try_end),
             (try_end),
             (assign, "$g_presentation_obj_custom_battle_designer_6_last_value", ":value"),
             (val_sub, "$g_presentation_obj_custom_battle_designer_7_last_value", ":first_dif"),
             (val_sub, "$g_presentation_obj_custom_battle_designer_8_last_value", ":second_dif"),
             (try_begin),
               (lt, "$g_presentation_obj_custom_battle_designer_7_last_value", 0),
               (val_add, "$g_presentation_obj_custom_battle_designer_8_last_value", "$g_presentation_obj_custom_battle_designer_7_last_value"),
               (assign, "$g_presentation_obj_custom_battle_designer_7_last_value", 0),
             (else_try),
               (lt, "$g_presentation_obj_custom_battle_designer_8_last_value", 0),
               (val_add, "$g_presentation_obj_custom_battle_designer_7_last_value", "$g_presentation_obj_custom_battle_designer_8_last_value"),
               (assign, "$g_presentation_obj_custom_battle_designer_8_last_value", 0),
             (try_end),
             (overlay_set_val, "$g_presentation_obj_custom_battle_designer_7", "$g_presentation_obj_custom_battle_designer_7_last_value"),
             (overlay_set_val, "$g_presentation_obj_custom_battle_designer_8", "$g_presentation_obj_custom_battle_designer_8_last_value"),
           (try_end),
           (assign, reg0, "$g_presentation_obj_custom_battle_designer_6_last_value"),
           (overlay_set_text, "$g_presentation_obj_custom_battle_designer_12", "str_reg0_percent"),
           (assign, reg0, "$g_presentation_obj_custom_battle_designer_7_last_value"),
           (overlay_set_text, "$g_presentation_obj_custom_battle_designer_13", "str_reg0_percent"),
           (assign, reg0, "$g_presentation_obj_custom_battle_designer_8_last_value"),
           (overlay_set_text, "$g_presentation_obj_custom_battle_designer_14", "str_reg0_percent"),
         (try_end),
       (else_try),
         (eq, ":object", "$g_presentation_obj_custom_battle_designer_7"),
         (try_begin),
           (eq, "$g_presentation_obj_custom_battle_designer_7_locked", 1),
           (neq, ":value", "$g_presentation_obj_custom_battle_designer_7_last_value"),
           (overlay_set_val, "$g_presentation_obj_custom_battle_designer_7", "$g_presentation_obj_custom_battle_designer_7_last_value"),
         (else_try),
           (try_begin),
             (lt, ":value", "$g_presentation_obj_custom_battle_designer_7_last_value"),
             (store_sub, ":dif", "$g_presentation_obj_custom_battle_designer_7_last_value", ":value"),
             (try_begin),
               (eq, "$g_presentation_obj_custom_battle_designer_6_locked", 1),
               (assign, ":first_dif", 0),
               (assign, ":second_dif", ":dif"),
             (else_try),
               (eq, "$g_presentation_obj_custom_battle_designer_8_locked", 1),
               (assign, ":first_dif", ":dif"),
               (assign, ":second_dif", 0),
             (else_try),
               (store_div, ":first_dif", ":dif", 2),
               (store_sub, ":second_dif", ":dif", ":first_dif"),
               (try_begin),
                 (neq, ":first_dif", ":second_dif"),
                 (store_random_in_range, ":random_no", 0, 2),
                 (eq, ":random_no", 0),
                 (val_sub, ":second_dif", 1),
                 (val_add, ":first_dif", 1),
               (try_end),
             (try_end),
             (assign, "$g_presentation_obj_custom_battle_designer_7_last_value", ":value"),
             (val_add, "$g_presentation_obj_custom_battle_designer_6_last_value", ":first_dif"),
             (val_add, "$g_presentation_obj_custom_battle_designer_8_last_value", ":second_dif"),
             (try_begin),
               (gt, "$g_presentation_obj_custom_battle_designer_6_last_value", 100),
               (store_sub, ":dif", "$g_presentation_obj_custom_battle_designer_6_last_value", 100),
               (val_add, "$g_presentation_obj_custom_battle_designer_8_last_value", ":dif"),
               (assign, "$g_presentation_obj_custom_battle_designer_6_last_value", 100),
             (else_try),
               (gt, "$g_presentation_obj_custom_battle_designer_8_last_value", 100),
               (store_sub, ":dif", "$g_presentation_obj_custom_battle_designer_8_last_value", 100),
               (val_add, "$g_presentation_obj_custom_battle_designer_6_last_value", ":dif"),
               (assign, "$g_presentation_obj_custom_battle_designer_8_last_value", 100),
             (try_end),
             (overlay_set_val, "$g_presentation_obj_custom_battle_designer_6", "$g_presentation_obj_custom_battle_designer_6_last_value"),
             (overlay_set_val, "$g_presentation_obj_custom_battle_designer_8", "$g_presentation_obj_custom_battle_designer_8_last_value"),
           (else_try),
             (gt, ":value", "$g_presentation_obj_custom_battle_designer_7_last_value"),
             (store_sub, ":dif", ":value", "$g_presentation_obj_custom_battle_designer_7_last_value"),
             (try_begin),
               (eq, "$g_presentation_obj_custom_battle_designer_6_locked", 1),
               (assign, ":first_dif", 0),
               (assign, ":second_dif", ":dif"),
             (else_try),
               (eq, "$g_presentation_obj_custom_battle_designer_8_locked", 1),
               (assign, ":first_dif", ":dif"),
               (assign, ":second_dif", 0),
             (else_try),
               (store_div, ":first_dif", ":dif", 2),
               (store_sub, ":second_dif", ":dif", ":first_dif"),
               (try_begin),
                 (neq, ":first_dif", ":second_dif"),
                 (store_random_in_range, ":random_no", 0, 2),
                 (eq, ":random_no", 0),
                 (val_sub, ":second_dif", 1),
                 (val_add, ":first_dif", 1),
               (try_end),
             (try_end),
             (assign, "$g_presentation_obj_custom_battle_designer_7_last_value", ":value"),
             (val_sub, "$g_presentation_obj_custom_battle_designer_6_last_value", ":first_dif"),
             (val_sub, "$g_presentation_obj_custom_battle_designer_8_last_value", ":second_dif"),
             (try_begin),
               (lt, "$g_presentation_obj_custom_battle_designer_6_last_value", 0),
               (val_add, "$g_presentation_obj_custom_battle_designer_8_last_value", "$g_presentation_obj_custom_battle_designer_6_last_value"),
               (assign, "$g_presentation_obj_custom_battle_designer_6_last_value", 0),
             (else_try),
               (lt, "$g_presentation_obj_custom_battle_designer_8_last_value", 0),
               (val_add, "$g_presentation_obj_custom_battle_designer_6_last_value", "$g_presentation_obj_custom_battle_designer_8_last_value"),
               (assign, "$g_presentation_obj_custom_battle_designer_8_last_value", 0),
             (try_end),
             (overlay_set_val, "$g_presentation_obj_custom_battle_designer_6", "$g_presentation_obj_custom_battle_designer_6_last_value"),
             (overlay_set_val, "$g_presentation_obj_custom_battle_designer_8", "$g_presentation_obj_custom_battle_designer_8_last_value"),
           (try_end),
           (assign, reg0, "$g_presentation_obj_custom_battle_designer_6_last_value"),
           (overlay_set_text, "$g_presentation_obj_custom_battle_designer_12", "str_reg0_percent"),
           (assign, reg0, "$g_presentation_obj_custom_battle_designer_7_last_value"),
           (overlay_set_text, "$g_presentation_obj_custom_battle_designer_13", "str_reg0_percent"),
           (assign, reg0, "$g_presentation_obj_custom_battle_designer_8_last_value"),
           (overlay_set_text, "$g_presentation_obj_custom_battle_designer_14", "str_reg0_percent"),
         (try_end),
       (else_try),
         (eq, ":object", "$g_presentation_obj_custom_battle_designer_8"),
           (try_begin),
             (eq, "$g_presentation_obj_custom_battle_designer_8_locked", 1),
             (neq, ":value", "$g_presentation_obj_custom_battle_designer_8_last_value"),
             (overlay_set_val, "$g_presentation_obj_custom_battle_designer_8", "$g_presentation_obj_custom_battle_designer_8_last_value"),
           (else_try),
           (try_begin),
             (lt, ":value", "$g_presentation_obj_custom_battle_designer_8_last_value"),
             (store_sub, ":dif", "$g_presentation_obj_custom_battle_designer_8_last_value", ":value"),
             (try_begin),
               (eq, "$g_presentation_obj_custom_battle_designer_7_locked", 1),
               (assign, ":first_dif", 0),
               (assign, ":second_dif", ":dif"),
             (else_try),
               (eq, "$g_presentation_obj_custom_battle_designer_6_locked", 1),
               (assign, ":first_dif", ":dif"),
               (assign, ":second_dif", 0),
             (else_try),
               (store_div, ":first_dif", ":dif", 2),
               (store_sub, ":second_dif", ":dif", ":first_dif"),
               (try_begin),
                 (neq, ":first_dif", ":second_dif"),
                 (store_random_in_range, ":random_no", 0, 2),
                 (eq, ":random_no", 0),
                 (val_sub, ":second_dif", 1),
                 (val_add, ":first_dif", 1),
               (try_end),
             (try_end),
             (assign, "$g_presentation_obj_custom_battle_designer_8_last_value", ":value"),
             (val_add, "$g_presentation_obj_custom_battle_designer_7_last_value", ":first_dif"),
             (val_add, "$g_presentation_obj_custom_battle_designer_6_last_value", ":second_dif"),
             (try_begin),
               (gt, "$g_presentation_obj_custom_battle_designer_7_last_value", 100),
               (store_sub, ":dif", "$g_presentation_obj_custom_battle_designer_7_last_value", 100),
               (val_add, "$g_presentation_obj_custom_battle_designer_6_last_value", ":dif"),
               (assign, "$g_presentation_obj_custom_battle_designer_7_last_value", 100),
             (else_try),
               (gt, "$g_presentation_obj_custom_battle_designer_6_last_value", 100),
               (store_sub, ":dif", "$g_presentation_obj_custom_battle_designer_6_last_value", 100),
               (val_add, "$g_presentation_obj_custom_battle_designer_7_last_value", ":dif"),
               (assign, "$g_presentation_obj_custom_battle_designer_6_last_value", 100),
             (try_end),
             (overlay_set_val, "$g_presentation_obj_custom_battle_designer_7", "$g_presentation_obj_custom_battle_designer_7_last_value"),
             (overlay_set_val, "$g_presentation_obj_custom_battle_designer_6", "$g_presentation_obj_custom_battle_designer_6_last_value"),
           (else_try),
             (gt, ":value", "$g_presentation_obj_custom_battle_designer_8_last_value"),
             (store_sub, ":dif", ":value", "$g_presentation_obj_custom_battle_designer_8_last_value"),
             (try_begin),
               (eq, "$g_presentation_obj_custom_battle_designer_7_locked", 1),
               (assign, ":first_dif", 0),
               (assign, ":second_dif", ":dif"),
             (else_try),
               (eq, "$g_presentation_obj_custom_battle_designer_6_locked", 1),
               (assign, ":first_dif", ":dif"),
               (assign, ":second_dif", 0),
             (else_try),
               (store_div, ":first_dif", ":dif", 2),
               (store_sub, ":second_dif", ":dif", ":first_dif"),
               (try_begin),
                 (neq, ":first_dif", ":second_dif"),
                 (store_random_in_range, ":random_no", 0, 2),
                 (eq, ":random_no", 0),
                 (val_sub, ":second_dif", 1),
                 (val_add, ":first_dif", 1),
               (try_end),
             (try_end),
             (assign, "$g_presentation_obj_custom_battle_designer_8_last_value", ":value"),
             (val_sub, "$g_presentation_obj_custom_battle_designer_7_last_value", ":first_dif"),
             (val_sub, "$g_presentation_obj_custom_battle_designer_6_last_value", ":second_dif"),
             (try_begin),
               (lt, "$g_presentation_obj_custom_battle_designer_7_last_value", 0),
               (val_add, "$g_presentation_obj_custom_battle_designer_6_last_value", "$g_presentation_obj_custom_battle_designer_7_last_value"),
               (assign, "$g_presentation_obj_custom_battle_designer_7_last_value", 0),
             (else_try),
               (lt, "$g_presentation_obj_custom_battle_designer_6_last_value", 0),
               (val_add, "$g_presentation_obj_custom_battle_designer_7_last_value", "$g_presentation_obj_custom_battle_designer_6_last_value"),
               (assign, "$g_presentation_obj_custom_battle_designer_6_last_value", 0),
             (try_end),
             (overlay_set_val, "$g_presentation_obj_custom_battle_designer_7", "$g_presentation_obj_custom_battle_designer_7_last_value"),
             (overlay_set_val, "$g_presentation_obj_custom_battle_designer_6", "$g_presentation_obj_custom_battle_designer_6_last_value"),
           (try_end),
           (assign, reg0, "$g_presentation_obj_custom_battle_designer_6_last_value"),
           (overlay_set_text, "$g_presentation_obj_custom_battle_designer_12", "str_reg0_percent"),
           (assign, reg0, "$g_presentation_obj_custom_battle_designer_7_last_value"),
           (overlay_set_text, "$g_presentation_obj_custom_battle_designer_13", "str_reg0_percent"),
           (assign, reg0, "$g_presentation_obj_custom_battle_designer_8_last_value"),
           (overlay_set_text, "$g_presentation_obj_custom_battle_designer_14", "str_reg0_percent"),
         (try_end),
       (else_try),
         (eq, ":object", "$g_presentation_obj_custom_battle_designer_9"),
         (try_begin),
           (eq, "$g_presentation_obj_custom_battle_designer_9_locked", 1),
           (neq, ":value", "$g_presentation_obj_custom_battle_designer_9_last_value"),
           (overlay_set_val, "$g_presentation_obj_custom_battle_designer_9", "$g_presentation_obj_custom_battle_designer_9_last_value"),
         (else_try),
           (try_begin),
             (lt, ":value", "$g_presentation_obj_custom_battle_designer_9_last_value"),
             (store_sub, ":dif", "$g_presentation_obj_custom_battle_designer_9_last_value", ":value"),
             (try_begin),
               (eq, "$g_presentation_obj_custom_battle_designer_10_locked", 1),
               (assign, ":first_dif", 0),
               (assign, ":second_dif", ":dif"),
             (else_try),
               (eq, "$g_presentation_obj_custom_battle_designer_11_locked", 1),
               (assign, ":first_dif", ":dif"),
               (assign, ":second_dif", 0),
             (else_try),
               (store_div, ":first_dif", ":dif", 2),
               (store_sub, ":second_dif", ":dif", ":first_dif"),
               (try_begin),
                 (neq, ":first_dif", ":second_dif"),
                 (store_random_in_range, ":random_no", 0, 2),
                 (eq, ":random_no", 0),
                 (val_sub, ":second_dif", 1),
                 (val_add, ":first_dif", 1),
               (try_end),
             (try_end),
             (assign, "$g_presentation_obj_custom_battle_designer_9_last_value", ":value"),
             (val_add, "$g_presentation_obj_custom_battle_designer_10_last_value", ":first_dif"),
             (val_add, "$g_presentation_obj_custom_battle_designer_11_last_value", ":second_dif"),
             (try_begin),
               (gt, "$g_presentation_obj_custom_battle_designer_10_last_value", 100),
               (store_sub, ":dif", "$g_presentation_obj_custom_battle_designer_10_last_value", 100),
               (val_add, "$g_presentation_obj_custom_battle_designer_11_last_value", ":dif"),
               (assign, "$g_presentation_obj_custom_battle_designer_10_last_value", 100),
             (else_try),
               (gt, "$g_presentation_obj_custom_battle_designer_11_last_value", 100),
               (store_sub, ":dif", "$g_presentation_obj_custom_battle_designer_11_last_value", 100),
               (val_add, "$g_presentation_obj_custom_battle_designer_10_last_value", ":dif"),
               (assign, "$g_presentation_obj_custom_battle_designer_11_last_value", 100),
             (try_end),
             (overlay_set_val, "$g_presentation_obj_custom_battle_designer_10", "$g_presentation_obj_custom_battle_designer_10_last_value"),
             (overlay_set_val, "$g_presentation_obj_custom_battle_designer_11", "$g_presentation_obj_custom_battle_designer_11_last_value"),
           (else_try),
             (gt, ":value", "$g_presentation_obj_custom_battle_designer_9_last_value"),
             (store_sub, ":dif", ":value", "$g_presentation_obj_custom_battle_designer_9_last_value"),
             (try_begin),
               (eq, "$g_presentation_obj_custom_battle_designer_10_locked", 1),
               (assign, ":first_dif", 0),
               (assign, ":second_dif", ":dif"),
             (else_try),
               (eq, "$g_presentation_obj_custom_battle_designer_11_locked", 1),
               (assign, ":first_dif", ":dif"),
               (assign, ":second_dif", 0),
             (else_try),
               (store_div, ":first_dif", ":dif", 2),
               (store_sub, ":second_dif", ":dif", ":first_dif"),
               (try_begin),
                 (neq, ":first_dif", ":second_dif"),
                 (store_random_in_range, ":random_no", 0, 2),
                 (eq, ":random_no", 0),
                 (val_sub, ":second_dif", 1),
                 (val_add, ":first_dif", 1),
               (try_end),
             (try_end),
             (assign, "$g_presentation_obj_custom_battle_designer_9_last_value", ":value"),
             (val_sub, "$g_presentation_obj_custom_battle_designer_10_last_value", ":first_dif"),
             (val_sub, "$g_presentation_obj_custom_battle_designer_11_last_value", ":second_dif"),
             (try_begin),
               (lt, "$g_presentation_obj_custom_battle_designer_10_last_value", 0),
               (val_add, "$g_presentation_obj_custom_battle_designer_11_last_value", "$g_presentation_obj_custom_battle_designer_10_last_value"),
               (assign, "$g_presentation_obj_custom_battle_designer_10_last_value", 0),
             (else_try),
               (lt, "$g_presentation_obj_custom_battle_designer_11_last_value", 0),
               (val_add, "$g_presentation_obj_custom_battle_designer_10_last_value", "$g_presentation_obj_custom_battle_designer_11_last_value"),
               (assign, "$g_presentation_obj_custom_battle_designer_11_last_value", 0),
             (try_end),
             (overlay_set_val, "$g_presentation_obj_custom_battle_designer_10", "$g_presentation_obj_custom_battle_designer_10_last_value"),
             (overlay_set_val, "$g_presentation_obj_custom_battle_designer_11", "$g_presentation_obj_custom_battle_designer_11_last_value"),
           (try_end),
           (assign, reg0, "$g_presentation_obj_custom_battle_designer_9_last_value"),
           (overlay_set_text, "$g_presentation_obj_custom_battle_designer_15", "str_reg0_percent"),
           (assign, reg0, "$g_presentation_obj_custom_battle_designer_10_last_value"),
           (overlay_set_text, "$g_presentation_obj_custom_battle_designer_16", "str_reg0_percent"),
           (assign, reg0, "$g_presentation_obj_custom_battle_designer_11_last_value"),
           (overlay_set_text, "$g_presentation_obj_custom_battle_designer_17", "str_reg0_percent"),
         (try_end),
       (else_try),
         (eq, ":object", "$g_presentation_obj_custom_battle_designer_10"),
         (try_begin),
           (eq, "$g_presentation_obj_custom_battle_designer_10_locked", 1),
           (neq, ":value", "$g_presentation_obj_custom_battle_designer_10_last_value"),
           (overlay_set_val, "$g_presentation_obj_custom_battle_designer_10", "$g_presentation_obj_custom_battle_designer_10_last_value"),
         (else_try),
           (try_begin),
             (lt, ":value", "$g_presentation_obj_custom_battle_designer_10_last_value"),
             (store_sub, ":dif", "$g_presentation_obj_custom_battle_designer_10_last_value", ":value"),
             (try_begin),
               (eq, "$g_presentation_obj_custom_battle_designer_9_locked", 1),
               (assign, ":first_dif", 0),
               (assign, ":second_dif", ":dif"),
             (else_try),
               (eq, "$g_presentation_obj_custom_battle_designer_11_locked", 1),
               (assign, ":first_dif", ":dif"),
               (assign, ":second_dif", 0),
             (else_try),
               (store_div, ":first_dif", ":dif", 2),
               (store_sub, ":second_dif", ":dif", ":first_dif"),
               (try_begin),
                 (neq, ":first_dif", ":second_dif"),
                 (store_random_in_range, ":random_no", 0, 2),
                 (eq, ":random_no", 0),
                 (val_sub, ":second_dif", 1),
                 (val_add, ":first_dif", 1),
               (try_end),
             (try_end),
             (assign, "$g_presentation_obj_custom_battle_designer_10_last_value", ":value"),
             (val_add, "$g_presentation_obj_custom_battle_designer_9_last_value", ":first_dif"),
             (val_add, "$g_presentation_obj_custom_battle_designer_11_last_value", ":second_dif"),
             (try_begin),
               (gt, "$g_presentation_obj_custom_battle_designer_9_last_value", 100),
               (store_sub, ":dif", "$g_presentation_obj_custom_battle_designer_9_last_value", 100),
               (val_add, "$g_presentation_obj_custom_battle_designer_11_last_value", ":dif"),
               (assign, "$g_presentation_obj_custom_battle_designer_9_last_value", 100),
             (else_try),
               (gt, "$g_presentation_obj_custom_battle_designer_11_last_value", 100),
               (store_sub, ":dif", "$g_presentation_obj_custom_battle_designer_11_last_value", 100),
               (val_add, "$g_presentation_obj_custom_battle_designer_9_last_value", ":dif"),
               (assign, "$g_presentation_obj_custom_battle_designer_11_last_value", 100),
             (try_end),
             (overlay_set_val, "$g_presentation_obj_custom_battle_designer_9", "$g_presentation_obj_custom_battle_designer_9_last_value"),
             (overlay_set_val, "$g_presentation_obj_custom_battle_designer_11", "$g_presentation_obj_custom_battle_designer_11_last_value"),
           (else_try),
             (gt, ":value", "$g_presentation_obj_custom_battle_designer_10_last_value"),
             (store_sub, ":dif", ":value", "$g_presentation_obj_custom_battle_designer_10_last_value"),
             (try_begin),
               (eq, "$g_presentation_obj_custom_battle_designer_9_locked", 1),
               (assign, ":first_dif", 0),
               (assign, ":second_dif", ":dif"),
             (else_try),
               (eq, "$g_presentation_obj_custom_battle_designer_11_locked", 1),
               (assign, ":first_dif", ":dif"),
               (assign, ":second_dif", 0),
             (else_try),
               (store_div, ":first_dif", ":dif", 2),
               (store_sub, ":second_dif", ":dif", ":first_dif"),
               (try_begin),
                 (neq, ":first_dif", ":second_dif"),
                 (store_random_in_range, ":random_no", 0, 2),
                 (eq, ":random_no", 0),
                 (val_sub, ":second_dif", 1),
                 (val_add, ":first_dif", 1),
               (try_end),
             (try_end),
             (assign, "$g_presentation_obj_custom_battle_designer_10_last_value", ":value"),
             (val_sub, "$g_presentation_obj_custom_battle_designer_9_last_value", ":first_dif"),
             (val_sub, "$g_presentation_obj_custom_battle_designer_11_last_value", ":second_dif"),
             (try_begin),
               (lt, "$g_presentation_obj_custom_battle_designer_9_last_value", 0),
               (val_add, "$g_presentation_obj_custom_battle_designer_11_last_value", "$g_presentation_obj_custom_battle_designer_9_last_value"),
               (assign, "$g_presentation_obj_custom_battle_designer_9_last_value", 0),
             (else_try),
               (lt, "$g_presentation_obj_custom_battle_designer_11_last_value", 0),
               (val_add, "$g_presentation_obj_custom_battle_designer_9_last_value", "$g_presentation_obj_custom_battle_designer_11_last_value"),
               (assign, "$g_presentation_obj_custom_battle_designer_11_last_value", 0),
             (try_end),
             (overlay_set_val, "$g_presentation_obj_custom_battle_designer_9", "$g_presentation_obj_custom_battle_designer_9_last_value"),
             (overlay_set_val, "$g_presentation_obj_custom_battle_designer_11", "$g_presentation_obj_custom_battle_designer_11_last_value"),
           (try_end),
           (assign, reg0, "$g_presentation_obj_custom_battle_designer_9_last_value"),
           (overlay_set_text, "$g_presentation_obj_custom_battle_designer_15", "str_reg0_percent"),
           (assign, reg0, "$g_presentation_obj_custom_battle_designer_10_last_value"),
           (overlay_set_text, "$g_presentation_obj_custom_battle_designer_16", "str_reg0_percent"),
           (assign, reg0, "$g_presentation_obj_custom_battle_designer_11_last_value"),
           (overlay_set_text, "$g_presentation_obj_custom_battle_designer_17", "str_reg0_percent"),
         (try_end),
       (else_try),
         (eq, ":object", "$g_presentation_obj_custom_battle_designer_11"),
         (try_begin),
           (eq, "$g_presentation_obj_custom_battle_designer_11_locked", 1),
           (neq, ":value", "$g_presentation_obj_custom_battle_designer_11_last_value"),
           (overlay_set_val, "$g_presentation_obj_custom_battle_designer_11", "$g_presentation_obj_custom_battle_designer_11_last_value"),
         (else_try),
           (try_begin),
             (lt, ":value", "$g_presentation_obj_custom_battle_designer_11_last_value"),
             (store_sub, ":dif", "$g_presentation_obj_custom_battle_designer_11_last_value", ":value"),
             (try_begin),
               (eq, "$g_presentation_obj_custom_battle_designer_10_locked", 1),
               (assign, ":first_dif", 0),
               (assign, ":second_dif", ":dif"),
             (else_try),
               (eq, "$g_presentation_obj_custom_battle_designer_9_locked", 1),
               (assign, ":first_dif", ":dif"),
               (assign, ":second_dif", 0),
             (else_try),
               (store_div, ":first_dif", ":dif", 2),
               (store_sub, ":second_dif", ":dif", ":first_dif"),
               (try_begin),
                 (neq, ":first_dif", ":second_dif"),
                 (store_random_in_range, ":random_no", 0, 2),
                 (eq, ":random_no", 0),
                 (val_sub, ":second_dif", 1),
                 (val_add, ":first_dif", 1),
               (try_end),
             (try_end),
             (assign, "$g_presentation_obj_custom_battle_designer_11_last_value", ":value"),
             (val_add, "$g_presentation_obj_custom_battle_designer_10_last_value", ":first_dif"),
             (val_add, "$g_presentation_obj_custom_battle_designer_9_last_value", ":second_dif"),
             (try_begin),
               (gt, "$g_presentation_obj_custom_battle_designer_10_last_value", 100),
               (store_sub, ":dif", "$g_presentation_obj_custom_battle_designer_10_last_value", 100),
               (val_add, "$g_presentation_obj_custom_battle_designer_9_last_value", ":dif"),
               (assign, "$g_presentation_obj_custom_battle_designer_10_last_value", 100),
             (else_try),
               (gt, "$g_presentation_obj_custom_battle_designer_9_last_value", 100),
               (store_sub, ":dif", "$g_presentation_obj_custom_battle_designer_9_last_value", 100),
               (val_add, "$g_presentation_obj_custom_battle_designer_10_last_value", ":dif"),
               (assign, "$g_presentation_obj_custom_battle_designer_9_last_value", 100),
             (try_end),
             (overlay_set_val, "$g_presentation_obj_custom_battle_designer_10", "$g_presentation_obj_custom_battle_designer_10_last_value"),
             (overlay_set_val, "$g_presentation_obj_custom_battle_designer_9", "$g_presentation_obj_custom_battle_designer_9_last_value"),
           (else_try),
             (gt, ":value", "$g_presentation_obj_custom_battle_designer_11_last_value"),
             (store_sub, ":dif", ":value", "$g_presentation_obj_custom_battle_designer_11_last_value"),
             (try_begin),
               (eq, "$g_presentation_obj_custom_battle_designer_10_locked", 1),
               (assign, ":first_dif", 0),
               (assign, ":second_dif", ":dif"),
             (else_try),
               (eq, "$g_presentation_obj_custom_battle_designer_9_locked", 1),
               (assign, ":first_dif", ":dif"),
               (assign, ":second_dif", 0),
             (else_try),
               (store_div, ":first_dif", ":dif", 2),
               (store_sub, ":second_dif", ":dif", ":first_dif"),
               (try_begin),
                 (neq, ":first_dif", ":second_dif"),
                 (store_random_in_range, ":random_no", 0, 2),
                 (eq, ":random_no", 0),
                 (val_sub, ":second_dif", 1),
                 (val_add, ":first_dif", 1),
               (try_end),
             (try_end),
             (assign, "$g_presentation_obj_custom_battle_designer_11_last_value", ":value"),
             (val_sub, "$g_presentation_obj_custom_battle_designer_10_last_value", ":first_dif"),
             (val_sub, "$g_presentation_obj_custom_battle_designer_9_last_value", ":second_dif"),
             (try_begin),
               (lt, "$g_presentation_obj_custom_battle_designer_10_last_value", 0),
               (val_add, "$g_presentation_obj_custom_battle_designer_9_last_value", "$g_presentation_obj_custom_battle_designer_10_last_value"),
               (assign, "$g_presentation_obj_custom_battle_designer_10_last_value", 0),
             (else_try),
               (lt, "$g_presentation_obj_custom_battle_designer_9_last_value", 0),
               (val_add, "$g_presentation_obj_custom_battle_designer_10_last_value", "$g_presentation_obj_custom_battle_designer_9_last_value"),
               (assign, "$g_presentation_obj_custom_battle_designer_9_last_value", 0),
             (try_end),
             (overlay_set_val, "$g_presentation_obj_custom_battle_designer_10", "$g_presentation_obj_custom_battle_designer_10_last_value"),
             (overlay_set_val, "$g_presentation_obj_custom_battle_designer_9", "$g_presentation_obj_custom_battle_designer_9_last_value"),
           (try_end),
           (assign, reg0, "$g_presentation_obj_custom_battle_designer_9_last_value"),
           (overlay_set_text, "$g_presentation_obj_custom_battle_designer_15", "str_reg0_percent"),
           (assign, reg0, "$g_presentation_obj_custom_battle_designer_10_last_value"),
           (overlay_set_text, "$g_presentation_obj_custom_battle_designer_16", "str_reg0_percent"),
           (assign, reg0, "$g_presentation_obj_custom_battle_designer_11_last_value"),
           (overlay_set_text, "$g_presentation_obj_custom_battle_designer_17", "str_reg0_percent"),
         (try_end),
       (else_try),
         (eq, ":object", "$g_presentation_obj_custom_battle_designer_19"),
         (assign, "$g_is_quick_battle", 1),
         (assign, ":cur_scene", "$g_quick_battle_map"),
         (try_begin),
           (eq, "$g_quick_battle_game_type", 0), #battle
           (assign, ":cur_mission_template", "mt_quick_battle_battle"),
           (modify_visitors_at_site, ":cur_scene"),
           (call_script, "script_spawn_quick_battle_army", 0, "$g_quick_battle_team_1_faction", "$g_presentation_obj_custom_battle_designer_6_last_value", "$g_presentation_obj_custom_battle_designer_7_last_value", "$g_presentation_obj_custom_battle_designer_8_last_value", 0, 1),
           (call_script, "script_spawn_quick_battle_army", 16, "$g_quick_battle_team_2_faction", "$g_presentation_obj_custom_battle_designer_9_last_value", "$g_presentation_obj_custom_battle_designer_10_last_value", "$g_presentation_obj_custom_battle_designer_11_last_value", 0, 0),
         (else_try),
           (eq, "$g_quick_battle_game_type", 1), #siege offense
           (party_set_slot,"p_main_party", slot_party_is_in_siege, 1),
           (assign, ":cur_mission_template", "mt_quick_battle_siege"),
           (modify_visitors_at_site, ":cur_scene"),
           (call_script, "script_spawn_quick_battle_army", 16, "$g_quick_battle_team_1_faction", "$g_presentation_obj_custom_battle_designer_6_last_value", "$g_presentation_obj_custom_battle_designer_7_last_value", "$g_presentation_obj_custom_battle_designer_8_last_value", 0, 1),
           (call_script, "script_spawn_quick_battle_army", 0, "$g_quick_battle_team_2_faction", "$g_presentation_obj_custom_battle_designer_9_last_value", "$g_presentation_obj_custom_battle_designer_10_last_value", "$g_presentation_obj_custom_battle_designer_11_last_value", 1, 0),
         (else_try),
           #siege defense
           (party_set_slot,"p_main_party", slot_party_is_in_siege, 1),
           (assign, ":cur_mission_template", "mt_quick_battle_siege"),
           (modify_visitors_at_site, ":cur_scene"),
           (call_script, "script_spawn_quick_battle_army", 0, "$g_quick_battle_team_1_faction", "$g_presentation_obj_custom_battle_designer_6_last_value", "$g_presentation_obj_custom_battle_designer_7_last_value", "$g_presentation_obj_custom_battle_designer_8_last_value", 1, 1),
           (call_script, "script_spawn_quick_battle_army", 16, "$g_quick_battle_team_2_faction", "$g_presentation_obj_custom_battle_designer_9_last_value", "$g_presentation_obj_custom_battle_designer_10_last_value", "$g_presentation_obj_custom_battle_designer_11_last_value", 0, 0),
         (try_end),
         ## Dunde's Restart Custom Battle BEGIN
         ## reg8 as Kill Count Accumulator, reg7 as current report
         (assign, reg8, 0),        
         ## Dunde's Restart Custom Battle END        
         (set_jump_mission,":cur_mission_template"),
         (jump_to_menu, "mnu_custom_battle_end"),
         (jump_to_scene, ":cur_scene"),
         (change_screen_mission),
         (presentation_set_duration, 0),
       (else_try),
         (eq, ":object", "$g_presentation_obj_custom_battle_designer_20"),
         (presentation_set_duration, 0),
       (try_end),
      ]),
    (ti_on_presentation_mouse_enter_leave,
     [
       (store_trigger_param_1, ":object"),
       (store_trigger_param_2, ":enter_leave"),
       (this_or_next|eq, ":object", "$g_presentation_obj_custom_battle_designer_6"),
       (this_or_next|eq, ":object", "$g_presentation_obj_custom_battle_designer_7"),
       (this_or_next|eq, ":object", "$g_presentation_obj_custom_battle_designer_8"),
       (this_or_next|eq, ":object", "$g_presentation_obj_custom_battle_designer_9"),
       (this_or_next|eq, ":object", "$g_presentation_obj_custom_battle_designer_10"),
       (eq, ":object", "$g_presentation_obj_custom_battle_designer_11"),
       (try_begin),
         (eq, ":enter_leave", 1),
         (try_begin),
           (eq, ":object", "$g_presentation_obj_custom_battle_last_mouse_over_object"),
           (assign, "$g_presentation_obj_custom_battle_last_mouse_over_object", -1),
         (try_end),
       (else_try),
         (assign, "$g_presentation_obj_custom_battle_last_mouse_over_object", ":object"),
       (try_end),
       ]),
    (ti_on_presentation_run,
     [
      (try_begin),
        (this_or_next|key_clicked, key_escape),
        (key_clicked, key_xbox_start),
        (presentation_set_duration, 0),
      (else_try),
        (key_clicked, key_right_mouse_button),
        (neq, "$g_presentation_obj_custom_battle_last_mouse_over_object", -1),
        (try_begin),
          (eq, "$g_presentation_obj_custom_battle_last_mouse_over_object", "$g_presentation_obj_custom_battle_designer_6"),
          (try_begin),
            (eq, "$g_presentation_obj_custom_battle_designer_6_locked", 0),
            (assign, "$g_presentation_obj_custom_battle_designer_6_locked", 1),
            (assign, "$g_presentation_obj_custom_battle_designer_7_locked", 0),
            (assign, "$g_presentation_obj_custom_battle_designer_8_locked", 0),
          (else_try),
            (assign, "$g_presentation_obj_custom_battle_designer_6_locked", 0),
          (try_end),
        (else_try),
          (eq, "$g_presentation_obj_custom_battle_last_mouse_over_object", "$g_presentation_obj_custom_battle_designer_7"),
          (try_begin),
            (eq, "$g_presentation_obj_custom_battle_designer_7_locked", 0),
            (assign, "$g_presentation_obj_custom_battle_designer_6_locked", 0),
            (assign, "$g_presentation_obj_custom_battle_designer_7_locked", 1),
            (assign, "$g_presentation_obj_custom_battle_designer_8_locked", 0),
          (else_try),
            (assign, "$g_presentation_obj_custom_battle_designer_7_locked", 0),
          (try_end),
        (else_try),
          (eq, "$g_presentation_obj_custom_battle_last_mouse_over_object", "$g_presentation_obj_custom_battle_designer_8"),
          (try_begin),
            (eq, "$g_presentation_obj_custom_battle_designer_8_locked", 0),
            (assign, "$g_presentation_obj_custom_battle_designer_6_locked", 0),
            (assign, "$g_presentation_obj_custom_battle_designer_7_locked", 0),
            (assign, "$g_presentation_obj_custom_battle_designer_8_locked", 1),
          (else_try),
            (assign, "$g_presentation_obj_custom_battle_designer_8_locked", 0),
          (try_end),
        (else_try),
          (eq, "$g_presentation_obj_custom_battle_last_mouse_over_object", "$g_presentation_obj_custom_battle_designer_9"),
          (try_begin),
            (eq, "$g_presentation_obj_custom_battle_designer_9_locked", 0),
            (assign, "$g_presentation_obj_custom_battle_designer_9_locked", 1),
            (assign, "$g_presentation_obj_custom_battle_designer_10_locked", 0),
            (assign, "$g_presentation_obj_custom_battle_designer_11_locked", 0),
          (else_try),
            (assign, "$g_presentation_obj_custom_battle_designer_9_locked", 0),
          (try_end),
        (else_try),
          (eq, "$g_presentation_obj_custom_battle_last_mouse_over_object", "$g_presentation_obj_custom_battle_designer_10"),
          (try_begin),
            (eq, "$g_presentation_obj_custom_battle_designer_10_locked", 0),
            (assign, "$g_presentation_obj_custom_battle_designer_9_locked", 0),
            (assign, "$g_presentation_obj_custom_battle_designer_10_locked", 1),
            (assign, "$g_presentation_obj_custom_battle_designer_11_locked", 0),
          (else_try),
            (assign, "$g_presentation_obj_custom_battle_designer_10_locked", 0),
          (try_end),
        (else_try),
          (eq, "$g_presentation_obj_custom_battle_last_mouse_over_object", "$g_presentation_obj_custom_battle_designer_11"),
          (try_begin),
            (eq, "$g_presentation_obj_custom_battle_designer_11_locked", 0),
            (assign, "$g_presentation_obj_custom_battle_designer_9_locked", 0),
            (assign, "$g_presentation_obj_custom_battle_designer_10_locked", 0),
            (assign, "$g_presentation_obj_custom_battle_designer_11_locked", 1),
          (else_try),
            (assign, "$g_presentation_obj_custom_battle_designer_11_locked", 0),
          (try_end),
        (try_end),
      (try_end),
      ]),
    ]),

  ("game_multiplayer_admin_panel", prsntf_manual_end_only, 0, [
    (ti_on_presentation_load,
     [(set_fixed_point_multiplier, 1000),

      (try_begin),
        (eq, "$g_multiplayer_selected_map", "scn_multi_scene_1"),
        (assign, ":map_image", "mesh_mp_ui_host_maps_1"),
      (else_try),
        (eq, "$g_multiplayer_selected_map", "scn_multi_scene_2"),
        (assign, ":map_image", "mesh_mp_ui_host_maps_2"),
      (else_try),
        (eq, "$g_multiplayer_selected_map", "scn_multi_scene_3"),
        (assign, ":map_image", "mesh_mp_ui_host_maps_3"),
      (else_try),
        (eq, "$g_multiplayer_selected_map", "scn_multi_scene_4"),
        (assign, ":map_image", "mesh_mp_ui_host_maps_4"),
      (else_try),
        (eq, "$g_multiplayer_selected_map", "scn_multi_scene_5"),
        (assign, ":map_image", "mesh_mp_ui_host_maps_5"),
      (else_try),
        (eq, "$g_multiplayer_selected_map", "scn_multi_scene_6"),
        (assign, ":map_image", "mesh_mp_ui_host_maps_6"),
      (else_try),
        (eq, "$g_multiplayer_selected_map", "scn_multi_scene_7"),
        (assign, ":map_image", "mesh_mp_ui_host_maps_7"),
      (else_try),
        (eq, "$g_multiplayer_selected_map", "scn_multi_scene_8"),
        (assign, ":map_image", "mesh_mp_ui_host_maps_8"),
      (else_try),
        (eq, "$g_multiplayer_selected_map", "scn_multi_scene_9"),
        (assign, ":map_image", "mesh_mp_ui_host_maps_9"),
      (else_try),
        (eq, "$g_multiplayer_selected_map", "scn_multi_scene_10"),
        (assign, ":map_image", "mesh_mp_ui_host_maps_10"),
      (else_try),
        (eq, "$g_multiplayer_selected_map", "scn_multi_scene_11"),
        (assign, ":map_image", "mesh_mp_ui_host_maps_11"),
      (else_try),
        (eq, "$g_multiplayer_selected_map", "scn_multi_scene_12"),
        (assign, ":map_image", "mesh_mp_ui_host_maps_12"),
      (else_try),
        (eq, "$g_multiplayer_selected_map", "scn_multi_scene_13"),
        (assign, ":map_image", "mesh_mp_ui_host_maps_13"),
      (else_try),
        (eq, "$g_multiplayer_selected_map", "scn_multi_scene_14"),
        (assign, ":map_image", "mesh_mp_ui_host_maps_14"),
      (else_try),
        (eq, "$g_multiplayer_selected_map", "scn_multi_scene_15"),
        (assign, ":map_image", "mesh_mp_ui_host_maps_15"),
      (else_try),
        (eq, "$g_multiplayer_selected_map", "scn_multi_scene_16"),
        (assign, ":map_image", "mesh_mp_ui_host_maps_16"),
      (else_try),
        (eq, "$g_multiplayer_selected_map", "scn_multi_scene_17"),
        (assign, ":map_image", "mesh_mp_ui_host_maps_17"),
      (else_try),
        (eq, "$g_multiplayer_selected_map", "scn_multi_scene_18"),
        (assign, ":map_image", "mesh_mp_ui_host_maps_18"),
      (else_try),
        (this_or_next|eq, "$g_multiplayer_selected_map", "scn_random_multi_plain_medium"),
        (eq, "$g_multiplayer_selected_map", "scn_random_multi_plain_large"),
        (assign, ":map_image", "mesh_mp_ui_host_maps_randomp"),
      (else_try),
        (this_or_next|eq, "$g_multiplayer_selected_map", "scn_random_multi_steppe_medium"),
        (eq, "$g_multiplayer_selected_map", "scn_random_multi_steppe_large"),
        (assign, ":map_image", "mesh_mp_ui_host_maps_randoms"),
      (else_try),
        (assign, ":map_image", "mesh_mp_ui_host_maps_randomp"),
      (try_end),
      
      (create_mesh_overlay, reg0, ":map_image"),
      (position_set_x, pos1, -1),
      (position_set_y, pos1, 550),
      (overlay_set_position, reg0, pos1),
      (position_set_x, pos1, 1002),
      (position_set_y, pos1, 1002),
      (overlay_set_size, reg0, pos1),

      (create_mesh_overlay, reg0, "mesh_mp_ui_host_main"),
      (position_set_x, pos1, -1),
      (position_set_y, pos1, -1),
      (overlay_set_position, reg0, pos1),
      (position_set_x, pos1, 1002),
      (position_set_y, pos1, 1002),
      (overlay_set_size, reg0, pos1),

      (assign, ":cur_y", 1240),
      (assign, ":cur_y_adder", 40),

      (try_begin),
        (this_or_next|eq, "$g_multiplayer_game_type", multiplayer_game_type_team_deathmatch),
        (this_or_next|eq, "$g_multiplayer_game_type", multiplayer_game_type_battle),
        (this_or_next|eq, "$g_multiplayer_game_type", multiplayer_game_type_destroy),
        (this_or_next|eq, "$g_multiplayer_game_type", multiplayer_game_type_capture_the_flag),
        (this_or_next|eq, "$g_multiplayer_game_type", multiplayer_game_type_headquarters),
        (eq, "$g_multiplayer_game_type", multiplayer_game_type_siege),
        (val_add, ":cur_y", ":cur_y_adder"), #two more options for these mods (friendly fire options)
        (val_add, ":cur_y", ":cur_y_adder"),
        (this_or_next|eq, "$g_multiplayer_game_type", multiplayer_game_type_capture_the_flag),
        (this_or_next|eq, "$g_multiplayer_game_type", multiplayer_game_type_battle),
        (this_or_next|eq, "$g_multiplayer_game_type", multiplayer_game_type_destroy),
        (eq, "$g_multiplayer_game_type", multiplayer_game_type_siege),
        (val_add, ":cur_y", ":cur_y_adder"), #one more option for these mods
        (this_or_next|eq, "$g_multiplayer_game_type", multiplayer_game_type_battle),
        (this_or_next|eq, "$g_multiplayer_game_type", multiplayer_game_type_destroy),
        (eq, "$g_multiplayer_game_type", multiplayer_game_type_siege),
        (val_add, ":cur_y", ":cur_y_adder"), #one more option for these mods
        (this_or_next|eq, "$g_multiplayer_game_type", multiplayer_game_type_battle),
        (this_or_next|eq, "$g_multiplayer_game_type", multiplayer_game_type_destroy),
        (eq, "$g_multiplayer_game_type", multiplayer_game_type_siege),
        (val_add, ":cur_y", ":cur_y_adder"), #one more option for these mods
      (try_end),

      (str_clear, s0),
      (create_text_overlay, "$g_presentation_obj_admin_panel_container", s0, tf_scrollable),
      (position_set_x, pos1, 59),
      (position_set_y, pos1, 50),
      (overlay_set_position, "$g_presentation_obj_admin_panel_container", pos1),
      (position_set_x, pos1, 640),
      (position_set_y, pos1, 520),
      (overlay_set_area_size, "$g_presentation_obj_admin_panel_container", pos1),
      (set_container_overlay, "$g_presentation_obj_admin_panel_container"),


      (create_text_overlay, reg0, "str_add_to_official_game_servers_list", 0),
      (position_set_x, pos1, 30),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, reg0, pos1),

      (create_check_box_overlay, "$g_presentation_obj_admin_panel_14", "mesh_checkbox_off", "mesh_checkbox_on"),
      (position_set_x, pos1, 7),
      (store_add, ":special_cur_y", ":cur_y", 7),
      (position_set_y, pos1, ":special_cur_y"),
      (overlay_set_position, "$g_presentation_obj_admin_panel_14", pos1),
      (server_get_add_to_game_servers_list, ":add_to_servers_list"),
      (overlay_set_val, "$g_presentation_obj_admin_panel_14", ":add_to_servers_list"),

      (val_sub, ":cur_y", ":cur_y_adder"),

      (create_text_overlay, reg0, "str_enable_valve_anti_cheat", 0),
      (position_set_x, pos1, 30),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, reg0, pos1),

      (create_check_box_overlay, "$g_presentation_obj_admin_panel_41", "mesh_checkbox_off", "mesh_checkbox_on"),
      (position_set_x, pos1, 7),
      (store_add, ":special_cur_y", ":cur_y", 7),
      (position_set_y, pos1, ":special_cur_y"),
      (overlay_set_position, "$g_presentation_obj_admin_panel_41", pos1),
      (server_get_anti_cheat, ":server_anti_cheat"),
      (overlay_set_val, "$g_presentation_obj_admin_panel_41", ":server_anti_cheat"),

      (val_sub, ":cur_y", ":cur_y_adder"),

      (create_text_overlay, reg0, "str_server_name", 0),
      (position_set_x, pos1, 0),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, reg0, pos1),

      (str_store_server_name, s0),
      (try_begin),
        (eq, "$g_multiplayer_renaming_server_allowed", 1),
        (create_simple_text_box_overlay, "$g_presentation_obj_admin_panel_20"),
        (position_set_x, pos1, 390),
        (position_set_y, pos1, ":cur_y"),
        (overlay_set_position, "$g_presentation_obj_admin_panel_20", pos1),
        (overlay_set_text, "$g_presentation_obj_admin_panel_20", s0),
      (else_try),
        (assign, "$g_presentation_obj_admin_panel_20", -1),
        (create_text_overlay, reg0, s0, 0),
        (position_set_x, pos1, 385),
        (position_set_y, pos1, ":cur_y"),
        (overlay_set_position, reg0, pos1),
      (try_end),

      (val_sub, ":cur_y", ":cur_y_adder"),

      (create_text_overlay, reg0, "str_game_password", 0),
      (position_set_x, pos1, 0),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, reg0, pos1),

      (create_simple_text_box_overlay, "$g_presentation_obj_admin_panel_9"),
      (position_set_x, pos1, 390),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, "$g_presentation_obj_admin_panel_9", pos1),
      (str_store_server_password, s0),
      (overlay_set_text, "$g_presentation_obj_admin_panel_9", s0),

      (val_sub, ":cur_y", ":cur_y_adder"),

      (create_text_overlay, reg0, "str_welcome_message", 0),
      (position_set_x, pos1, 0),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, reg0, pos1),

      (create_simple_text_box_overlay, "$g_presentation_obj_admin_panel_32"),
      (position_set_x, pos1, 390),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, "$g_presentation_obj_admin_panel_32", pos1),
      (str_store_welcome_message, s0),
      (overlay_set_text, "$g_presentation_obj_admin_panel_32", s0),

      (val_sub, ":cur_y", ":cur_y_adder"),

      (create_text_overlay, reg0, "str_map", 0),
      (position_set_x, pos1, 0),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, reg0, pos1),

      (call_script, "script_multiplayer_fill_map_game_types", "$g_multiplayer_game_type"),
      (assign, ":num_maps", reg0),
      (assign, ":selected_index", 0),

      (try_begin),
        (gt, ":num_maps", 12),
        (create_combo_label_overlay, "$g_presentation_obj_admin_panel_1"),
      (else_try),
        (create_combo_button_overlay, "$g_presentation_obj_admin_panel_1"),
      (try_end),
      (position_set_x, pos1, 800),
      (position_set_y, pos1, 800),
      (overlay_set_size, "$g_presentation_obj_admin_panel_1", pos1),
      (try_begin),
        (gt, ":num_maps", 14),
        (position_set_x, pos1, 465),
      (else_try),
        (position_set_x, pos1, 490),
      (try_end),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, "$g_presentation_obj_admin_panel_1", pos1),
      (troop_get_slot, ":first_map", "trp_multiplayer_data", multi_data_maps_for_game_type_begin),
      (assign, ":selected_map_available", 0),
      (try_for_range, ":i_map", 0, ":num_maps"),
        (store_add, ":map_slot", ":i_map", multi_data_maps_for_game_type_begin),
        (troop_get_slot, ":map_no", "trp_multiplayer_data", ":map_slot"),
        (store_sub, ":string_index", ":map_no", multiplayer_scenes_begin),
        (val_add, ":string_index", multiplayer_scene_names_begin),
        (str_store_string, s0, ":string_index"),
        (overlay_add_item, "$g_presentation_obj_admin_panel_1", s0),
        (try_begin),
          (eq, ":map_no", "$g_multiplayer_selected_map"),
          (assign, ":selected_index", ":i_map"),
          (assign, ":selected_map_available", 1),
        (try_end),
      (try_end),
      (overlay_set_val, "$g_presentation_obj_admin_panel_1", ":selected_index"),

      (val_sub, ":cur_y", ":cur_y_adder"),

      (create_text_overlay, reg0, "str_game_type", 0),
      (position_set_x, pos1, 0),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, reg0, pos1),

      (try_begin),
        (eq, "$g_multiplayer_changing_game_type_allowed", 1),
        (create_combo_button_overlay, "$g_presentation_obj_admin_panel_10"),
        (position_set_x, pos1, 800),
        (position_set_y, pos1, 800),
        (overlay_set_size, "$g_presentation_obj_admin_panel_10", pos1),
        (position_set_x, pos1, 490),
        (position_set_y, pos1, ":cur_y"),
        (overlay_set_position, "$g_presentation_obj_admin_panel_10", pos1),
        (try_for_range, ":i_game_type", 0, multiplayer_num_game_types),
          (store_add, ":string_index", ":i_game_type", multiplayer_game_type_names_begin),
          (str_store_string, s0, ":string_index"),
          (overlay_add_item, "$g_presentation_obj_admin_panel_10", s0),
        (try_end),
        (overlay_set_val, "$g_presentation_obj_admin_panel_10", "$g_multiplayer_game_type"),
      (else_try),
        (assign, "$g_presentation_obj_admin_panel_10", -1),
        (store_add, ":string_index", "$g_multiplayer_game_type", multiplayer_game_type_names_begin),
        (str_store_string, s0, ":string_index"),
        (create_text_overlay, reg0, s0, 0),
        (position_set_x, pos1, 385),
        (position_set_y, pos1, ":cur_y"),
        (overlay_set_position, reg0, pos1),
      (try_end),

      (val_sub, ":cur_y", ":cur_y_adder"),

      (assign, reg1, 1),
      (create_text_overlay, reg0, "str_team_reg1_faction", 0),
      (position_set_x, pos1, 0),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, reg0, pos1),

      (create_combo_button_overlay, "$g_presentation_obj_admin_panel_11"),
      (position_set_x, pos1, 800),
      (position_set_y, pos1, 800),
      (overlay_set_size, "$g_presentation_obj_admin_panel_11", pos1),
      (position_set_x, pos1, 490),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, "$g_presentation_obj_admin_panel_11", pos1),
      (call_script, "script_multiplayer_fill_available_factions_combo_button", "$g_presentation_obj_admin_panel_11", "$g_multiplayer_next_team_1_faction", "$g_multiplayer_next_team_2_faction"),

      (val_sub, ":cur_y", ":cur_y_adder"),

      (assign, reg1, 2),
      (create_text_overlay, reg0, "str_team_reg1_faction", 0),
      (position_set_x, pos1, 0),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, reg0, pos1),

      (create_combo_button_overlay, "$g_presentation_obj_admin_panel_12"),
      (position_set_x, pos1, 800),
      (position_set_y, pos1, 800),
      (overlay_set_size, "$g_presentation_obj_admin_panel_12", pos1),
      (position_set_x, pos1, 490),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, "$g_presentation_obj_admin_panel_12", pos1),
      (call_script, "script_multiplayer_fill_available_factions_combo_button", "$g_presentation_obj_admin_panel_12", "$g_multiplayer_next_team_2_faction", "$g_multiplayer_next_team_1_faction"),

      (val_sub, ":cur_y", ":cur_y_adder"),

      (assign, reg1, 1),
      (create_text_overlay, reg0, "str_max_number_of_players", 0),
      (position_set_x, pos1, 0),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, reg0, pos1),

      (create_number_box_overlay, "$g_presentation_obj_admin_panel_21", 2, 201),
      (position_set_x, pos1, 390),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, "$g_presentation_obj_admin_panel_21", pos1),
      (server_get_max_num_players, ":max_players"),
      (overlay_set_val, "$g_presentation_obj_admin_panel_21", ":max_players"),

      (val_sub, ":cur_y", ":cur_y_adder"),

      (assign, reg1, 1),
      (create_text_overlay, reg0, "str_number_of_bots_in_team_reg1", 0),
      (position_set_x, pos1, 0),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, reg0, pos1),

      (create_number_box_overlay, "$g_presentation_obj_admin_panel_3", 0, "$g_multiplayer_max_num_bots"),
      (position_set_x, pos1, 390),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, "$g_presentation_obj_admin_panel_3", pos1),
      (overlay_set_val, "$g_presentation_obj_admin_panel_3", "$g_multiplayer_num_bots_team_1"),

      (val_sub, ":cur_y", ":cur_y_adder"),

      (assign, reg1, 2),
      (create_text_overlay, reg0, "str_number_of_bots_in_team_reg1", 0),
      (position_set_x, pos1, 0),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, reg0, pos1),

      (create_number_box_overlay, "$g_presentation_obj_admin_panel_4", 0, "$g_multiplayer_max_num_bots"),
      (position_set_x, pos1, 390),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, "$g_presentation_obj_admin_panel_4", pos1),
      (overlay_set_val, "$g_presentation_obj_admin_panel_4", "$g_multiplayer_num_bots_team_2"),

      (try_begin),
        (neq, "$g_multiplayer_game_type", multiplayer_game_type_deathmatch),
        (neq, "$g_multiplayer_game_type", multiplayer_game_type_duel),
      (val_sub, ":cur_y", ":cur_y_adder"),

      (create_text_overlay, reg0, "str_allow_friendly_fire", 0),
      (position_set_x, pos1, 30),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, reg0, pos1),

      (create_check_box_overlay, "$g_presentation_obj_admin_panel_5", "mesh_checkbox_off", "mesh_checkbox_on"),
      (position_set_x, pos1, 7),
      (store_add, ":special_cur_y", ":cur_y", 7),
      (position_set_y, pos1, ":special_cur_y"),
      (overlay_set_position, "$g_presentation_obj_admin_panel_5", pos1),
      (server_get_friendly_fire, ":server_friendly_fire"),
      (overlay_set_val, "$g_presentation_obj_admin_panel_5", ":server_friendly_fire"),

      (val_sub, ":cur_y", ":cur_y_adder"),

      (create_text_overlay, reg0, "str_allow_melee_friendly_fire", 0),
      (position_set_x, pos1, 30),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, reg0, pos1),

      (create_check_box_overlay, "$g_presentation_obj_admin_panel_36", "mesh_checkbox_off", "mesh_checkbox_on"),
      (position_set_x, pos1, 7),
      (store_add, ":special_cur_y", ":cur_y", 7),
      (position_set_y, pos1, ":special_cur_y"),
      (overlay_set_position, "$g_presentation_obj_admin_panel_36", pos1),
      (server_get_melee_friendly_fire, ":melee_friendly_fire"),
      (overlay_set_val, "$g_presentation_obj_admin_panel_36", ":melee_friendly_fire"),
      (try_end),

      (val_sub, ":cur_y", ":cur_y_adder"),

      (create_text_overlay, reg0, "str_friendly_fire_damage_self_ratio", 0),
      (position_set_x, pos1, 0),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, reg0, pos1),

      (create_number_box_overlay, "$g_presentation_obj_admin_panel_37", 0, 101),
      (position_set_x, pos1, 390),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, "$g_presentation_obj_admin_panel_37", pos1),
      (server_get_friendly_fire_damage_self_ratio, ":friendly_fire_damage_self_ratio"),
      (overlay_set_val, "$g_presentation_obj_admin_panel_37", ":friendly_fire_damage_self_ratio"),

      (val_sub, ":cur_y", ":cur_y_adder"),

      (create_text_overlay, reg0, "str_friendly_fire_damage_friend_ratio", 0),
      (position_set_x, pos1, 0),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, reg0, pos1),

      (create_number_box_overlay, "$g_presentation_obj_admin_panel_38", 0, 101),
      (position_set_x, pos1, 390),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, "$g_presentation_obj_admin_panel_38", pos1),
      (server_get_friendly_fire_damage_friend_ratio, ":friendly_fire_damage_friend_ratio"),
      (overlay_set_val, "$g_presentation_obj_admin_panel_38", ":friendly_fire_damage_friend_ratio"),

      (val_sub, ":cur_y", ":cur_y_adder"),

      (create_text_overlay, reg0, "str_spectator_camera", 0),
      (position_set_x, pos1, 0),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, reg0, pos1),

      (create_combo_button_overlay, "$g_presentation_obj_admin_panel_19"),
      (position_set_x, pos1, 800),
      (position_set_y, pos1, 800),
      (overlay_set_size, "$g_presentation_obj_admin_panel_19", pos1),
      (position_set_x, pos1, 490),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, "$g_presentation_obj_admin_panel_19", pos1),
      (overlay_add_item, "$g_presentation_obj_admin_panel_19", "str_free"),
      (overlay_add_item, "$g_presentation_obj_admin_panel_19", "str_stick_to_any_player"),
      (overlay_add_item, "$g_presentation_obj_admin_panel_19", "str_stick_to_team_members"),
      (overlay_add_item, "$g_presentation_obj_admin_panel_19", "str_stick_to_team_members_view"),
      (server_get_ghost_mode, ":server_ghost_mode"),
      (overlay_set_val, "$g_presentation_obj_admin_panel_19", ":server_ghost_mode"),

      (val_sub, ":cur_y", ":cur_y_adder"),

      (create_text_overlay, reg0, "str_control_block_direction", 0),
      (position_set_x, pos1, 0),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, reg0, pos1),

      (create_combo_button_overlay, "$g_presentation_obj_admin_panel_15"),
      (position_set_x, pos1, 800),
      (position_set_y, pos1, 800),
      (overlay_set_size, "$g_presentation_obj_admin_panel_15", pos1),
      (position_set_x, pos1, 490),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, "$g_presentation_obj_admin_panel_15", pos1),
      (overlay_add_item, "$g_presentation_obj_admin_panel_15", "str_automatic"),
      (overlay_add_item, "$g_presentation_obj_admin_panel_15", "str_by_mouse_movement"),
      (server_get_control_block_dir, ":server_control_block_dir"),
      (overlay_set_val, "$g_presentation_obj_admin_panel_15", ":server_control_block_dir"),

      (val_sub, ":cur_y", ":cur_y_adder"),

      (create_text_overlay, reg0, "str_combat_speed", 0),
      (position_set_x, pos1, 0),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, reg0, pos1),

      (create_combo_button_overlay, "$g_presentation_obj_admin_panel_26"),
      (position_set_x, pos1, 800),
      (position_set_y, pos1, 800),
      (overlay_set_size, "$g_presentation_obj_admin_panel_26", pos1),
      (position_set_x, pos1, 490),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, "$g_presentation_obj_admin_panel_26", pos1),
      (overlay_add_item, "$g_presentation_obj_admin_panel_26", "str_combat_speed_0"),
      (overlay_add_item, "$g_presentation_obj_admin_panel_26", "str_combat_speed_1"),
      (overlay_add_item, "$g_presentation_obj_admin_panel_26", "str_combat_speed_2"),
      (overlay_add_item, "$g_presentation_obj_admin_panel_26", "str_combat_speed_3"),
      (overlay_add_item, "$g_presentation_obj_admin_panel_26", "str_combat_speed_4"),
      (server_get_combat_speed, ":server_combat_speed"),
      (overlay_set_val, "$g_presentation_obj_admin_panel_26", ":server_combat_speed"),

      (try_begin),
        (neq, "$g_multiplayer_game_type", multiplayer_game_type_headquarters),

        (val_sub, ":cur_y", ":cur_y_adder"),

        (create_text_overlay, reg0, "str_map_time_limit", 0),
        (position_set_x, pos1, 0),
        (position_set_y, pos1, ":cur_y"),
        (overlay_set_position, reg0, pos1),

        (create_number_box_overlay, "$g_presentation_obj_admin_panel_7", 5, 121),
        (position_set_x, pos1, 390),
        (position_set_y, pos1, ":cur_y"),
        (overlay_set_position, "$g_presentation_obj_admin_panel_7", pos1),
        (overlay_set_val, "$g_presentation_obj_admin_panel_7", "$g_multiplayer_game_max_minutes"),
      (else_try),
        (assign, "$g_presentation_obj_admin_panel_7", -1),
      (try_end),

      (try_begin),
        (this_or_next|eq, "$g_multiplayer_game_type", multiplayer_game_type_battle),
        (this_or_next|eq, "$g_multiplayer_game_type", multiplayer_game_type_destroy),
        (eq, "$g_multiplayer_game_type", multiplayer_game_type_siege),
      
        (val_sub, ":cur_y", ":cur_y_adder"),

        (create_text_overlay, reg0, "str_round_time_limit", 0),
        (position_set_x, pos1, 0),
        (position_set_y, pos1, ":cur_y"),
        (overlay_set_position, reg0, pos1),

        (create_number_box_overlay, "$g_presentation_obj_admin_panel_16", multiplayer_round_max_seconds_min, multiplayer_round_max_seconds_max),
        (position_set_x, pos1, 390),
        (position_set_y, pos1, ":cur_y"),
        (overlay_set_position, "$g_presentation_obj_admin_panel_16", pos1),
        (overlay_set_val, "$g_presentation_obj_admin_panel_16", "$g_multiplayer_round_max_seconds"),
      (else_try),
        (assign, "$g_presentation_obj_admin_panel_16", -1),
      (try_end),

      (try_begin),
        (this_or_next|eq, "$g_multiplayer_game_type", multiplayer_game_type_battle),
        (eq, "$g_multiplayer_game_type", multiplayer_game_type_destroy),
      
        (val_sub, ":cur_y", ":cur_y_adder"),

        (create_text_overlay, reg0, "str_players_take_control_of_a_bot_after_death", 0),
        (position_set_x, pos1, 30),
        (position_set_y, pos1, ":cur_y"),
        (overlay_set_position, reg0, pos1),

        (create_check_box_overlay, "$g_presentation_obj_admin_panel_25", "mesh_checkbox_off", "mesh_checkbox_on"),
        (position_set_x, pos1, 7),
        (store_add, ":special_cur_y", ":cur_y", 7),
        (position_set_y, pos1, ":special_cur_y"),
        (overlay_set_position, "$g_presentation_obj_admin_panel_25", pos1),
        (overlay_set_val, "$g_presentation_obj_admin_panel_25", "$g_multiplayer_player_respawn_as_bot"),
      (else_try),
        (assign, "$g_presentation_obj_admin_panel_25", -1),
      (try_end),

      (try_begin),
        (eq, "$g_multiplayer_game_type", multiplayer_game_type_siege),
      
        (val_sub, ":cur_y", ":cur_y_adder"),

        (create_text_overlay, reg0, "str_defender_spawn_count_limit", 0),
        (position_set_x, pos1, 0),
        (position_set_y, pos1, ":cur_y"),
        (overlay_set_position, reg0, pos1),

        (create_combo_button_overlay, "$g_presentation_obj_admin_panel_27"),
        (position_set_x, pos1, 800),
        (position_set_y, pos1, 800),
        (overlay_set_size, "$g_presentation_obj_admin_panel_27", pos1),
        (position_set_x, pos1, 490),
        (position_set_y, pos1, ":cur_y"),
        (overlay_set_position, "$g_presentation_obj_admin_panel_27", pos1),
        (assign, reg0, 5),
        (overlay_add_item, "$g_presentation_obj_admin_panel_27", "str_reg0"),
        (assign, reg0, 4),
        (overlay_add_item, "$g_presentation_obj_admin_panel_27", "str_reg0"),
        (assign, reg0, 3),
        (overlay_add_item, "$g_presentation_obj_admin_panel_27", "str_reg0"),
        (assign, reg0, 2),
        (overlay_add_item, "$g_presentation_obj_admin_panel_27", "str_reg0"),
        (assign, reg0, 1),
        (overlay_add_item, "$g_presentation_obj_admin_panel_27", "str_reg0"),
        (overlay_add_item, "$g_presentation_obj_admin_panel_27", "str_unlimited"),

        (store_sub, ":value_to_set", 5, "$g_multiplayer_number_of_respawn_count"),
        (overlay_set_val, "$g_presentation_obj_admin_panel_27", ":value_to_set"),
        #(val_sub, ":cur_y", ":cur_y_adder"),      
      (else_try),
        (assign, "$g_presentation_obj_admin_panel_27", -1),
      (try_end),

      (val_sub, ":cur_y", ":cur_y_adder"),

      (create_text_overlay, reg0, "str_team_points_limit", 0),
      (position_set_x, pos1, 0),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, reg0, pos1),

      (create_number_box_overlay, "$g_presentation_obj_admin_panel_8", 3, 1001),
      (position_set_x, pos1, 390),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, "$g_presentation_obj_admin_panel_8", pos1),
      (overlay_set_val, "$g_presentation_obj_admin_panel_8", "$g_multiplayer_game_max_points"),

      (try_begin),
        (eq, "$g_multiplayer_game_type", multiplayer_game_type_headquarters),
      
        (val_sub, ":cur_y", ":cur_y_adder"),

        (create_text_overlay, reg0, "str_point_gained_from_flags", 0),
        (position_set_x, pos1, 0),
        (position_set_y, pos1, ":cur_y"),
        (overlay_set_position, reg0, pos1),

        (create_number_box_overlay, "$g_presentation_obj_admin_panel_17", 25, 401),
        (position_set_x, pos1, 390),
        (position_set_y, pos1, ":cur_y"),
        (overlay_set_position, "$g_presentation_obj_admin_panel_17", pos1),
        (overlay_set_val, "$g_presentation_obj_admin_panel_17", "$g_multiplayer_point_gained_from_flags"),
      (else_try),
        (assign, "$g_presentation_obj_admin_panel_17", -1),
      (try_end),
      
      (try_begin),
        (eq, "$g_multiplayer_game_type", multiplayer_game_type_capture_the_flag),
      
        (val_sub, ":cur_y", ":cur_y_adder"),

        (create_text_overlay, reg0, "str_point_gained_from_capturing_flag", 0),
        (position_set_x, pos1, 0),
        (position_set_y, pos1, ":cur_y"),
        (overlay_set_position, reg0, pos1),

        (create_number_box_overlay, "$g_presentation_obj_admin_panel_18", 0, 11),
        (position_set_x, pos1, 390),
        (position_set_y, pos1, ":cur_y"),
        (overlay_set_position, "$g_presentation_obj_admin_panel_18", pos1),
        (overlay_set_val, "$g_presentation_obj_admin_panel_18", "$g_multiplayer_point_gained_from_capturing_flag"),
      (else_try),
        (assign, "$g_presentation_obj_admin_panel_18", -1),
      (try_end),

      (val_sub, ":cur_y", ":cur_y_adder"),

      (create_text_overlay, reg0, "str_respawn_period", 0),
      (position_set_x, pos1, 0),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, reg0, pos1),

      (create_number_box_overlay, "$g_presentation_obj_admin_panel_6", multiplayer_respawn_period_min, multiplayer_respawn_period_max),
      (position_set_x, pos1, 390),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, "$g_presentation_obj_admin_panel_6", pos1),
      (overlay_set_val, "$g_presentation_obj_admin_panel_6", "$g_multiplayer_respawn_period"),

      (val_sub, ":cur_y", ":cur_y_adder"),

      (create_text_overlay, reg0, "str_initial_gold_multiplier", 0),
      (position_set_x, pos1, 0),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, reg0, pos1),

      (create_number_box_overlay, "$g_presentation_obj_admin_panel_33", 0, 1001),
      (position_set_x, pos1, 390),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, "$g_presentation_obj_admin_panel_33", pos1),
      (overlay_set_val, "$g_presentation_obj_admin_panel_33", "$g_multiplayer_initial_gold_multiplier"),

      (val_sub, ":cur_y", ":cur_y_adder"),

      (create_text_overlay, reg0, "str_battle_earnings_multiplier", 0),
      (position_set_x, pos1, 0),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, reg0, pos1),

      (create_number_box_overlay, "$g_presentation_obj_admin_panel_34", 0, 1001),
      (position_set_x, pos1, 390),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, "$g_presentation_obj_admin_panel_34", pos1),
      (overlay_set_val, "$g_presentation_obj_admin_panel_34", "$g_multiplayer_battle_earnings_multiplier"),

      (try_begin),
        (this_or_next|eq, "$g_multiplayer_game_type", multiplayer_game_type_battle),
        (this_or_next|eq, "$g_multiplayer_game_type", multiplayer_game_type_destroy),
        (eq, "$g_multiplayer_game_type", multiplayer_game_type_siege),

        (val_sub, ":cur_y", ":cur_y_adder"),

        (create_text_overlay, reg0, "str_round_earnings_multiplier", 0),
        (position_set_x, pos1, 0),
        (position_set_y, pos1, ":cur_y"),
        (overlay_set_position, reg0, pos1),

        (create_number_box_overlay, "$g_presentation_obj_admin_panel_35", 0, 1001),
        (position_set_x, pos1, 390),
        (position_set_y, pos1, ":cur_y"),
        (overlay_set_position, "$g_presentation_obj_admin_panel_35", pos1),
        (overlay_set_val, "$g_presentation_obj_admin_panel_35", "$g_multiplayer_round_earnings_multiplier"),
      (else_try),
        (assign, "$g_presentation_obj_admin_panel_35", -1),
      (try_end),

      (val_sub, ":cur_y", ":cur_y_adder"),

      (create_text_overlay, reg0, "str_make_kick_voteable", 0),
      (position_set_x, pos1, 30),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, reg0, pos1),

      (create_check_box_overlay, "$g_presentation_obj_admin_panel_28", "mesh_checkbox_off", "mesh_checkbox_on"),
      (position_set_x, pos1, 7),
      (store_add, ":special_cur_y", ":cur_y", 7),
      (position_set_y, pos1, ":special_cur_y"),
      (overlay_set_position, "$g_presentation_obj_admin_panel_28", pos1),
      (overlay_set_val, "$g_presentation_obj_admin_panel_28", "$g_multiplayer_kick_voteable"),

      (val_sub, ":cur_y", ":cur_y_adder"),

      (create_text_overlay, reg0, "str_make_ban_voteable", 0),
      (position_set_x, pos1, 30),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, reg0, pos1),

      (create_check_box_overlay, "$g_presentation_obj_admin_panel_29", "mesh_checkbox_off", "mesh_checkbox_on"),
      (position_set_x, pos1, 7),
      (store_add, ":special_cur_y", ":cur_y", 7),
      (position_set_y, pos1, ":special_cur_y"),
      (overlay_set_position, "$g_presentation_obj_admin_panel_29", pos1),
      (overlay_set_val, "$g_presentation_obj_admin_panel_29", "$g_multiplayer_ban_voteable"),

      (val_sub, ":cur_y", ":cur_y_adder"),

      (create_text_overlay, reg0, "str_make_maps_voteable", 0),
      (position_set_x, pos1, 30),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, reg0, pos1),

      (create_check_box_overlay, "$g_presentation_obj_admin_panel_24", "mesh_checkbox_off", "mesh_checkbox_on"),
      (position_set_x, pos1, 7),
      (store_add, ":special_cur_y", ":cur_y", 7),
      (position_set_y, pos1, ":special_cur_y"),
      (overlay_set_position, "$g_presentation_obj_admin_panel_24", pos1),
      (overlay_set_val, "$g_presentation_obj_admin_panel_24", "$g_multiplayer_maps_voteable"),

      (val_sub, ":cur_y", ":cur_y_adder"),

      (create_text_overlay, reg0, "str_make_factions_voteable", 0),
      (position_set_x, pos1, 30),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, reg0, pos1),

      (create_check_box_overlay, "$g_presentation_obj_admin_panel_23", "mesh_checkbox_off", "mesh_checkbox_on"),
      (position_set_x, pos1, 7),
      (store_add, ":special_cur_y", ":cur_y", 7),
      (position_set_y, pos1, ":special_cur_y"),
      (overlay_set_position, "$g_presentation_obj_admin_panel_23", pos1),
      (overlay_set_val, "$g_presentation_obj_admin_panel_23", "$g_multiplayer_factions_voteable"),

      (val_sub, ":cur_y", ":cur_y_adder"),

      (create_text_overlay, reg0, "str_bots_upper_limit_for_votes", 0),
      (position_set_x, pos1, 0),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, reg0, pos1),

      (assign, ":upper_limit", 51),
      (val_min, ":upper_limit", "$g_multiplayer_max_num_bots"),
      (create_number_box_overlay, "$g_presentation_obj_admin_panel_22", 0, ":upper_limit"),
      (position_set_x, pos1, 390),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, "$g_presentation_obj_admin_panel_22", pos1),
      (overlay_set_val, "$g_presentation_obj_admin_panel_22", "$g_multiplayer_num_bots_voteable"),

      (val_sub, ":cur_y", ":cur_y_adder"),

      (create_text_overlay, reg0, "str_valid_vote_ratio", 0),
      (position_set_x, pos1, 0),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, reg0, pos1),

      (create_number_box_overlay, "$g_presentation_obj_admin_panel_30", 50, 101),
      (position_set_x, pos1, 390),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, "$g_presentation_obj_admin_panel_30", pos1),
      (overlay_set_val, "$g_presentation_obj_admin_panel_30", "$g_multiplayer_valid_vote_ratio"),

      (val_sub, ":cur_y", ":cur_y_adder"),

      (create_text_overlay, reg0, "str_auto_team_balance_limit", 0),
      (position_set_x, pos1, 0),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, reg0, pos1),

      (create_combo_button_overlay, "$g_presentation_obj_admin_panel_31"),
      (position_set_x, pos1, 800),
      (position_set_y, pos1, 800),
      (overlay_set_size, "$g_presentation_obj_admin_panel_31", pos1),
      (position_set_x, pos1, 490),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, "$g_presentation_obj_admin_panel_31", pos1),
      (overlay_add_item, "$g_presentation_obj_admin_panel_31", "str_unlimited"),
      (assign, reg0, 6),
      (overlay_add_item, "$g_presentation_obj_admin_panel_31", "str_reg0"),
      (assign, reg0, 5),
      (overlay_add_item, "$g_presentation_obj_admin_panel_31", "str_reg0"),
      (assign, reg0, 4),
      (overlay_add_item, "$g_presentation_obj_admin_panel_31", "str_reg0"),
      (assign, reg0, 3),
      (overlay_add_item, "$g_presentation_obj_admin_panel_31", "str_reg0"),
      (assign, reg0, 2),
      (overlay_add_item, "$g_presentation_obj_admin_panel_31", "str_reg0"),
      (try_begin),
        (ge, "$g_multiplayer_auto_team_balance_limit", 1000),
        (overlay_set_val, "$g_presentation_obj_admin_panel_31", 0),
      (else_try),
        (store_sub, ":set_value", 7, "$g_multiplayer_auto_team_balance_limit"),
        (overlay_set_val, "$g_presentation_obj_admin_panel_31", ":set_value"),
      (try_end),

      (val_sub, ":cur_y", ":cur_y_adder"),

      (create_text_overlay, reg0, "str_allow_player_banners", 0),
      (position_set_x, pos1, 30),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, reg0, pos1),

      (create_check_box_overlay, "$g_presentation_obj_admin_panel_39", "mesh_checkbox_off", "mesh_checkbox_on"),
      (position_set_x, pos1, 7),
      (store_add, ":special_cur_y", ":cur_y", 7),
      (position_set_y, pos1, ":special_cur_y"),
      (overlay_set_position, "$g_presentation_obj_admin_panel_39", pos1),
      (overlay_set_val, "$g_presentation_obj_admin_panel_39", "$g_multiplayer_allow_player_banners"),

      (val_sub, ":cur_y", ":cur_y_adder"),

      (create_text_overlay, reg0, "str_disallow_ranged_weapons", 0),
      (position_set_x, pos1, 30),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, reg0, pos1),
      (create_check_box_overlay, "$g_presentation_obj_admin_panel_42", "mesh_checkbox_off", "mesh_checkbox_on"),
      (position_set_x, pos1, 7),
      (store_add, ":special_cur_y", ":cur_y", 7),
      (position_set_y, pos1, ":special_cur_y"),
      (overlay_set_position, "$g_presentation_obj_admin_panel_42", pos1),
      (overlay_set_val, "$g_presentation_obj_admin_panel_42", "$g_multiplayer_disallow_ranged_weapons"),

      (val_sub, ":cur_y", ":cur_y_adder"),

      (create_text_overlay, reg0, "str_force_default_armor", 0),
      (position_set_x, pos1, 30),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, reg0, pos1),

      (create_check_box_overlay, "$g_presentation_obj_admin_panel_40", "mesh_checkbox_off", "mesh_checkbox_on"),
      (position_set_x, pos1, 7),
      (store_add, ":special_cur_y", ":cur_y", 7),
      (position_set_y, pos1, ":special_cur_y"),
      (overlay_set_position, "$g_presentation_obj_admin_panel_40", pos1),
      (overlay_set_val, "$g_presentation_obj_admin_panel_40", "$g_multiplayer_force_default_armor"),

      (set_container_overlay, -1),

      (create_button_overlay, "$g_presentation_obj_admin_panel_13", "str_back", tf_center_justify),
      (position_set_x, pos1, 825),
      (position_set_y, pos1, 50),
      (overlay_set_position, "$g_presentation_obj_admin_panel_13", pos1),
      (position_set_x, pos1, 1500),
      (position_set_y, pos1, 1500),
      (overlay_set_size, "$g_presentation_obj_admin_panel_13", pos1),

      (create_button_overlay, "$g_presentation_obj_admin_panel_2", "str_start_map", tf_center_justify),
      (position_set_x, pos1, 825),
      (position_set_y, pos1, 90),
      (overlay_set_position, "$g_presentation_obj_admin_panel_2", pos1),
      (position_set_x, pos1, 1500),
      (position_set_y, pos1, 1500),
      (overlay_set_size, "$g_presentation_obj_admin_panel_2", pos1),

      (presentation_set_duration, 999999),

      (try_begin),
        (eq, ":selected_map_available", 0),
        (assign, "$g_multiplayer_selected_map", ":first_map"),
        (presentation_set_duration, 0),
        (start_presentation, "prsnt_game_multiplayer_admin_panel"),
      (try_end),
      ]),
    
    (ti_on_presentation_event_state_change,
     [(store_trigger_param_1, ":object"),
      (store_trigger_param_2, ":value"),
      (try_begin),
        (eq, ":object", "$g_presentation_obj_admin_panel_1"),
        (store_add, ":slot_no", ":value", multi_data_maps_for_game_type_begin),
        (troop_get_slot, "$g_multiplayer_selected_map", "trp_multiplayer_data", ":slot_no"),
        (presentation_set_duration, 0),
        (start_presentation, "prsnt_game_multiplayer_admin_panel"),
      (else_try),
        (eq, ":object", "$g_presentation_obj_admin_panel_2"),
        (multiplayer_send_2_int_to_server, multiplayer_event_admin_start_map, "$g_multiplayer_selected_map", "$g_multiplayer_game_type"),
      (else_try),
        (eq, ":object", "$g_presentation_obj_admin_panel_3"),
        (multiplayer_send_2_int_to_server, multiplayer_event_admin_set_num_bots_in_team, 1, ":value"),
      (else_try),
        (eq, ":object", "$g_presentation_obj_admin_panel_4"),
        (multiplayer_send_2_int_to_server, multiplayer_event_admin_set_num_bots_in_team, 2, ":value"),
      (else_try),
        (eq, ":object", "$g_presentation_obj_admin_panel_5"),
        (multiplayer_send_int_to_server, multiplayer_event_admin_set_friendly_fire, ":value"),
      (else_try),
        (eq, ":object", "$g_presentation_obj_admin_panel_6"),
        (multiplayer_send_int_to_server, multiplayer_event_admin_set_respawn_period, ":value"),
      (else_try),
        (eq, ":object", "$g_presentation_obj_admin_panel_7"),
        (multiplayer_send_int_to_server, multiplayer_event_admin_set_game_max_minutes, ":value"),
      (else_try),
        (eq, ":object", "$g_presentation_obj_admin_panel_8"),
        (multiplayer_send_int_to_server, multiplayer_event_admin_set_game_max_points, ":value"),
      (else_try),
        (eq, ":object", "$g_presentation_obj_admin_panel_9"),
        (multiplayer_send_string_to_server, multiplayer_event_admin_set_game_password, s0),
      (else_try),
        (eq, ":object", "$g_presentation_obj_admin_panel_10"),
        (assign, "$g_multiplayer_game_type", ":value"),
        (presentation_set_duration, 0),
        (start_presentation, "prsnt_game_multiplayer_admin_panel"),
      (else_try),
        (eq, ":object", "$g_presentation_obj_admin_panel_11"),
        (store_add, "$g_multiplayer_next_team_1_faction", ":value", npc_kingdoms_begin),
##        (try_begin),
##          (ge, "$g_multiplayer_next_team_1_faction", "$g_multiplayer_next_team_2_faction"),
##          (val_add, "$g_multiplayer_next_team_1_faction", 1),
##        (try_end),
        (multiplayer_send_2_int_to_server, multiplayer_event_admin_set_team_faction, 1, "$g_multiplayer_next_team_1_faction"),
        (presentation_set_duration, 0),
        (start_presentation, "prsnt_game_multiplayer_admin_panel"),
      (else_try),
        (eq, ":object", "$g_presentation_obj_admin_panel_12"),
        (store_add, "$g_multiplayer_next_team_2_faction", ":value", npc_kingdoms_begin),
##        (try_begin),
##          (ge, "$g_multiplayer_next_team_2_faction", "$g_multiplayer_next_team_1_faction"),
##          (val_add, "$g_multiplayer_next_team_2_faction", 1),
##        (try_end),
        (multiplayer_send_2_int_to_server, multiplayer_event_admin_set_team_faction, 2, "$g_multiplayer_next_team_2_faction"),
        (presentation_set_duration, 0),
        (start_presentation, "prsnt_game_multiplayer_admin_panel"),
      (else_try),
        (eq, ":object", "$g_presentation_obj_admin_panel_13"),
        (presentation_set_duration, 0),
      (else_try),
        (eq, ":object", "$g_presentation_obj_admin_panel_14"),
        (multiplayer_send_int_to_server, multiplayer_event_admin_set_add_to_servers_list, ":value"),
      (else_try),
        (eq, ":object", "$g_presentation_obj_admin_panel_15"),
        (multiplayer_send_int_to_server, multiplayer_event_admin_set_control_block_dir, ":value"),
      (else_try),
        (eq, ":object", "$g_presentation_obj_admin_panel_16"),
        (multiplayer_send_int_to_server, multiplayer_event_admin_set_round_max_seconds, ":value"),
      (else_try),
        (eq, ":object", "$g_presentation_obj_admin_panel_17"),
        (multiplayer_send_int_to_server, multiplayer_event_admin_set_point_gained_from_flags, ":value"),
      (else_try),
        (eq, ":object", "$g_presentation_obj_admin_panel_18"),
        (multiplayer_send_int_to_server, multiplayer_event_admin_set_point_gained_from_capturing_flag, ":value"),
      (else_try),
        (eq, ":object", "$g_presentation_obj_admin_panel_19"),
        (multiplayer_send_int_to_server, multiplayer_event_admin_set_ghost_mode, ":value"),
      (else_try),
        (eq, ":object", "$g_presentation_obj_admin_panel_20"),
        (multiplayer_send_string_to_server, multiplayer_event_admin_set_server_name, s0),
      (else_try),
        (eq, ":object", "$g_presentation_obj_admin_panel_21"),
        (multiplayer_send_int_to_server, multiplayer_event_admin_set_max_num_players, ":value"),
      (else_try),
        (eq, ":object", "$g_presentation_obj_admin_panel_22"),
        (multiplayer_send_int_to_server, multiplayer_event_admin_set_num_bots_voteable, ":value"),
      (else_try),
        (eq, ":object", "$g_presentation_obj_admin_panel_23"),
        (multiplayer_send_int_to_server, multiplayer_event_admin_set_factions_voteable, ":value"),
      (else_try),
        (eq, ":object", "$g_presentation_obj_admin_panel_24"),
        (multiplayer_send_int_to_server, multiplayer_event_admin_set_maps_voteable, ":value"),
      (else_try),
        (eq, ":object", "$g_presentation_obj_admin_panel_25"),
        (multiplayer_send_int_to_server, multiplayer_event_admin_set_player_respawn_as_bot, ":value"),
      (else_try),
        (eq, ":object", "$g_presentation_obj_admin_panel_26"),
        (multiplayer_send_int_to_server, multiplayer_event_admin_set_combat_speed, ":value"),
      (else_try),
        (eq, ":object", "$g_presentation_obj_admin_panel_27"),
        (store_sub, ":value_to_send", 5, ":value"), #opposite index of displayed list
        (multiplayer_send_int_to_server, multiplayer_event_admin_set_respawn_count, ":value_to_send"),
      (else_try),
        (eq, ":object", "$g_presentation_obj_admin_panel_28"),
        (multiplayer_send_int_to_server, multiplayer_event_admin_set_kick_voteable, ":value"),
      (else_try),
        (eq, ":object", "$g_presentation_obj_admin_panel_29"),
        (multiplayer_send_int_to_server, multiplayer_event_admin_set_ban_voteable, ":value"),
      (else_try),
        (eq, ":object", "$g_presentation_obj_admin_panel_30"),
        (multiplayer_send_int_to_server, multiplayer_event_admin_set_valid_vote_ratio, ":value"),
      (else_try),
        (eq, ":object", "$g_presentation_obj_admin_panel_31"),
        (try_begin),
          (eq, ":value", 0),
          (multiplayer_send_int_to_server, multiplayer_event_admin_set_auto_team_balance_limit, 1000),
        (else_try),
          (store_sub, ":value_to_send", 7, ":value"),
          (multiplayer_send_int_to_server, multiplayer_event_admin_set_auto_team_balance_limit, ":value_to_send"),
        (try_end),
      (else_try),
        (eq, ":object", "$g_presentation_obj_admin_panel_32"),
        (server_set_welcome_message, s0),
        (multiplayer_send_string_to_server, multiplayer_event_admin_set_welcome_message, s0),
      (else_try),
        (eq, ":object", "$g_presentation_obj_admin_panel_33"),
        (multiplayer_send_int_to_server, multiplayer_event_admin_set_initial_gold_multiplier, ":value"),
      (else_try),
        (eq, ":object", "$g_presentation_obj_admin_panel_34"),
        (multiplayer_send_int_to_server, multiplayer_event_admin_set_battle_earnings_multiplier, ":value"),
      (else_try),
        (eq, ":object", "$g_presentation_obj_admin_panel_35"),
        (multiplayer_send_int_to_server, multiplayer_event_admin_set_round_earnings_multiplier, ":value"),
      (else_try),
        (eq, ":object", "$g_presentation_obj_admin_panel_36"),
        (multiplayer_send_int_to_server, multiplayer_event_admin_set_melee_friendly_fire, ":value"),
      (else_try),
        (eq, ":object", "$g_presentation_obj_admin_panel_37"),
        (multiplayer_send_int_to_server, multiplayer_event_admin_set_friendly_fire_damage_self_ratio, ":value"),
      (else_try),
        (eq, ":object", "$g_presentation_obj_admin_panel_38"),
        (multiplayer_send_int_to_server, multiplayer_event_admin_set_friendly_fire_damage_friend_ratio, ":value"),
      (else_try),
        (eq, ":object", "$g_presentation_obj_admin_panel_39"),
        (multiplayer_send_int_to_server, multiplayer_event_admin_set_allow_player_banners, ":value"),
      (else_try),
        (eq, ":object", "$g_presentation_obj_admin_panel_40"),
        (multiplayer_send_int_to_server, multiplayer_event_admin_set_force_default_armor, ":value"),
      (else_try),
        (eq, ":object", "$g_presentation_obj_admin_panel_41"),
        (multiplayer_send_int_to_server, multiplayer_event_admin_set_anti_cheat, ":value"),
      (else_try),
        (eq, ":object", "$g_presentation_obj_admin_panel_42"),
        (multiplayer_send_int_to_server, multiplayer_event_admin_set_disallow_ranged_weapons, ":value"),
      (try_end),
      ]),
    (ti_on_presentation_run,
     [
      (try_begin),
        (this_or_next|key_clicked, key_escape),
        (key_clicked, key_xbox_start),
        (presentation_set_duration, 0),
      (try_end),
      ]),
    ]),

  ("multiplayer_welcome_message", prsntf_manual_end_only, 0, [
    (ti_on_presentation_load,
     [(set_fixed_point_multiplier, 1000),
      (str_store_welcome_message, s0),
      (try_begin),
        (neg|str_is_empty, s0),
        (eq, "$g_multiplayer_welcome_message_shown", 0),
        (create_mesh_overlay, reg0, "mesh_mp_ui_welcome_panel"),
        (position_set_x, pos1, 200),
        (position_set_y, pos1, 400),
        (overlay_set_position, reg0, pos1),
        (create_text_overlay, reg0, s0, tf_scrollable),
        (overlay_set_color, reg0, 0xFFFFFF),
        (position_set_x, pos1, 230),
        (position_set_y, pos1, 425),
        (overlay_set_position, reg0, pos1),
        (position_set_x, pos1, 540),
        (position_set_y, pos1, 150),
        (overlay_set_area_size, reg0, pos1),

        (presentation_set_duration, 999999),
      (else_try),
        (eq, "$g_multiplayer_show_server_rules", 1),
        (create_mesh_overlay, reg0, "mesh_mp_ui_welcome_panel"),
        (position_set_x, pos1, 200),
        (position_set_y, pos1, 400),
        (overlay_set_position, reg0, pos1),
        (try_begin),
          (neg|str_is_empty, s0),
          (str_clear, s3),
          (str_store_string, s2, s0),
          (str_store_string, s2, "str_s2_s3"),
          (str_store_string, s2, "str_s2_s3"),
        (else_try),
          (str_clear, s2),
        (try_end),
        (str_store_string, s3, "@Game Rules:^"),
        (str_store_string, s2, "str_s2_s3"),
        (assign, ":end_cond", 1000),
        (call_script, "script_game_multiplayer_get_game_type_mission_template", "$g_multiplayer_game_type"),
        (assign, ":cur_mt", reg0),
        
        (str_store_server_name, s0),
        (str_store_string, s3, "str_server_name_s0"),
        (str_store_string, s2, "str_s2_s3"),        

        (try_begin),                
          (eq, "$g_multiplayer_game_type", multiplayer_game_type_deathmatch),
          (str_store_string, s0, "str_multi_game_type_1"),
        (else_try),
          (eq, "$g_multiplayer_game_type", multiplayer_game_type_team_deathmatch),
          (str_store_string, s0, "str_multi_game_type_2"),
        (else_try),
          (eq, "$g_multiplayer_game_type", multiplayer_game_type_battle),
          (str_store_string, s0, "str_multi_game_type_3"),
        (else_try),
          (eq, "$g_multiplayer_game_type", multiplayer_game_type_destroy),
          (str_store_string, s0, "str_multi_game_type_4"),
        (else_try),
          (eq, "$g_multiplayer_game_type", multiplayer_game_type_capture_the_flag),
          (str_store_string, s0, "str_multi_game_type_5"),
        (else_try),
          (eq, "$g_multiplayer_game_type", multiplayer_game_type_headquarters),
          (str_store_string, s0, "str_multi_game_type_6"),
        (else_try),
          (eq, "$g_multiplayer_game_type", multiplayer_game_type_siege),
          (str_store_string, s0, "str_multi_game_type_7"),
        (else_try),
          (eq, "$g_multiplayer_game_type", multiplayer_game_type_duel),
          (str_store_string, s0, "str_multi_game_type_8"),
        (try_end),
        (str_store_string, s3, "str_game_type_s0"),
        (str_store_string, s2, "str_s2_s3"),   
        
        (store_current_scene, ":cur_scene"),
        (val_sub, ":cur_scene", "scn_multi_scene_1"),
        (val_add, ":cur_scene", "str_multi_scene_1"),
        (str_store_string, s0, ":cur_scene"),
        (str_store_string, s3, "str_map_name_s0"),
        (str_store_string, s2, "str_s2_s3"),
        
        (store_mission_timer_a, ":mission_timer"),
        (val_add, ":mission_timer", "$server_mission_timer_while_player_joined"),
        (assign, reg0, ":mission_timer"),       
        (store_mul, "$g_multiplayer_game_max_seconds", "$g_multiplayer_game_max_minutes", 60),
        (store_sub, ":remaining_seconds", "$g_multiplayer_game_max_seconds", ":mission_timer"),
        (store_div, reg0, ":remaining_seconds", 60),
        (store_mod, reg1, ":remaining_seconds", 60),
        (try_begin),
          (ge, reg0, 10),
          (ge, reg1, 10),          
          (str_clear, s0),
          (str_clear, s1),
        (else_try),  
          (ge, reg0, 10),
          (str_clear, s0),
          (str_store_string, s1, "@0"),
        (else_try),  
          (ge, reg1, 10),
          (str_store_string, s0, "@0"),
          (str_clear, s1),
        (else_try),  
          (str_store_string, s0, "@0"),
          (str_store_string, s1, "@0"),
        (try_end),
        (str_store_string, s3, "str_remaining_time_s0reg0_s1reg1"),
        
        (str_store_string, s2, "str_s2_s3"),

        (try_for_range, ":cur_option", 0, ":end_cond"),
          (assign, reg0, -12345), #magic number
          (call_script, "script_game_get_multiplayer_server_option_for_mission_template", ":cur_mt", ":cur_option"),
          (try_begin),
            (eq, reg0, -12345),
            (assign, ":end_cond", 0),
          (else_try),
            (call_script, "script_game_multiplayer_server_option_for_mission_template_to_string", ":cur_mt", ":cur_option", reg0),
            (str_store_string, s3, s0),
            (str_store_string, s2, "str_s2_s3"),
          (try_end),
        (try_end),        
        (create_text_overlay, reg0, s2, tf_scrollable),
        (overlay_set_color, reg0, 0xFFFFFF),
        (position_set_x, pos1, 230),
        (position_set_y, pos1, 425),
        (overlay_set_position, reg0, pos1),
        (position_set_x, pos1, 540),
        (position_set_y, pos1, 150),
        (overlay_set_area_size, reg0, pos1),

        (presentation_set_duration, 999999),
      (try_end),
      ]),

    (ti_on_presentation_run,
     [
       (str_store_welcome_message, s0),
       (try_begin),
         (neq, "$g_multiplayer_show_server_rules", 1),
         (this_or_next|str_is_empty, s0),
         (eq, "$g_multiplayer_welcome_message_shown", 1),
         (presentation_set_duration, 0),
         (neg|is_presentation_active, "prsnt_multiplayer_escape_menu"),
         (neg|is_presentation_active, "prsnt_multiplayer_team_select"),
         (start_presentation, "prsnt_multiplayer_team_select"),
       (else_try),
         (store_mission_timer_a, ":mission_timer"),
         (gt, ":mission_timer", 1),
         (this_or_next|key_clicked, key_escape),
         (this_or_next|key_clicked, key_space),
         (this_or_next|key_clicked, key_enter),
         (this_or_next|key_clicked, key_left_mouse_button),
         (this_or_next|key_clicked, key_right_mouse_button),
         (this_or_next|key_clicked, key_xbox_ltrigger),
         (key_clicked, key_xbox_rtrigger),
         (assign, "$g_multiplayer_welcome_message_shown", 1),
         (presentation_set_duration, 0),
         (neg|is_presentation_active, "prsnt_multiplayer_escape_menu"),
         (neg|is_presentation_active, "prsnt_multiplayer_team_select"),
         (try_begin),
           (eq, "$g_multiplayer_show_server_rules", 1),
           (assign, "$g_multiplayer_show_server_rules", 0),
           (start_presentation, "prsnt_multiplayer_escape_menu"),
         (else_try),
           (start_presentation, "prsnt_multiplayer_team_select"),
         (try_end),
       (try_end),
      ]),
    ]),

  ("multiplayer_team_select", prsntf_manual_end_only, 0, [
    (ti_on_presentation_load,
     [(set_fixed_point_multiplier, 1000),

      (create_mesh_overlay, reg0, "mesh_mp_ingame_menu"),
      (position_set_x, pos1, 250),
      (position_set_y, pos1, 80),
      (overlay_set_position, reg0, pos1),
      (position_set_x, pos1, 1000),
      (position_set_y, pos1, 1000),
      (overlay_set_size, reg0, pos1),

      (str_clear, s0),
      (create_text_overlay, "$g_presentation_obj_team_select_container", s0, tf_scrollable_style_2),
      (position_set_x, pos1, 285),
      (position_set_y, pos1, 125),
      (overlay_set_position, "$g_presentation_obj_team_select_container", pos1),
      (position_set_x, pos1, 405),
      (position_set_y, pos1, 500),
      (overlay_set_area_size, "$g_presentation_obj_team_select_container", pos1),
      (set_container_overlay, "$g_presentation_obj_team_select_container"),

      (assign, ":cur_y", 450),

      (create_text_overlay, reg0, "str_choose_a_faction", 0),
      (overlay_set_color, reg0, 0xFFFFFF),
      (position_set_x, pos1, 0),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, reg0, pos1),
      (val_sub, ":cur_y", escape_menu_item_height),
      (position_set_y, pos1, ":cur_y"),
      (position_set_x, pos1, 100),

      (multiplayer_get_my_player, ":my_player_no"),
      (team_get_faction, ":faction_no", 0),
      (str_store_faction_name, s0, ":faction_no"),
      (create_button_overlay, "$g_presentation_obj_team_select_1", s0, 0),
      (try_begin),
        (call_script, "script_cf_multiplayer_team_is_available", ":my_player_no", 0),
        (overlay_set_color, "$g_presentation_obj_team_select_1", 0xFFFFFF),
        (overlay_set_hilight_color, "$g_presentation_obj_team_select_1", 0x55FF50),
        (assign, "$g_multiplayer_team_select_1_available", 1),
      (else_try),
        (overlay_set_color, "$g_presentation_obj_team_select_1", 0x888888),
        (overlay_set_hilight_color, "$g_presentation_obj_team_select_1", 0x888888),
        (assign, "$g_multiplayer_team_select_1_available", 0),
      (try_end),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, "$g_presentation_obj_team_select_1", pos1),
      (val_sub, ":cur_y", escape_menu_item_height),
      (position_set_y, pos1, ":cur_y"),

      (team_get_faction, ":faction_no", 1),
      (str_store_faction_name, s0, ":faction_no"),
      (create_button_overlay, "$g_presentation_obj_team_select_2", s0, 0),
      (try_begin),
        (call_script, "script_cf_multiplayer_team_is_available", ":my_player_no", 1),
        (overlay_set_color, "$g_presentation_obj_team_select_2", 0xFFFFFF),
        (overlay_set_hilight_color, "$g_presentation_obj_team_select_2", 0x55FF50),
        (assign, "$g_multiplayer_team_select_2_available", 1),
      (else_try),
        (overlay_set_color, "$g_presentation_obj_team_select_2", 0x888888),
        (overlay_set_hilight_color, "$g_presentation_obj_team_select_2", 0x888888),
        (assign, "$g_multiplayer_team_select_2_available", 0),
      (try_end),
      (overlay_set_position, "$g_presentation_obj_team_select_2", pos1),
      (val_sub, ":cur_y", escape_menu_item_height),
      (position_set_y, pos1, ":cur_y"),

      (create_button_overlay, "$g_presentation_obj_team_select_3", "str_spectator", 0),
      (overlay_set_color, "$g_presentation_obj_team_select_3", 0xFFFFFF),
      (overlay_set_position, "$g_presentation_obj_team_select_3", pos1),
      (val_sub, ":cur_y", escape_menu_item_height),
      (position_set_y, pos1, ":cur_y"),

      (presentation_set_duration, 999999),
      ]),

    (ti_on_presentation_event_state_change,
     [(store_trigger_param_1, ":object"),
      (multiplayer_get_my_player, ":my_player_no"),
      (try_begin),
        (eq, "$g_waiting_for_confirmation_to_terminate", 0),
        (try_begin),
          (eq, ":object", "$g_presentation_obj_team_select_1"),
          (try_begin),
            (call_script, "script_cf_multiplayer_team_is_available", ":my_player_no", 0),
            (try_begin),
              (player_get_team_no, ":my_team", ":my_player_no"),
              (neq, ":my_team", 0),
              (assign, "$g_confirmation_result", 0),
              (assign, "$g_waiting_for_confirmation_to_terminate", 1),
              (player_get_troop_id, "$g_confirmation_troop_backup", ":my_player_no"),
              (player_get_team_no, "$g_confirmation_team_backup", ":my_player_no"),
              (player_set_troop_id, ":my_player_no", -1),
              (multiplayer_send_int_to_server, multiplayer_event_change_team_no, 0),
              (player_set_team_no, ":my_player_no", 0),
            (else_try),
              (presentation_set_duration, 0),
              (start_presentation, "prsnt_multiplayer_troop_select"),
            (try_end),
          (try_end),
        (else_try),
          (eq, ":object", "$g_presentation_obj_team_select_2"),
          (try_begin),
            (call_script, "script_cf_multiplayer_team_is_available", ":my_player_no", 1),
            (try_begin),
              (player_get_team_no, ":my_team", ":my_player_no"),
              (neq, ":my_team", 1),
              (assign, "$g_confirmation_result", 0),
              (assign, "$g_waiting_for_confirmation_to_terminate", 1),
              (player_get_troop_id, "$g_confirmation_troop_backup", ":my_player_no"),
              (player_get_team_no, "$g_confirmation_team_backup", ":my_player_no"),
              (player_set_troop_id, ":my_player_no", -1),
              (multiplayer_send_int_to_server, multiplayer_event_change_team_no, 1),
              (player_set_team_no, ":my_player_no", 1),
            (else_try),
              (presentation_set_duration, 0),
              (start_presentation, "prsnt_multiplayer_troop_select"),
            (try_end),
          (try_end),
        (else_try),
          (eq, ":object", "$g_presentation_obj_team_select_3"),
          (player_set_troop_id, ":my_player_no", -1),
          (multiplayer_send_int_to_server, multiplayer_event_change_team_no, multi_team_spectator),
          (player_set_team_no, ":my_player_no", multi_team_spectator),
          (presentation_set_duration, 0),
        (try_end),
      (try_end),
      ]),

    (ti_on_presentation_run,
     [
      (multiplayer_get_my_player, ":my_player_no"),
      (try_begin),
        (this_or_next|key_clicked, key_escape),
        (key_clicked, key_xbox_start),
        (eq, "$g_waiting_for_confirmation_to_terminate", 0),
        (multiplayer_get_my_team, ":my_team"),
        (try_begin),
          (eq, ":my_team", multi_team_unassigned),
          (player_set_troop_id, ":my_player_no", -1),
          (multiplayer_send_int_to_server, multiplayer_event_change_team_no, multi_team_spectator),
          (player_set_team_no, ":my_player_no", multi_team_spectator),
        (try_end),
        (presentation_set_duration, 0),
      (else_try),
        (eq, "$g_waiting_for_confirmation_to_terminate", 1),
        (eq, "$g_confirmation_result", 1),
        (assign, "$g_waiting_for_confirmation_to_terminate", 0),
        (assign, "$g_confirmation_result", 0),
        (presentation_set_duration, 0),
        (start_presentation, "prsnt_multiplayer_troop_select"),
      (else_try),
        (eq, "$g_waiting_for_confirmation_to_terminate", 1),
        (eq, "$g_confirmation_result", -1),
        #return troop and team back to the old state
        (player_set_troop_id, ":my_player_no", "$g_confirmation_troop_backup"),
        (player_set_team_no, ":my_player_no", "$g_confirmation_team_backup"),
        (assign, "$g_waiting_for_confirmation_to_terminate", 0),
        (assign, "$g_confirmation_result", 0),
        (presentation_set_duration, 0),
        (start_presentation, "prsnt_multiplayer_team_select"),
      (else_try),
        (assign, ":do_refresh", 0),
        (try_begin),
          (call_script, "script_cf_multiplayer_team_is_available", ":my_player_no", 0),
          (try_begin),
            (eq, "$g_multiplayer_team_select_1_available", 0),
            (assign, ":do_refresh", 1),
          (try_end),
        (else_try),
          #not available
          (try_begin),
            (eq, "$g_multiplayer_team_select_1_available", 1),
            (assign, ":do_refresh", 1),
          (try_end),
        (try_end),
        (try_begin),
          (call_script, "script_cf_multiplayer_team_is_available", ":my_player_no", 1),
          (try_begin),
            (eq, "$g_multiplayer_team_select_2_available", 0),
            (assign, ":do_refresh", 1),
          (try_end),
        (else_try),
          #not available
          (try_begin),
            (eq, "$g_multiplayer_team_select_2_available", 1),
            (assign, ":do_refresh", 1),
          (try_end),
        (try_end),
        (eq, ":do_refresh", 1),
        (presentation_set_duration, 0),
        (start_presentation, "prsnt_multiplayer_team_select"),
      (try_end),
      ]),
    ]),
  
  ("multiplayer_troop_select", prsntf_manual_end_only, 0, [
    (ti_on_presentation_load,
     [(set_fixed_point_multiplier, 1000),

      (create_mesh_overlay, reg0, "mesh_mp_ingame_menu"),
      (position_set_x, pos1, 250),
      (position_set_y, pos1, 80),
      (overlay_set_position, reg0, pos1),
      (position_set_x, pos1, 1000),
      (position_set_y, pos1, 1000),
      (overlay_set_size, reg0, pos1),

      (str_clear, s0),
      (create_text_overlay, "$g_presentation_obj_troop_select_container", s0, tf_scrollable_style_2),
      (position_set_x, pos1, 285),
      (position_set_y, pos1, 125),
      (overlay_set_position, "$g_presentation_obj_troop_select_container", pos1),
      (position_set_x, pos1, 405),
      (position_set_y, pos1, 500),
      (overlay_set_area_size, "$g_presentation_obj_troop_select_container", pos1),
      (set_container_overlay, "$g_presentation_obj_troop_select_container"),

      (assign, ":cur_y", 450),

      (create_text_overlay, reg0, "str_choose_a_troop", 0),
      (overlay_set_color, reg0, 0xFFFFFF),
      (position_set_x, pos1, 0),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, reg0, pos1),
      (val_sub, ":cur_y", escape_menu_item_height),
      (position_set_y, pos1, ":cur_y"),
      (position_set_x, pos1, 100),

      (multiplayer_get_my_player, ":my_player_no"),
      (player_get_team_no, ":my_team_no", ":my_player_no"),
      (team_get_faction, ":my_faction_no", ":my_team_no"),
      (try_for_range, ":i_multi", multi_data_troop_button_indices_begin, multi_data_troop_button_indices_end),
        (troop_set_slot, "trp_multiplayer_data", ":i_multi", -1),
      (try_end),

      (assign, ":cur_troop_index", 0),
      (try_for_range, ":troop_no", multiplayer_troops_begin, multiplayer_troops_end),
        (store_troop_faction, ":troop_faction", ":troop_no"),
        (eq, ":troop_faction", ":my_faction_no"),
        (str_store_troop_name, s1, ":troop_no"),
        (create_button_overlay, reg0, s1, 0),
        (overlay_set_color, reg0, 0xFFFFFF),
        (store_add, ":button_index_slot", ":cur_troop_index", multi_data_troop_button_indices_begin),
        (troop_set_slot, "trp_multiplayer_data", ":button_index_slot", reg0),
        (position_set_y, pos1, ":cur_y"),
        (overlay_set_position, reg0, pos1),
        (val_sub, ":cur_y", escape_menu_item_height),
        (position_set_y, pos1, ":cur_y"),
        (val_add, ":cur_troop_index", 1),
      (try_end),
      (presentation_set_duration, 999999),
      ]),
   
    (ti_on_presentation_event_state_change,
     [(store_trigger_param_1, ":object"),
      (multiplayer_get_my_player, ":my_player_no"),
      (player_get_team_no, ":my_team_no", ":my_player_no"),
      (team_get_faction, ":my_faction_no", ":my_team_no"),
      (assign, ":selected_troop_no", -1),
      (assign, ":end_cond", multi_data_troop_button_indices_end),
      (try_for_range, ":i_button", multi_data_troop_button_indices_begin, ":end_cond"),
        (troop_slot_eq, "trp_multiplayer_data", ":i_button", ":object"),
        (store_sub, ":selected_troop_index", ":i_button", multi_data_troop_button_indices_begin),
        (assign, ":end_cond_2", multiplayer_troops_end),
        (try_for_range, ":troop_no", multiplayer_troops_begin, ":end_cond_2"),
          (store_troop_faction, ":troop_faction", ":troop_no"),
          (eq, ":troop_faction", ":my_faction_no"),
          (val_sub, ":selected_troop_index", 1),
          (lt, ":selected_troop_index", 0),
          (assign, ":selected_troop_no", ":troop_no"),
          (assign, ":end_cond_2", 0), #break
        (try_end),
        (try_begin),
          (multiplayer_get_my_troop, ":troop_no"),
          (neq, ":troop_no", ":selected_troop_no"),
          (player_set_troop_id, ":my_player_no", ":selected_troop_no"),
          (multiplayer_send_int_to_server, multiplayer_event_change_troop_id, ":selected_troop_no"),
          (call_script, "script_multiplayer_set_default_item_selections_for_troop", ":selected_troop_no"),
          (call_script, "script_multiplayer_send_item_selections"),
        (try_end),
        (presentation_set_duration, 0),
        (assign, "$g_presentation_state", 0),
        (start_presentation, "prsnt_multiplayer_item_select"),
        (assign, ":end_cond", 0), #break
      (try_end),
      ]),
    (ti_on_presentation_run,
     [
      (try_begin),
        (this_or_next|key_clicked, key_escape),
        (key_clicked, key_xbox_start),
        (multiplayer_get_my_player, ":my_player_no"),
        (is_between, ":my_player_no", 0, multiplayer_max_possible_player_id),
        (multiplayer_get_my_troop, ":my_troop"),
        (try_begin),
          (neg|is_between, ":my_troop", multiplayer_troops_begin, multiplayer_troops_end),
          (player_set_troop_id, ":my_player_no", -1),
          (multiplayer_send_int_to_server, multiplayer_event_change_troop_id, -1),
          (multiplayer_send_int_to_server, multiplayer_event_change_team_no, multi_team_spectator),
          (player_set_team_no, ":my_player_no", multi_team_spectator),
        (try_end),
        (presentation_set_duration, 0),
      (try_end),
      ]),
    ]),

  ("multiplayer_item_select", prsntf_manual_end_only, 0, [
    (ti_on_presentation_load,
     [(set_fixed_point_multiplier, 1000),
      (multiplayer_get_my_player, ":my_player_no"),

      (assign, "$g_presentation_obj_item_select_1", -1),
      (assign, "$g_presentation_obj_item_select_2", -1),
      (assign, "$g_presentation_obj_item_select_3", -1),
      (assign, "$g_presentation_obj_item_select_4", -1),
      (assign, "$g_presentation_obj_item_select_5", -1),
      (assign, "$g_presentation_obj_item_select_6", -1),
      (assign, "$g_presentation_obj_item_select_7", -1),
      (assign, "$g_presentation_obj_item_select_8", -1),
      (assign, "$g_presentation_obj_item_select_9", -1),
      (assign, "$g_presentation_obj_item_select_10", -1),
      (assign, "$g_presentation_obj_item_select_11", -1),
      (assign, "$g_presentation_obj_item_select_12", -1),
      (assign, "$g_presentation_obj_item_select_13", -1),
      (assign, "$g_presentation_obj_item_select_14", -1),
      (assign, "$g_presentation_obj_item_select_15", -1),
      (assign, "$g_presentation_obj_item_select_16", -1),
      
      (try_begin),
        (neq, "$g_current_opened_item_details", -1),
        (close_item_details),
        (assign, "$g_current_opened_item_details", -1),
      (try_end),

      (store_add, ":selected_item_index", slot_player_selected_item_indices_begin, 0),
      (player_get_slot, ":selected_item_id", ":my_player_no", ":selected_item_index"),
      (try_begin),
        (ge, ":selected_item_id", 0),
        (create_image_button_overlay, "$g_presentation_obj_item_select_1", "mesh_mp_inventory_slot_empty", "mesh_mp_inventory_slot_empty"),
        (create_mesh_overlay_with_item_id, reg0, ":selected_item_id"),
        (position_set_x, pos1, 950),
        (position_set_y, pos1, 526),
        (overlay_set_position, reg0, pos1),
        (assign, "$g_inside_obj_1", reg0),
      (else_try),
        (create_image_button_overlay, "$g_presentation_obj_item_select_1", "mesh_mp_inventory_slot_equip", "mesh_mp_inventory_slot_equip"),
      (try_end),
      (position_set_x, pos1, 800),
      (position_set_y, pos1, 800),
      (overlay_set_size, "$g_presentation_obj_item_select_1", pos1),
      (position_set_x, pos1, 899),
      (position_set_y, pos1, 475),
      (overlay_set_position, "$g_presentation_obj_item_select_1", pos1),

      (store_add, ":selected_item_index", slot_player_selected_item_indices_begin, 1),
      (player_get_slot, ":selected_item_id", ":my_player_no", ":selected_item_index"),
      (try_begin),
        (ge, ":selected_item_id", 0),
        (create_image_button_overlay, "$g_presentation_obj_item_select_2", "mesh_mp_inventory_slot_empty", "mesh_mp_inventory_slot_empty"),
        (create_mesh_overlay_with_item_id, reg0, ":selected_item_id"),
        (position_set_x, pos1, 950),
        (position_set_y, pos1, 426),
        (overlay_set_position, reg0, pos1),
        (assign, "$g_inside_obj_2", reg0),
      (else_try),
        (create_image_button_overlay, "$g_presentation_obj_item_select_2", "mesh_mp_inventory_slot_equip", "mesh_mp_inventory_slot_equip"),
      (try_end),
      (position_set_x, pos1, 800),
      (position_set_y, pos1, 800),
      (overlay_set_size, "$g_presentation_obj_item_select_2", pos1),
      (position_set_x, pos1, 899),
      (position_set_y, pos1, 375),
      (overlay_set_position, "$g_presentation_obj_item_select_2", pos1),

      (store_add, ":selected_item_index", slot_player_selected_item_indices_begin, 2),
      (player_get_slot, ":selected_item_id", ":my_player_no", ":selected_item_index"),
      (try_begin),
        (ge, ":selected_item_id", 0),
        (create_image_button_overlay, "$g_presentation_obj_item_select_3", "mesh_mp_inventory_slot_empty", "mesh_mp_inventory_slot_empty"),
        (create_mesh_overlay_with_item_id, reg0, ":selected_item_id"),
        (position_set_x, pos1, 950),
        (position_set_y, pos1, 326),
        (overlay_set_position, reg0, pos1),
        (assign, "$g_inside_obj_3", reg0),
      (else_try),
        (create_image_button_overlay, "$g_presentation_obj_item_select_3", "mesh_mp_inventory_slot_equip", "mesh_mp_inventory_slot_equip"),
      (try_end),
      (position_set_x, pos1, 800),
      (position_set_y, pos1, 800),
      (overlay_set_size, "$g_presentation_obj_item_select_3", pos1),
      (position_set_x, pos1, 899),
      (position_set_y, pos1, 275),
      (overlay_set_position, "$g_presentation_obj_item_select_3", pos1),

      (store_add, ":selected_item_index", slot_player_selected_item_indices_begin, 3),
      (player_get_slot, ":selected_item_id", ":my_player_no", ":selected_item_index"),
      (try_begin),
        (ge, ":selected_item_id", 0),
        (create_image_button_overlay, "$g_presentation_obj_item_select_4", "mesh_mp_inventory_slot_empty", "mesh_mp_inventory_slot_empty"),
        (create_mesh_overlay_with_item_id, reg0, ":selected_item_id"),
        (position_set_x, pos1, 950),
        (position_set_y, pos1, 226),
        (overlay_set_position, reg0, pos1),
        (assign, "$g_inside_obj_4", reg0),
      (else_try),
        (create_image_button_overlay, "$g_presentation_obj_item_select_4", "mesh_mp_inventory_slot_equip", "mesh_mp_inventory_slot_equip"),
      (try_end),
      (position_set_x, pos1, 800),
      (position_set_y, pos1, 800),
      (overlay_set_size, "$g_presentation_obj_item_select_4", pos1),
      (position_set_x, pos1, 899),
      (position_set_y, pos1, 175),
      (overlay_set_position, "$g_presentation_obj_item_select_4", pos1),

      (store_add, ":selected_item_index", slot_player_selected_item_indices_begin, 4),
      (player_get_slot, ":selected_item_id", ":my_player_no", ":selected_item_index"),
      (try_begin),
        (ge, ":selected_item_id", 0),
        (create_image_button_overlay, "$g_presentation_obj_item_select_5", "mesh_mp_inventory_slot_empty", "mesh_mp_inventory_slot_empty"),
        (create_mesh_overlay_with_item_id, reg0, ":selected_item_id"),
        (position_set_x, pos1, 53),
        (position_set_y, pos1, 576),
        (overlay_set_position, reg0, pos1),
        (assign, "$g_inside_obj_5", reg0),
      (else_try),
        (create_image_button_overlay, "$g_presentation_obj_item_select_5", "mesh_mp_inventory_slot_helmet", "mesh_mp_inventory_slot_helmet"),
      (try_end),
      (position_set_x, pos1, 800),
      (position_set_y, pos1, 800),
      (overlay_set_size, "$g_presentation_obj_item_select_5", pos1),
      (position_set_x, pos1, 2),
      (position_set_y, pos1, 525),
      (overlay_set_position, "$g_presentation_obj_item_select_5", pos1),

      (store_add, ":selected_item_index", slot_player_selected_item_indices_begin, 5),
      (player_get_slot, ":selected_item_id", ":my_player_no", ":selected_item_index"),
      (try_begin),
        (ge, ":selected_item_id", 0),
        (create_image_button_overlay, "$g_presentation_obj_item_select_6", "mesh_mp_inventory_slot_empty", "mesh_mp_inventory_slot_empty"),
        (create_mesh_overlay_with_item_id, reg0, ":selected_item_id"),
        (position_set_x, pos1, 53),
        (position_set_y, pos1, 476),
        (overlay_set_position, reg0, pos1),
        (assign, "$g_inside_obj_6", reg0),
      (else_try),
        (create_image_button_overlay, "$g_presentation_obj_item_select_6", "mesh_mp_inventory_slot_armor", "mesh_mp_inventory_slot_armor"),
      (try_end),
      (position_set_x, pos1, 800),
      (position_set_y, pos1, 800),
      (overlay_set_size, "$g_presentation_obj_item_select_6", pos1),
      (position_set_x, pos1, 2),
      (position_set_y, pos1, 425),
      (overlay_set_position, "$g_presentation_obj_item_select_6", pos1),

      (store_add, ":selected_item_index", slot_player_selected_item_indices_begin, 6),
      (player_get_slot, ":selected_item_id", ":my_player_no", ":selected_item_index"),
      (try_begin),
        (ge, ":selected_item_id", 0),
        (create_image_button_overlay, "$g_presentation_obj_item_select_7", "mesh_mp_inventory_slot_empty", "mesh_mp_inventory_slot_empty"),
        (create_mesh_overlay_with_item_id, reg0, ":selected_item_id"),
        (position_set_x, pos1, 53),
        (position_set_y, pos1, 376),
        (overlay_set_position, reg0, pos1),
        (assign, "$g_inside_obj_7", reg0),
      (else_try),
        (create_image_button_overlay, "$g_presentation_obj_item_select_7", "mesh_mp_inventory_slot_boot", "mesh_mp_inventory_slot_boot"),
      (try_end),
      (position_set_x, pos1, 800),
      (position_set_y, pos1, 800),
      (overlay_set_size, "$g_presentation_obj_item_select_7", pos1),
      (position_set_x, pos1, 2),
      (position_set_y, pos1, 325),
      (overlay_set_position, "$g_presentation_obj_item_select_7", pos1),

      (store_add, ":selected_item_index", slot_player_selected_item_indices_begin, 7),
      (player_get_slot, ":selected_item_id", ":my_player_no", ":selected_item_index"),
      (try_begin),
        (ge, ":selected_item_id", 0),
        (create_image_button_overlay, "$g_presentation_obj_item_select_8", "mesh_mp_inventory_slot_empty", "mesh_mp_inventory_slot_empty"),
        (create_mesh_overlay_with_item_id, reg0, ":selected_item_id"),
        (position_set_x, pos1, 53),
        (position_set_y, pos1, 276),
        (overlay_set_position, reg0, pos1),
        (assign, "$g_inside_obj_8", reg0),
      (else_try),
        (create_image_button_overlay, "$g_presentation_obj_item_select_8", "mesh_mp_inventory_slot_glove", "mesh_mp_inventory_slot_glove"),
      (try_end),
      (position_set_x, pos1, 800),
      (position_set_y, pos1, 800),
      (overlay_set_size, "$g_presentation_obj_item_select_8", pos1),
      (position_set_x, pos1, 2),
      (position_set_y, pos1, 225),
      (overlay_set_position, "$g_presentation_obj_item_select_8", pos1),

      (store_add, ":selected_item_index", slot_player_selected_item_indices_begin, 8),
      (player_get_slot, ":selected_item_id", ":my_player_no", ":selected_item_index"),
      (try_begin),
        (ge, ":selected_item_id", 0),
        (eq, "$g_horses_are_avaliable", 1),
        (create_image_button_overlay, "$g_presentation_obj_item_select_9", "mesh_mp_inventory_slot_empty", "mesh_mp_inventory_slot_empty"),
        (create_mesh_overlay_with_item_id, reg0, ":selected_item_id"),
        (position_set_x, pos1, 53),
        (position_set_y, pos1, 176),
        (overlay_set_position, reg0, pos1),
        (assign, "$g_inside_obj_9", reg0),
      (else_try),
        (create_image_button_overlay, "$g_presentation_obj_item_select_9", "mesh_mp_inventory_slot_horse", "mesh_mp_inventory_slot_horse"),
      (try_end),
      (position_set_x, pos1, 800),
      (position_set_y, pos1, 800),
      (overlay_set_size, "$g_presentation_obj_item_select_9", pos1),
      (position_set_x, pos1, 2),
      (position_set_y, pos1, 125),
      (overlay_set_position, "$g_presentation_obj_item_select_9", pos1),

      (create_mesh_overlay, reg0, "mesh_mp_inventory_left"),
      (position_set_x, pos1, 800),
      (position_set_y, pos1, 800),
      (overlay_set_size, reg0, pos1),
      (position_set_x, pos1, 0),
      (position_set_y, pos1, 14),
      (overlay_set_position, reg0, pos1),

      (create_mesh_overlay, reg0, "mesh_mp_inventory_right"),
      (position_set_x, pos1, 800),
      (position_set_y, pos1, 800),
      (overlay_set_size, reg0, pos1),
      (position_set_x, pos1, 894),
      (position_set_y, pos1, 65),
      (overlay_set_position, reg0, pos1),

      (create_in_game_button_overlay, "$g_presentation_obj_item_select_10", "str_reset_to_default", 0),
      (overlay_set_color, "$g_presentation_obj_item_select_10", 0xFFFFFF),
      (position_set_x, pos1, 605),
      (position_set_y, pos1, 25),
      (overlay_set_position, "$g_presentation_obj_item_select_10", pos1),

      (create_in_game_button_overlay, "$g_presentation_obj_item_select_11", "str_done", 0),
      (overlay_set_color, "$g_presentation_obj_item_select_11", 0xFFFFFF),
      (position_set_x, pos1, 395),
      (position_set_y, pos1, 25),
      (overlay_set_position, "$g_presentation_obj_item_select_11", pos1),

      (assign, ":cur_y", 725),
      (multiplayer_get_my_player, ":my_player_no"),
      (player_get_team_no, ":my_team_no", ":my_player_no"),
      (assign, ":has_bots", 0),
      (try_begin),
        (eq, ":my_team_no", 0),
        (try_begin),
          (gt, "$g_multiplayer_num_bots_team_1", 0),
          (assign, ":has_bots", 1),
        (try_end),
      (else_try),
        (try_begin),
          (gt, "$g_multiplayer_num_bots_team_2", 0),
          (assign, ":has_bots", 1),
        (try_end),
      (try_end),
      (team_get_faction, ":my_faction_no", ":my_team_no"),

      (try_begin),
        (eq, ":has_bots", 1),
        (neq, "$g_multiplayer_game_type", multiplayer_game_type_deathmatch),
        (neq, "$g_multiplayer_game_type", multiplayer_game_type_duel),

        (assign, ":num_lines", 0),
        (try_begin),
          (eq, ":has_bots", 1),
          (try_for_range, ":ai_troop_no", multiplayer_ai_troops_begin, multiplayer_ai_troops_end),
            (store_troop_faction, ":ai_troop_faction", ":ai_troop_no"),
            (eq, ":ai_troop_faction", ":my_faction_no"),
            (val_add, ":num_lines", 1),
          (try_end),
        (try_end),

        (store_mul, ":board_height", ":num_lines", 20),
        (val_add, ":board_height", 40),

        (create_mesh_overlay, reg0, "mesh_mp_ui_command_border_r"),
        (position_set_x, pos1, 280),
        (position_set_y, pos1, 680),
        (overlay_set_position, reg0, pos1),
        (position_set_x, pos1, 2500),
        (position_set_y, pos1, 2500),
        (overlay_set_size, reg0, pos1),

        (create_mesh_overlay, reg0, "mesh_mp_ui_command_border_l"),
        (position_set_x, pos1, 650),
        (position_set_y, pos1, 680),
        (overlay_set_position, reg0, pos1),
        (position_set_x, pos1, 2500),
        (position_set_y, pos1, 2500),
        (overlay_set_size, reg0, pos1),

        (create_mesh_overlay, reg0, "mesh_mp_ui_command_panel"),
        (position_set_x, pos1, 350),
        (store_sub, ":board_pos_y", 750, ":board_height"),
        (position_set_y, pos1, ":board_pos_y"),
        (overlay_set_position, reg0, pos1),
        (position_set_x, pos1, 3000),
        (position_set_y, pos1, 3000),
        (overlay_set_size, reg0, pos1),

        (create_text_overlay, reg0, "str_command", 0),
        (overlay_set_color, reg0, 0xFFFFFF),
        (position_set_x, pos1, 800),
        (position_set_y, pos1, 800),
        (overlay_set_size, reg0, pos1),
        (position_set_x, pos1, 370),
        (position_set_y, pos1, ":cur_y"),
        (overlay_set_position, reg0, pos1),
        (val_sub, ":cur_y", 20),

        (assign, ":cur_ai_troop_index", 0),
        (try_for_range, ":ai_troop_no", multiplayer_ai_troops_begin, multiplayer_ai_troops_end),
          (store_troop_faction, ":ai_troop_faction", ":ai_troop_no"),
          (eq, ":ai_troop_faction", ":my_faction_no"),

          (create_check_box_overlay, reg0, "mesh_checkbox_off", "mesh_checkbox_on"),
          (position_set_x, pos1, 800),
          (position_set_y, pos1, 800),
          (overlay_set_size, reg0, pos1),
          (position_set_x, pos1, 377),
          (store_add, ":special_cur_y", ":cur_y", 2),
          (position_set_y, pos1, ":special_cur_y"),
          (overlay_set_position, reg0, pos1),
          (try_begin),
            (eq, ":cur_ai_troop_index", 0),
            (overlay_set_val, reg0, "$g_multiplayer_bot_type_1_wanted"),
            (assign, "$g_presentation_obj_item_select_13", reg0),
          (else_try),
            (eq, ":cur_ai_troop_index", 1),
            (overlay_set_val, reg0, "$g_multiplayer_bot_type_2_wanted"),
            (assign, "$g_presentation_obj_item_select_14", reg0),
          (else_try),
            (eq, ":cur_ai_troop_index", 2),
            (overlay_set_val, reg0, "$g_multiplayer_bot_type_3_wanted"),
            (assign, "$g_presentation_obj_item_select_15", reg0),
          (else_try),
            (overlay_set_val, reg0, "$g_multiplayer_bot_type_4_wanted"),
            (assign, "$g_presentation_obj_item_select_16", reg0),
          (try_end),

          (str_store_troop_name, s0, ":ai_troop_no"),
          (create_text_overlay, reg0, "str_s0", 0),
          (overlay_set_color, reg0, 0xFFFFFF),
          (position_set_x, pos1, 800),
          (position_set_y, pos1, 800),
          (overlay_set_size, reg0, pos1),
          (position_set_x, pos1, 397),
          (position_set_y, pos1, ":cur_y"),
          (overlay_set_position, reg0, pos1),
          (val_sub, ":cur_y", 20),
          (val_add, ":cur_ai_troop_index", 1),
        (try_end),
        (val_sub, ":cur_y", 20),
      (try_end),

      (multiplayer_get_my_player, ":my_player_no"),
      (player_get_gold, ":player_gold", ":my_player_no"),
      (call_script, "script_multiplayer_calculate_cur_selected_items_cost", ":my_player_no", 1),
      (create_text_overlay, "$g_presentation_obj_item_select_12", "str_total_item_cost_reg0", tf_left_align|tf_single_line|tf_with_outline),
      (try_begin),
        (ge, ":player_gold", reg0),
        (overlay_set_color, "$g_presentation_obj_item_select_12", 0xFFFFFF),
      (else_try),
        (overlay_set_color, "$g_presentation_obj_item_select_12", 0xFF0000),
      (try_end),
      (position_set_x, pos1, 680),
      (position_set_y, pos1, 652),
      (overlay_set_position, "$g_presentation_obj_item_select_12", pos1),
      
      (store_add, "$g_presentation_obj_item_select_next", "$g_presentation_obj_item_select_12", 1),

      (player_get_troop_id, ":my_troop_no", ":my_player_no"),
      (try_begin),
        (eq, "$g_presentation_state", 1),
        (call_script, "script_multiplayer_display_available_items_for_troop_and_item_classes", ":my_troop_no", multi_item_class_type_weapons_begin, multi_item_class_type_weapons_end, 781, 474),
        (create_mesh_overlay, reg0, "mesh_mp_inventory_right_arrow"),
        (position_set_x, pos1, 800),
        (position_set_y, pos1, 800),
        (overlay_set_size, reg0, pos1),
        (position_set_x, pos1, 881),
        (position_set_y, pos1, 515),
        (overlay_set_position, reg0, pos1),
      (else_try),
        (eq, "$g_presentation_state", 2),
        (call_script, "script_multiplayer_display_available_items_for_troop_and_item_classes", ":my_troop_no", multi_item_class_type_weapons_begin, multi_item_class_type_weapons_end, 781, 374),
        (create_mesh_overlay, reg0, "mesh_mp_inventory_right_arrow"),
        (position_set_x, pos1, 800),
        (position_set_y, pos1, 800),
        (overlay_set_size, reg0, pos1),
        (position_set_x, pos1, 881),
        (position_set_y, pos1, 415),
        (overlay_set_position, reg0, pos1),
      (else_try),
        (eq, "$g_presentation_state", 3),
        (call_script, "script_multiplayer_display_available_items_for_troop_and_item_classes", ":my_troop_no", multi_item_class_type_weapons_begin, multi_item_class_type_weapons_end, 781, 274),
        (create_mesh_overlay, reg0, "mesh_mp_inventory_right_arrow"),
        (position_set_x, pos1, 800),
        (position_set_y, pos1, 800),
        (overlay_set_size, reg0, pos1),
        (position_set_x, pos1, 881),
        (position_set_y, pos1, 315),
        (overlay_set_position, reg0, pos1),
      (else_try),
        (eq, "$g_presentation_state", 4),
        (call_script, "script_multiplayer_display_available_items_for_troop_and_item_classes", ":my_troop_no", multi_item_class_type_weapons_begin, multi_item_class_type_weapons_end, 781, 174),
        (create_mesh_overlay, reg0, "mesh_mp_inventory_right_arrow"),
        (position_set_x, pos1, 800),
        (position_set_y, pos1, 800),
        (overlay_set_size, reg0, pos1),
        (position_set_x, pos1, 881),
        (position_set_y, pos1, 215),
        (overlay_set_position, reg0, pos1),
      (else_try),
        (eq, "$g_presentation_state", 5),
        (call_script, "script_multiplayer_display_available_items_for_troop_and_item_classes", ":my_troop_no", multi_item_class_type_heads_begin, multi_item_class_type_heads_end, 117, 524),
        (create_mesh_overlay, reg0, "mesh_mp_inventory_left_arrow"),
        (position_set_x, pos1, 800),
        (position_set_y, pos1, 800),
        (overlay_set_size, reg0, pos1),
        (position_set_x, pos1, 106),
        (position_set_y, pos1, 565),
        (overlay_set_position, reg0, pos1),
      (else_try),
        (eq, "$g_presentation_state", 6),
        (call_script, "script_multiplayer_display_available_items_for_troop_and_item_classes", ":my_troop_no", multi_item_class_type_bodies_begin, multi_item_class_type_bodies_end, 117, 424),
        (create_mesh_overlay, reg0, "mesh_mp_inventory_left_arrow"),
        (position_set_x, pos1, 800),
        (position_set_y, pos1, 800),
        (overlay_set_size, reg0, pos1),
        (position_set_x, pos1, 106),
        (position_set_y, pos1, 465),
        (overlay_set_position, reg0, pos1),
      (else_try),
        (eq, "$g_presentation_state", 7),
        (call_script, "script_multiplayer_display_available_items_for_troop_and_item_classes", ":my_troop_no", multi_item_class_type_feet_begin, multi_item_class_type_feet_end, 117, 324),
        (create_mesh_overlay, reg0, "mesh_mp_inventory_left_arrow"),
        (position_set_x, pos1, 800),
        (position_set_y, pos1, 800),
        (overlay_set_size, reg0, pos1),
        (position_set_x, pos1, 106),
        (position_set_y, pos1, 365),
        (overlay_set_position, reg0, pos1),
      (else_try),
        (eq, "$g_presentation_state", 8),
        (call_script, "script_multiplayer_display_available_items_for_troop_and_item_classes", ":my_troop_no", multi_item_class_type_gloves_begin, multi_item_class_type_gloves_end, 117, 224),
        (create_mesh_overlay, reg0, "mesh_mp_inventory_left_arrow"),
        (position_set_x, pos1, 800),
        (position_set_y, pos1, 800),
        (overlay_set_size, reg0, pos1),
        (position_set_x, pos1, 106),
        (position_set_y, pos1, 265),
        (overlay_set_position, reg0, pos1),
      (else_try),
        (eq, "$g_presentation_state", 9),
        (eq, "$g_horses_are_avaliable", 1),
        (call_script, "script_multiplayer_display_available_items_for_troop_and_item_classes", ":my_troop_no", multi_item_class_type_horses_begin, multi_item_class_type_horses_end, 117, 124),
        (create_mesh_overlay, reg0, "mesh_mp_inventory_left_arrow"),
        (position_set_x, pos1, 800),
        (position_set_y, pos1, 800),
        (overlay_set_size, reg0, pos1),
        (position_set_x, pos1, 106),
        (position_set_y, pos1, 165),
        (overlay_set_position, reg0, pos1),
      (try_end),
      (presentation_set_duration, 999999),
      ]),
    
    (ti_on_presentation_mouse_enter_leave,
       [(store_trigger_param_1, ":object"),
        (store_trigger_param_2, ":enter_leave"),

        (try_begin),
          (eq, "$g_close_equipment_selection", 0),
          (try_begin),
            (eq, ":enter_leave", 0),

            (assign, ":item_no", -1), 
            (try_begin),
              (ge, ":object", "$g_presentation_obj_item_select_next"),
              (store_sub, ":tested_object", ":object", "$g_presentation_obj_item_select_next"),
              (store_mod, ":mod_value", ":tested_object", 2),
              (store_sub, ":mod_value", 1, ":mod_value"),
              (val_div, ":tested_object", 2),
              (store_add, ":cur_slot", multi_data_item_button_indices_begin, ":tested_object"),
              (troop_get_slot, ":item_no", "trp_multiplayer_data", ":cur_slot"),

              (assign, ":target_obj", ":object"),
              (val_add, ":target_obj", ":mod_value"),
            (else_try),
              (eq, ":object", "$g_presentation_obj_item_select_1"),
              (store_add, ":player_slot_index", slot_player_selected_item_indices_begin, 1),
              (val_sub, ":player_slot_index", 1),
              (multiplayer_get_my_player, ":my_player_no"),
              (player_get_slot, ":item_no", ":my_player_no", ":player_slot_index"),
              (assign, ":target_obj", "$g_inside_obj_1"),
            (else_try),
              (eq, ":object", "$g_presentation_obj_item_select_2"),
              (store_add, ":player_slot_index", slot_player_selected_item_indices_begin, 2),
              (val_sub, ":player_slot_index", 1),
              (multiplayer_get_my_player, ":my_player_no"),
              (player_get_slot, ":item_no", ":my_player_no", ":player_slot_index"),
              (assign, ":target_obj", "$g_inside_obj_2"),
            (else_try),
              (eq, ":object", "$g_presentation_obj_item_select_3"),
              (store_add, ":player_slot_index", slot_player_selected_item_indices_begin, 3),
              (val_sub, ":player_slot_index", 1),
              (multiplayer_get_my_player, ":my_player_no"),
              (player_get_slot, ":item_no", ":my_player_no", ":player_slot_index"),
              (assign, ":target_obj", "$g_inside_obj_3"),
            (else_try),
              (eq, ":object", "$g_presentation_obj_item_select_4"),
              (store_add, ":player_slot_index", slot_player_selected_item_indices_begin, 4),
              (val_sub, ":player_slot_index", 1),
              (multiplayer_get_my_player, ":my_player_no"),
              (player_get_slot, ":item_no", ":my_player_no", ":player_slot_index"),
              (assign, ":target_obj", "$g_inside_obj_4"),
            (else_try),
              (eq, ":object", "$g_presentation_obj_item_select_5"),
              (store_add, ":player_slot_index", slot_player_selected_item_indices_begin, 5),
              (val_sub, ":player_slot_index", 1),
              (multiplayer_get_my_player, ":my_player_no"),
              (player_get_slot, ":item_no", ":my_player_no", ":player_slot_index"),
              (assign, ":target_obj", "$g_inside_obj_5"),
            (else_try),
              (eq, ":object", "$g_presentation_obj_item_select_6"),
              (store_add, ":player_slot_index", slot_player_selected_item_indices_begin, 6),
              (val_sub, ":player_slot_index", 1),
              (multiplayer_get_my_player, ":my_player_no"),
              (player_get_slot, ":item_no", ":my_player_no", ":player_slot_index"),
              (assign, ":target_obj", "$g_inside_obj_6"),
            (else_try),
              (eq, ":object", "$g_presentation_obj_item_select_7"),
              (store_add, ":player_slot_index", slot_player_selected_item_indices_begin, 7),
              (val_sub, ":player_slot_index", 1),
              (multiplayer_get_my_player, ":my_player_no"),
              (player_get_slot, ":item_no", ":my_player_no", ":player_slot_index"),
              (assign, ":target_obj", "$g_inside_obj_7"),
            (else_try),
              (eq, ":object", "$g_presentation_obj_item_select_8"),
              (store_add, ":player_slot_index", slot_player_selected_item_indices_begin, 8),
              (val_sub, ":player_slot_index", 1),
              (multiplayer_get_my_player, ":my_player_no"),
              (player_get_slot, ":item_no", ":my_player_no", ":player_slot_index"),   
              (assign, ":target_obj", "$g_inside_obj_8"),
            (else_try),
              (eq, ":object", "$g_presentation_obj_item_select_9"),
              (eq, "$g_horses_are_avaliable", 1),
              (store_add, ":player_slot_index", slot_player_selected_item_indices_begin, 9),
              (val_sub, ":player_slot_index", 1),
              (multiplayer_get_my_player, ":my_player_no"),
              (player_get_slot, ":item_no", ":my_player_no", ":player_slot_index"),
              (assign, ":target_obj", "$g_inside_obj_9"),
            (try_end),

            (try_begin),
              (ge, ":item_no", 0),
              (overlay_get_position, pos0, ":target_obj"),
              (multiplayer_get_my_player, ":my_player_no"),
              (player_get_troop_id, ":my_player_troop_no", ":my_player_no"),
              (try_begin),
                (call_script, "script_cf_multiplayer_is_item_default_for_troop", ":item_no", ":my_player_troop_no"),
                (show_item_details, ":item_no", pos0, 0),
              (else_try),
                (store_troop_faction, ":my_player_faction_no", ":my_player_troop_no"),
                (store_sub, ":faction_slot", ":my_player_faction_no", npc_kingdoms_begin),
                (val_add, ":faction_slot", slot_item_multiplayer_faction_price_multipliers_begin),
                (item_get_slot, ":price_multiplier", ":item_no", ":faction_slot"),
                (show_item_details, ":item_no", pos0, ":price_multiplier"),
              (try_end),
              (assign, "$g_current_opened_item_details", ":item_no"),
            (try_end),
          (else_try),
            (assign, ":item_no", -1), 
            (try_begin),
              (ge, ":object", "$g_presentation_obj_item_select_next"),
              (store_sub, ":tested_object", ":object", "$g_presentation_obj_item_select_next"),
              (val_div, ":tested_object", 2),
              (store_add, ":cur_slot", multi_data_item_button_indices_begin, ":tested_object"),
              (troop_get_slot, ":item_no", "trp_multiplayer_data", ":cur_slot"),
            (else_try),
              (eq, ":object", "$g_presentation_obj_item_select_1"),
              (store_add, ":player_slot_index", slot_player_selected_item_indices_begin, 1),
              (val_sub, ":player_slot_index", 1),
              (multiplayer_get_my_player, ":my_player_no"),
              (player_get_slot, ":item_no", ":my_player_no", ":player_slot_index"),
              (assign, ":target_obj", "$g_inside_obj_1"),
            (else_try),
              (eq, ":object", "$g_presentation_obj_item_select_2"),
              (store_add, ":player_slot_index", slot_player_selected_item_indices_begin, 2),
              (val_sub, ":player_slot_index", 1),
              (multiplayer_get_my_player, ":my_player_no"),
              (player_get_slot, ":item_no", ":my_player_no", ":player_slot_index"),
              (assign, ":target_obj", "$g_inside_obj_2"),
            (else_try),
              (eq, ":object", "$g_presentation_obj_item_select_3"),
              (store_add, ":player_slot_index", slot_player_selected_item_indices_begin, 3),
              (val_sub, ":player_slot_index", 1),
              (multiplayer_get_my_player, ":my_player_no"),
              (player_get_slot, ":item_no", ":my_player_no", ":player_slot_index"),
              (assign, ":target_obj", "$g_inside_obj_3"),
            (else_try),
              (eq, ":object", "$g_presentation_obj_item_select_4"),
              (store_add, ":player_slot_index", slot_player_selected_item_indices_begin, 4),
              (val_sub, ":player_slot_index", 1),
              (multiplayer_get_my_player, ":my_player_no"),
              (player_get_slot, ":item_no", ":my_player_no", ":player_slot_index"),
              (assign, ":target_obj", "$g_inside_obj_4"),
            (else_try),
              (eq, ":object", "$g_presentation_obj_item_select_5"),
              (store_add, ":player_slot_index", slot_player_selected_item_indices_begin, 5),
              (val_sub, ":player_slot_index", 1),
              (multiplayer_get_my_player, ":my_player_no"),
              (player_get_slot, ":item_no", ":my_player_no", ":player_slot_index"),
              (assign, ":target_obj", "$g_inside_obj_5"),
            (else_try),
              (eq, ":object", "$g_presentation_obj_item_select_6"),
              (store_add, ":player_slot_index", slot_player_selected_item_indices_begin, 6),
              (val_sub, ":player_slot_index", 1),
              (multiplayer_get_my_player, ":my_player_no"),
              (player_get_slot, ":item_no", ":my_player_no", ":player_slot_index"),
              (assign, ":target_obj", "$g_inside_obj_6"),
            (else_try),
              (eq, ":object", "$g_presentation_obj_item_select_7"),
              (store_add, ":player_slot_index", slot_player_selected_item_indices_begin, 7),
              (val_sub, ":player_slot_index", 1),
              (multiplayer_get_my_player, ":my_player_no"),
              (player_get_slot, ":item_no", ":my_player_no", ":player_slot_index"),
              (assign, ":target_obj", "$g_inside_obj_7"),
            (else_try),
              (eq, ":object", "$g_presentation_obj_item_select_8"),
              (store_add, ":player_slot_index", slot_player_selected_item_indices_begin, 8),
              (val_sub, ":player_slot_index", 1),
              (multiplayer_get_my_player, ":my_player_no"),
              (player_get_slot, ":item_no", ":my_player_no", ":player_slot_index"),   
              (assign, ":target_obj", "$g_inside_obj_8"),
            (else_try),
              (eq, ":object", "$g_presentation_obj_item_select_9"),
              (eq, "$g_horses_are_avaliable", 1),
              (store_add, ":player_slot_index", slot_player_selected_item_indices_begin, 9),
              (val_sub, ":player_slot_index", 1),
              (multiplayer_get_my_player, ":my_player_no"),
              (player_get_slot, ":item_no", ":my_player_no", ":player_slot_index"),
              (assign, ":target_obj", "$g_inside_obj_9"),
            (try_end),

            (try_begin),
              (eq, "$g_current_opened_item_details", ":item_no"),
              (close_item_details),
              (assign, "$g_current_opened_item_details", -1),
            (try_end),
          (try_end),
        (else_try),
          (assign, "$g_close_equipment_selection", 0),
          (presentation_set_duration, 0),
        (try_end),
      ]),
        
    (ti_on_presentation_event_state_change,
     [(store_trigger_param_1, ":object"),
      (store_trigger_param_2, ":value"),
      (multiplayer_get_my_player, ":my_player_no"),
      (player_get_troop_id, ":my_troop_no", ":my_player_no"),

      (try_begin),
        (eq, "$g_close_equipment_selection", 0),
        (try_begin),
          (eq, "$g_presentation_state", 0),
          (try_begin),
            (eq, ":object", "$g_presentation_obj_item_select_1"),
            (assign, "$g_presentation_state", 1),
            (presentation_set_duration, 0),
            (start_presentation, "prsnt_multiplayer_item_select"),
          (else_try),
            (eq, ":object", "$g_presentation_obj_item_select_2"),
            (assign, "$g_presentation_state", 2),
            (presentation_set_duration, 0),
            (start_presentation, "prsnt_multiplayer_item_select"),
          (else_try),
            (eq, ":object", "$g_presentation_obj_item_select_3"),
            (assign, "$g_presentation_state", 3),
            (presentation_set_duration, 0),
            (start_presentation, "prsnt_multiplayer_item_select"),
          (else_try),
            (eq, ":object", "$g_presentation_obj_item_select_4"),
            (assign, "$g_presentation_state", 4),
            (presentation_set_duration, 0),
            (start_presentation, "prsnt_multiplayer_item_select"),
          (else_try),
            (eq, ":object", "$g_presentation_obj_item_select_5"),
            (assign, "$g_presentation_state", 5),
            (presentation_set_duration, 0),
            (start_presentation, "prsnt_multiplayer_item_select"),
          (else_try),
            (eq, ":object", "$g_presentation_obj_item_select_6"),
            (assign, "$g_presentation_state", 6),
            (presentation_set_duration, 0),
            (start_presentation, "prsnt_multiplayer_item_select"),
          (else_try),
            (eq, ":object", "$g_presentation_obj_item_select_7"),
            (assign, "$g_presentation_state", 7),
            (presentation_set_duration, 0),
            (start_presentation, "prsnt_multiplayer_item_select"),
          (else_try),
            (eq, ":object", "$g_presentation_obj_item_select_8"),
            (assign, "$g_presentation_state", 8),
            (presentation_set_duration, 0),
            (start_presentation, "prsnt_multiplayer_item_select"),
          (else_try),
            (eq, ":object", "$g_presentation_obj_item_select_9"),
            (eq, "$g_horses_are_avaliable", 1),
            (assign, "$g_presentation_state", 9),
            (presentation_set_duration, 0),
            (start_presentation, "prsnt_multiplayer_item_select"),
          (try_end),
        (else_try),
          (gt, "$g_presentation_state", 0),        
          (store_sub, ":tested_object", ":object", "$g_presentation_obj_item_select_next"),
          (val_div, ":tested_object", 2),
          (assign, ":end_cond", multi_data_item_button_indices_end),
          (try_for_range, ":cur_slot", multi_data_item_button_indices_begin, ":end_cond"),
            (neg|troop_slot_eq, "trp_multiplayer_data", ":cur_slot", -1),
            (store_sub, ":button_id", ":cur_slot", multi_data_item_button_indices_begin),
            (eq, ":tested_object", ":button_id"),
            (troop_get_slot, ":item_no", "trp_multiplayer_data", ":cur_slot"),

            (store_add, ":player_slot_index", slot_player_selected_item_indices_begin, "$g_presentation_state"),
            (val_sub, ":player_slot_index", 1),
            (player_set_slot, ":my_player_no", ":player_slot_index", ":item_no"),

            (player_get_gold, ":player_gold", ":my_player_no"),
            (call_script, "script_multiplayer_calculate_cur_selected_items_cost", ":my_player_no", 1),
            (overlay_set_text, "$g_presentation_obj_item_select_12", "str_total_item_cost_reg0"),
            (try_begin),
              (ge, ":player_gold", reg0),
              (overlay_set_color, "$g_presentation_obj_item_select_12", 0xFFFFFF),
            (else_try),
              (overlay_set_color, "$g_presentation_obj_item_select_12", 0xFF0000),
            (try_end),
        
            (assign, ":end_cond", 0), #break
          (try_end),
          (presentation_set_duration, 0),
          (assign, "$g_presentation_state", 0),
          (start_presentation, "prsnt_multiplayer_item_select"),
        (try_end),
        (try_begin),
          (eq, ":object", "$g_presentation_obj_item_select_10"),
          (call_script, "script_multiplayer_set_default_item_selections_for_troop", ":my_troop_no"),
          (presentation_set_duration, 0),
          (assign, "$g_presentation_state", 0),
          (start_presentation, "prsnt_multiplayer_item_select"),
        (else_try),
          (eq, ":object", "$g_presentation_obj_item_select_11"),
          (call_script, "script_multiplayer_send_item_selections"),
          (presentation_set_duration, 0),

          (try_begin),
            (try_begin),
              (eq, "$g_multiplayer_game_type", multiplayer_game_type_siege),
              (gt, "$g_multiplayer_number_of_respawn_count", 0),
          
              (ge, "$g_my_spawn_count", "$g_multiplayer_number_of_respawn_count"),
         
              (multiplayer_get_my_player, ":my_player_no"),
              (player_get_team_no, ":my_player_team", ":my_player_no"),

              (this_or_next|eq, ":my_player_team", 0),
              (ge, "$g_my_spawn_count", 999),
        
              (assign, "$g_show_no_more_respawns_remained", 1),
            (else_try),
              (assign, "$g_show_no_more_respawns_remained", 0),
            (try_end),

            (eq, "$g_show_no_more_respawns_remained", 1),

            (store_mission_timer_a, "$g_multiplayer_respawn_start_time"),
            (start_presentation, "prsnt_multiplayer_respawn_time_counter"),
          (try_end),      
        (else_try),
          (eq, ":object", "$g_presentation_obj_item_select_13"),
          (assign, "$g_multiplayer_bot_type_1_wanted", ":value"),
          (multiplayer_send_2_int_to_server, multiplayer_event_set_bot_selection, slot_player_bot_type_1_wanted, ":value"),
        (else_try),
          (eq, ":object", "$g_presentation_obj_item_select_14"),
          (assign, "$g_multiplayer_bot_type_2_wanted", ":value"),
          (multiplayer_send_2_int_to_server, multiplayer_event_set_bot_selection, slot_player_bot_type_2_wanted, ":value"),
        (else_try),
          (eq, ":object", "$g_presentation_obj_item_select_15"),
          (assign, "$g_multiplayer_bot_type_3_wanted", ":value"),
          (multiplayer_send_2_int_to_server, multiplayer_event_set_bot_selection, slot_player_bot_type_3_wanted, ":value"),
        (else_try),
          (eq, ":object", "$g_presentation_obj_item_select_16"),
          (assign, "$g_multiplayer_bot_type_4_wanted", ":value"),
          (multiplayer_send_2_int_to_server, multiplayer_event_set_bot_selection, slot_player_bot_type_4_wanted, ":value"),
        (try_end),
      (else_try),
        (assign, "$g_close_equipment_selection", 0),
        (presentation_set_duration, 0),
      (try_end),
      ]),
    
    (ti_on_presentation_mouse_press,
     [(store_trigger_param_1, ":object"),
      (store_trigger_param_2, ":mouse_state"),

      (try_begin),
        (eq, "$g_close_equipment_selection", 0),
        (try_begin),
          (eq, ":mouse_state", 1), #right click (clears the item slot)
          (try_begin),
            (eq, "$g_presentation_state", 0),
            (multiplayer_get_my_player, ":my_player_no"),
            (try_begin),
              (eq, ":object", "$g_presentation_obj_item_select_1"),
              (store_add, ":selected_item_index", slot_player_selected_item_indices_begin, 0),
              (player_set_slot, ":my_player_no", ":selected_item_index", -1),
              (presentation_set_duration, 0),
              (assign, "$g_presentation_state", 0),
              (start_presentation, "prsnt_multiplayer_item_select"),
            (else_try),
              (eq, ":object", "$g_presentation_obj_item_select_2"),
              (store_add, ":selected_item_index", slot_player_selected_item_indices_begin, 1),
              (player_set_slot, ":my_player_no", ":selected_item_index", -1),
              (presentation_set_duration, 0),
              (assign, "$g_presentation_state", 0),
              (start_presentation, "prsnt_multiplayer_item_select"),
            (else_try),
              (eq, ":object", "$g_presentation_obj_item_select_3"),
              (store_add, ":selected_item_index", slot_player_selected_item_indices_begin, 2),
              (player_set_slot, ":my_player_no", ":selected_item_index", -1),
              (presentation_set_duration, 0),
              (assign, "$g_presentation_state", 0),
              (start_presentation, "prsnt_multiplayer_item_select"),
            (else_try),
              (eq, ":object", "$g_presentation_obj_item_select_4"),
              (store_add, ":selected_item_index", slot_player_selected_item_indices_begin, 3),
              (player_set_slot, ":my_player_no", ":selected_item_index", -1),
              (presentation_set_duration, 0),
              (assign, "$g_presentation_state", 0),
              (start_presentation, "prsnt_multiplayer_item_select"),
            (else_try),
              (eq, ":object", "$g_presentation_obj_item_select_5"),
              (store_add, ":selected_item_index", slot_player_selected_item_indices_begin, 4),
              (player_set_slot, ":my_player_no", ":selected_item_index", -1),
              (presentation_set_duration, 0),
              (assign, "$g_presentation_state", 0),
              (start_presentation, "prsnt_multiplayer_item_select"),
            (else_try),
              (eq, ":object", "$g_presentation_obj_item_select_6"),
              (store_add, ":selected_item_index", slot_player_selected_item_indices_begin, 5),
              (player_set_slot, ":my_player_no", ":selected_item_index", -1),
              (presentation_set_duration, 0),
              (assign, "$g_presentation_state", 0),
              (start_presentation, "prsnt_multiplayer_item_select"),
            (else_try),
              (eq, ":object", "$g_presentation_obj_item_select_7"),
              (store_add, ":selected_item_index", slot_player_selected_item_indices_begin, 6),
              (player_set_slot, ":my_player_no", ":selected_item_index", -1),
              (presentation_set_duration, 0),
              (assign, "$g_presentation_state", 0),
              (start_presentation, "prsnt_multiplayer_item_select"),
            (else_try),
              (eq, ":object", "$g_presentation_obj_item_select_8"),
              (store_add, ":selected_item_index", slot_player_selected_item_indices_begin, 7),
              (player_set_slot, ":my_player_no", ":selected_item_index", -1),
              (presentation_set_duration, 0),
              (assign, "$g_presentation_state", 0),
              (start_presentation, "prsnt_multiplayer_item_select"),
            (else_try),
              (eq, ":object", "$g_presentation_obj_item_select_9"),
              (eq, "$g_horses_are_avaliable", 1),
              (store_add, ":selected_item_index", slot_player_selected_item_indices_begin, 8),
              (player_set_slot, ":my_player_no", ":selected_item_index", -1),
              (presentation_set_duration, 0),
              (assign, "$g_presentation_state", 0),
              (start_presentation, "prsnt_multiplayer_item_select"),
            (try_end),
          (else_try),
            (gt, "$g_presentation_state", 0),
            (presentation_set_duration, 0),
            (assign, "$g_presentation_state", 0),
            (start_presentation, "prsnt_multiplayer_item_select"),      
          (try_end),
        (try_end),
      (else_try),
        (assign, "$g_close_equipment_selection", 0),
        (presentation_set_duration, 0),
      (try_end),      
      ]),
    
    (ti_on_presentation_run,
     [(store_trigger_param_1, ":cur_time"),

## this causes an error sometimes
##      (multiplayer_get_my_player, ":my_player_no"),
##      (player_get_gold, ":player_gold", ":my_player_no"),
##      (call_script, "script_multiplayer_calculate_cur_selected_items_cost", ":my_player_no", 1),      
##      (try_begin),
##        (ge, ":player_gold", reg0),
##        (overlay_set_color, "$g_presentation_obj_item_select_12", 0xFFFFFF),
##      (else_try),
##        (overlay_set_color, "$g_presentation_obj_item_select_12", 0xFF0000),
##      (try_end),

      (try_begin),
        (eq, "$g_close_equipment_selection", 0),
        (try_begin),
          (this_or_next|key_clicked, key_escape),
          (key_clicked, key_xbox_start),
          (try_begin),
            (neq, "$g_current_opened_item_details", -1),
            (close_item_details),
            (assign, "$g_current_opened_item_details", -1),
          (try_end),
          (gt, ":cur_time", 200),
          (presentation_set_duration, 0),
        (try_end),
      (else_try),
        (assign, "$g_close_equipment_selection", 0),
        #daha sonra buraya siege modundaysa ve takimini yeni degistirdigi icin spawn olamiyorsa start_presentation, spawn_counter satirini ekle sdsd.
        (presentation_set_duration, 0),
      (try_end),
      ]),
    ]),

  ("multiplayer_message_1", prsntf_read_only|prsntf_manual_end_only, 0, [
    (ti_on_presentation_load, [
      (set_fixed_point_multiplier, 1000),
      (try_begin),
        (eq, "$g_multiplayer_message_type", multiplayer_message_type_round_result_in_battle_mode),
        (assign, ":winner_agent_team", "$g_multiplayer_message_value_1"),

        (try_begin),
          (eq, ":winner_agent_team", -1),
          (assign, ":text_font_color", 0xFFFFFFFF),

          (str_store_string, s0, "str_round_draw_no_one_remained"),
        (else_try),
          (try_begin), #for spectators initializing, we assume spectators are fan of team0 so coloring is applied as they are at team0.
            (eq, ":winner_agent_team", 0),
            (assign, ":text_font_color", 0xFF33DD11),
          (else_try),
            (assign, ":text_font_color", 0xFFFF4422),
          (try_end), #initializing ends
          (try_begin),
            (lt, "$my_team_at_start_of_round", 2),
            (try_begin),
              (eq, "$my_team_at_start_of_round", ":winner_agent_team"),
              (assign, ":text_font_color", 0xFF33DD11),
            (else_try),
              (assign, ":text_font_color", 0xFFFF4422),
            (try_end),
          (try_end),

          (team_get_faction, ":faction_of_winner_team", ":winner_agent_team"),
          (str_store_faction_name, s1, ":faction_of_winner_team"),
          (str_store_string, s0, "str_s1_won_round"),
        (try_end),

        (create_text_overlay, "$g_multiplayer_message_1", s0, tf_center_justify|tf_with_outline),
        (overlay_set_color, "$g_multiplayer_message_1", ":text_font_color"),
        (try_begin),
          (neq, ":winner_agent_team", -1),
          (position_set_x, pos1, 375), #375
        (else_try),
          (position_set_x, pos1, 400), #400
        (try_end),
        (position_set_x, pos1, 500), #new
        (position_set_y, pos1, 400),
        (overlay_set_position, "$g_multiplayer_message_1", pos1),
        (position_set_x, pos1, 2000),
        (position_set_y, pos1, 2000),
        (overlay_set_size, "$g_multiplayer_message_1", pos1),
        (presentation_set_duration, 300),
      (else_try),
        (eq, "$g_multiplayer_message_type", multiplayer_message_type_capture_the_flag_score),

        (agent_get_team, ":winner_agent_team", "$g_multiplayer_message_value_1"), #assign given agent's team to winner agent team.
        (team_get_faction, ":winner_agent_faction", ":winner_agent_team"),
        (str_store_faction_name, s1, ":winner_agent_faction"),

        (try_begin), #for spectators initializing, we assume spectators are fan of team0 so coloring is applied as they are at team0.
          (eq, ":winner_agent_team", 0),
          (assign, ":text_font_color", 0xFF33DD11),
        (else_try),
          (assign, ":text_font_color", 0xFFFF4422),
        (try_end), #initializing ends
        (multiplayer_get_my_player, ":my_player_no"),
        (try_begin),
          (ge, ":my_player_no", 0),
          (player_get_agent_id, ":my_player_agent", ":my_player_no"),
          (try_begin),
            (ge, ":my_player_agent", 0),
            (agent_get_team, ":my_player_team", ":my_player_agent"),
            (try_begin),
              (eq, ":my_player_team", ":winner_agent_team"),
              (assign, ":text_font_color", 0xFF33DD11),
              (play_sound, "snd_team_scored_a_point"),
            (else_try),
              (assign, ":text_font_color", 0xFFFF4422),
              (play_sound, "snd_enemy_scored_a_point"),
            (try_end),
          (try_end),
        (try_end),      

        (str_store_string, s0, "str_s1_captured_flag"),
        (create_text_overlay, "$g_multiplayer_message_1", s0, tf_center_justify|tf_with_outline),
        (overlay_set_color, "$g_multiplayer_message_1", ":text_font_color"),
        (position_set_x, pos1, 350),
        (position_set_x, pos1, 500), #new
        (position_set_y, pos1, 400),
        (overlay_set_position, "$g_multiplayer_message_1", pos1),
        (position_set_x, pos1, 2000),
        (position_set_y, pos1, 2000),
        (overlay_set_size, "$g_multiplayer_message_1", pos1),
        (presentation_set_duration, 400),
      (else_try),
        (eq, "$g_multiplayer_message_type", multiplayer_message_type_flag_returned_home),

        (try_begin),
          (ge, "$g_multiplayer_message_value_1", 0),
          (agent_get_team, ":returned_flag_agent_team", "$g_multiplayer_message_value_1"), 
          (team_get_faction, ":returned_flag_agent_faction", ":returned_flag_agent_team"),
          (str_store_faction_name, s1, ":returned_flag_agent_faction"),
          (str_store_string, s0, "str_s1_returned_flag"),
        (else_try),
          (val_add, "$g_multiplayer_message_value_1", 1),
          (val_mul, "$g_multiplayer_message_value_1", -1),
          (assign, ":returned_flag_agent_team", "$g_multiplayer_message_value_1"),
          (team_get_faction, ":returned_flag_agent_faction", ":returned_flag_agent_team"),
          (str_store_faction_name, s1, ":returned_flag_agent_faction"),
          (str_store_string, s0, "str_s1_auto_returned_flag"),
        (try_end),

        (multiplayer_get_my_player, ":my_player_no"),
        (try_begin),
          (ge, ":my_player_no", 0),
          (player_get_agent_id, ":my_player_agent", ":my_player_no"),
          (try_begin),
            (ge, ":my_player_agent", 0),
            (play_sound, "snd_flag_returned"),
          (try_end),
        (try_end),
        (assign, ":text_font_color", 0xFFFFFFFF),

        (create_text_overlay, "$g_multiplayer_message_1", s0, tf_center_justify|tf_with_outline),
        (overlay_set_color, "$g_multiplayer_message_1", ":text_font_color"),
        (position_set_x, pos1, 325),
        (position_set_y, pos1, 400),
        (position_set_x, pos1, 500), #new
        (overlay_set_position, "$g_multiplayer_message_1", pos1),
        (position_set_x, pos1, 2000),
        (position_set_y, pos1, 2000),
        (overlay_set_size, "$g_multiplayer_message_1", pos1),
        (presentation_set_duration, 400),
      (else_try),
        (eq, "$g_multiplayer_message_type", multiplayer_message_type_capture_the_flag_stole),

        (agent_get_team, ":stolen_flag_agent_team", "$g_multiplayer_message_value_1"), 
        (team_get_faction, ":stolen_flag_agent_faction", ":stolen_flag_agent_team"),
        (str_store_faction_name, s1, ":stolen_flag_agent_faction"),

        (assign, ":text_font_color", 0xFFFFFFFF),
        (multiplayer_get_my_player, ":my_player_no"),
        (try_begin),
          (ge, ":my_player_no", 0),
          (player_get_agent_id, ":my_player_agent", ":my_player_no"),
          (try_begin),
            (ge, ":my_player_agent", 0),
            (agent_get_team, ":my_player_team", ":my_player_agent"),
            (try_begin),
              (eq, ":my_player_team", ":stolen_flag_agent_team"),
              (play_sound, "snd_enemy_flag_taken"),
            (else_try),
              (play_sound, "snd_your_flag_taken"),
            (try_end),
          (try_end),
        (try_end),

        (str_store_string, s0, "str_s1_taken_flag"),
        (create_text_overlay, "$g_multiplayer_message_1", s0, tf_center_justify|tf_with_outline),
        (overlay_set_color, "$g_multiplayer_message_1", ":text_font_color"),
        (position_set_x, pos1, 365),
        (position_set_x, pos1, 500), #new
        (position_set_y, pos1, 400),
        (overlay_set_position, "$g_multiplayer_message_1", pos1),
        (position_set_x, pos1, 2000),
        (position_set_y, pos1, 2000),
        (overlay_set_size, "$g_multiplayer_message_1", pos1),
        (presentation_set_duration, 400),
      (else_try),
        (eq, "$g_multiplayer_message_type", multiplayer_message_type_flag_captured),
      
        (store_div, ":winner_agent_team", "$g_multiplayer_message_value_1", 100),
        (store_mod, reg0, "$g_multiplayer_message_value_1", 100),
        (val_sub, ":winner_agent_team", 1),

        (try_begin), #for spectators initializing, we assume spectators are fan of team0 so coloring is applied as they are at team0.
          (eq, ":winner_agent_team", 0),
          (assign, ":text_font_color", 0xFF33DD11),
        (else_try),
          (assign, ":text_font_color", 0xFFFF4422),
        (try_end), #initializing ends
        (multiplayer_get_my_player, ":my_player_no"),
        (try_begin),
          (ge, ":my_player_no", 0),
          (player_get_agent_id, ":my_player_agent", ":my_player_no"),
          (try_begin),
            (ge, ":my_player_agent", 0),
            (agent_get_team, ":my_player_team", ":my_player_agent"),
            (try_begin),
              (eq, ":my_player_team", ":winner_agent_team"),
              (assign, ":text_font_color", 0xFF33DD11),
              (play_sound, "snd_team_scored_a_point"),
            (else_try),
              (assign, ":text_font_color", 0xFFFF4422),
              (play_sound, "snd_enemy_scored_a_point"),
            (try_end),
          (try_end),
        (try_end),

        (team_get_faction, ":winner_agent_faction", ":winner_agent_team"),
        (str_store_faction_name, s1, ":winner_agent_faction"),

        (str_store_string, s0, "str_s1_captured_flag_reg0"),
        (create_text_overlay, "$g_multiplayer_message_1", s0, tf_center_justify|tf_with_outline),
        (overlay_set_color, "$g_multiplayer_message_1", ":text_font_color"),
        (position_set_x, pos1, 345),
        (position_set_x, pos1, 500), #new
        (position_set_y, pos1, 400),
        (overlay_set_position, "$g_multiplayer_message_1", pos1),
        (position_set_x, pos1, 2000),
        (position_set_y, pos1, 2000),
        (overlay_set_size, "$g_multiplayer_message_1", pos1),
        (presentation_set_duration, 400),
      (else_try),
        (eq, "$g_multiplayer_message_type", multiplayer_message_type_flag_is_pulling),
      
        (store_div, ":winner_agent_team", "$g_multiplayer_message_value_1", 100),
        (store_mod, reg0, "$g_multiplayer_message_value_1", 100),
        (val_sub, ":winner_agent_team", 1),

        (multiplayer_get_my_player, ":my_player_no"),
        (try_begin),
          (ge, ":my_player_no", 0),
          (player_get_agent_id, ":my_player_agent", ":my_player_no"),
          (try_begin),
            (ge, ":my_player_agent", 0),
            (agent_get_team, ":my_player_team", ":my_player_agent"),
            (try_begin),
              (eq, ":my_player_team", ":winner_agent_team"),
              (play_sound, "snd_enemy_flag_taken"),
            (else_try),
              (play_sound, "snd_your_flag_taken"),
            (try_end),
          (try_end),
        (try_end),
        (assign, ":text_font_color", 0xFFFFFFFF),

        (team_get_faction, ":winner_agent_faction", ":winner_agent_team"),
        (str_store_faction_name, s1, ":winner_agent_faction"),      

        (str_store_string, s0, "str_s1_pulling_flag_reg0"),
        (create_text_overlay, "$g_multiplayer_message_1", s0, tf_center_justify|tf_with_outline),
        (overlay_set_color, "$g_multiplayer_message_1", ":text_font_color"),
        (position_set_x, pos1, 345),
        (position_set_x, pos1, 500), #new
        (position_set_y, pos1, 400),
        (overlay_set_position, "$g_multiplayer_message_1", pos1),
        (position_set_x, pos1, 2000),
        (position_set_y, pos1, 2000),
        (overlay_set_size, "$g_multiplayer_message_1", pos1),
        (presentation_set_duration, 400),
      (else_try),
        (eq, "$g_multiplayer_message_type", multiplayer_message_type_flag_neutralized),      

        (store_div, ":winner_agent_team", "$g_multiplayer_message_value_1", 100),
        (store_mod, reg0, "$g_multiplayer_message_value_1", 100),
        (val_sub, ":winner_agent_team", 1),
        (multiplayer_get_my_player, ":my_player_no"),
        (try_begin),
          (ge, ":my_player_no", 0),
          (player_get_agent_id, ":my_player_agent", ":my_player_no"),
          (try_begin),
            (ge, ":my_player_agent", 0),
            (play_sound, "snd_flag_returned"),
          (try_end),
        (try_end),

        (try_begin), #for spectators initializing, we assume spectators are fan of team0 so coloring is applied as they are at team0.
          (eq, ":winner_agent_team", 0),
          (assign, ":text_font_color", 0xFF33DD11),
        (else_try),
          (assign, ":text_font_color", 0xFFFF4422),
        (try_end), #initializing ends
        (multiplayer_get_my_player, ":my_player_no"),
        (try_begin),
          (ge, ":my_player_no", 0),
          (player_get_agent_id, ":my_player_agent", ":my_player_no"),
          (try_begin),
            (ge, ":my_player_agent", 0),
            (agent_get_team, ":my_player_team", ":my_player_agent"),
            (try_begin),
              (eq, ":my_player_team", ":winner_agent_team"),
              (assign, ":text_font_color", 0xFF33DD11),
            (else_try),
              (assign, ":text_font_color", 0xFFFF4422),
            (try_end),
          (try_end),
        (try_end),

        (team_get_faction, ":winner_agent_faction", ":winner_agent_team"),
        (str_store_faction_name, s1, ":winner_agent_faction"),

        (str_store_string, s0, "str_s1_neutralized_flag_reg0"),
        (create_text_overlay, "$g_multiplayer_message_1", s0, tf_center_justify|tf_with_outline),
        (overlay_set_color, "$g_multiplayer_message_1", ":text_font_color"),
        (position_set_x, pos1, 345),
        (position_set_x, pos1, 500), #new
        (position_set_y, pos1, 400),
        (overlay_set_position, "$g_multiplayer_message_1", pos1),
        (position_set_x, pos1, 2000),
        (position_set_y, pos1, 2000),
        (overlay_set_size, "$g_multiplayer_message_1", pos1),
        (presentation_set_duration, 400),
      (else_try),     
        (eq, "$g_multiplayer_message_type", multiplayer_message_type_round_result_in_siege_mode),      

        (assign, ":winner_agent_team", "$g_multiplayer_message_value_1"),

        (try_begin), #for spectators initializing, we assume spectators are fan of team0 so coloring is applied as they are at team0.
          (eq, ":winner_agent_team", 0),
          (assign, ":text_font_color", 0xFF33DD11),
        (else_try),
          (assign, ":text_font_color", 0xFFFF4422),
        (try_end), #initializing ends
        (multiplayer_get_my_player, ":my_player_no"),
        (try_begin),
          (ge, ":my_player_no", 0),
          (player_get_agent_id, ":my_player_agent", ":my_player_no"),
          (try_begin),
            (ge, ":my_player_agent", 0),
            (agent_get_team, ":my_player_team", ":my_player_agent"),
            (try_begin),
              (eq, ":my_player_team", ":winner_agent_team"),
              (assign, ":text_font_color", 0xFF33DD11),
            (else_try),
              (assign, ":text_font_color", 0xFFFF4422),
            (try_end),
          (try_end),
        (try_end),

        (try_begin),
          (eq, "$g_multiplayer_message_value_1", 0),
          (str_store_string, s0, "str_s1_defended_castle"),
        (else_try),
          (eq, "$g_multiplayer_message_value_1", 1),
          (str_store_string, s0, "str_s1_captured_castle"),
        (else_try),
          (str_store_string, s0, "str_round_draw"),
          (assign, ":text_font_color", 0xFFFFFFFF),
        (try_end),
      
        (create_text_overlay, "$g_multiplayer_message_1", s0, tf_center_justify|tf_with_outline),
        (overlay_set_color, "$g_multiplayer_message_1", ":text_font_color"),
        (try_begin),
          (neq, "$g_multiplayer_message_value_1", -1),
          (position_set_x, pos1, 325),
        (else_try),
          (position_set_x, pos1, 400),
        (try_end),
        (position_set_x, pos1, 500), #new
        (position_set_y, pos1, 400),
        (overlay_set_position, "$g_multiplayer_message_1", pos1),
        (position_set_x, pos1, 2000),
        (position_set_y, pos1, 2000),
        (overlay_set_size, "$g_multiplayer_message_1", pos1),
        (presentation_set_duration, 400),
      (else_try),
        (eq, "$g_multiplayer_message_type", multiplayer_message_type_round_draw),
      
        (assign, ":text_font_color", 0xFFFFFFFF),
        (str_store_string, s0, "str_round_draw"),
        (create_text_overlay, "$g_multiplayer_message_1", s0, tf_center_justify|tf_with_outline),
        (overlay_set_color, "$g_multiplayer_message_1", ":text_font_color"),
        (position_set_x, pos1, 375),
        (position_set_x, pos1, 500), #new
        (position_set_y, pos1, 400),
        (overlay_set_position, "$g_multiplayer_message_1", pos1),
        (position_set_x, pos1, 2000),
        (position_set_y, pos1, 2000),
        (overlay_set_size, "$g_multiplayer_message_1", pos1),
        (presentation_set_duration, 400),
      (else_try),
        (eq, "$g_multiplayer_message_type", multiplayer_message_type_start_death_mode),
      
        (assign, ":text_font_color", 0xFFFFFFFF),
        (str_store_string, s0, "str_death_mode_started"),
        (create_text_overlay, "$g_multiplayer_message_1", s0, tf_center_justify|tf_with_outline),
        (overlay_set_color, "$g_multiplayer_message_1", ":text_font_color"),
        (position_set_x, pos1, 350),
        (position_set_x, pos1, 500), #new
        (position_set_y, pos1, 400),
        (overlay_set_position, "$g_multiplayer_message_1", pos1),
        (position_set_x, pos1, 2000),
        (position_set_y, pos1, 2000),
        (overlay_set_size, "$g_multiplayer_message_1", pos1),
        (presentation_set_duration, 400),      
      (else_try),
        (eq, "$g_multiplayer_message_type", multiplayer_message_type_target_destroyed),

        (try_begin),
          (lt, "$g_multiplayer_message_value_1", 0),
          (val_mul, "$g_multiplayer_message_value_1", -1),
          (assign, ":scene_prop_team", 0),

          (team_get_faction, ":faction_of_winner_team", 1),
          (str_store_faction_name, s1, ":faction_of_winner_team"),
        (else_try),
          (assign, ":scene_prop_team", 1),

          (team_get_faction, ":faction_of_winner_team", 0),
          (str_store_faction_name, s1, ":faction_of_winner_team"),
        (try_end),

        (try_begin), #for spectators initializing, we assume spectators are fan of team0 so coloring is applied as they are at team0.
          (eq, "$g_multiplayer_message_value_1", 1),
          (assign, ":text_font_color", 0xFF33DD11),
        (else_try),
          (assign, ":text_font_color", 0xFFFF4422),
        (try_end), #initializing ends
        (multiplayer_get_my_player, ":my_player_no"),
        (try_begin),
          (ge, ":my_player_no", 0),
          (try_begin),
            (multiplayer_get_my_player, ":my_player_no"),
            (player_get_team_no, ":my_team_no", ":my_player_no"),
            (neq, ":scene_prop_team", ":my_team_no"), #if scene prop and I have different teams this means we won
            (assign, ":text_font_color", 0xFF33DD11),
          (else_try),
            (assign, ":text_font_color", 0xFFFF4422),
          (try_end),
        (try_end),

        (try_begin),
          (eq, "$g_multiplayer_message_value_1", 9),
          (str_store_string, s0, "str_s1_destroyed_all_targets"),
        (else_try),
          (eq, "$g_multiplayer_message_value_1", 1),
          (str_store_string, s0, "str_s1_destroyed_catapult"),
        (else_try),
          (eq, "$g_multiplayer_message_value_1", 2),
          (str_store_string, s0, "str_s1_destroyed_trebuchet"),
        (try_end),
      
        (create_text_overlay, "$g_multiplayer_message_1", s0, tf_center_justify|tf_with_outline),
        (overlay_set_color, "$g_multiplayer_message_1", ":text_font_color"),
        (position_set_x, pos1, 350),
        (position_set_x, pos1, 500), #new
        (position_set_y, pos1, 400),
        (overlay_set_position, "$g_multiplayer_message_1", pos1),
        (position_set_x, pos1, 2000),
        (position_set_y, pos1, 2000),
        (overlay_set_size, "$g_multiplayer_message_1", pos1),
        (presentation_set_duration, 400),
      (else_try),
        (eq, "$g_multiplayer_message_type", multiplayer_message_type_defenders_saved_n_targets),

        (try_begin), #for spectators initializing, we assume spectators are fan of team0 so coloring is applied as they are at team0.
          (eq, "$g_defender_team", 0),
          (assign, ":text_font_color", 0xFF33DD11),
        (else_try),
          (assign, ":text_font_color", 0xFFFF4422),
        (try_end), #initializing ends
        (multiplayer_get_my_player, ":my_player_no"),
        (try_begin),
          (ge, ":my_player_no", 0),
          (player_get_agent_id, ":my_player_agent", ":my_player_no"),
          (try_begin),
            (ge, ":my_player_agent", 0),
            (agent_get_team, ":my_player_team", ":my_player_agent"),
            (try_begin),
              (eq, ":my_player_team", "$g_defender_team"),
              (assign, ":text_font_color", 0xFF33DD11),
            (else_try),
              (assign, ":text_font_color", 0xFFFF4422),
            (try_end),
          (try_end),
        (try_end),

        (assign, ":num_targets_saved", "$g_multiplayer_message_value_1"),

        (team_get_faction, ":faction_of_winner_team", "$g_defender_team"),
        (str_store_faction_name, s1, ":faction_of_winner_team"),

        (try_begin),
          (eq, ":num_targets_saved", 1),
          (str_store_string, s0, "str_s1_saved_1_target"),
        (else_try),
          (eq, ":num_targets_saved", 2),
          (str_store_string, s0, "str_s1_saved_2_targets"),
        (try_end),
      
        (create_text_overlay, "$g_multiplayer_message_1", s0, tf_center_justify|tf_with_outline),
        (overlay_set_color, "$g_multiplayer_message_1", ":text_font_color"),
        (position_set_x, pos1, 350),
        (position_set_x, pos1, 500), #new
        (position_set_y, pos1, 400),
        (overlay_set_position, "$g_multiplayer_message_1", pos1),
        (position_set_x, pos1, 2000),
        (position_set_y, pos1, 2000),
        (overlay_set_size, "$g_multiplayer_message_1", pos1),
        (presentation_set_duration, 400),      
      (else_try),
        (eq, "$g_multiplayer_message_type", multiplayer_message_type_attackers_won_the_round),

        (assign, ":winner_agent_team", "$g_multiplayer_message_value_1"),

        (try_begin), #for spectators initializing, we assume spectators are fan of team0 so coloring is applied as they are at team0.
          (eq, ":winner_agent_team", 0),
          (assign, ":text_font_color", 0xFF33DD11),
        (else_try),
          (assign, ":text_font_color", 0xFFFF4422),
        (try_end), #initializing ends
        (multiplayer_get_my_player, ":my_player_no"),
        (try_begin),
          (ge, ":my_player_no", 0),
          (player_get_agent_id, ":my_player_agent", ":my_player_no"),
          (try_begin),
            (ge, ":my_player_agent", 0),
            (agent_get_team, ":my_player_team", ":my_player_agent"),
            (try_begin),
              (eq, ":my_player_team", ":winner_agent_team"),
              (assign, ":text_font_color", 0xFF33DD11),
            (else_try),
              (assign, ":text_font_color", 0xFFFF4422),
            (try_end),
          (try_end),
        (try_end),

        (try_begin),
          (eq, "$g_defender_team", 0),
          (team_get_faction, ":faction_of_winner_team", 1),
        (else_try),
          (team_get_faction, ":faction_of_winner_team", 0),
        (try_end),
        (str_store_faction_name, s1, ":faction_of_winner_team"),

        (str_store_string, s0, "str_s1_won_round"),
        (create_text_overlay, "$g_multiplayer_message_1", s0, tf_center_justify|tf_with_outline),
        (overlay_set_color, "$g_multiplayer_message_1", ":text_font_color"),
        (position_set_x, pos1, 350),
        (position_set_x, pos1, 500), #new
        (position_set_y, pos1, 400),
        (overlay_set_position, "$g_multiplayer_message_1", pos1),
        (position_set_x, pos1, 2000),
        (position_set_y, pos1, 2000),
        (overlay_set_size, "$g_multiplayer_message_1", pos1),
        (presentation_set_duration, 400),      
      (try_end),
      ]),
    (ti_on_presentation_run,
     [
       ]),
     ]),

  ("multiplayer_message_2", prsntf_read_only|prsntf_manual_end_only, 0, [
    (ti_on_presentation_load, [
      (set_fixed_point_multiplier, 1000),
      (try_begin),
        (eq, "$g_multiplayer_message_type", multiplayer_message_type_auto_team_balance_done),
        (assign, ":text_font_color", 0xFFFFFFFF),
        (str_store_string, s0, "str_auto_team_balance_done"),
        (create_text_overlay, "$g_multiplayer_message_2", s0, tf_center_justify|tf_with_outline),
        (overlay_set_color, "$g_multiplayer_message_2", ":text_font_color"),
        (position_set_x, pos1, 375),
        (position_set_x, pos1, 500), #new
        (position_set_y, pos1, 550),
        (overlay_set_position, "$g_multiplayer_message_2", pos1),
        (position_set_x, pos1, 2000),
        (position_set_y, pos1, 2000),
        (overlay_set_size, "$g_multiplayer_message_2", pos1),
        (presentation_set_duration, 300),
      (else_try),
        (eq, "$g_multiplayer_message_type", multiplayer_message_type_auto_team_balance_next),
        (assign, ":text_font_color", 0xFFFFFFFF),

        (try_begin),
          (neq, "$g_multiplayer_game_type", multiplayer_game_type_battle),
          (neq, "$g_multiplayer_game_type", multiplayer_game_type_destroy),
          (neq, "$g_multiplayer_game_type", multiplayer_game_type_siege),
          (str_store_string, s0, "str_auto_team_balance_in_20_seconds"),
          (position_set_x, pos1, 375),
        (else_try),
          (str_store_string, s0, "str_auto_team_balance_next_round"),
          (position_set_x, pos1, 375),
        (try_end),
      
        (create_text_overlay, "$g_multiplayer_message_2", s0, tf_center_justify|tf_with_outline),
        (overlay_set_color, "$g_multiplayer_message_2", ":text_font_color"),
        (position_set_y, pos1, 550),
        (position_set_x, pos1, 500), #new
        (overlay_set_position, "$g_multiplayer_message_2", pos1),
        (position_set_x, pos1, 2000),
        (position_set_y, pos1, 2000),
        (overlay_set_size, "$g_multiplayer_message_2", pos1),
        (presentation_set_duration, 300),
      (try_end),
      ]),
    (ti_on_presentation_run,
     [
       ]),
     ]),
      
  ("multiplayer_message_3", prsntf_read_only|prsntf_manual_end_only, 0, [
    (ti_on_presentation_load, [
      (set_fixed_point_multiplier, 1000),      
      (try_begin),
        (eq, "$g_multiplayer_message_type", multiplayer_message_type_poll_result),
      
        (assign, ":text_font_color", 0xFFFFFFFF),
        (try_begin),
          (eq, "$g_multiplayer_message_value_3", 1),
          (str_store_string, s0, "str_poll_result_yes"),
        (else_try),
          (str_store_string, s0, "str_poll_result_no"),
        (try_end),
        (create_text_overlay, "$g_multiplayer_message_3", s0, tf_center_justify|tf_with_outline),
        (overlay_set_color, "$g_multiplayer_message_3", ":text_font_color"),
        (position_set_x, pos1, 380),
        (position_set_x, pos1, 500), #new
        (position_set_y, pos1, 475),
        (overlay_set_position, "$g_multiplayer_message_3", pos1),
        (position_set_x, pos1, 2000),
        (position_set_y, pos1, 2000),
        (overlay_set_size, "$g_multiplayer_message_3", pos1),
        (presentation_set_duration, 400),
      (try_end),
      ]),
    (ti_on_presentation_run,
     [
       ]),
     ]),

  ("multiplayer_round_time_counter", prsntf_read_only|prsntf_manual_end_only, 0, [
    (ti_on_presentation_load, [
      (set_fixed_point_multiplier, 1000),
      (assign, "$g_multiplayer_last_round_time_counter_value", -1),
      (str_clear, s0),
      (create_text_overlay, "$g_multiplayer_round_time_counter_overlay", s0, tf_left_align|tf_single_line|tf_with_outline),
      (overlay_set_color, "$g_multiplayer_round_time_counter_overlay", 0xFFFFFF),
      (position_set_x, pos1, 900),
      (position_set_y, pos1, 690),
      (overlay_set_position, "$g_multiplayer_round_time_counter_overlay", pos1),
      (position_set_x, pos1, 2000),
      (position_set_y, pos1, 2000),
      (overlay_set_size, "$g_multiplayer_round_time_counter_overlay", pos1),
      (presentation_set_duration, 999999),
      ]),
    (ti_on_presentation_run,
     [(store_mission_timer_a, ":current_time"),
      (store_sub, ":seconds_past_in_round", ":current_time", "$g_round_start_time"),
      (store_sub, ":seconds_left_in_round", "$g_multiplayer_round_max_seconds", ":seconds_past_in_round"),
      (val_max, ":seconds_left_in_round", 0),
      (try_begin),
        (neq, "$g_multiplayer_last_round_time_counter_value", ":seconds_left_in_round"),
        (assign, "$g_multiplayer_last_round_time_counter_value", ":seconds_left_in_round"),
        (store_div, reg0, ":seconds_left_in_round", 60),
        (store_div, reg1, ":seconds_left_in_round", 10),
        (val_mod, reg1, 6),
        (assign, reg2, ":seconds_left_in_round"),
        (val_mod, reg2, 10),
        (str_store_string, s0, "str_reg0_dd_reg1reg2"),
        (overlay_set_text, "$g_multiplayer_round_time_counter_overlay", s0),
      (try_end),
      ]),
    ]),

  ("multiplayer_team_score_display", prsntf_read_only|prsntf_manual_end_only, 0, [
    (ti_on_presentation_load, [
      (set_fixed_point_multiplier, 1000),
      (assign, "$g_multiplayer_team_1_last_displayed_score", -1),
      (assign, "$g_multiplayer_team_2_last_displayed_score", -1),
      (str_clear, s0),
      (create_text_overlay, "$g_multiplayer_team_1_score_display_overlay", s0, tf_left_align|tf_single_line|tf_with_outline),
      (overlay_set_color, "$g_multiplayer_team_1_score_display_overlay", 0xFFFFFF),
      (position_set_x, pos1, 40),
      (position_set_y, pos1, 700),
      (overlay_set_position, "$g_multiplayer_team_1_score_display_overlay", pos1),
      (position_set_x, pos1, 1500),
      (position_set_y, pos1, 1500),
      (overlay_set_size, "$g_multiplayer_team_1_score_display_overlay", pos1),
      (create_text_overlay, "$g_multiplayer_team_2_score_display_overlay", s0, tf_left_align|tf_single_line|tf_with_outline),
      (overlay_set_color, "$g_multiplayer_team_2_score_display_overlay", 0xFFFFFF),
      (position_set_x, pos1, 40),
      (position_set_y, pos1, 645),
      (overlay_set_position, "$g_multiplayer_team_2_score_display_overlay", pos1),
      (position_set_x, pos1, 1500),
      (position_set_y, pos1, 1500),
      (overlay_set_size, "$g_multiplayer_team_2_score_display_overlay", pos1),

      (try_begin),
        (eq, "$g_multiplayer_team_1_faction", "fac_kingdom_4"),
        (create_mesh_overlay, reg0, "mesh_ui_kingdom_shield_1"),
      (else_try),
        (eq, "$g_multiplayer_team_1_faction", "fac_kingdom_2"),
        (create_mesh_overlay, reg0, "mesh_ui_kingdom_shield_2"),
      (else_try),
        (eq, "$g_multiplayer_team_1_faction", "fac_kingdom_3"),
        (create_mesh_overlay, reg0, "mesh_ui_kingdom_shield_3"),
      (else_try),
        (eq, "$g_multiplayer_team_1_faction", "fac_kingdom_5"),
        (create_mesh_overlay, reg0, "mesh_ui_kingdom_shield_4"),
      (else_try),
        (eq, "$g_multiplayer_team_1_faction", "fac_kingdom_6"),
        (create_mesh_overlay, reg0, "mesh_ui_kingdom_shield_5"),
      (else_try),
        (eq, "$g_multiplayer_team_1_faction", "fac_kingdom_1"),
        (create_mesh_overlay, reg0, "mesh_ui_kingdom_shield_6"),
      (try_end),

      (position_set_x, pos3, 25),
      (position_set_y, pos3, 715),
      (overlay_set_position, reg0, pos3),
      (position_set_x, pos1, 50),
      (position_set_y, pos1, 50),
      (overlay_set_size, reg0, pos1),      

      (try_begin),
        (eq, "$g_multiplayer_team_1_faction", "$g_multiplayer_team_2_faction"),
        (create_mesh_overlay, reg0, "mesh_ui_kingdom_shield_7"),
      (else_try),
        (eq, "$g_multiplayer_team_2_faction", "fac_kingdom_4"),
        (create_mesh_overlay, reg0, "mesh_ui_kingdom_shield_1"),
      (else_try),
        (eq, "$g_multiplayer_team_2_faction", "fac_kingdom_2"),
        (create_mesh_overlay, reg0, "mesh_ui_kingdom_shield_2"),
      (else_try),
        (eq, "$g_multiplayer_team_2_faction", "fac_kingdom_3"),
        (create_mesh_overlay, reg0, "mesh_ui_kingdom_shield_3"),
      (else_try),
        (eq, "$g_multiplayer_team_2_faction", "fac_kingdom_5"),
        (create_mesh_overlay, reg0, "mesh_ui_kingdom_shield_4"),
      (else_try),
        (eq, "$g_multiplayer_team_2_faction", "fac_kingdom_6"),
        (create_mesh_overlay, reg0, "mesh_ui_kingdom_shield_5"),
      (else_try),
        (eq, "$g_multiplayer_team_2_faction", "fac_kingdom_1"),
        (create_mesh_overlay, reg0, "mesh_ui_kingdom_shield_6"),
      (try_end),

      (position_set_x, pos3, 25),
      (position_set_y, pos3, 660),
      (overlay_set_position, reg0, pos3),
      (position_set_x, pos1, 50),
      (position_set_y, pos1, 50),
      (overlay_set_size, reg0, pos1),      

      (presentation_set_duration, 999999),
      ]),
    (ti_on_presentation_run, [
      (team_get_score, ":team_1_score", 0),
      (team_get_score, ":team_2_score", 1),
      (try_begin),
        (this_or_next|neq, ":team_1_score", "$g_multiplayer_team_1_last_displayed_score"),
        (neq, ":team_2_score", "$g_multiplayer_team_2_last_displayed_score"),
        (assign, "$g_multiplayer_team_1_last_displayed_score", ":team_1_score"),
        (assign, "$g_multiplayer_team_2_last_displayed_score", ":team_2_score"),
      
        (str_store_faction_name, s0, "$g_multiplayer_team_1_faction"),
        (assign, reg0, ":team_1_score"),
        (overlay_set_text, "$g_multiplayer_team_1_score_display_overlay", "str_reg0"),
        (str_store_faction_name, s0, "$g_multiplayer_team_2_faction"),
        (assign, reg0, ":team_2_score"),
        (overlay_set_text, "$g_multiplayer_team_2_score_display_overlay", "str_reg0"),

##        (str_store_faction_name, s0, "$g_multiplayer_team_1_faction"),
##        (assign, reg0, ":team_1_score"),
##        (overlay_set_text, "$g_multiplayer_team_1_score_display_overlay", "str_s0_dd_reg0"),
##        (str_store_faction_name, s0, "$g_multiplayer_team_2_faction"),
##        (assign, reg0, ":team_2_score"),
##        (overlay_set_text, "$g_multiplayer_team_2_score_display_overlay", "str_s0_dd_reg0"),
      (try_end),
      ]),
    ]),


  ("multiplayer_flag_projection_display", prsntf_read_only|prsntf_manual_end_only, 0, [
    (ti_on_presentation_load, 
    [
      (set_fixed_point_multiplier, 1000),

      (store_sub, ":flag_mesh", "$g_multiplayer_team_1_faction", npc_kingdoms_begin),
      (val_add, ":flag_mesh", multiplayer_flag_projections_begin),
      (create_mesh_overlay, "$g_presentation_obj_flag_projection_display_1", ":flag_mesh"),
      (val_sub, ":flag_mesh", multiplayer_flag_projections_begin),
      (val_add, ":flag_mesh", multiplayer_flag_taken_projections_begin),
      (create_mesh_overlay, "$g_presentation_obj_flag_projection_display_2", ":flag_mesh"),
      
      (try_begin),
        (neq, "$g_multiplayer_team_1_faction", "$g_multiplayer_team_2_faction"),
        (store_sub, ":flag_mesh", "$g_multiplayer_team_2_faction", npc_kingdoms_begin),
        (val_add, ":flag_mesh", multiplayer_flag_projections_begin),
        (create_mesh_overlay, "$g_presentation_obj_flag_projection_display_3", ":flag_mesh"),
        (val_sub, ":flag_mesh", multiplayer_flag_projections_begin),
        (val_add, ":flag_mesh", multiplayer_flag_taken_projections_begin),
        (create_mesh_overlay, "$g_presentation_obj_flag_projection_display_4", ":flag_mesh"),
      (else_try),
        (assign, ":flag_mesh", "mesh_flag_project_rb"),
        (create_mesh_overlay, "$g_presentation_obj_flag_projection_display_3", ":flag_mesh"),
        (assign, ":flag_mesh", "mesh_flag_project_rb_miss"),
        (create_mesh_overlay, "$g_presentation_obj_flag_projection_display_4", ":flag_mesh"),      
      (try_end),
      
      (position_set_x, pos1, 250),
      (position_set_y, pos1, 250),
      (overlay_set_size, "$g_presentation_obj_flag_projection_display_1", pos1),
      (overlay_set_size, "$g_presentation_obj_flag_projection_display_2", pos1),
      (overlay_set_size, "$g_presentation_obj_flag_projection_display_3", pos1),
      (overlay_set_size, "$g_presentation_obj_flag_projection_display_4", pos1),
      (overlay_set_display, "$g_presentation_obj_flag_projection_display_1", 0),
      (overlay_set_display, "$g_presentation_obj_flag_projection_display_2", 0),
      (overlay_set_display, "$g_presentation_obj_flag_projection_display_3", 0),
      (overlay_set_display, "$g_presentation_obj_flag_projection_display_4", 0),
      (presentation_set_duration, 999999),
      ]),
      
    (ti_on_presentation_run, 
    [
      (set_fixed_point_multiplier, 1000),
      
      (scene_prop_get_instance, ":flag_red_id", "$team_1_flag_scene_prop", 0),      
      (team_get_slot, ":team_0_flag_situation", 0, slot_team_flag_situation),      
      (try_begin),
        (neq, ":team_0_flag_situation", 1),
        (prop_instance_get_position, pos1, ":flag_red_id"), #hold position of flag of team 1 (red flag) at pos1
      (else_try),
        (entry_point_get_position, pos1, multi_base_point_team_1), #moved from above to here after auto-set position      
      (try_end),            
      (position_move_z, pos1, 200, 1),
      
      (scene_prop_get_instance, ":flag_blue_id", "$team_2_flag_scene_prop", 0),      
      (team_get_slot, ":team_1_flag_situation", 1, slot_team_flag_situation),            
      (try_begin),
        (neq, ":team_1_flag_situation", 1),
        (prop_instance_get_position, pos2, ":flag_blue_id"), #hold position of flag of team 1 (red flag) at pos1
      (else_try),
        (entry_point_get_position, pos2, multi_base_point_team_2), #moved from above to here after auto-set position      
      (try_end),      
      (position_move_z, pos2, 200, 1),
            
      (position_get_screen_projection, pos3, pos1),
      (position_get_x, ":x_pos", pos3),
      (position_get_y, ":y_pos", pos3),
      (position_set_y, pos3, ":y_pos"),
      (try_begin),
        (is_between, ":x_pos", -100, 1100),
        (is_between, ":y_pos", -100, 850),

        (multiplayer_get_my_player, ":my_player_number"),
        (try_begin),
          (ge, ":my_player_number", 0),
          (player_get_team_no, ":my_player_team", ":my_player_number"),
        (else_try),
          (assign, ":my_player_team", multi_team_spectator),
        (try_end),

        (try_begin),
          (neq, ":my_player_team", 1), #if I am at team 0 or spectator
          (try_begin),
            (neq, ":team_0_flag_situation", 1), #if our flag is not stolen
            (overlay_set_position, "$g_presentation_obj_flag_projection_display_1", pos3),
            (overlay_set_display, "$g_presentation_obj_flag_projection_display_1", 1),
            (overlay_set_display, "$g_presentation_obj_flag_projection_display_2", 0),
          (else_try), #if our flag is stolen
            (try_begin),
              (eq, ":my_player_team", 0), 
              (assign, ":our_base_entry_id", multi_base_point_team_1),
            (else_try), 
              (assign, ":our_base_entry_id", multi_base_point_team_2),
            (try_end),

            (entry_point_get_position, pos5, ":our_base_entry_id"), #moved from above to here after auto-set position
            (position_get_screen_projection, pos3, pos5),

            (overlay_set_position, "$g_presentation_obj_flag_projection_display_2", pos3),
            (overlay_set_display, "$g_presentation_obj_flag_projection_display_2", 1),
            (overlay_set_display, "$g_presentation_obj_flag_projection_display_1", 0),
          (try_end),
        (else_try),
          (try_begin),
            (neq, ":team_0_flag_situation", 1),
            (overlay_set_position, "$g_presentation_obj_flag_projection_display_1", pos3),
            (overlay_set_display, "$g_presentation_obj_flag_projection_display_1", 1),
            (overlay_set_display, "$g_presentation_obj_flag_projection_display_2", 0),
          (try_end),
        (try_end),      
      (else_try),
        (overlay_set_display, "$g_presentation_obj_flag_projection_display_1", 0),
        (overlay_set_display, "$g_presentation_obj_flag_projection_display_2", 0),
      (try_end),
      
      (position_get_screen_projection, pos3, pos2),
      (position_get_x, ":x_pos", pos3),
      (position_get_y, ":y_pos", pos3),
      (position_set_y, pos3, ":y_pos"),
      (try_begin),
        (is_between, ":x_pos", -100, 1100),
        (is_between, ":y_pos", -100, 850),

        (team_get_slot, ":team_1_flag_situation", 1, slot_team_flag_situation),

        (multiplayer_get_my_player, ":my_player_number"),
        (try_begin),
          (ge, ":my_player_number", 0),
          (player_get_team_no, ":my_player_team", ":my_player_number"),
        (else_try),
          (assign, ":my_player_team", multi_team_spectator),
        (try_end),

        (try_begin),
          (neq, ":my_player_team", 0), #if I am at team 0 or spectator
          (try_begin),
            (neq, ":team_1_flag_situation", 1), #if our flag is not stolen
            (overlay_set_position, "$g_presentation_obj_flag_projection_display_3", pos3),
            (overlay_set_display, "$g_presentation_obj_flag_projection_display_3", 1),
            (overlay_set_display, "$g_presentation_obj_flag_projection_display_4", 0),
          (else_try), #if our flag is stolen      
            (try_begin),
              (eq, ":my_player_team", 0), 
              (assign, ":our_base_entry_id", multi_base_point_team_1),
            (else_try), 
              (assign, ":our_base_entry_id", multi_base_point_team_2),
            (try_end),

            (entry_point_get_position, pos5, ":our_base_entry_id"), #moved from above to here after auto-set position
            (position_get_screen_projection, pos3, pos5),
      
            (overlay_set_position, "$g_presentation_obj_flag_projection_display_4", pos3),
            (overlay_set_display, "$g_presentation_obj_flag_projection_display_4", 1),
            (overlay_set_display, "$g_presentation_obj_flag_projection_display_3", 0),
          (try_end),
        (else_try),
          (try_begin),
            (neq, ":team_1_flag_situation", 1),
            (overlay_set_position, "$g_presentation_obj_flag_projection_display_3", pos3),
            (overlay_set_display, "$g_presentation_obj_flag_projection_display_3", 1),
            (overlay_set_display, "$g_presentation_obj_flag_projection_display_4", 0),
          (try_end),
        (try_end),
      (else_try),
        (overlay_set_display, "$g_presentation_obj_flag_projection_display_3", 0),
        (overlay_set_display, "$g_presentation_obj_flag_projection_display_4", 0),
      (try_end),
      ]),
    ]),

  ("multiplayer_flag_projection_display_bt", prsntf_read_only|prsntf_manual_end_only, 0, [ #this is for search and destroy death mode flags.
    (ti_on_presentation_load, [
      (set_fixed_point_multiplier, 1000),

      (store_sub, ":flag_mesh", "$g_multiplayer_team_1_faction", npc_kingdoms_begin),
      (val_add, ":flag_mesh", multiplayer_flag_projections_begin),
      (create_mesh_overlay, "$g_presentation_obj_flag_projection_display_1", ":flag_mesh"),

      (try_begin),
        (neq, "$g_multiplayer_team_1_faction", "$g_multiplayer_team_2_faction"),
        (store_sub, ":flag_mesh", "$g_multiplayer_team_2_faction", npc_kingdoms_begin),
        (val_add, ":flag_mesh", multiplayer_flag_projections_begin),
      (else_try),
        (assign, ":flag_mesh", "mesh_flag_project_rb"),
      (try_end),
      (create_mesh_overlay, "$g_presentation_obj_flag_projection_display_3", ":flag_mesh"),

      (position_set_x, pos1, 250),
      (position_set_y, pos1, 250),

      (overlay_set_size, "$g_presentation_obj_flag_projection_display_1", pos1),
      (overlay_set_size, "$g_presentation_obj_flag_projection_display_3", pos1),
      (overlay_set_display, "$g_presentation_obj_flag_projection_display_1", 0),
      (overlay_set_display, "$g_presentation_obj_flag_projection_display_3", 0),
      (presentation_set_duration, 999999),
      ]),
    (ti_on_presentation_run, [
      (try_begin),
        (eq, "$g_round_ended", 0),
        (set_fixed_point_multiplier, 1000),
        (scene_prop_get_instance, ":flag_1_id", "$team_1_flag_scene_prop", 0),
        (prop_instance_get_position, pos1, ":flag_1_id"), #hold position of flag of team 1 at pos1
        (position_move_z, pos1, 250, 1),
      
        (scene_prop_get_instance, ":flag_2_id", "$team_2_flag_scene_prop", 0),
        (prop_instance_get_position, pos2, ":flag_2_id"), #hold position of flag of team 2 at pos2
        (position_move_z, pos2, 250, 1),
      
        (position_get_screen_projection, pos3, pos1),
        (position_get_x, ":x_pos", pos3),
        (position_get_y, ":y_pos", pos3),
        (position_set_y, pos3, ":y_pos"),
        (try_begin),
          (is_between, ":x_pos", -100, 1100),
          (is_between, ":y_pos", -100, 850),

          (overlay_set_position, "$g_presentation_obj_flag_projection_display_1", pos3),
          (overlay_set_display, "$g_presentation_obj_flag_projection_display_1", 1),
        (else_try),
          (overlay_set_display, "$g_presentation_obj_flag_projection_display_1", 0),
        (try_end),
      
        (position_get_screen_projection, pos3, pos2),
        (position_get_x, ":x_pos", pos3),
        (position_get_y, ":y_pos", pos3),
        (position_set_y, pos3, ":y_pos"),
        (try_begin),
          (is_between, ":x_pos", -100, 1100),
          (is_between, ":y_pos", -100, 850),

          (overlay_set_position, "$g_presentation_obj_flag_projection_display_3", pos3),
          (overlay_set_display, "$g_presentation_obj_flag_projection_display_3", 1),
        (else_try),
          (overlay_set_display, "$g_presentation_obj_flag_projection_display_3", 0),
        (try_end),
      (else_try),
        (presentation_set_duration, 0),
      (try_end),
      ]),
    ]),

  ("multiplayer_destructible_targets_display", prsntf_read_only|prsntf_manual_end_only, 0, [ #this is for search and destroy death mode flags.
    (ti_on_presentation_load, [
      (set_fixed_point_multiplier, 1000),     

      (try_begin),
        (eq, "$g_defender_team", 0),
        (store_sub, ":flag_mesh", "$g_multiplayer_team_1_faction", npc_kingdoms_begin),
      (else_try),
        (store_sub, ":flag_mesh", "$g_multiplayer_team_2_faction", npc_kingdoms_begin),
      (try_end),
      
      (val_add, ":flag_mesh", multiplayer_flag_projections_begin),
      (create_mesh_overlay, "$g_presentation_obj_flag_projection_display_1", ":flag_mesh"),
      (create_mesh_overlay, "$g_presentation_obj_flag_projection_display_2", ":flag_mesh"),

      (position_set_x, pos1, 250),
      (position_set_y, pos1, 250),

      (overlay_set_size, "$g_presentation_obj_flag_projection_display_1", pos1),
      (overlay_set_size, "$g_presentation_obj_flag_projection_display_2", pos1),
      (overlay_set_display, "$g_presentation_obj_flag_projection_display_1", 0),
      (overlay_set_display, "$g_presentation_obj_flag_projection_display_2", 0),
      (presentation_set_duration, 999999),
      ]),
    (ti_on_presentation_run, [
      (try_begin),
        (eq, "$g_round_ended", 0),
        (set_fixed_point_multiplier, 1000),
        (scene_prop_get_instance, ":target_1_id", "$g_destructible_target_1", 0),
        (prop_instance_get_position, pos1, ":target_1_id"), 
        (prop_instance_get_position, pos1, ":target_1_id"), 
        (position_move_z, pos1, 250, 1),
        (scene_prop_get_instance, ":target_2_id", "$g_destructible_target_2", 0),
        (prop_instance_get_position, pos2, ":target_2_id"), 
        (prop_instance_get_position, pos2, ":target_2_id"), 
        (position_move_z, pos2, 250, 1),
      
        (position_get_screen_projection, pos3, pos1),
        (position_get_x, ":x_pos", pos3),
        (position_get_y, ":y_pos", pos3),
        (position_set_y, pos3, ":y_pos"),
        (try_begin),
          (is_between, ":x_pos", -100, 1100),
          (is_between, ":y_pos", -100, 850),
      
          (prop_instance_get_starting_position, pos0, ":target_1_id"),
          (prop_instance_get_position, pos1, ":target_1_id"),
          (get_sq_distance_between_positions_in_meters, ":dist", pos0, pos1),
          (le, ":dist", 2), #this can be 0 or 1 too.

          (overlay_set_position, "$g_presentation_obj_flag_projection_display_1", pos3),
          (overlay_set_display, "$g_presentation_obj_flag_projection_display_1", 1),
        (else_try),
          (overlay_set_display, "$g_presentation_obj_flag_projection_display_1", 0),
        (try_end),
      
        (position_get_screen_projection, pos3, pos2),
        (position_get_x, ":x_pos", pos3),
        (position_get_y, ":y_pos", pos3),
        (position_set_y, pos3, ":y_pos"),
        (try_begin),
          (is_between, ":x_pos", -100, 1100),
          (is_between, ":y_pos", -100, 850),

          (prop_instance_get_starting_position, pos0, ":target_2_id"),
          (prop_instance_get_position, pos1, ":target_2_id"),
          (get_sq_distance_between_positions_in_meters, ":dist", pos0, pos1),
          (le, ":dist", 2), #this can be 0 or 1 too.

          (overlay_set_position, "$g_presentation_obj_flag_projection_display_2", pos3),
          (overlay_set_display, "$g_presentation_obj_flag_projection_display_2", 1),
        (else_try),
          (overlay_set_display, "$g_presentation_obj_flag_projection_display_2", 0),
        (try_end),
      (else_try),
        (presentation_set_duration, 0),
      (try_end),
      ]),
    ]),

  ("multiplayer_respawn_time_counter", prsntf_read_only|prsntf_manual_end_only, 0, [
    (ti_on_presentation_load, [      
      (set_fixed_point_multiplier, 1000),

      (assign, "$g_multiplayer_respawn_counter_overlay", -1),
      (assign, "$g_multiplayer_respawn_remained_overlay", -1),
      
      (assign, ":do_not_show_respawn_counter", 0),
      (try_begin),
        (eq, "$g_multiplayer_message_type", multiplayer_message_type_round_result_in_siege_mode),
        (this_or_next|eq, "$g_round_ended", 1),
        (eq, "$g_flag_is_not_ready", 1),
        (assign, ":do_not_show_respawn_counter", 1),
      (try_end),
      (eq, ":do_not_show_respawn_counter", 0),

      (assign, "$g_multiplayer_last_respawn_counter_value", -1),
      (str_clear, s0),
      (create_text_overlay, "$g_multiplayer_respawn_counter_overlay", s0, tf_center_justify|tf_with_outline),
      (overlay_set_color, "$g_multiplayer_respawn_counter_overlay", 0xFFFFFF),
      (position_set_x, pos1, 500),
      (position_set_y, pos1, 600),
      (overlay_set_position, "$g_multiplayer_respawn_counter_overlay", pos1),
      (position_set_x, pos1, 2000),
      (position_set_y, pos1, 2000),
      (overlay_set_size, "$g_multiplayer_respawn_counter_overlay", pos1),

      (str_clear, s0),
      (create_text_overlay, "$g_multiplayer_respawn_remained_overlay", s0, tf_center_justify|tf_with_outline),
      (overlay_set_color, "$g_multiplayer_respawn_remained_overlay", 0xFFFFFF),
      (position_set_x, pos1, 500),
      (position_set_y, pos1, 570),
      (overlay_set_position, "$g_multiplayer_respawn_remained_overlay", pos1),
      (position_set_x, pos1, 1400),
      (position_set_y, pos1, 1400),
      (overlay_set_size, "$g_multiplayer_respawn_remained_overlay", pos1),

      #(store_mission_timer_a, "$g_multiplayer_respawn_start_time"),
      (presentation_set_duration, 999999),
      ]),
  
    (ti_on_presentation_run, [
      (ge, "$g_multiplayer_respawn_counter_overlay", 0),
      (multiplayer_get_my_player, ":my_player_no"),
      (try_begin),
        (ge, ":my_player_no", 0),
        (player_get_team_no, ":player_team", ":my_player_no"),
        (try_begin),
          (eq, ":player_team", multi_team_spectator),
          (presentation_set_duration, 0),
        (else_try),
          (store_mission_timer_a, ":current_time"),
          (store_sub, ":seconds_past_in_respawn", ":current_time", "$g_multiplayer_respawn_start_time"),
          (try_begin),
            (eq, "$g_show_no_more_respawns_remained", 0),
            (assign, ":total_respawn_time", "$g_multiplayer_respawn_period"),
            (try_begin),
              (eq, "$g_multiplayer_game_type", multiplayer_game_type_siege),
              (player_get_team_no, ":player_team", ":my_player_no"),
              (eq, ":player_team", 0),
              (val_add, ":total_respawn_time", multiplayer_siege_mod_defender_team_extra_respawn_time),
            (try_end),
          (else_try),
            (assign, ":total_respawn_time", 6),
          (try_end),
          (store_sub, ":seconds_left_in_respawn", ":total_respawn_time", ":seconds_past_in_respawn"),
          (try_begin),
            (le, ":seconds_left_in_respawn", 0),
            (presentation_set_duration, 0),
          (else_try),
            (neq, "$g_multiplayer_last_respawn_counter_value", ":seconds_left_in_respawn"),
            (assign, "$g_multiplayer_last_respawn_counter_value", ":seconds_left_in_respawn"),
            (try_begin),
              (eq, "$g_show_no_more_respawns_remained", 0),
              (assign, reg0, ":seconds_left_in_respawn"),
              (str_store_string, s0, "str_respawning_in_reg0_seconds"),
              (try_begin),
                (gt, "$g_multiplayer_number_of_respawn_count", 0),
                (store_sub, reg0, "$g_multiplayer_number_of_respawn_count", "$g_my_spawn_count"),

                (multiplayer_get_my_player, ":my_player_no"),
                (player_get_team_no, ":my_player_team", ":my_player_no"),
                (eq, ":my_player_team", 0),
      
                (try_begin),
                  (gt, reg0, 1),
                  (str_store_string, s1, "str_reg0_respawns_remained"),
                (else_try),
                  (str_store_string, s1, "str_this_is_your_last_respawn"),
                (try_end),
              (else_try),
                (str_clear, s1),                
              (try_end),
            (else_try),
              (eq, "$g_show_no_more_respawns_remained", 1),
              ##(assign, "$g_informed_about_no_more_respawns_remained", 1),
              (str_store_string, s0, "str_no_more_respawns_remained_this_round"),
              (str_clear, s1),
              (str_store_string, s1, "str_wait_next_round"),
            (try_end),
            (overlay_set_text, "$g_multiplayer_respawn_counter_overlay", s0),
            (overlay_set_text, "$g_multiplayer_respawn_remained_overlay", s1),
          (try_end),
        (try_end),
      (else_try),
        (presentation_set_duration, 0),
      (try_end),

      (try_begin),
        (eq, "$g_multiplayer_message_type", multiplayer_message_type_round_result_in_siege_mode),
        (this_or_next|eq, "$g_round_ended", 1),
        (eq, "$g_flag_is_not_ready", 1),
        (presentation_set_duration, 0),
      (try_end),
      ]),
    ]),

  ("multiplayer_stats_chart", prsntf_read_only|prsntf_manual_end_only, 0, [
    (ti_on_presentation_load,
     [(set_fixed_point_multiplier, 1000),

      (create_mesh_overlay, reg0, "mesh_mp_score_b"),
      (position_set_x, pos1, 100),
      (position_set_y, pos1, 100),
      (overlay_set_position, reg0, pos1),
      (position_set_x, pos1, 1000),
      (position_set_y, pos1, 1000),
      (overlay_set_size, reg0, pos1),

      (assign, ":team_1_rows", 0),
      (assign, ":team_2_rows", 0),
      (assign, ":spectator_rows", 0),
      (get_max_players, ":num_players"),
      (try_for_range, ":player_no", 0, ":num_players"),
        (store_add, ":slot_index", ":player_no", multi_data_player_index_list_begin),
        (try_begin),
          (player_is_active, ":player_no"),
          (troop_set_slot, "trp_multiplayer_data", ":slot_index", 1),
          (player_get_team_no, ":player_team", ":player_no"),
          (try_begin),
            (eq, ":player_team", 0),
            (val_add, ":team_1_rows", 1),
          (else_try),
            (eq, ":player_team", 1),
            (val_add, ":team_2_rows", 1),
          (else_try),
            (eq, ":player_team", multi_team_spectator),
            (val_add, ":spectator_rows", 1),
          (try_end),
        (else_try),
          (troop_set_slot, "trp_multiplayer_data", ":slot_index", 0),
        (try_end),
      (try_end),
      (try_begin),
        (gt, "$g_multiplayer_num_bots_team_1", 0),
        (val_add, ":team_1_rows", 1),
      (try_end),
      (try_begin),
        (gt, "$g_multiplayer_num_bots_team_2", 0),
        (val_add, ":team_2_rows", 1),
      (try_end),

      (assign, ":total_rows", ":team_1_rows"),
      (val_max, ":total_rows", ":team_2_rows"),
      (val_add, ":total_rows", ":spectator_rows"),

      (str_clear, s0),
      (create_text_overlay, "$g_presentation_obj_stats_chart_container", s0, tf_scrollable_style_2),
      (position_set_x, pos1, 100),
      (position_set_y, pos1, 120),#120
      (overlay_set_position, "$g_presentation_obj_stats_chart_container", pos1),
      (position_set_x, pos1, 746),
      (position_set_y, pos1, 530),#530
      (overlay_set_area_size, "$g_presentation_obj_stats_chart_container", pos1),
      (set_container_overlay, "$g_presentation_obj_stats_chart_container"),

      (store_mul, ":y_needed", ":total_rows", 20),
      (val_add, ":y_needed", 100),
      (try_begin),
        (gt, ":spectator_rows", 0),
        (val_add, ":y_needed", 70),
      (try_end),

      (multiplayer_get_my_player, ":my_player_no"),       

      (try_begin),
        (gt, ":y_needed", 490),
        (assign, "$g_stats_chart_update_period", 8),
      (else_try),
        (assign, "$g_stats_chart_update_period", 1),
      (try_end),

      (try_begin), #counting number of flags each team has.
        (eq, "$g_multiplayer_game_type", multiplayer_game_type_headquarters),
        (call_script, "script_get_headquarters_scores"),
        (assign, ":team_1_num_flags", reg0),
        (assign, ":team_2_num_flags", reg1),
      (try_end),

      #assuming only 2 teams in scene
      (try_for_range, ":i_team", 0, multi_team_spectator),
        (assign, ":number_of_players", 0),
        (get_max_players, ":num_players"),
        (try_for_range, ":player_no", 0, ":num_players"),
          (player_is_active, ":player_no"),
          (player_get_team_no, ":team_no", ":player_no"),
          (eq, ":team_no", ":i_team"),
          (val_add, ":number_of_players", 1),
        (try_end),
        (assign, reg0, ":number_of_players"),
        (try_begin),
          (neq, ":number_of_players", 1),
          (create_text_overlay, reg1, "str_reg0_players", 0),
        (else_try),
          (create_text_overlay, reg1, "str_reg0_player", 0),
        (try_end),

        (assign, ":cur_y", ":y_needed"),
        (team_get_faction, ":cur_faction", ":i_team"),
        (str_store_faction_name, s1, ":cur_faction"),
        (create_text_overlay, reg0, s1, 0),
        (try_begin),
          (eq, ":i_team", 0),
          (overlay_set_color, reg0, 0xFF0000),
          (overlay_set_color, reg1, 0xFF0000),
        (else_try),
          (overlay_set_color, reg0, 0x0099FF),
          (overlay_set_color, reg1, 0x0099FF),
        (try_end),
        (assign, ":distance_between_teams", 373),
        (store_mul, ":cur_x", ":distance_between_teams", ":i_team"),
        (val_add, ":cur_x", 42),
        (store_add, ":cur_x_add_15", ":cur_x", 15),
        (position_set_x, pos3, ":cur_x_add_15"),
        (position_set_y, pos3, ":cur_y"),
        (store_add, ":cur_x_add_35", ":cur_x", 35),
        (position_set_x, pos1, ":cur_x_add_35"),
        (position_set_y, pos1, ":cur_y"),
        (copy_position, pos2, pos1),
        (store_sub, ":cur_y_sub_10", ":cur_y", 10),
        (position_set_x, pos2, ":cur_x_add_35"),
        (position_set_y, pos2, ":cur_y_sub_10"),
        (overlay_set_position, reg0, pos1),
        (overlay_set_position, reg1, pos2),
        (position_set_x, pos1, 1000),
        (position_set_y, pos1, 1000),
        (position_set_x, pos2, 600),
        (position_set_y, pos2, 600),
        (overlay_set_size, reg0, pos1),
        (overlay_set_size, reg1, pos2),

        (team_get_faction, ":faction_of_team_1", 0),
        (team_get_faction, ":faction_of_team_2", 1),
          
        (try_begin),
          (eq, ":faction_of_team_1", ":faction_of_team_2"),
          (eq, ":i_team", 1),
          (create_mesh_overlay, reg0, "mesh_ui_kingdom_shield_7"),
        (else_try),
          (eq, ":cur_faction", "fac_kingdom_4"),
          (create_mesh_overlay, reg0, "mesh_ui_kingdom_shield_1"),
        (else_try),
          (eq, ":cur_faction", "fac_kingdom_2"),
          (create_mesh_overlay, reg0, "mesh_ui_kingdom_shield_2"),
        (else_try),
          (eq, ":cur_faction", "fac_kingdom_3"),
          (create_mesh_overlay, reg0, "mesh_ui_kingdom_shield_3"),
        (else_try),
          (eq, ":cur_faction", "fac_kingdom_5"),
          (create_mesh_overlay, reg0, "mesh_ui_kingdom_shield_4"),
        (else_try),
          (eq, ":cur_faction", "fac_kingdom_6"),
          (create_mesh_overlay, reg0, "mesh_ui_kingdom_shield_5"),
        (else_try),
          (eq, ":cur_faction", "fac_kingdom_1"),
          (create_mesh_overlay, reg0, "mesh_ui_kingdom_shield_6"),
        (try_end),
      
        (position_set_x, pos1, 100),
        (position_set_y, pos1, 100),
        (overlay_set_position, reg0, pos3),
        (position_set_x, pos1, 50),
        (position_set_y, pos1, 50),
        (overlay_set_size, reg0, pos1),      

        (team_get_score, reg0, ":i_team"),
        (create_text_overlay, reg0, "str_score_reg0", tf_right_align),
        (overlay_set_color, reg0, 0xFFFFFF),
        (store_add, ":sub_cur_x", ":cur_x", 325), #325
        (store_add, ":sub_cur_y", ":cur_y", 0),
        (position_set_x, pos1, ":sub_cur_x"),
        (position_set_y, pos1, ":sub_cur_y"),
        (overlay_set_position, reg0, pos1),
        (position_set_x, pos1, 1200),
        (position_set_y, pos1, 1200),
        (overlay_set_size, reg0, pos1),      

        (try_begin), #counting number of flags each team has only at hq mod.
          (eq, "$g_multiplayer_game_type", multiplayer_game_type_headquarters),
          (try_begin),
            (eq, ":i_team", 0),
            (assign, reg0, ":team_1_num_flags"),
          (else_try),
            (eq, ":i_team", 1),
            (assign, reg0, ":team_2_num_flags"),
          (try_end),
          (create_text_overlay, reg0, "str_flags_reg0", 0),
          (overlay_set_color, reg0, 0xFFFFFF),
          (store_add, ":sub_cur_x", ":cur_x", 258),
          (store_add, ":sub_cur_y", ":cur_y", -10),
          (position_set_x, pos1, ":sub_cur_x"),
          (position_set_y, pos1, ":sub_cur_y"),
          (overlay_set_position, reg0, pos1),
          (position_set_x, pos1, 600),
          (position_set_y, pos1, 600),
          (overlay_set_size, reg0, pos1),      
        (try_end),

        (val_sub, ":cur_y", 60),
      
        (create_text_overlay, reg0, "str_player_name", 0),
        (overlay_set_color, reg0, 0xFFFFFF),
        (position_set_x, pos1, ":cur_x"),
        (position_set_y, pos1, ":cur_y"),
        (overlay_set_position, reg0, pos1),
        (position_set_x, pos1, 750),
        (position_set_y, pos1, 750),
        (overlay_set_size, reg0, pos1),

        (try_begin), #at headquarters and capture the flag write score instead before kill count
          (this_or_next|eq, "$g_multiplayer_game_type", multiplayer_game_type_capture_the_flag),
          (eq, "$g_multiplayer_game_type", multiplayer_game_type_headquarters),      
          (create_text_overlay, reg0, "str_score", 0),
          (overlay_set_color, reg0, 0xFFFFFF),
          (store_add, ":sub_cur_x", ":cur_x", 138),
          (position_set_x, pos1, ":sub_cur_x"),
          (position_set_y, pos1, ":cur_y"),
          (overlay_set_position, reg0, pos1),
          (position_set_x, pos1, 750),
          (position_set_y, pos1, 750),
          (overlay_set_size, reg0, pos1),
        (try_end),
      
        (create_text_overlay, reg0, "str_kills", tf_center_justify),
        (overlay_set_color, reg0, 0xFFFFFF),
        (store_add, ":sub_cur_x", ":cur_x", 206), #191
        (position_set_x, pos1, ":sub_cur_x"),
        (position_set_y, pos1, ":cur_y"),
        (overlay_set_position, reg0, pos1),
        (position_set_x, pos1, 750),
        (position_set_y, pos1, 750),
        (overlay_set_size, reg0, pos1),

        (create_text_overlay, reg0, "str_deaths", tf_center_justify),
        (overlay_set_color, reg0, 0xFFFFFF),
        (store_add, ":sub_cur_x", ":cur_x", 260), #232
        (position_set_x, pos1, ":sub_cur_x"),
        (position_set_y, pos1, ":cur_y"),
        (overlay_set_position, reg0, pos1),
        (position_set_x, pos1, 750),
        (position_set_y, pos1, 750),
        (overlay_set_size, reg0, pos1),
      
        (create_text_overlay, reg0, "str_ping", tf_center_justify),
        (overlay_set_color, reg0, 0xFFFFFF),
        (store_add, ":sub_cur_x", ":cur_x", 308), #291
        (position_set_x, pos1, ":sub_cur_x"),
        (position_set_y, pos1, ":cur_y"),
        (overlay_set_position, reg0, pos1),
        (position_set_x, pos1, 750),
        (position_set_y, pos1, 750),
        (overlay_set_size, reg0, pos1),
      
        (create_mesh_overlay, reg0, "mesh_white_plane"),
        (overlay_set_color, reg0, 0xFFFFFF),
        (overlay_set_alpha, reg0, 0xD0),
        (store_add, ":sub_cur_x", ":cur_x", 0),
        (position_set_x, pos1, ":sub_cur_x"),
        (store_add, ":sub_cur_y", ":cur_y", -10),
        (position_set_y, pos1, ":sub_cur_y"),
        (overlay_set_position, reg0, pos1),
        (position_set_x, pos1, 16500),
        (position_set_y, pos1, 50),
        (overlay_set_size, reg0, pos1),

        (val_sub, ":cur_y", 35),
      
        (store_add, ":end_cond", ":num_players", 1),
        (try_for_range, ":unused", 0, ":end_cond"),
          (assign, ":max_score_plus_death", -30030),
          (assign, ":max_score_plus_death_player_no", -1),
          (try_for_range, ":player_no", 0, ":num_players"),            
            (store_add, ":slot_index", ":player_no", multi_data_player_index_list_begin),
            (troop_slot_eq, "trp_multiplayer_data", ":slot_index", 1),
            (player_get_team_no, ":player_team", ":player_no"),
            (eq, ":player_team", ":i_team"),

            (try_begin),
              (this_or_next|eq, "$g_multiplayer_game_type", multiplayer_game_type_capture_the_flag),
              (eq, "$g_multiplayer_game_type", multiplayer_game_type_headquarters),      
              (player_get_score, ":kill_count", ":player_no"), #get score in "capture the flag" or "headquarters"
            (else_try),
              (player_get_kill_count, ":kill_count", ":player_no"), #get kill count in "siege" or "battle" or "team deathmatch" or "deathmatch"
            (try_end),
      
            (player_get_death_count, ":death_count", ":player_no"), #get_death_count

            (store_mul, ":player_score_plus_death", ":kill_count", 1000),
            (val_sub, ":player_score_plus_death", ":death_count"),
      
            (this_or_next|gt, ":player_score_plus_death", ":max_score_plus_death"),
            (eq, ":player_score_plus_death", -30030),
      
            (assign, ":max_score_plus_death", ":player_score_plus_death"),
            (assign, ":max_score_plus_death_player_no", ":player_no"),
          (try_end),
          (try_begin),
            (ge, ":max_score_plus_death_player_no", 0),
            (store_add, ":slot_index", ":max_score_plus_death_player_no", multi_data_player_index_list_begin),
            (troop_set_slot, "trp_multiplayer_data", ":slot_index", 0),
      
            (try_begin),
              (eq, ":my_player_no", ":max_score_plus_death_player_no"),
              (create_mesh_overlay, reg0, "mesh_white_plane"),
              (overlay_set_color, reg0, 0xFFFFFF),
              (overlay_set_alpha, reg0, 0x35),
              (store_add, ":sub_cur_x", ":cur_x", 0),
              (position_set_x, pos1, ":sub_cur_x"),
              (store_add, ":sub_cur_y", ":cur_y", 0),
              (position_set_y, pos1, ":sub_cur_y"),
              (overlay_set_position, reg0, pos1),
              (position_set_x, pos1, 16500),
              (position_set_y, pos1, 1000),
              (overlay_set_size, reg0, pos1),
            (try_end),
  
            (try_begin), #at headquarters and capture the flag write score instead dead label before kill count
              (this_or_next|eq, "$g_multiplayer_game_type", multiplayer_game_type_capture_the_flag),
              (eq, "$g_multiplayer_game_type", multiplayer_game_type_headquarters),      

              (assign, ":font_color", 0xFFFFFF),
              (player_get_agent_id, ":max_score_plus_death_agent_id", ":max_score_plus_death_player_no"),
              (try_begin),
                (this_or_next|lt, ":max_score_plus_death_agent_id", 0),
                (neg|agent_is_alive, ":max_score_plus_death_agent_id"),
                (assign, ":font_color", 0xFF0000),
              (try_end),

              (player_get_score, reg0, ":max_score_plus_death_player_no"),
              (create_text_overlay, reg0, "str_reg0", tf_right_align),
              (overlay_set_color, reg0, ":font_color"),
              (position_set_x, pos1, 750),
              (position_set_y, pos1, 750),
              (overlay_set_size, reg0, pos1),      
              (store_add, ":sub_cur_x", ":cur_x", 165), #150
              (position_set_x, pos1, ":sub_cur_x"),
              (position_set_y, pos1, ":cur_y"),
              (overlay_set_position, reg0, pos1),
            (else_try),
              (assign, ":font_color", 0xFFFFFF),
              (player_get_agent_id, ":max_score_plus_death_agent_id", ":max_score_plus_death_player_no"),
              (try_begin),
                (this_or_next|lt, ":max_score_plus_death_agent_id", 0),
                (neg|agent_is_alive, ":max_score_plus_death_agent_id"),
                (assign, ":font_color", 0xFF0000),
                (create_text_overlay, reg0, "str_dead", 0),
                (overlay_set_color, reg0, ":font_color"),
                (position_set_x, pos1, 750),
                (position_set_y, pos1, 750),
                (overlay_set_size, reg0, pos1),
                (store_add, ":sub_cur_x", ":cur_x", 130),
                (position_set_x, pos1, ":sub_cur_x"),
                (position_set_y, pos1, ":cur_y"),
                (overlay_set_position, reg0, pos1),
              (try_end),
            (try_end),

            (str_store_player_username, s1, ":max_score_plus_death_player_no"),
            (create_text_overlay, reg0, s1, 0),
            (overlay_set_color, reg0, ":font_color"),
            (position_set_x, pos1, 750),
            (position_set_y, pos1, 750),
            (overlay_set_size, reg0, pos1),
            (position_set_x, pos1, ":cur_x"),
            (position_set_y, pos1, ":cur_y"),
            (overlay_set_position, reg0, pos1),
      
            (player_get_kill_count, reg0, ":max_score_plus_death_player_no"), #get_kill_count
            (create_text_overlay, reg0, "str_reg0", tf_right_align),
            (overlay_set_color, reg0, ":font_color"),
            (position_set_x, pos1, 750),
            (position_set_y, pos1, 750),
            (overlay_set_size, reg0, pos1),      
            (store_add, ":sub_cur_x", ":cur_x", 215), #200
            (position_set_x, pos1, ":sub_cur_x"),
            (position_set_y, pos1, ":cur_y"),
            (overlay_set_position, reg0, pos1),
      
            (player_get_death_count, reg0, ":max_score_plus_death_player_no"),
            (create_text_overlay, reg0, "str_reg0", tf_right_align),
            (overlay_set_color, reg0, ":font_color"),
            (position_set_x, pos1, 750),
            (position_set_y, pos1, 750),
            (overlay_set_size, reg0, pos1),      
            (store_add, ":sub_cur_x", ":cur_x", 265), #250
            (position_set_x, pos1, ":sub_cur_x"),
            (position_set_y, pos1, ":cur_y"),
            (overlay_set_position, reg0, pos1),
      
            (player_get_ping, reg0, ":max_score_plus_death_player_no"),
            (create_text_overlay, reg0, "str_reg0", tf_right_align),
            (overlay_set_color, reg0, ":font_color"),
            (position_set_x, pos1, 750),
            (position_set_y, pos1, 750),
            (overlay_set_size, reg0, pos1),
            (store_add, ":sub_cur_x", ":cur_x", 315), #300
            (position_set_x, pos1, ":sub_cur_x"),
            (position_set_y, pos1, ":cur_y"),
            (overlay_set_position, reg0, pos1),
            (val_sub, ":cur_y", 20),
          (else_try),
            (try_begin),
              (try_begin),
                (eq, ":i_team", 0),
                (assign, ":number_of_bots_in_cur_team", "$g_multiplayer_num_bots_team_1"),
              (else_try),
                (assign, ":number_of_bots_in_cur_team", "$g_multiplayer_num_bots_team_2"),
              (try_end),
             
              (team_get_bot_kill_count, reg0, ":i_team"),
              (team_get_bot_death_count, reg1, ":i_team"),
              (try_begin),
                (this_or_next|neq, reg0, 0),
                (this_or_next|neq, reg1, 0),
                (neq, ":number_of_bots_in_cur_team", 0),
                (assign, ":write_bot_informations_of_team", 1),
              (else_try),
                (assign, ":write_bot_informations_of_team", 0),
              (try_end),
      
              (eq, ":write_bot_informations_of_team", 1),

              (assign, ":number_of_alive_bots", 0),
              (try_for_agents, ":cur_agent"),
                (agent_is_non_player, ":cur_agent"),
                (agent_is_alive, ":cur_agent"),
                (agent_get_team, ":cur_agent_team", ":cur_agent"),
                (eq, ":cur_agent_team", ":i_team"),
                (val_add, ":number_of_alive_bots", 1),
              (try_end),
              (store_sub, ":number_of_dead_bots", ":number_of_bots_in_cur_team", ":number_of_alive_bots"),
              (try_begin),
                (eq, ":number_of_alive_bots", 0),
                (assign, ":font_color", 0xFF0000),
              (else_try),
                (assign, ":font_color", 0xD0D0D0),
              (try_end),

              (try_begin),
                (gt, ":number_of_dead_bots", 0),
                (try_begin),
                  (eq, ":number_of_bots_in_cur_team", 1),
                  (create_text_overlay, reg0, "str_dead", 0),
                  (store_add, ":sub_cur_x", ":cur_x", 130),
                (else_try),
                  (assign, reg0, ":number_of_dead_bots"),
                  (create_text_overlay, reg0, "str_reg0_dead", 0),
                  (store_add, ":sub_cur_x", ":cur_x", 123),
                (try_end),      
                (overlay_set_color, reg0, ":font_color"),
                (position_set_x, pos1, 750),
                (position_set_y, pos1, 750),
                (overlay_set_size, reg0, pos1),
                (position_set_x, pos1, ":sub_cur_x"),
                (position_set_y, pos1, ":cur_y"),
                (overlay_set_position, reg0, pos1),
              (try_end),

              (try_begin),
                (gt, ":number_of_bots_in_cur_team", 1),
                (assign, reg0, ":number_of_bots_in_cur_team"),
                (create_text_overlay, reg0, "str_bots_reg0_agents", 0),
              (else_try),
                (create_text_overlay, reg0, "str_bot_1_agent", 0),
              (try_end),
              (overlay_set_color, reg0, ":font_color"),
              (position_set_x, pos1, 750),
              (position_set_y, pos1, 750),
              (overlay_set_size, reg0, pos1),
              (position_set_x, pos1, ":cur_x"),
              (position_set_y, pos1, ":cur_y"),
              (overlay_set_position, reg0, pos1),
      
              (team_get_bot_kill_count, reg0, ":i_team"),
              (create_text_overlay, reg0, "str_reg0", tf_right_align),
              (overlay_set_color, reg0, ":font_color"),
              (position_set_x, pos1, 750),
              (position_set_y, pos1, 750),
              (overlay_set_size, reg0, pos1),
              (store_add, ":sub_cur_x", ":cur_x", 215), #200
              (position_set_x, pos1, ":sub_cur_x"),
              (position_set_y, pos1, ":cur_y"),
              (overlay_set_position, reg0, pos1),
      
              (team_get_bot_death_count, reg0, ":i_team"),
              (create_text_overlay, reg0, "str_reg0", tf_right_align),
              (overlay_set_color, reg0, ":font_color"),
              (position_set_x, pos1, 750),
              (position_set_y, pos1, 750),
              (overlay_set_size, reg0, pos1),
              (store_add, ":sub_cur_x", ":cur_x", 265), #250
              (position_set_x, pos1, ":sub_cur_x"),
              (position_set_y, pos1, ":cur_y"),
              (overlay_set_position, reg0, pos1),
              (val_sub, ":cur_y", 20),
            (try_end),
            (assign, ":end_cond", 0), #all players are written for this team, break
          (try_end),
        (try_end),

        (try_begin),
          (eq, ":i_team", 0),
          (assign, ":old_cur_y", ":cur_y"),
        (try_end),
      (try_end),

      (try_begin),
        (le, ":old_cur_y", ":cur_y"),
        (assign, ":cur_y", ":old_cur_y"),
      (try_end),

      (assign, ":cur_x", 42),

      #white line between playing players and spectators
      (create_mesh_overlay, reg0, "mesh_white_plane"),
      (overlay_set_color, reg0, 0xFFFFFF),
      (overlay_set_alpha, reg0, 0xD0),
      (store_add, ":sub_cur_x", ":cur_x", 0),
      (position_set_x, pos1, ":sub_cur_x"),
      (store_add, ":sub_cur_y", ":cur_y", 10),
      (position_set_y, pos1, ":sub_cur_y"),
      (overlay_set_position, reg0, pos1),
      (position_set_x, pos1, 36000),
      (position_set_y, pos1, 50),
      (overlay_set_size, reg0, pos1), 

      (try_begin),
        (gt, ":spectator_rows", 0),

        (assign, ":cur_x", 280),
        (val_sub, ":cur_y", 50),

        #"spectators" text 
        (create_text_overlay, reg0, "str_spectators", 0),
        (overlay_set_color, reg0, 0xFFFFFF),
        (position_set_x, pos1, ":cur_x"),
        (position_set_y, pos1, ":cur_y"),
        (overlay_set_position, reg0, pos1),
        (position_set_x, pos1, 1000),
        (position_set_y, pos1, 1000),
        (overlay_set_size, reg0, pos1),

        (create_text_overlay, reg0, "str_ping", tf_right_align),
        (overlay_set_color, reg0, 0xFFFFFF),
        (store_add, ":sub_cur_x", ":cur_x", 215), #200
        (position_set_x, pos1, ":sub_cur_x"),
        (position_set_y, pos1, ":cur_y"),
        (overlay_set_position, reg0, pos1),
        (position_set_x, pos1, 750),
        (position_set_y, pos1, 750),
        (overlay_set_size, reg0, pos1),

        #white line for spectators list
        (create_mesh_overlay, reg0, "mesh_white_plane"),
        (overlay_set_color, reg0, 0xFFFFFF),
        (overlay_set_alpha, reg0, 0xD0),
        (store_add, ":sub_cur_x", ":cur_x", 0),
        (position_set_x, pos1, ":sub_cur_x"),
        (store_add, ":sub_cur_y", ":cur_y", -10),
        (position_set_y, pos1, ":sub_cur_y"),
        (overlay_set_position, reg0, pos1),
        (position_set_x, pos1, 12000),
        (position_set_y, pos1, 50),
        (overlay_set_size, reg0, pos1),

        (val_sub, ":cur_y", 30),

        (assign, ":font_color", 0xC0C0C0),

        (store_add, ":end_cond", ":num_players", 1),
        (try_for_range, ":player_no", 0, ":end_cond"),
          (store_add, ":slot_index", ":player_no", multi_data_player_index_list_begin),
          (troop_slot_eq, "trp_multiplayer_data", ":slot_index", 1),

          (player_get_team_no, ":player_team", ":player_no"),
          (eq, ":player_team", multi_team_spectator), #to not to allow dedicated server to pass below, dedicated servers have -1 for team_no not 2(multi_team_spectator).

          (troop_set_slot, "trp_multiplayer_data", ":slot_index", 1),

          (try_begin),
            (eq, ":my_player_no", ":player_no"),
            (create_mesh_overlay, reg0, "mesh_white_plane"),
            (overlay_set_color, reg0, 0xFFFFFF),
            (overlay_set_alpha, reg0, 0x35),
            (store_add, ":sub_cur_x", ":cur_x", 0),
            (position_set_x, pos1, ":sub_cur_x"),
            (store_add, ":sub_cur_y", ":cur_y", 0),
            (position_set_y, pos1, ":sub_cur_y"),
            (overlay_set_position, reg0, pos1),
            (position_set_x, pos1, 12000),
            (position_set_y, pos1, 1000),
            (overlay_set_size, reg0, pos1),
          (try_end),

          (str_store_player_username, s1, ":player_no"),
          (create_text_overlay, reg0, s1, 0),
          (overlay_set_color, reg0, ":font_color"),
          (position_set_x, pos1, 750),
          (position_set_y, pos1, 750),
          (overlay_set_size, reg0, pos1),
          (position_set_x, pos1, ":cur_x"),
          (position_set_y, pos1, ":cur_y"),
          (overlay_set_position, reg0, pos1),
          
          (player_get_ping, reg0, ":player_no"),
          (create_text_overlay, reg0, "str_reg0", tf_right_align),
          (overlay_set_color, reg0, ":font_color"),
          (position_set_x, pos1, 750),
          (position_set_y, pos1, 750),
          (overlay_set_size, reg0, pos1),
          (store_add, ":sub_cur_x", ":cur_x", 215), #200
          (position_set_x, pos1, ":sub_cur_x"),
          (position_set_y, pos1, ":cur_y"),
          (overlay_set_position, reg0, pos1),
          (val_sub, ":cur_y", 20),      
        (try_end),
      (try_end),

      (omit_key_once, key_mouse_scroll_up),
      (omit_key_once, key_mouse_scroll_down),
      
      (presentation_set_duration, 999999),
      ]),
    (ti_on_presentation_run,
     [(store_trigger_param_1, ":cur_time"),
      (try_begin),
        (this_or_next|key_clicked, key_mouse_scroll_up),
        (key_clicked, key_mouse_scroll_down),
        (omit_key_once, key_mouse_scroll_up),
        (omit_key_once, key_mouse_scroll_down),
      (try_end),
      (try_begin),
        (eq, "$g_multiplayer_stats_chart_opened_manually", 1),
        (neg|game_key_is_down, gk_leave),
        (assign, "$g_multiplayer_stats_chart_opened_manually", 0),
        (clear_omitted_keys),
        (presentation_set_duration, 0),
      (try_end),
      (try_begin),
        (store_mul, ":update_period_time_limit", "$g_stats_chart_update_period", 1000),
        (gt, ":cur_time", ":update_period_time_limit"),
        (clear_omitted_keys),
        (presentation_set_duration, 0),
        (start_presentation, "prsnt_multiplayer_stats_chart"),
      (try_end),
      ]),
    ]),

  #this score table is used in only deathmatch
  ("multiplayer_stats_chart_deathmatch", prsntf_read_only|prsntf_manual_end_only, 0, [ 
    (ti_on_presentation_load,
     [(set_fixed_point_multiplier, 1000),

      (create_mesh_overlay, reg0, "mesh_mp_score_a"),
      (position_set_x, pos1, 295),
      (position_set_y, pos1, 115),
      (overlay_set_position, reg0, pos1),
      (position_set_x, pos1, 1000),
      (position_set_y, pos1, 1000),
      (overlay_set_size, reg0, pos1),

      (assign, ":team_rows", 0),
      (assign, ":spectator_rows", 0),
      (get_max_players, ":num_players"),
      (try_for_range, ":player_no", 0, ":num_players"),
        (store_add, ":slot_index", ":player_no", multi_data_player_index_list_begin),
        (try_begin),
          (player_is_active, ":player_no"),
          (troop_set_slot, "trp_multiplayer_data", ":slot_index", 1),
          (player_get_team_no, ":player_team", ":player_no"),
          (try_begin),
            (this_or_next|eq, ":player_team", 0),
            (eq, ":player_team", 1),
            (val_add, ":team_rows", 1),
          (else_try),
            (eq, ":player_team", multi_team_spectator),
            (val_add, ":spectator_rows", 1),
          (try_end),
        (else_try),
          (troop_set_slot, "trp_multiplayer_data", ":slot_index", 0),
        (try_end),
      (try_end),
      (try_begin),
        (this_or_next|gt, "$g_multiplayer_num_bots_team_1", 0),
        (gt, "$g_multiplayer_num_bots_team_2", 0),
        (val_add, ":team_rows", 1),
      (try_end),

      (store_add, ":total_rows", ":team_rows", ":spectator_rows"),

      (str_clear, s0),
      (create_text_overlay, "$g_presentation_obj_stats_chart_deathmatch_container", s0, tf_scrollable_style_2),
      (position_set_x, pos1, 300),
      (position_set_y, pos1, 140),
      (overlay_set_position, "$g_presentation_obj_stats_chart_deathmatch_container", pos1),
      (position_set_x, pos1, 346),
      (position_set_y, pos1, 530),
      (overlay_set_area_size, "$g_presentation_obj_stats_chart_deathmatch_container", pos1),
      (set_container_overlay, "$g_presentation_obj_stats_chart_deathmatch_container"),

      (store_mul, ":y_needed", ":total_rows", 20),
      (val_add, ":y_needed", 80),
      (try_begin),
        (gt, ":spectator_rows", 0),
        (val_add, ":y_needed", 70),
      (try_end),

      (try_begin),
        (ge, ":total_rows", 17),
        (assign, "$g_stats_chart_update_period", 10),
      (else_try),
        (assign, "$g_stats_chart_update_period", 1),
      (try_end),

      (multiplayer_get_my_player, ":my_player_no"),

      #assuming only 2 teams in scene
      (assign, ":cur_y", ":y_needed"),
      (assign, ":cur_x", 42),
      
      (create_text_overlay, reg0, "str_player_name", 0),
      (overlay_set_color, reg0, 0xFFFFFF),
      (position_set_x, pos1, ":cur_x"),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, reg0, pos1),
      (position_set_x, pos1, 750),
      (position_set_y, pos1, 750),
      (overlay_set_size, reg0, pos1),
      
      (create_text_overlay, reg0, "str_kills", tf_center_justify),
      (overlay_set_color, reg0, 0xFFFFFF),
      (store_add, ":sub_cur_x", ":cur_x", 179), #164
      (position_set_x, pos1, ":sub_cur_x"),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, reg0, pos1),
      (position_set_x, pos1, 750),
      (position_set_y, pos1, 750),
      (overlay_set_size, reg0, pos1),
      
      (create_text_overlay, reg0, "str_deaths", tf_center_justify),
      (overlay_set_color, reg0, 0xFFFFFF),
      (store_add, ":sub_cur_x", ":cur_x", 233), #205
      (position_set_x, pos1, ":sub_cur_x"),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, reg0, pos1),
      (position_set_x, pos1, 750),
      (position_set_y, pos1, 750),
      (overlay_set_size, reg0, pos1),
      
      (create_text_overlay, reg0, "str_ping", tf_center_justify),
      (overlay_set_color, reg0, 0xFFFFFF),
      (store_add, ":sub_cur_x", ":cur_x", 282), #264
      (position_set_x, pos1, ":sub_cur_x"),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, reg0, pos1),
      (position_set_x, pos1, 750),
      (position_set_y, pos1, 750),
      (overlay_set_size, reg0, pos1),
      
      (create_mesh_overlay, reg0, "mesh_white_plane"),
      (overlay_set_color, reg0, 0xFFFFFF),
      (overlay_set_alpha, reg0, 0xD0),
      (store_add, ":sub_cur_x", ":cur_x", 0),
      (position_set_x, pos1, ":sub_cur_x"),
      (store_add, ":sub_cur_y", ":cur_y", -10),
      (position_set_y, pos1, ":sub_cur_y"),
      (overlay_set_position, reg0, pos1),
      (position_set_x, pos1, 15250),
      (position_set_y, pos1, 50),
      (overlay_set_size, reg0, pos1),

      (val_sub, ":cur_y", 35),
      
      (store_add, ":end_cond", ":num_players", 1),
      (try_for_range, ":unused", 0, ":end_cond"),
        (assign, ":max_score_plus_death", -30030),
        (assign, ":max_kills_player_no", -1),
        (try_for_range, ":player_no", 0, ":num_players"),
          (store_add, ":slot_index", ":player_no", multi_data_player_index_list_begin),
          (troop_slot_eq, "trp_multiplayer_data", ":slot_index", 1),
          (player_get_team_no, ":player_team", ":player_no"),
          (this_or_next|eq, ":player_team", 0),
          (eq, ":player_team", 1),

          (player_get_kill_count, ":kill_count", ":player_no"),
          (player_get_death_count, ":death_count", ":player_no"), #get_death_count
          (store_mul, ":player_score_plus_death", ":kill_count", 1000),
          (val_sub, ":player_score_plus_death", ":death_count"),
      
          (this_or_next|gt, ":player_score_plus_death", ":max_score_plus_death"),
          (eq, ":player_score_plus_death", -30030),
      
          (assign, ":max_score_plus_death", ":player_score_plus_death"),
          (assign, ":max_kills_player_no", ":player_no"),
        (try_end),
        (try_begin),
          (ge, ":max_kills_player_no", 0),
          (store_add, ":slot_index", ":max_kills_player_no", multi_data_player_index_list_begin),
          (troop_set_slot, "trp_multiplayer_data", ":slot_index", 0),
          (str_store_player_username, s1, ":max_kills_player_no"),
      
          (try_begin),
            (eq, ":my_player_no", ":max_kills_player_no"),
            (create_mesh_overlay, reg0, "mesh_white_plane"),
            (overlay_set_color, reg0, 0xFFFFFF),
            (overlay_set_alpha, reg0, 0x35),
            (store_add, ":sub_cur_x", ":cur_x", 0),
            (position_set_x, pos1, ":sub_cur_x"),
            (store_add, ":sub_cur_y", ":cur_y", 0),
            (position_set_y, pos1, ":sub_cur_y"),
            (overlay_set_position, reg0, pos1),
            (position_set_x, pos1, 16000),
            (position_set_y, pos1, 1000),
            (overlay_set_size, reg0, pos1),
          (try_end),

          (create_text_overlay, reg0, s1, 0),
          (overlay_set_color, reg0, 0xFFFFFF),
          (position_set_x, pos1, 750),
          (position_set_y, pos1, 750),
          (overlay_set_size, reg0, pos1),
          (position_set_x, pos1, ":cur_x"),
          (position_set_y, pos1, ":cur_y"),
          (overlay_set_position, reg0, pos1),
      
          (player_get_kill_count, reg0, ":max_kills_player_no"),
          (create_text_overlay, reg0, "str_reg0", tf_right_align),
          (overlay_set_color, reg0, 0xFFFFFF),
          (position_set_x, pos1, 750),
          (position_set_y, pos1, 750),
          (overlay_set_size, reg0, pos1),      
          (store_add, ":sub_cur_x", ":cur_x", 188), #173
          (position_set_x, pos1, ":sub_cur_x"),
          (position_set_y, pos1, ":cur_y"),
          (overlay_set_position, reg0, pos1),
      
          (player_get_death_count, reg0, ":max_kills_player_no"),
          (create_text_overlay, reg0, "str_reg0", tf_right_align),
          (overlay_set_color, reg0, 0xFFFFFF),
          (position_set_x, pos1, 750),
          (position_set_y, pos1, 750),
          (overlay_set_size, reg0, pos1),      
          (store_add, ":sub_cur_x", ":cur_x", 238), #223
          (position_set_x, pos1, ":sub_cur_x"),
          (position_set_y, pos1, ":cur_y"),
          (overlay_set_position, reg0, pos1),
      
          (player_get_ping, reg0, ":max_kills_player_no"),
          (create_text_overlay, reg0, "str_reg0", tf_right_align),
          (overlay_set_color, reg0, 0xFFFFFF),
          (position_set_x, pos1, 750),
          (position_set_y, pos1, 750),
          (overlay_set_size, reg0, pos1),
          (store_add, ":sub_cur_x", ":cur_x", 288), #273
          (position_set_x, pos1, ":sub_cur_x"),
          (position_set_y, pos1, ":cur_y"),
          (overlay_set_position, reg0, pos1),
          (val_sub, ":cur_y", 20),
        (else_try),
          (store_add, ":number_of_bots", "$g_multiplayer_num_bots_team_1", "$g_multiplayer_num_bots_team_2"),
          (ge, ":number_of_bots", 1),

          (try_begin),
            (gt, ":number_of_bots", 1),
            (assign, reg0, ":number_of_bots"),
            (create_text_overlay, reg0, "str_bots_reg0_agents", 0),
          (else_try),
            (create_text_overlay, reg0, "str_bot_1_agent", 0),
          (try_end),
      
          (overlay_set_color, reg0, 0xD0D0D0),
          (position_set_x, pos1, 750),
          (position_set_y, pos1, 750),
          (overlay_set_size, reg0, pos1),
          (position_set_x, pos1, ":cur_x"),
          (position_set_y, pos1, ":cur_y"),
          (overlay_set_position, reg0, pos1),
      
          (team_get_bot_kill_count, reg0, 0),
          (assign, ":bot_kill_count", reg0),
          (team_get_bot_kill_count, reg0, 1),
          (val_add, ":bot_kill_count", reg0),
          (assign, reg0, ":bot_kill_count"),
          (create_text_overlay, reg0, "str_reg0", tf_right_align),
          (overlay_set_color, reg0, 0xD0D0D0),
          (position_set_x, pos1, 750),
          (position_set_y, pos1, 750),
          (overlay_set_size, reg0, pos1),
          (store_add, ":sub_cur_x", ":cur_x", 188), #173
          (position_set_x, pos1, ":sub_cur_x"),
          (position_set_y, pos1, ":cur_y"),
          (overlay_set_position, reg0, pos1),
      
          (team_get_bot_death_count, reg0, 0),
          (assign, ":bot_death_count", reg0),
          (team_get_bot_death_count, reg0, 1),
          (val_add, ":bot_death_count", reg0),
          (assign, reg0, ":bot_death_count"),
          (create_text_overlay, reg0, "str_reg0", tf_right_align),
          (overlay_set_color, reg0, 0xD0D0D0),
          (position_set_x, pos1, 750),
          (position_set_y, pos1, 750),
          (overlay_set_size, reg0, pos1),
          (store_add, ":sub_cur_x", ":cur_x", 238), #223
          (position_set_x, pos1, ":sub_cur_x"),
          (position_set_y, pos1, ":cur_y"),
          (overlay_set_position, reg0, pos1),
          (val_sub, ":cur_y", 20),

          (assign, ":end_cond", 0), #all players are written, break
        (else_try),
          (assign, ":end_cond", 0), #all players are written, break
        (try_end),
      (try_end),

      (assign, ":cur_x", 42),

      #white line between playing players and spectators
      (create_mesh_overlay, reg0, "mesh_white_plane"),
      (overlay_set_color, reg0, 0xFFFFFF),
      (overlay_set_alpha, reg0, 0xD0),
      (store_add, ":sub_cur_x", ":cur_x", 0),
      (position_set_x, pos1, ":sub_cur_x"),
      (store_add, ":sub_cur_y", ":cur_y", 10),
      (position_set_y, pos1, ":sub_cur_y"),
      (overlay_set_position, reg0, pos1),
      (position_set_x, pos1, 15250),
      (position_set_y, pos1, 50),
      (overlay_set_size, reg0, pos1), 

      (try_begin),
        (gt, ":spectator_rows", 0),

        (assign, ":cur_x", 75),
        (val_sub, ":cur_y", 50),

        #"spectators" text
        (create_text_overlay, reg0, "str_spectators", 0),
        (overlay_set_color, reg0, 0xFFFFFF),
        (position_set_x, pos1, ":cur_x"),
        (position_set_y, pos1, ":cur_y"),
        (overlay_set_position, reg0, pos1),
        (position_set_x, pos1, 1000),
        (position_set_y, pos1, 1000),
        (overlay_set_size, reg0, pos1),

        (create_text_overlay, reg0, "str_ping", tf_center_justify),
        (overlay_set_color, reg0, 0xFFFFFF),
        (store_add, ":sub_cur_x", ":cur_x", 218), #200
        (position_set_x, pos1, ":sub_cur_x"),
        (position_set_y, pos1, ":cur_y"),
        (overlay_set_position, reg0, pos1),
        (position_set_x, pos1, 750),
        (position_set_y, pos1, 750),
        (overlay_set_size, reg0, pos1),

        #white line for spectators list
        (create_mesh_overlay, reg0, "mesh_white_plane"),
        (overlay_set_color, reg0, 0xFFFFFF),
        (overlay_set_alpha, reg0, 0xD0),
        (store_add, ":sub_cur_x", ":cur_x", 0),
        (position_set_x, pos1, ":sub_cur_x"),
        (store_add, ":sub_cur_y", ":cur_y", -10),
        (position_set_y, pos1, ":sub_cur_y"),
        (overlay_set_position, reg0, pos1),
        (position_set_x, pos1, 12000),
        (position_set_y, pos1, 50),
        (overlay_set_size, reg0, pos1), 

        (val_sub, ":cur_y", 30),

        (assign, ":font_color", 0xC0C0C0),

        (store_add, ":end_cond", ":num_players", 1),
        (try_for_range, ":player_no", 0, ":end_cond"),
          (store_add, ":slot_index", ":player_no", multi_data_player_index_list_begin),
          (troop_slot_eq, "trp_multiplayer_data", ":slot_index", 1),

          (player_get_team_no, ":player_team", ":player_no"),
          (eq, ":player_team", multi_team_spectator), #to not to allow dedicated server to pass below, dedicated servers have -1 for team_no not 2(multi_team_spectator).

          (troop_set_slot, "trp_multiplayer_data", ":slot_index", 1),

          (try_begin),
            (eq, ":my_player_no", ":player_no"),
            (create_mesh_overlay, reg0, "mesh_white_plane"),
            (overlay_set_color, reg0, 0xFFFFFF),
            (overlay_set_alpha, reg0, 0x35),
            (store_add, ":sub_cur_x", ":cur_x", 0),
            (position_set_x, pos1, ":sub_cur_x"),
            (store_add, ":sub_cur_y", ":cur_y", 0),
            (position_set_y, pos1, ":sub_cur_y"),
            (overlay_set_position, reg0, pos1),
            (position_set_x, pos1, 12000), #16500
            (position_set_y, pos1, 1000),
            (overlay_set_size, reg0, pos1),
          (try_end),

          (str_store_player_username, s1, ":player_no"),
          (create_text_overlay, reg0, s1, 0),
          (overlay_set_color, reg0, ":font_color"),
          (position_set_x, pos1, 750),
          (position_set_y, pos1, 750),
          (overlay_set_size, reg0, pos1),
          (position_set_x, pos1, ":cur_x"),
          (position_set_y, pos1, ":cur_y"),
          (overlay_set_position, reg0, pos1),
          
          (player_get_ping, reg0, ":player_no"),
          (create_text_overlay, reg0, "str_reg0", tf_right_align),
          (overlay_set_color, reg0, ":font_color"),
          (position_set_x, pos1, 750),
          (position_set_y, pos1, 750),
          (overlay_set_size, reg0, pos1),
          (store_add, ":sub_cur_x", ":cur_x", 215), #200
          (position_set_x, pos1, ":sub_cur_x"),
          (position_set_y, pos1, ":cur_y"),
          (overlay_set_position, reg0, pos1),
          (val_sub, ":cur_y", 20),      
        (try_end),
      (try_end),

      (omit_key_once, key_mouse_scroll_up),
      (omit_key_once, key_mouse_scroll_down),
      
      (presentation_set_duration, 999999),
      ]),
    (ti_on_presentation_run,
     [(store_trigger_param_1, ":cur_time"),
      (try_begin),
        (this_or_next|key_clicked, key_mouse_scroll_up),
        (key_clicked, key_mouse_scroll_down),
        (omit_key_once, key_mouse_scroll_up),
        (omit_key_once, key_mouse_scroll_down),
      (try_end),
      (try_begin),
        (eq, "$g_multiplayer_stats_chart_opened_manually", 1),
        (neg|game_key_is_down, gk_leave),
        (assign, "$g_multiplayer_stats_chart_opened_manually", 0),
        (clear_omitted_keys),
        (presentation_set_duration, 0),
      (try_end),
      (try_begin),
        (store_mul, ":update_period_time_limit", "$g_stats_chart_update_period", 1000),
        (gt, ":cur_time", ":update_period_time_limit"),
        (clear_omitted_keys),
        (presentation_set_duration, 0),
        (start_presentation, "prsnt_multiplayer_stats_chart_deathmatch"),
      (try_end),
      ]),
    ]),

  ("multiplayer_escape_menu", prsntf_manual_end_only, 0, [
    (ti_on_presentation_load,
     [(set_fixed_point_multiplier, 1000),

      (create_mesh_overlay, reg0, "mesh_mp_ingame_menu"),
      (position_set_x, pos1, 250),
      (position_set_y, pos1, 80),
      (overlay_set_position, reg0, pos1),
      (position_set_x, pos1, 1000),
      (position_set_y, pos1, 1000),
      (overlay_set_size, reg0, pos1),

      (str_clear, s0),
      (create_text_overlay, "$g_presentation_obj_escape_menu_container", s0, tf_scrollable_style_2),
      (position_set_x, pos1, 285),
      (position_set_y, pos1, 75),
      (overlay_set_position, "$g_presentation_obj_escape_menu_container", pos1),
      (position_set_x, pos1, 405),
      (position_set_y, pos1, 550),
      (overlay_set_area_size, "$g_presentation_obj_escape_menu_container", pos1),
      (set_container_overlay, "$g_presentation_obj_escape_menu_container"),

      (assign, ":cur_y", 500),

      (create_text_overlay, reg0, "str_choose_an_option", 0),
      (overlay_set_color, reg0, 0xFFFFFF),
      (position_set_x, pos1, 0),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, reg0, pos1),
      (val_sub, ":cur_y", escape_menu_item_height),

      (create_button_overlay, "$g_presentation_obj_escape_menu_1", "str_choose_faction", 0),
      (overlay_set_color, "$g_presentation_obj_escape_menu_1", 0xFFFFFF),
      (multiplayer_get_my_team, ":my_team"),
      (assign, "$g_presentation_obj_escape_menu_2", -1),
      (assign, "$g_presentation_obj_escape_menu_3", -1),
      (assign, "$g_presentation_obj_escape_menu_6", -1),
      (assign, "$g_presentation_obj_escape_menu_7", -1),
      (assign, "$g_presentation_obj_escape_menu_8", -1),
      (assign, "$g_presentation_obj_escape_menu_9", -1),
      (assign, "$g_presentation_obj_escape_menu_10", -1),
      (assign, "$g_presentation_obj_escape_menu_11", -1),
      (assign, "$g_presentation_obj_escape_menu_12", -1),
      (assign, "$g_presentation_obj_escape_menu_13", -1),
      (try_begin),
        (lt, ":my_team", multi_team_spectator),
        (create_button_overlay, "$g_presentation_obj_escape_menu_2", "str_choose_troop", 0),
        (overlay_set_color, "$g_presentation_obj_escape_menu_2", 0xFFFFFF),
        (multiplayer_get_my_troop, ":my_troop"),
        (try_begin),
          (ge, ":my_troop", 0),
          (create_button_overlay, "$g_presentation_obj_escape_menu_3", "str_choose_items", 0),
          (overlay_set_color, "$g_presentation_obj_escape_menu_3", 0xFFFFFF),
        (try_end),
      (try_end),
      (create_button_overlay, "$g_presentation_obj_escape_menu_4", "str_options", 0),
      (overlay_set_color, "$g_presentation_obj_escape_menu_4", 0xFFFFFF),
      (create_button_overlay, "$g_presentation_obj_escape_menu_5", "str_redefine_keys", 0),
      (overlay_set_color, "$g_presentation_obj_escape_menu_5", 0xFFFFFF),

      (create_button_overlay, "$g_presentation_obj_escape_menu_13", "@Show game rules", 0),
      (overlay_set_color, "$g_presentation_obj_escape_menu_13", 0xFFFFFF),

      (multiplayer_get_my_player, ":my_player_no"),
      (try_begin),
        (this_or_next|eq, "$g_multiplayer_maps_voteable", 1),
        (this_or_next|eq, "$g_multiplayer_factions_voteable", 1),
        (this_or_next|gt, "$g_multiplayer_num_bots_voteable", 0),
        (this_or_next|eq, "$g_multiplayer_kick_voteable", 1),
        (eq, "$g_multiplayer_ban_voteable", 1),
        (create_button_overlay, "$g_presentation_obj_escape_menu_6", "str_submit_a_poll", 0),
        (overlay_set_color, "$g_presentation_obj_escape_menu_6", 0xFFFFFF),
        (assign, "$g_presentation_obj_escape_menu_6_available", 1),
        (try_begin),
          (ge, ":my_player_no", 0),
          (player_get_slot, ":last_poll_time", ":my_player_no", slot_player_poll_disabled_until_time),
          (store_mission_timer_a, ":mission_timer"),
          (lt, ":mission_timer", ":last_poll_time"),
          (overlay_set_color, "$g_presentation_obj_escape_menu_6", 0x888888),
          (overlay_set_hilight_color, "$g_presentation_obj_escape_menu_6", 0x888888),
          (assign, "$g_presentation_obj_escape_menu_6_available", 0),
        (try_end),
      (try_end),

      (try_begin),
        (ge, ":my_player_no", 0),
        (player_is_admin, ":my_player_no"),
        (create_button_overlay, "$g_presentation_obj_escape_menu_7", "str_administrator_panel", 0),
        (overlay_set_color, "$g_presentation_obj_escape_menu_7", 0xFFFFFF),
        (create_button_overlay, "$g_presentation_obj_escape_menu_8", "str_kick_player", 0),
        (overlay_set_color, "$g_presentation_obj_escape_menu_8", 0xFFFFFF),
        (create_button_overlay, "$g_presentation_obj_escape_menu_9", "str_ban_player", 0),
        (overlay_set_color, "$g_presentation_obj_escape_menu_9", 0xFFFFFF),
      (try_end),

      (create_button_overlay, "$g_presentation_obj_escape_menu_11", "str_mute_player", 0),
      (overlay_set_color, "$g_presentation_obj_escape_menu_11", 0xFFFFFF),

      (try_begin),
        (assign, "$g_presentation_obj_escape_menu_12", -1),
        (assign, ":any_muted", 0),
        (get_max_players, ":num_players"),
        (try_for_range, ":player_no", 0, ":num_players"),
          (player_is_active, ":player_no"),
          (player_get_is_muted, ":is_muted", ":player_no"),
          (eq, ":is_muted", 1),
          (assign, ":any_muted", 1),
        (try_end),
        (eq, ":any_muted", 1),
        (create_button_overlay, "$g_presentation_obj_escape_menu_12", "str_unmute_player", 0),
        (overlay_set_color, "$g_presentation_obj_escape_menu_12", 0xFFFFFF),
      (try_end),

      (create_button_overlay, "$g_presentation_obj_escape_menu_10", "str_quit", 0),
      (overlay_set_color, "$g_presentation_obj_escape_menu_10", 0xFFFFFF),

      (position_set_x, pos1, 130),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, "$g_presentation_obj_escape_menu_1", pos1),
      (try_begin),
        (ge, "$g_presentation_obj_escape_menu_2", 0),
        (val_sub, ":cur_y", escape_menu_item_height),
        (position_set_y, pos1, ":cur_y"),
        (overlay_set_position, "$g_presentation_obj_escape_menu_2", pos1),
      (try_end),
      (try_begin),
        (ge, "$g_presentation_obj_escape_menu_3", 0),
        (val_sub, ":cur_y", escape_menu_item_height),
        (position_set_y, pos1, ":cur_y"),
        (overlay_set_position, "$g_presentation_obj_escape_menu_3", pos1),
      (try_end),
      (val_sub, ":cur_y", escape_menu_item_height),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, "$g_presentation_obj_escape_menu_4", pos1),
      (val_sub, ":cur_y", escape_menu_item_height),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, "$g_presentation_obj_escape_menu_5", pos1),
      (val_sub, ":cur_y", escape_menu_item_height),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, "$g_presentation_obj_escape_menu_13", pos1),
      (try_begin),
        (ge, "$g_presentation_obj_escape_menu_6", 0),
        (val_sub, ":cur_y", escape_menu_item_height),
        (position_set_y, pos1, ":cur_y"),
        (overlay_set_position, "$g_presentation_obj_escape_menu_6", pos1),
      (try_end),
      (try_begin),
        (ge, "$g_presentation_obj_escape_menu_7", 0),
        (val_sub, ":cur_y", escape_menu_item_height),
        (position_set_y, pos1, ":cur_y"),
        (overlay_set_position, "$g_presentation_obj_escape_menu_7", pos1),
      (try_end),
      (try_begin),
        (ge, "$g_presentation_obj_escape_menu_8", 0),
        (val_sub, ":cur_y", escape_menu_item_height),
        (position_set_y, pos1, ":cur_y"),
        (overlay_set_position, "$g_presentation_obj_escape_menu_8", pos1),
      (try_end),
      (try_begin),
        (ge, "$g_presentation_obj_escape_menu_9", 0),
        (val_sub, ":cur_y", escape_menu_item_height),
        (position_set_y, pos1, ":cur_y"),
        (overlay_set_position, "$g_presentation_obj_escape_menu_9", pos1),
      (try_end),
      (val_sub, ":cur_y", escape_menu_item_height),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, "$g_presentation_obj_escape_menu_11", pos1),
      (try_begin),
        (ge, "$g_presentation_obj_escape_menu_12", 0),
        (val_sub, ":cur_y", escape_menu_item_height),
        (position_set_y, pos1, ":cur_y"),
        (overlay_set_position, "$g_presentation_obj_escape_menu_12", pos1),
      (try_end),
      (val_sub, ":cur_y", escape_menu_item_height),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, "$g_presentation_obj_escape_menu_10", pos1),
      (presentation_set_duration, 999999),
      ]),
    (ti_on_presentation_event_state_change,
     [(store_trigger_param_1, ":object"),
      (try_begin),
        (eq, ":object", "$g_presentation_obj_escape_menu_1"),
        (presentation_set_duration, 0),
        (start_presentation, "prsnt_multiplayer_team_select"),
      (else_try),
        (eq, ":object", "$g_presentation_obj_escape_menu_2"),
        (presentation_set_duration, 0),
        (start_presentation, "prsnt_multiplayer_troop_select"),
      (else_try),
        (eq, ":object", "$g_presentation_obj_escape_menu_3"),
        (presentation_set_duration, 0),
        (assign, "$g_presentation_state", 0),
        (start_presentation, "prsnt_multiplayer_item_select"),
      (else_try),
        (eq, ":object", "$g_presentation_obj_escape_menu_4"),
        (presentation_set_duration, 0),
        (change_screen_options),
      (else_try),
        (eq, ":object", "$g_presentation_obj_escape_menu_5"),
        (presentation_set_duration, 0),
        (change_screen_controls),
      (else_try),
        (eq, ":object", "$g_presentation_obj_escape_menu_6"),
        (eq, "$g_presentation_obj_escape_menu_6_available", 1),
        (presentation_set_duration, 0),
        (start_presentation, "prsnt_multiplayer_poll_menu"),
      (else_try),
        (eq, ":object", "$g_presentation_obj_escape_menu_7"),
        (presentation_set_duration, 0),
        (multiplayer_send_message_to_server, multiplayer_event_open_admin_panel),
      (else_try),
        (eq, ":object", "$g_presentation_obj_escape_menu_8"),
        (presentation_set_duration, 0),
        (assign, "$g_multiplayer_players_list_action_type", 3), #admin kick
        (start_presentation, "prsnt_multiplayer_show_players_list"),
      (else_try),
        (eq, ":object", "$g_presentation_obj_escape_menu_9"),
        (presentation_set_duration, 0),
        (assign, "$g_multiplayer_players_list_action_type", 4), #admin ban
        (start_presentation, "prsnt_multiplayer_show_players_list"),
      (else_try),
        (eq, ":object", "$g_presentation_obj_escape_menu_10"),
        (presentation_set_duration, 0),
        (finish_mission, 0),
      (else_try),
        (eq, ":object", "$g_presentation_obj_escape_menu_11"),
        (presentation_set_duration, 0),
        (assign, "$g_multiplayer_players_list_action_type", 5), #mute player
        (start_presentation, "prsnt_multiplayer_show_players_list"),
      (else_try),
        (eq, ":object", "$g_presentation_obj_escape_menu_12"),
        (presentation_set_duration, 0),
        (assign, "$g_multiplayer_players_list_action_type", 6), #unmute player
        (start_presentation, "prsnt_multiplayer_show_players_list"),
      (else_try),
        (eq, ":object", "$g_presentation_obj_escape_menu_13"),
        (presentation_set_duration, 0),
        (multiplayer_send_message_to_server, multiplayer_event_open_game_rules),
      (try_end),
      ]),
    (ti_on_presentation_run,
     [(store_trigger_param_1, ":cur_time"),
      (try_begin),
        (this_or_next|key_clicked, key_escape),
        (key_clicked, key_xbox_start),
        (gt, ":cur_time", 200),
        (presentation_set_duration, 0),
      (try_end),
      ]),
    ]),

  ("multiplayer_poll_menu", prsntf_manual_end_only, 0, [
    (ti_on_presentation_load,
     [(set_fixed_point_multiplier, 1000),

      (create_mesh_overlay, reg0, "mesh_mp_ingame_menu"),
      (position_set_x, pos1, 250),
      (position_set_y, pos1, 80),
      (overlay_set_position, reg0, pos1),
      (position_set_x, pos1, 1000),
      (position_set_y, pos1, 1000),
      (overlay_set_size, reg0, pos1),

      (str_clear, s0),
      (create_text_overlay, "$g_presentation_obj_poll_menu_container", s0, tf_scrollable_style_2),
      (position_set_x, pos1, 285),
      (position_set_y, pos1, 125),
      (overlay_set_position, "$g_presentation_obj_poll_menu_container", pos1),
      (position_set_x, pos1, 405),
      (position_set_y, pos1, 500),
      (overlay_set_area_size, "$g_presentation_obj_poll_menu_container", pos1),
      (set_container_overlay, "$g_presentation_obj_poll_menu_container"),

      (assign, "$g_presentation_obj_poll_menu_1", -1),
      (assign, "$g_presentation_obj_poll_menu_4", -1),
      (assign, "$g_presentation_obj_poll_menu_5", -1),

      (assign, ":cur_y", 450),

      (create_text_overlay, reg0, "str_choose_a_poll_type", 0),
      (overlay_set_color, reg0, 0xFFFFFF),
      (position_set_x, pos1, 0),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, reg0, pos1),
      (val_sub, ":cur_y", escape_menu_item_height),

      (position_set_x, pos1, 60),

      (try_begin),
        (eq, "$g_multiplayer_maps_voteable", 1),
        (create_button_overlay, "$g_presentation_obj_poll_menu_1", "str_poll_for_changing_the_map", 0),
        (overlay_set_color, "$g_presentation_obj_poll_menu_1", 0xFFFFFF),
        (position_set_y, pos1, ":cur_y"),
        (overlay_set_position, "$g_presentation_obj_poll_menu_1", pos1),
        (val_sub, ":cur_y", escape_menu_item_height),
      (try_end),
      (try_begin),
        (eq, "$g_multiplayer_factions_voteable", 1),
        (create_button_overlay, "$g_presentation_obj_poll_menu_4", "str_poll_for_changing_the_map_and_factions", 0),
        (overlay_set_color, "$g_presentation_obj_poll_menu_4", 0xFFFFFF),
        (position_set_y, pos1, ":cur_y"),
        (overlay_set_position, "$g_presentation_obj_poll_menu_4", pos1),
        (val_sub, ":cur_y", escape_menu_item_height),
      (try_end),
      (try_begin),
        (gt, "$g_multiplayer_num_bots_voteable", 0),
        (create_button_overlay, "$g_presentation_obj_poll_menu_5", "str_poll_for_changing_number_of_bots", 0),
        (overlay_set_color, "$g_presentation_obj_poll_menu_5", 0xFFFFFF),
        (position_set_y, pos1, ":cur_y"),
        (overlay_set_position, "$g_presentation_obj_poll_menu_5", pos1),
        (val_sub, ":cur_y", escape_menu_item_height),
      (try_end),
      (try_begin),
        (eq, "$g_multiplayer_kick_voteable", 1),
        (create_button_overlay, "$g_presentation_obj_poll_menu_2", "str_poll_for_kicking_a_player", 0),
        (overlay_set_color, "$g_presentation_obj_poll_menu_2", 0xFFFFFF),
        (position_set_y, pos1, ":cur_y"),
        (overlay_set_position, "$g_presentation_obj_poll_menu_2", pos1),
        (val_sub, ":cur_y", escape_menu_item_height),
      (try_end),
      (try_begin),
        (eq, "$g_multiplayer_ban_voteable", 1),
        (create_button_overlay, "$g_presentation_obj_poll_menu_3", "str_poll_for_banning_a_player", 0),
        (overlay_set_color, "$g_presentation_obj_poll_menu_3", 0xFFFFFF),
        (position_set_y, pos1, ":cur_y"),
        (overlay_set_position, "$g_presentation_obj_poll_menu_3", pos1),
      (try_end),

      (presentation_set_duration, 999999),
      ]),
    (ti_on_presentation_event_state_change,
     [(store_trigger_param_1, ":object"),
      (try_begin),
        (eq, ":object", "$g_presentation_obj_poll_menu_1"),
        (presentation_set_duration, 0),
        (assign, "$g_multiplayer_maps_list_action_type", 1), #poll map
        (start_presentation, "prsnt_multiplayer_show_maps_list"),
      (else_try),
        (eq, ":object", "$g_presentation_obj_poll_menu_2"),
        (presentation_set_duration, 0),
        (assign, "$g_multiplayer_players_list_action_type", 1), #poll kick
        (start_presentation, "prsnt_multiplayer_show_players_list"),
      (else_try),
        (eq, ":object", "$g_presentation_obj_poll_menu_3"),
        (presentation_set_duration, 0),
        (assign, "$g_multiplayer_players_list_action_type", 2), #poll ban
        (start_presentation, "prsnt_multiplayer_show_players_list"),
      (else_try),
        (eq, ":object", "$g_presentation_obj_poll_menu_4"),
        (presentation_set_duration, 0),
        (assign, "$g_multiplayer_maps_list_action_type", 2), #poll map and factions
        (start_presentation, "prsnt_multiplayer_show_maps_list"),
      (else_try),
        (eq, ":object", "$g_presentation_obj_poll_menu_5"),
        (presentation_set_duration, 0),
        (assign, "$g_multiplayer_number_of_bots_list_action_type", 1), #for team 1
        (start_presentation, "prsnt_multiplayer_show_number_of_bots_list"),
      (try_end),
      ]),
    (ti_on_presentation_run,
     [(store_trigger_param_1, ":cur_time"),
      (try_begin),
        (this_or_next|key_clicked, key_escape),
        (key_clicked, key_xbox_start),
        (gt, ":cur_time", 200),
        (presentation_set_duration, 0),
      (try_end),
      ]),
    ]),

  ("multiplayer_show_players_list", prsntf_manual_end_only, 0, [
    (ti_on_presentation_load,
     [(set_fixed_point_multiplier, 1000),

      (create_mesh_overlay, reg0, "mesh_mp_ingame_menu"),
      (position_set_x, pos1, 250),
      (position_set_y, pos1, 80),
      (overlay_set_position, reg0, pos1),
      (position_set_x, pos1, 1000),
      (position_set_y, pos1, 1000),
      (overlay_set_size, reg0, pos1),

      (str_clear, s0),
      (create_text_overlay, "$g_presentation_obj_show_players_1", s0, tf_scrollable_style_2),
      (position_set_x, pos1, 285),
      (position_set_y, pos1, 125),
      (overlay_set_position, "$g_presentation_obj_show_players_1", pos1),
      (position_set_x, pos1, 405),
      (position_set_y, pos1, 500),
      (overlay_set_area_size, "$g_presentation_obj_show_players_1", pos1),
      (set_container_overlay, "$g_presentation_obj_show_players_1"),

      #(assign, ":cur_y", 450),
      (multiplayer_get_my_player, ":my_player_no"),

      (assign, ":cur_y", 10),
      (get_max_players, ":num_players"),
      (try_for_range, ":player_no", 1, ":num_players"), #0 is server no need to write it
        (player_is_active, ":player_no"),

        (assign, ":continue", 0),
        (try_begin),
          (neq, "$g_multiplayer_players_list_action_type", 5),
          (neq, "$g_multiplayer_players_list_action_type", 6),
          (assign, ":continue", 1),
        (else_try),
          (eq, "$g_multiplayer_players_list_action_type", 5),
          (neq, ":player_no", ":my_player_no"),
          (player_get_is_muted, ":is_muted", ":player_no"),
          (eq, ":is_muted", 0),
          (assign, ":continue", 1),
        (else_try),
          (eq, "$g_multiplayer_players_list_action_type", 6),
          (neq, ":player_no", ":my_player_no"),
          (player_get_is_muted, ":is_muted", ":player_no"),
          (eq, ":is_muted", 1),
          (assign, ":continue", 1),
        (try_end),
        (eq, ":continue", 1),
      
        (val_add, ":cur_y", escape_menu_item_height),
      (try_end),

      (create_text_overlay, reg0, "str_choose_a_player", 0),
      (overlay_set_color, reg0, 0xFFFFFF),
      (position_set_x, pos1, 0),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, reg0, pos1),
      (val_sub, ":cur_y", escape_menu_item_height),

      (get_max_players, ":num_players"),
      (try_for_range, ":player_no", 1, ":num_players"), #0 is server no need to write it
        (player_is_active, ":player_no"),
        (player_set_slot, ":player_no", slot_player_button_index, -1),

        (assign, ":continue", 0),
        (try_begin),
          (neq, "$g_multiplayer_players_list_action_type", 5),
          (neq, "$g_multiplayer_players_list_action_type", 6),
          (assign, ":continue", 1),
        (else_try),
          (eq, "$g_multiplayer_players_list_action_type", 5),
          (neq, ":player_no", ":my_player_no"),
          (player_get_is_muted, ":is_muted", ":player_no"),
          (eq, ":is_muted", 0),
          (assign, ":continue", 1),
        (else_try),
          (eq, "$g_multiplayer_players_list_action_type", 6),
          (neq, ":player_no", ":my_player_no"),
          (player_get_is_muted, ":is_muted", ":player_no"),
          (eq, ":is_muted", 1),
          (assign, ":continue", 1),
        (try_end),
        (eq, ":continue", 1),
        (str_store_player_username, s0, ":player_no"),
      
        (create_button_overlay, ":overlay_id", s0, 0),
        (overlay_set_color, ":overlay_id", 0xFFFFFF),
        (position_set_x, pos1, 130),
        (position_set_y, pos1, ":cur_y"),
        (overlay_set_position, ":overlay_id", pos1),
        (val_sub, ":cur_y", escape_menu_item_height),
        (player_set_slot, ":player_no", slot_player_button_index, ":overlay_id"),
      (try_end),

      (presentation_set_duration, 999999),
      ]),
    (ti_on_presentation_event_state_change,
     [(store_trigger_param_1, ":object"),
      (get_max_players, ":num_players"),
      (try_for_range, ":player_no", 1, ":num_players"), #0 is server no need to write it
        (player_is_active, ":player_no"),
        (player_slot_eq, ":player_no", slot_player_button_index, ":object"),
        (try_begin),
          (is_between, "$g_multiplayer_players_list_action_type", 1, 3), #poll kick or poll ban
          (try_begin),
            (multiplayer_get_my_player, ":my_player_no"),
            (ge, ":my_player_no", 0),
            (multiplayer_send_2_int_to_server, multiplayer_event_start_new_poll, "$g_multiplayer_players_list_action_type", ":player_no"),
            (store_mission_timer_a, ":mission_timer"),
            (val_add, ":mission_timer", multiplayer_poll_disable_period),
            (player_set_slot, ":my_player_no", slot_player_poll_disabled_until_time, ":mission_timer"),
          (try_end),
        (else_try),
          (eq, "$g_multiplayer_players_list_action_type", 3), #admin kick
          (multiplayer_send_int_to_server, multiplayer_event_admin_kick_player, ":player_no"),
        (else_try),
          (eq, "$g_multiplayer_players_list_action_type", 4), #admin ban
          (multiplayer_send_int_to_server, multiplayer_event_admin_ban_player, ":player_no"),
        (else_try),
          (eq, "$g_multiplayer_players_list_action_type", 5), #mute player
          (player_set_is_muted, ":player_no", 1),
        (else_try),
          (eq, "$g_multiplayer_players_list_action_type", 6), #unmute player
          (player_set_is_muted, ":player_no", 0),
        (try_end),
        (assign, ":num_players", 0), #break
        (presentation_set_duration, 0),
      (try_end),
      ]),
    (ti_on_presentation_run,
     [(store_trigger_param_1, ":cur_time"),
      (try_begin),
        (this_or_next|key_clicked, key_escape),
        (key_clicked, key_xbox_start),
        (gt, ":cur_time", 200),
        (presentation_set_duration, 0),
      (try_end),
      ]),
    ]),

  ("multiplayer_show_maps_list", prsntf_manual_end_only, 0, [
    (ti_on_presentation_load,
     [(set_fixed_point_multiplier, 1000),

      (create_mesh_overlay, reg0, "mesh_mp_ingame_menu"),
      (position_set_x, pos1, 250),
      (position_set_y, pos1, 80),
      (overlay_set_position, reg0, pos1),
      (position_set_x, pos1, 1000),
      (position_set_y, pos1, 1000),
      (overlay_set_size, reg0, pos1),

      (str_clear, s0),
      (create_text_overlay, "$g_presentation_obj_show_maps_list_menu_container", s0, tf_scrollable_style_2),
      (position_set_x, pos1, 285),
      (position_set_y, pos1, 125),
      (overlay_set_position, "$g_presentation_obj_show_maps_list_menu_container", pos1),
      (position_set_x, pos1, 405),
      (position_set_y, pos1, 500),
      (overlay_set_area_size, "$g_presentation_obj_show_maps_list_menu_container", pos1),
      (set_container_overlay, "$g_presentation_obj_show_maps_list_menu_container"),

      (call_script, "script_multiplayer_fill_map_game_types", "$g_multiplayer_game_type"),
      (assign, ":num_maps", reg0),
      (store_mul, ":cur_y", ":num_maps", escape_menu_item_height),
      (val_add, ":cur_y", 10),

      (create_text_overlay, reg0, "str_choose_a_map", 0),
      (overlay_set_color, reg0, 0xFFFFFF),
      (position_set_x, pos1, 0),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, reg0, pos1),
      (val_sub, ":cur_y", escape_menu_item_height),

      (assign, ":overlay_id", -1),
      (try_for_range, ":i_map", 0, ":num_maps"),
        (store_add, ":map_slot", ":i_map", multi_data_maps_for_game_type_begin),
        (troop_get_slot, ":map_no", "trp_multiplayer_data", ":map_slot"),
        (store_sub, ":string_index", ":map_no", multiplayer_scenes_begin),
        (val_add, ":string_index", multiplayer_scene_names_begin),
        (str_store_string, s0, ":string_index"),
      
        (create_button_overlay, ":overlay_id", s0, 0),
        (overlay_set_color, ":overlay_id", 0xFFFFFF),
        (position_set_x, pos1, 100),
        (position_set_y, pos1, ":cur_y"),
        (overlay_set_position, ":overlay_id", pos1),
        (val_sub, ":cur_y", escape_menu_item_height),
      (try_end),
      (store_add, "$g_show_maps_list_button_list_end_index", ":overlay_id", 1),
      (store_sub, "$g_show_maps_list_button_list_first_index", "$g_show_maps_list_button_list_end_index", ":num_maps"),

      (presentation_set_duration, 999999),
      ]),
    (ti_on_presentation_event_state_change,
     [(store_trigger_param_1, ":object"),
      (try_for_range, ":i_button", "$g_show_maps_list_button_list_first_index", "$g_show_maps_list_button_list_end_index"),
        (eq, ":object", ":i_button"),
        (call_script, "script_multiplayer_fill_map_game_types", "$g_multiplayer_game_type"),
        (store_sub, ":map_slot", ":object", "$g_show_maps_list_button_list_first_index"),
        (val_add, ":map_slot", multi_data_maps_for_game_type_begin),
        (troop_get_slot, ":scene_id", "trp_multiplayer_data", ":map_slot"),
        (presentation_set_duration, 0),
        (try_begin),
          (eq, "$g_multiplayer_maps_list_action_type", 1), #vote for map
          (try_begin),
            (multiplayer_get_my_player, ":my_player_no"),
            (ge, ":my_player_no", 0),
            (multiplayer_send_2_int_to_server, multiplayer_event_start_new_poll, 0, ":scene_id"),
            (store_mission_timer_a, ":mission_timer"),
            (val_add, ":mission_timer", multiplayer_poll_disable_period),
            (player_set_slot, ":my_player_no", slot_player_poll_disabled_until_time, ":mission_timer"),
          (try_end),
        (else_try), #vote for map and factions
          (assign, "$g_multiplayer_factions_list_action_type", 1), #for team 1
          (assign, "$g_multiplayer_poll_for_map_and_faction_data_map", ":scene_id"),
          (start_presentation, "prsnt_multiplayer_show_factions_list"),
        (try_end),
        (assign, "$g_show_maps_list_button_list_end_index", 0), #break;
      (try_end),
      ]),
    (ti_on_presentation_run,
     [(store_trigger_param_1, ":cur_time"),
      (try_begin),
        (this_or_next|key_clicked, key_escape),
        (key_clicked, key_xbox_start),
        (gt, ":cur_time", 200),
        (presentation_set_duration, 0),
      (try_end),
      ]),
    ]),

  ("multiplayer_show_factions_list", prsntf_manual_end_only, 0, [
    (ti_on_presentation_load,
     [(set_fixed_point_multiplier, 1000),

      (create_mesh_overlay, reg0, "mesh_mp_ingame_menu"),
      (position_set_x, pos1, 250),
      (position_set_y, pos1, 80),
      (overlay_set_position, reg0, pos1),
      (position_set_x, pos1, 1000),
      (position_set_y, pos1, 1000),
      (overlay_set_size, reg0, pos1),

      (str_clear, s0),
      (create_text_overlay, "$g_presentation_obj_show_factions_list_menu_container", s0, tf_scrollable_style_2),
      (position_set_x, pos1, 285),
      (position_set_y, pos1, 125),
      (overlay_set_position, "$g_presentation_obj_show_factions_list_menu_container", pos1),
      (position_set_x, pos1, 405),
      (position_set_y, pos1, 500),
      (overlay_set_area_size, "$g_presentation_obj_show_factions_list_menu_container", pos1),
      (set_container_overlay, "$g_presentation_obj_show_factions_list_menu_container"),

      (store_sub, ":num_factions", npc_kingdoms_end, npc_kingdoms_begin),
      (try_begin),
        (eq, "$g_multiplayer_factions_list_action_type", 2),
        (val_sub, ":num_factions", 1),
      (try_end),
      (store_mul, ":cur_y", ":num_factions", escape_menu_item_height),
      (val_add, ":cur_y", 10),

      (assign, reg0, "$g_multiplayer_factions_list_action_type"),
      (create_text_overlay, reg0, "str_choose_a_faction_for_team_reg0", 0),
      (overlay_set_color, reg0, 0xFFFFFF),
      (position_set_x, pos1, 0),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, reg0, pos1),
      (val_sub, ":cur_y", escape_menu_item_height),

      (assign, ":overlay_id", -1),
      (try_for_range, ":i_faction", npc_kingdoms_begin, npc_kingdoms_end),
        (this_or_next|eq, "$g_multiplayer_factions_list_action_type", 1),
        (neq, "$g_multiplayer_poll_for_map_and_faction_data_faction_1", ":i_faction"),
        (str_store_faction_name, s0, ":i_faction"),
        (create_button_overlay, ":overlay_id", s0, 0),
        (overlay_set_color, ":overlay_id", 0xFFFFFF),
        (position_set_x, pos1, 100),
        (position_set_y, pos1, ":cur_y"),
        (overlay_set_position, ":overlay_id", pos1),
        (val_sub, ":cur_y", escape_menu_item_height),
      (try_end),
      (store_add, "$g_show_factions_list_button_list_end_index", ":overlay_id", 1),
      (store_sub, "$g_show_factions_list_button_list_first_index", "$g_show_factions_list_button_list_end_index", ":num_factions"),

      (presentation_set_duration, 999999),
      ]),
    (ti_on_presentation_event_state_change,
     [(store_trigger_param_1, ":object"),
      (try_for_range, ":i_button", "$g_show_factions_list_button_list_first_index", "$g_show_factions_list_button_list_end_index"),
        (eq, ":object", ":i_button"),
        (store_sub, ":faction_no", ":object", "$g_show_factions_list_button_list_first_index"),
        (val_add, ":faction_no", npc_kingdoms_begin),
        (presentation_set_duration, 0),
        (try_begin),
          (eq, "$g_multiplayer_factions_list_action_type", 2), #vote for second team
          (try_begin),
            (ge, ":faction_no", "$g_multiplayer_poll_for_map_and_faction_data_faction_1"),
            (val_add, ":faction_no", 1),
          (try_end),
          (try_begin),
            (multiplayer_get_my_player, ":my_player_no"),
            (ge, ":my_player_no", 0),
            (multiplayer_send_4_int_to_server, multiplayer_event_start_new_poll, 3, "$g_multiplayer_poll_for_map_and_faction_data_map", "$g_multiplayer_poll_for_map_and_faction_data_faction_1", ":faction_no"),
            (store_mission_timer_a, ":mission_timer"),
            (val_add, ":mission_timer", multiplayer_poll_disable_period),
            (player_set_slot, ":my_player_no", slot_player_poll_disabled_until_time, ":mission_timer"),
          (try_end),
        (else_try), #vote for first team
          (assign, "$g_multiplayer_factions_list_action_type", 2), #for team 2
          (assign, "$g_multiplayer_poll_for_map_and_faction_data_faction_1", ":faction_no"),
          (start_presentation, "prsnt_multiplayer_show_factions_list"),
        (try_end),
        (assign, "$g_show_factions_list_button_list_end_index", 0), #break;
      (try_end),
      ]),
    (ti_on_presentation_run,
     [(store_trigger_param_1, ":cur_time"),
      (try_begin),
        (this_or_next|key_clicked, key_escape),
        (key_clicked, key_xbox_start),
        (gt, ":cur_time", 200),
        (presentation_set_duration, 0),
      (try_end),
      ]),
    ]),

  ("multiplayer_show_number_of_bots_list", prsntf_manual_end_only, 0, [
    (ti_on_presentation_load,
     [(set_fixed_point_multiplier, 1000),

      (create_mesh_overlay, reg0, "mesh_mp_ingame_menu"),
      (position_set_x, pos1, 250),
      (position_set_y, pos1, 80),
      (overlay_set_position, reg0, pos1),
      (position_set_x, pos1, 1000),
      (position_set_y, pos1, 1000),
      (overlay_set_size, reg0, pos1),

      (str_clear, s0),
      (create_text_overlay, "$g_presentation_obj_show_number_of_bots_list_menu_container", s0, tf_scrollable_style_2),
      (position_set_x, pos1, 285),
      (position_set_y, pos1, 125),
      (overlay_set_position, "$g_presentation_obj_show_number_of_bots_list_menu_container", pos1),
      (position_set_x, pos1, 405),
      (position_set_y, pos1, 500),
      (overlay_set_area_size, "$g_presentation_obj_show_number_of_bots_list_menu_container", pos1),
      (set_container_overlay, "$g_presentation_obj_show_number_of_bots_list_menu_container"),

      (assign, ":num_options", 0),
      (store_add, ":end_cond", "$g_multiplayer_num_bots_voteable", 1),
      (try_for_range, ":i_number", 0, ":end_cond"),
        (assign, ":i_number_mod_5", ":i_number"),
        (val_mod, ":i_number_mod_5", 5),
        (this_or_next|lt, ":i_number", 10),
        (eq, ":i_number_mod_5", 0),
        (val_add, ":num_options", 1),
      (try_end),

      (store_mul, ":cur_y", ":num_options", escape_menu_item_height),
      (val_add, ":cur_y", 10),

      (assign, reg0, "$g_multiplayer_number_of_bots_list_action_type"),
      (create_text_overlay, reg0, "str_choose_number_of_bots_for_team_reg0", 0),
      (overlay_set_color, reg0, 0xFFFFFF),
      (position_set_x, pos1, 0),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, reg0, pos1),
      (val_sub, ":cur_y", escape_menu_item_height),

      (assign, ":overlay_id", -1),
      (try_for_range, ":i_number", 0, ":end_cond"),
        (assign, ":i_number_mod_5", ":i_number"),
        (val_mod, ":i_number_mod_5", 5),
        (this_or_next|lt, ":i_number", 10),
        (eq, ":i_number_mod_5", 0),
        (assign, reg0, ":i_number"),
        (str_store_string, s0, "str_reg0"),
        (create_button_overlay, ":overlay_id", s0, 0),
        (overlay_set_color, ":overlay_id", 0xFFFFFF),
        (position_set_x, pos1, 100),
        (position_set_y, pos1, ":cur_y"),
        (overlay_set_position, ":overlay_id", pos1),
        (val_sub, ":cur_y", escape_menu_item_height),
      (try_end),
      (store_add, "$g_show_number_of_bots_list_button_list_end_index", ":overlay_id", 1),
      (store_sub, "$g_show_number_of_bots_list_button_list_first_index", "$g_show_number_of_bots_list_button_list_end_index", ":num_options"),

      (presentation_set_duration, 999999),
      ]),
    (ti_on_presentation_event_state_change,
     [(store_trigger_param_1, ":object"),
      (try_for_range, ":i_button", "$g_show_number_of_bots_list_button_list_first_index", "$g_show_number_of_bots_list_button_list_end_index"),
        (eq, ":object", ":i_button"),
        (store_sub, ":value_index", ":object", "$g_show_number_of_bots_list_button_list_first_index"),
        (try_begin),
          (lt, ":value_index", 10),
          (assign, ":used_value", ":value_index"),
        (else_try),
          (store_sub, ":used_value", ":value_index", 8),
          (val_mul, ":used_value", 5),
        (try_end),
        (presentation_set_duration, 0),
        (try_begin),
          (eq, "$g_multiplayer_number_of_bots_list_action_type", 2), #vote for second team
          (try_begin),
            (multiplayer_get_my_player, ":my_player_no"),
            (ge, ":my_player_no", 0),
            (multiplayer_send_3_int_to_server, multiplayer_event_start_new_poll, 4, "$g_multiplayer_poll_number_of_bots_team_1", ":used_value"),
            (store_mission_timer_a, ":mission_timer"),
            (val_add, ":mission_timer", multiplayer_poll_disable_period),
            (player_set_slot, ":my_player_no", slot_player_poll_disabled_until_time, ":mission_timer"),
          (try_end),
        (else_try), #vote for first team
          (assign, "$g_multiplayer_number_of_bots_list_action_type", 2), #for team 2
          (assign, "$g_multiplayer_poll_number_of_bots_team_1", ":used_value"),
          (start_presentation, "prsnt_multiplayer_show_number_of_bots_list"),
        (try_end),
        (assign, "$g_show_number_of_bots_list_button_list_end_index", 0), #break;
      (try_end),
      ]),
    (ti_on_presentation_run,
     [(store_trigger_param_1, ":cur_time"),
      (try_begin),
        (key_clicked, key_escape),
        (gt, ":cur_time", 200),
        (presentation_set_duration, 0),
      (try_end),
      ]),
    ]),

  ("multiplayer_poll", prsntf_read_only|prsntf_manual_end_only, 0, [
    (ti_on_presentation_load,
     [(set_fixed_point_multiplier, 1000),

      (create_mesh_overlay, reg0, "mesh_white_plane"),
      (overlay_set_color, reg0, 0x000000),
      (overlay_set_alpha, reg0, 0x44),
      (position_set_x, pos1, 50),
      (position_set_y, pos1, 50),
      (overlay_set_position, reg0, pos1),
      (position_set_x, pos1, 37500),
      (position_set_y, pos1, 4500),
      (overlay_set_size, reg0, pos1),

      (try_begin),
        (eq, "$g_multiplayer_poll_to_show", 0),
        (store_sub, ":string_index", "$g_multiplayer_poll_value_to_show", multiplayer_scenes_begin),
        (val_add, ":string_index", multiplayer_scene_names_begin),
        (str_store_string, s0, ":string_index"),
        (create_text_overlay, reg0, "str_poll_change_map", tf_center_justify),
      (else_try),
        (eq, "$g_multiplayer_poll_to_show", 1),
        (str_store_player_username, s0, "$g_multiplayer_poll_value_to_show"),
        (create_text_overlay, reg0, "str_poll_kick_player", tf_center_justify),
      (else_try),
        (eq, "$g_multiplayer_poll_to_show", 2),
        (str_store_player_username, s0, "$g_multiplayer_poll_value_to_show"),
        (create_text_overlay, reg0, "str_poll_ban_player", tf_center_justify),
      (else_try),
        (eq, "$g_multiplayer_poll_to_show", 3),
        (store_sub, ":string_index", "$g_multiplayer_poll_value_to_show", multiplayer_scenes_begin),
        (val_add, ":string_index", multiplayer_scene_names_begin),
        (str_store_string, s0, ":string_index"),
        (str_store_faction_name, s1, "$g_multiplayer_poll_value_2_to_show"),
        (str_store_faction_name, s2, "$g_multiplayer_poll_value_3_to_show"),
        (create_text_overlay, reg0, "str_poll_change_map_with_faction", tf_center_justify|tf_scrollable_style_2),
      (else_try),
        (assign, reg0, "$g_multiplayer_poll_value_to_show"),
        (assign, reg1, "$g_multiplayer_poll_value_2_to_show"),
        (str_store_faction_name, s0, "$g_multiplayer_team_1_faction"),
        (str_store_faction_name, s1, "$g_multiplayer_team_2_faction"),
        (create_text_overlay, reg0, "str_poll_change_number_of_bots", tf_center_justify|tf_scrollable_style_2),
      (try_end),
      (overlay_set_color, reg0, 0xFFFFFF),
      (try_begin),
        (neq, "$g_multiplayer_poll_to_show", 3),
        (neq, "$g_multiplayer_poll_to_show", 4),
        (position_set_x, pos1, 400),
        (position_set_y, pos1, 100),
        (overlay_set_position, reg0, pos1),
      (else_try),
        (position_set_x, pos1, 50),
        (position_set_y, pos1, 70),
        (overlay_set_position, reg0, pos1),
        (position_set_x, pos1, 750),
        (position_set_y, pos1, 60),
        (overlay_set_area_size, reg0, pos1),
      (try_end),

      (store_mission_timer_a, ":mission_timer"),
      (store_sub, "$g_multiplayer_poll_last_written_seconds_left", "$g_multiplayer_poll_client_end_time", ":mission_timer"),
      (assign, reg0, "$g_multiplayer_poll_last_written_seconds_left"),

      (create_text_overlay, "$g_presentation_obj_poll_1", "str_poll_time_left", tf_right_align|tf_single_line),
      (overlay_set_color, "$g_presentation_obj_poll_1", 0xFFFFFF),
      (position_set_x, pos1, 790),
      (position_set_y, pos1, 60),
      (overlay_set_position, "$g_presentation_obj_poll_1", pos1),

      (omit_key_once, key_1),
      (omit_key_once, key_2),
      (presentation_set_duration, 999999),
      ]),
    (ti_on_presentation_run,
     [(store_trigger_param_1, ":cur_time"),
      (try_begin),
        (this_or_next|key_clicked, key_escape),
        (this_or_next|key_clicked, key_xbox_start),
        (key_clicked, key_2),
        (gt, ":cur_time", 500),
        (multiplayer_send_int_to_server, multiplayer_event_answer_to_poll, 0),
        (clear_omitted_keys),
        (presentation_set_duration, 0),
      (else_try),
        (key_clicked, key_1),
        (gt, ":cur_time", 500),
        (multiplayer_send_int_to_server, multiplayer_event_answer_to_poll, 1),
        (clear_omitted_keys),
        (presentation_set_duration, 0),
      (try_end),
      (store_mission_timer_a, ":mission_timer"),
      (store_sub, ":time_left", "$g_multiplayer_poll_client_end_time", ":mission_timer"),
      (try_begin),
        (neq, ":time_left", "$g_multiplayer_poll_last_written_seconds_left"),
        (try_begin),
          (lt, ":time_left", 0),
          (clear_omitted_keys),
          (presentation_set_duration, 0),
        (else_try),
          (assign, "$g_multiplayer_poll_last_written_seconds_left", ":time_left"),
          (assign, reg0, "$g_multiplayer_poll_last_written_seconds_left"),
          (overlay_set_text, "$g_presentation_obj_poll_1", "str_poll_time_left"),
        (try_end),
      (try_end),
      ]),
    ]),

  ("tutorial_show_mouse_movement",prsntf_read_only|prsntf_manual_end_only,0,[
      (ti_on_presentation_load,
       [
         (try_begin),
           (this_or_next|eq, "$g_tutorial_mouse_dir", -1),
           (eq, "$g_tutorial_mouse_click", -1),
           (presentation_set_duration, 0),
         (else_try),
           (set_fixed_point_multiplier, 1000),
           (assign, "$g_tutorial_displayed_mouse_dir", "$g_tutorial_mouse_dir"),
           (assign, "$g_tutorial_displayed_mouse_click", "$g_tutorial_mouse_click"),
           (store_add, ":arrow_mesh", "$g_tutorial_mouse_dir", "mesh_mouse_arrow_down"),
           (create_mesh_overlay, reg0, ":arrow_mesh"),
           (position_set_x, pos1, 800),
           (position_set_y, pos1, 800),
           (overlay_set_size, reg0, pos1),
           (position_set_x, pos1, 380),
           (position_set_y, pos1, 500),
           (overlay_set_position, reg0, pos1),
           (try_begin),
             (eq, "$g_tutorial_mouse_click", 0),
             (create_mesh_overlay, reg0, "mesh_mouse_left_click"),
           (else_try),
             (create_mesh_overlay, reg0, "mesh_mouse_right_click"),
           (try_end),
           (position_set_x, pos1, 800),
           (position_set_y, pos1, 800),
           (overlay_set_size, reg0, pos1),
           (position_set_x, pos1, 540),
           (position_set_y, pos1, 500),
           (overlay_set_position, reg0, pos1),
           (create_mesh_overlay, reg0, "mesh_mouse_arrow_plus"),
           (overlay_set_color, reg0, 0xFFFFFF),
           (position_set_x, pos1, 600),
           (position_set_y, pos1, 600),
           (overlay_set_size, reg0, pos1),
           (position_set_x, pos1, 470),
           (position_set_y, pos1, 510),
           (overlay_set_position, reg0, pos1),
           (presentation_set_duration, 999999),
         (try_end),
        ]),
      (ti_on_presentation_run,
       [(try_begin),
          (this_or_next|neq, "$g_tutorial_displayed_mouse_dir", "$g_tutorial_mouse_dir"),
          (neq, "$g_tutorial_displayed_mouse_click", "$g_tutorial_mouse_click"),
          (presentation_set_duration, 0),
          (try_begin),
            (ge, "$g_tutorial_mouse_dir", 0),
            (ge, "$g_tutorial_mouse_click", 0),
            (start_presentation, "prsnt_tutorial_show_mouse_movement"),
          (try_end),
        (try_end),
        ]),
      ]),

  ("name_kingdom",0,mesh_name_kingdom,[
      (ti_on_presentation_load,
       [(set_fixed_point_multiplier, 1000),
        (str_store_string, s1, "str_name_kingdom_text"),
        (create_text_overlay, reg1, s1, tf_center_justify),
        (position_set_x, pos1, 500),
        (position_set_y, pos1, 500),
        (overlay_set_position, reg1, pos1),
        (overlay_set_text, reg1, s1),
        (create_simple_text_box_overlay, "$g_presentation_obj_name_kingdom_1"),
        (position_set_x, pos1, 400),
        (position_set_y, pos1, 400),
        (overlay_set_position, "$g_presentation_obj_name_kingdom_1", pos1),
        (try_begin),
          (eq, "$players_kingdom_name_set", 1),
          (str_store_faction_name, s7, "fac_player_supporters_faction"),
          (overlay_set_text, "$g_presentation_obj_name_kingdom_1", s7),
        (else_try),
          (str_store_troop_name, s0, "trp_player"),
          (overlay_set_text, "$g_presentation_obj_name_kingdom_1", "str_default_kingdom_name"),
          (str_store_string, s7, "str_default_kingdom_name"),
        (try_end),
        
        (create_button_overlay, "$g_presentation_obj_name_kingdom_2", "@Continue...", tf_center_justify),
        (position_set_x, pos1, 500),
        (position_set_y, pos1, 300),
        (overlay_set_position, "$g_presentation_obj_name_kingdom_2", pos1),
        (presentation_set_duration, 999999),
        ]),
      (ti_on_presentation_event_state_change,
       [(store_trigger_param_1, ":object"),
        (try_begin),
          (eq, ":object", "$g_presentation_obj_name_kingdom_1"),
          (str_store_string, s7, s0),
        (else_try),
          (eq, ":object", "$g_presentation_obj_name_kingdom_2"),
          (faction_set_name, "fac_player_supporters_faction", s7),
          (faction_set_color, "fac_player_supporters_faction", 0xFF0000),
          (assign, "$players_kingdom_name_set", 1),
          (presentation_set_duration, 0),
        (try_end),
        ]),
      ]),
  
  ## CC
  ("banner_selection",0,mesh_load_window,[
      (ti_on_presentation_load,
       [(set_fixed_point_multiplier, 1000),
        (str_store_string, s1, "str_banner_selection_text"),
        (create_text_overlay, reg1, s1, tf_center_justify),
        (position_set_x, pos1, 500),
        (position_set_y, pos1, 670),
        (overlay_set_position, reg1, pos1),
        (overlay_set_text, reg1, s1),
        # (create_button_overlay, "$g_presentation_obj_banner_selection_1", "@Next Page", tf_center_justify),
        # (position_set_x, pos1, 500),
        # (position_set_y, pos1, 50),
        # (overlay_set_position, "$g_presentation_obj_banner_selection_1", pos1),

        (str_clear, s0),
        (create_text_overlay, reg1, s0, tf_scrollable),
        (position_set_x, pos1, 50),
        (position_set_y, pos1, 50),
        (overlay_set_position, reg1, pos1),
        (position_set_x, pos1, 850),
        (position_set_y, pos1, 585),
        (overlay_set_area_size, reg1, pos1),
        (set_container_overlay, reg1),
        
        (assign, ":try_end", banner_meshes_end_minus_one),
        (store_sub, ":num_npc_kingdoms", commom_kingdoms_end, commom_kingdoms_begin), ## CC
        (val_sub, ":try_end", ":num_npc_kingdoms"), #do not allow kingdom banners to be selected
        # (store_mul, ":begin_mesh", 16, "$g_presentation_page_no"),
        # (val_add, ":begin_mesh", banner_meshes_begin),
        # (store_add, ":try_end_2", ":begin_mesh", 16),
        # (val_min, ":try_end", ":try_end_2"),
        # (store_add, "$g_presentation_banner_start", "$g_presentation_obj_banner_selection_1", 1),
        (store_sub, ":num_banners", ":try_end", banner_meshes_begin),
        (store_div, ":num_rows", ":num_banners", 12),
        (store_mod, ":extra_row", ":num_banners", 12),
        (val_min, ":extra_row", 1),
        (val_add, ":num_rows", ":extra_row"),
        (store_mul, ":y_pos", ":num_rows", 150),
        (val_sub, ":y_pos", 15),
        (assign, ":x_pos", 40),

        (assign, "$g_cur_slot_no", 0),
        (try_for_range, ":cur_banner_mesh", banner_meshes_begin, ":try_end"),
          (create_image_button_overlay, reg1, ":cur_banner_mesh", ":cur_banner_mesh"),
          (position_set_x, pos1, ":x_pos"),
          (position_set_y, pos1, ":y_pos"),
          (overlay_set_position, reg1, pos1),
          (position_set_x, pos1, 60),
          (position_set_y, pos1, 60),
          (overlay_set_size, reg1, pos1),
          (troop_set_slot, "trp_temp_array_a", "$g_cur_slot_no", reg1),
          (troop_set_slot, "trp_temp_array_b", "$g_cur_slot_no", ":cur_banner_mesh"),
          (val_add, "$g_cur_slot_no", 1),
          ## position
          (val_add, ":x_pos", 70),
          (ge, ":x_pos", 70*12+40),
          (assign, ":x_pos", 40),
          (val_sub, ":y_pos", 150),
        (try_end),
        
        (set_container_overlay, -1),
        (presentation_set_duration, 999999),
        
        # ####### mouse fix pos system #######
        # (call_script, "script_mouse_fix_pos_ready"),
        # ####### mouse fix pos system #######
        ]),
      (ti_on_presentation_event_state_change,
       [(store_trigger_param_1, ":object"),
        # (try_begin),
          # (eq, ":object", "$g_presentation_obj_banner_selection_1"),
          # (val_add, "$g_presentation_page_no", 1),
          # (val_mod, "$g_presentation_page_no", 9), ## CC
          # (start_presentation, "prsnt_banner_selection"),
        # (else_try),
          ## CC give back the lord's banner ($g_troop_take_back_banner)
          (try_begin),
            (gt, "$g_troop_take_back_banner", 0),
            (troop_get_slot, ":player_cur_banner_spr", "trp_player", slot_troop_banner_scene_prop),
            (troop_set_slot, "$g_troop_take_back_banner", slot_troop_banner_scene_prop, ":player_cur_banner_spr"),
            (store_sub, ":cur_banner", ":player_cur_banner_spr", banner_scene_props_begin),
            (val_add, ":cur_banner", banner_map_icons_begin),
            (try_begin),
              (troop_get_slot, ":cur_party", "$g_troop_take_back_banner", slot_troop_leaded_party),
              (gt, ":cur_party", 0),
              (party_set_banner_icon, ":cur_party", ":cur_banner"),
            (try_end),
            (try_begin), # bandit_heroes
              (is_between, "$g_troop_take_back_banner", bandit_heroes_begin, bandit_heroes_end),
              (store_sub, ":pt_no", "$g_troop_take_back_banner", bandit_heroes_begin),
              (val_add, ":pt_no", bandit_party_template_begin),
              (party_template_get_slot, ":cur_party", ":pt_no", slot_party_template_hero_party_id),
              (gt, ":cur_party", 0),
              (party_set_banner_icon, ":cur_party", ":cur_banner"),
            (try_end),
            (try_for_range, ":cur_center", walled_centers_begin, walled_centers_end),
              (party_slot_eq, ":cur_center", slot_town_lord, "$g_troop_take_back_banner"),
              (party_set_banner_icon, ":cur_center", ":cur_banner"),
            (try_end),
          (try_end),
          ## CC
          (try_for_range, ":trp_slot_index", 0, "$g_cur_slot_no"),
            (troop_slot_eq, "trp_temp_array_a", ":trp_slot_index", ":object"),
            (troop_get_slot, ":cur_banner_mesh", "trp_temp_array_b", ":trp_slot_index"),
            (store_sub, ":selected_banner", ":cur_banner_mesh", banner_meshes_begin),
            (store_add, ":selected_banner_map_icon", ":selected_banner", banner_map_icons_begin),
            (party_set_banner_icon, "p_main_party", ":selected_banner_map_icon"),
            (store_add, ":selected_banner_spr", ":selected_banner", banner_scene_props_begin),
            (troop_set_slot, "trp_player", slot_troop_banner_scene_prop, ":selected_banner_spr"),
                      
            #Correcting banners according to the player banner
            #(assign, ":end_cond", active_npcs_end),
            #(try_for_range, ":cur_troop", original_kingdom_heroes_begin, ":end_cond"),
            #  (troop_slot_eq, ":cur_troop", slot_troop_banner_scene_prop, ":selected_banner_spr"),
            #  (str_store_troop_name, s7, ":cur_troop"),
            #  (display_message, "@DEBUGS : {s7}'s banner is changed"),
            #  (troop_set_slot, ":cur_troop", slot_troop_banner_scene_prop, banner_scene_props_end_minus_one),
            #  (assign, ":end_cond", 0),
            #(try_end),
                      
            (presentation_set_duration, 0),
            (assign, ":troop_to_change", 0),
            (assign, ":end_cond", active_npcs_end),
            (try_for_range, ":cur_troop", active_npcs_begin, ":end_cond"),
              (troop_slot_eq, ":cur_troop", slot_troop_banner_scene_prop, ":selected_banner_spr"),
              (assign, ":troop_to_change", ":cur_troop"),
              (assign, ":end_cond", 0),
              (troop_set_slot, ":cur_troop", slot_troop_banner_scene_prop, banner_scene_props_end_minus_one),
              (troop_get_slot, ":cur_party", ":cur_troop", slot_troop_leaded_party),
              (gt, ":cur_party", 0),
              (party_set_banner_icon, ":cur_party", banner_map_icons_end_minus_one),
            (try_end),
            ## CC
            (assign, ":end_cond", bandit_heroes_end),
            (try_for_range, ":cur_troop", bandit_heroes_begin, ":end_cond"),
              (troop_slot_eq, ":cur_troop", slot_troop_banner_scene_prop, ":selected_banner_spr"),
              (assign, ":troop_to_change", ":cur_troop"),
              (assign, ":end_cond", 0),
              (troop_set_slot, ":cur_troop", slot_troop_banner_scene_prop, banner_scene_props_end_minus_one),
              (store_sub, ":pt_no", ":cur_troop", bandit_heroes_begin),
              (val_add, ":pt_no", bandit_party_template_begin),
              (party_template_get_slot, ":cur_party", ":pt_no", slot_party_template_hero_party_id),
              (gt, ":cur_party", 0),
              (party_set_banner_icon, ":cur_party", banner_map_icons_end_minus_one),
            (try_end),
            (assign, "$g_troop_take_back_banner", ":troop_to_change"),
            ## CC
            (try_for_range, ":cur_center", walled_centers_begin, walled_centers_end),
              (try_begin),
                (party_slot_eq, ":cur_center", slot_town_lord, "trp_player"),
                (party_set_banner_icon, ":cur_center", ":selected_banner_map_icon"),
              (else_try),
                (party_slot_eq, ":cur_center", slot_town_lord, ":troop_to_change"),
                (party_set_banner_icon, ":cur_center", banner_map_icons_end_minus_one), 
              (try_end),
            (try_end),
          (try_end),
        # (try_end),
        ]),
      (ti_on_presentation_run,
       [(try_begin),
          (this_or_next|key_clicked, key_space),
          (this_or_next|key_clicked, key_enter),
          (this_or_next|key_clicked, key_escape),
          (this_or_next|key_clicked, key_back_space),
          (this_or_next|key_clicked, key_xbox_ltrigger),
          (key_clicked, key_xbox_rtrigger),
          (presentation_set_duration, 0),
        (try_end),
        # ####### mouse fix pos system #######
        # (call_script, "script_mouse_fix_pos_run"),
        # ####### mouse fix pos system #######
        ]),
      ]),
  ## CC

  ("custom_banner", 0, mesh_load_window,
   [
     (ti_on_presentation_load,
      [
        (set_fixed_point_multiplier, 1000),
        (troop_get_slot, ":flag_type", "trp_player", slot_troop_custom_banner_flag_type),
        (val_max, ":flag_type", 0),
        (val_add, ":flag_type", custom_banner_flag_types_begin),
        (troop_get_slot, ":map_flag_type", "trp_player", slot_troop_custom_banner_map_flag_type),
        (val_max, ":map_flag_type", 0),
        (val_add, ":map_flag_type", custom_banner_flag_map_types_begin),
##        (create_mesh_overlay_with_tableau_material, "$g_presentation_obj_custom_banner_1", ":flag_type", "tableau_custom_banner_square", "trp_player"),
        (troop_get_slot, ":bg_color_1", "trp_player", slot_troop_custom_banner_bg_color_1),
        (troop_get_slot, ":bg_color_2", "trp_player", slot_troop_custom_banner_bg_color_2),
        
        (create_text_overlay, reg1, "str_color_no_1", 0),
        (position_set_x, pos1, 40),
        (position_set_y, pos1, 550),
        (overlay_set_position, reg1, pos1),
        (create_text_overlay, reg1, "str_color_no_2", 0),
        (position_set_x, pos1, 40),
        (position_set_y, pos1, 500),
        (overlay_set_position, reg1, pos1),

        (create_image_button_overlay_with_tableau_material, "$g_presentation_obj_custom_banner_22", "mesh_color_picker", "tableau_color_picker", ":bg_color_1"),
        (create_image_button_overlay_with_tableau_material, "$g_presentation_obj_custom_banner_23", "mesh_color_picker", "tableau_color_picker", ":bg_color_2"),
        (position_set_x, pos1, 200),
        (position_set_y, pos1, 565),
        (overlay_set_position, "$g_presentation_obj_custom_banner_22", pos1),
        (position_set_y, pos1, 515),
        (overlay_set_position, "$g_presentation_obj_custom_banner_23", pos1),
        (position_set_x, pos1, 250),
        (position_set_y, pos1, 250),
        (overlay_set_size, "$g_presentation_obj_custom_banner_22", pos1),
        (overlay_set_size, "$g_presentation_obj_custom_banner_23", pos1),
        
        (create_button_overlay, "$g_presentation_obj_custom_banner_2", "str_change", tf_center_justify),
        (create_button_overlay, "$g_presentation_obj_custom_banner_3", "str_change", tf_center_justify),
        (create_button_overlay, "$g_presentation_obj_custom_banner_4", "str_change_background", tf_center_justify),
        (create_button_overlay, "$g_presentation_obj_custom_banner_5", "str_change", tf_center_justify),
        (create_button_overlay, "$g_presentation_obj_custom_banner_19", "str_change", tf_center_justify),
        (create_button_overlay, "$g_presentation_obj_custom_banner_20", "str_accept", tf_center_justify),
        (troop_get_slot, ":num_charges", "trp_player", slot_troop_custom_banner_num_charges),
        (create_button_overlay, "$g_presentation_obj_custom_banner_16", "str_randomize", tf_center_justify),
        (create_image_button_overlay_with_tableau_material, "$g_presentation_obj_custom_banner_17", ":flag_type", "tableau_custom_banner_default", "trp_player"),
        (try_begin),
          (eq, ":map_flag_type", "mesh_custom_map_banner_01"),
          (create_image_button_overlay_with_tableau_material, "$g_presentation_obj_custom_banner_18", ":map_flag_type", "tableau_custom_banner_square", "trp_player"),
        (else_try),
          (eq, ":map_flag_type", "mesh_custom_map_banner_02"),
          (create_image_button_overlay_with_tableau_material, "$g_presentation_obj_custom_banner_18", ":map_flag_type", "tableau_custom_banner_short", "trp_player"),
        (else_try),
          (create_image_button_overlay_with_tableau_material, "$g_presentation_obj_custom_banner_18", ":map_flag_type", "tableau_custom_banner_tall", "trp_player"),
        (try_end),
        (create_image_button_overlay_with_tableau_material, "$g_presentation_obj_custom_banner_1", -1, "tableau_custom_banner_square_no_mesh", "trp_player"),
        (create_text_overlay, reg1, "str_sample_banner", tf_center_justify),
        (position_set_x, pos1, 825),
        (position_set_y, pos1, 650),
        (overlay_set_position, reg1, pos1),
        (create_text_overlay, reg1, "str_sample_map_banner", tf_center_justify),
        (position_set_y, pos1, 500),
        (overlay_set_position, reg1, pos1),

        (position_set_x, pos1, 800),
        (position_set_y, pos1, 640),
        (overlay_set_position, "$g_presentation_obj_custom_banner_17", pos1),
        (position_set_x, pos1, 780),
        (position_set_y, pos1, 315),
        (overlay_set_position, "$g_presentation_obj_custom_banner_18", pos1),
        (position_set_x, pos1, 50),
        (position_set_y, pos1, 50),
        (overlay_set_size, "$g_presentation_obj_custom_banner_17", pos1),
        (position_set_x, pos1, 50),
        (position_set_y, pos1, 50),
        (overlay_set_size, "$g_presentation_obj_custom_banner_18", pos1),
        

        (create_text_overlay, reg1, "str_number_of_charges", 0),
        (position_set_x, pos1, 40),
        (position_set_y, pos1, 350),
        (overlay_set_position, reg1, pos1),

        (assign, reg1, ":num_charges"),
        (create_text_overlay, reg2, "str_reg1", tf_center_justify),
        (position_set_x, pos1, 350),
        (position_set_y, pos1, 350),
        (overlay_set_position, reg2, pos1),
        (try_begin),
          (lt, ":num_charges", 4),
          (create_button_overlay, "$g_presentation_obj_custom_banner_15", "str_plus", tf_center_justify),
          (position_set_x, pos1, 385),
          (position_set_y, pos1, 350),
          (overlay_set_position, "$g_presentation_obj_custom_banner_15", pos1),
        (else_try),
          (assign, "$g_presentation_obj_custom_banner_15", -1),
        (try_end),
        (try_begin),
          (gt, ":num_charges", 0),
          (create_button_overlay, "$g_presentation_obj_custom_banner_21", "str_minus", tf_center_justify),
          (position_set_x, pos1, 370),
          (position_set_y, pos1, 350),
          (overlay_set_position, "$g_presentation_obj_custom_banner_21", pos1),
        (else_try),
          (assign, "$g_presentation_obj_custom_banner_21", -1),
        (try_end),

        (try_begin),
          (ge, ":num_charges", 1),
          (create_text_overlay, reg1, "str_charge", tf_center_justify),
          (position_set_x, pos1, 300),
          (position_set_y, pos1, 300),
          (overlay_set_position, reg1, pos1),
          (create_text_overlay, reg1, "str_color", tf_center_justify),
          (position_set_x, pos1, 550),
          (position_set_y, pos1, 300),
          (overlay_set_position, reg1, pos1),
          (create_button_overlay, "$g_presentation_obj_custom_banner_14", "str_change_charge_position", tf_center_justify),
          (position_set_y, pos1, 350),
          (position_set_x, pos1, 550),
          (overlay_set_position, "$g_presentation_obj_custom_banner_14", pos1),

          (create_text_overlay, reg1, "str_charge_no_1", 0),
          (position_set_x, pos1, 40),
          (position_set_y, pos1, 240),
          (overlay_set_position, reg1, pos1),
          (create_button_overlay, "$g_presentation_obj_custom_banner_6", "str_change", 0),
          (position_set_x, pos1, 310),
          (overlay_set_position, "$g_presentation_obj_custom_banner_6", pos1),
          (create_button_overlay, "$g_presentation_obj_custom_banner_7", "str_change", 0),
          (position_set_x, pos1, 560),
          (overlay_set_position, "$g_presentation_obj_custom_banner_7", pos1),
          (troop_get_slot, ":cur_charge", "trp_player", slot_troop_custom_banner_charge_type_1),
          (val_mod, ":cur_charge", 256),
          (val_add, ":cur_charge", custom_banner_charges_begin),
          (create_image_button_overlay, "$g_presentation_obj_custom_banner_24", ":cur_charge", ":cur_charge"),
          (position_set_x, pos1, 260),
          (position_set_y, pos1, 255),
          (overlay_set_position, "$g_presentation_obj_custom_banner_24", pos1),
          (position_set_x, pos1, 50),
          (position_set_y, pos1, 50),
          (overlay_set_size, "$g_presentation_obj_custom_banner_24", pos1),
          (troop_get_slot, ":cur_charge_color", "trp_player", slot_troop_custom_banner_charge_color_1),
          (create_image_button_overlay_with_tableau_material, "$g_presentation_obj_custom_banner_28", "mesh_color_picker", "tableau_color_picker", ":cur_charge_color"),
          (position_set_x, pos1, 530),
          (position_set_y, pos1, 255),
          (overlay_set_position, "$g_presentation_obj_custom_banner_28", pos1),
          (position_set_x, pos1, 250),
          (position_set_y, pos1, 250),
          (overlay_set_size, "$g_presentation_obj_custom_banner_28", pos1),

          (create_button_overlay, "$g_presentation_obj_custom_banner_32", "str_flip_horizontal", 0),
          (position_set_x, pos1, 700),
          (position_set_y, pos1, 240),
          (overlay_set_position, "$g_presentation_obj_custom_banner_32", pos1),
          (create_button_overlay, "$g_presentation_obj_custom_banner_33", "str_flip_vertical", 0),
          (position_set_x, pos1, 800),
          (overlay_set_position, "$g_presentation_obj_custom_banner_33", pos1),
        (try_end),
        (try_begin),
          (ge, ":num_charges", 2),
          (create_text_overlay, reg1, "str_charge_no_2", 0),
          (position_set_x, pos1, 40),
          (position_set_y, pos1, 180),
          (overlay_set_position, reg1, pos1),
          (create_button_overlay, "$g_presentation_obj_custom_banner_8", "str_change", 0),
          (position_set_x, pos1, 310),
          (overlay_set_position, "$g_presentation_obj_custom_banner_8", pos1),
          (create_button_overlay, "$g_presentation_obj_custom_banner_9", "str_change", 0),
          (position_set_x, pos1, 560),
          (overlay_set_position, "$g_presentation_obj_custom_banner_9", pos1),
          (troop_get_slot, ":cur_charge", "trp_player", slot_troop_custom_banner_charge_type_2),
          (val_mod, ":cur_charge", 256),
          (val_add, ":cur_charge", custom_banner_charges_begin),
          (create_image_button_overlay, "$g_presentation_obj_custom_banner_25", ":cur_charge", ":cur_charge"),
          (position_set_x, pos1, 260),
          (position_set_y, pos1, 195),
          (overlay_set_position, "$g_presentation_obj_custom_banner_25", pos1),
          (position_set_x, pos1, 50),
          (position_set_y, pos1, 50),
          (overlay_set_size, "$g_presentation_obj_custom_banner_25", pos1),
          (troop_get_slot, ":cur_charge_color", "trp_player", slot_troop_custom_banner_charge_color_2),
          (create_image_button_overlay_with_tableau_material, "$g_presentation_obj_custom_banner_29", "mesh_color_picker", "tableau_color_picker", ":cur_charge_color"),
          (position_set_x, pos1, 530),
          (position_set_y, pos1, 195),
          (overlay_set_position, "$g_presentation_obj_custom_banner_29", pos1),
          (position_set_x, pos1, 250),
          (position_set_y, pos1, 250),
          (overlay_set_size, "$g_presentation_obj_custom_banner_29", pos1),

          (create_button_overlay, "$g_presentation_obj_custom_banner_34", "str_flip_horizontal", 0),
          (position_set_x, pos1, 700),
          (position_set_y, pos1, 180),
          (overlay_set_position, "$g_presentation_obj_custom_banner_34", pos1),
          (create_button_overlay, "$g_presentation_obj_custom_banner_35", "str_flip_vertical", 0),
          (position_set_x, pos1, 800),
          (overlay_set_position, "$g_presentation_obj_custom_banner_35", pos1),
        (try_end),
        (try_begin),
          (ge, ":num_charges", 3),
          (create_text_overlay, reg1, "str_charge_no_3", 0),
          (position_set_x, pos1, 40),
          (position_set_y, pos1, 120),
          (overlay_set_position, reg1, pos1),
          (create_button_overlay, "$g_presentation_obj_custom_banner_10", "str_change", 0),
          (position_set_x, pos1, 310),
          (overlay_set_position, "$g_presentation_obj_custom_banner_10", pos1),
          (create_button_overlay, "$g_presentation_obj_custom_banner_11", "str_change", 0),
          (position_set_x, pos1, 560),
          (overlay_set_position, "$g_presentation_obj_custom_banner_11", pos1),
          (troop_get_slot, ":cur_charge", "trp_player", slot_troop_custom_banner_charge_type_3),
          (val_mod, ":cur_charge", 256),
          (val_add, ":cur_charge", custom_banner_charges_begin),
          (create_image_button_overlay, "$g_presentation_obj_custom_banner_26", ":cur_charge", ":cur_charge"),
          (position_set_x, pos1, 260),
          (position_set_y, pos1, 135),
          (overlay_set_position, "$g_presentation_obj_custom_banner_26", pos1),
          (position_set_x, pos1, 50),
          (position_set_y, pos1, 50),
          (overlay_set_size, "$g_presentation_obj_custom_banner_26", pos1),
          (troop_get_slot, ":cur_charge_color", "trp_player", slot_troop_custom_banner_charge_color_3),
          (create_image_button_overlay_with_tableau_material, "$g_presentation_obj_custom_banner_30", "mesh_color_picker", "tableau_color_picker", ":cur_charge_color"),
          (position_set_x, pos1, 530),
          (position_set_y, pos1, 135),
          (overlay_set_position, "$g_presentation_obj_custom_banner_30", pos1),
          (position_set_x, pos1, 250),
          (position_set_y, pos1, 250),
          (overlay_set_size, "$g_presentation_obj_custom_banner_30", pos1),

          (create_button_overlay, "$g_presentation_obj_custom_banner_36", "str_flip_horizontal", 0),
          (position_set_x, pos1, 700),
          (position_set_y, pos1, 120),
          (overlay_set_position, "$g_presentation_obj_custom_banner_36", pos1),
          (create_button_overlay, "$g_presentation_obj_custom_banner_37", "str_flip_vertical", 0),
          (position_set_x, pos1, 800),
          (overlay_set_position, "$g_presentation_obj_custom_banner_37", pos1),
        (try_end),
        (try_begin),
          (ge, ":num_charges", 4),
          (create_text_overlay, reg1, "str_charge_no_4", 0),
          (position_set_x, pos1, 40),
          (position_set_y, pos1, 60),
          (overlay_set_position, reg1, pos1),
          (create_button_overlay, "$g_presentation_obj_custom_banner_12", "str_change", 0),
          (position_set_x, pos1, 310),
          (overlay_set_position, "$g_presentation_obj_custom_banner_12", pos1),
          (create_button_overlay, "$g_presentation_obj_custom_banner_13", "str_change", 0),
          (position_set_x, pos1, 560),
          (overlay_set_position, "$g_presentation_obj_custom_banner_13", pos1),
          (troop_get_slot, ":cur_charge", "trp_player", slot_troop_custom_banner_charge_type_4),
          (val_mod, ":cur_charge", 256),
          (val_add, ":cur_charge", custom_banner_charges_begin),
          (create_image_button_overlay, "$g_presentation_obj_custom_banner_27", ":cur_charge", ":cur_charge"),
          (position_set_x, pos1, 260),
          (position_set_y, pos1, 75),
          (overlay_set_position, "$g_presentation_obj_custom_banner_27", pos1),
          (position_set_x, pos1, 50),
          (position_set_y, pos1, 50),
          (overlay_set_size, "$g_presentation_obj_custom_banner_27", pos1),
          (troop_get_slot, ":cur_charge_color", "trp_player", slot_troop_custom_banner_charge_color_4),
          (create_image_button_overlay_with_tableau_material, "$g_presentation_obj_custom_banner_31", "mesh_color_picker", "tableau_color_picker", ":cur_charge_color"),
          (position_set_x, pos1, 530),
          (position_set_y, pos1, 75),
          (overlay_set_position, "$g_presentation_obj_custom_banner_31", pos1),
          (position_set_x, pos1, 250),
          (position_set_y, pos1, 250),
          (overlay_set_size, "$g_presentation_obj_custom_banner_31", pos1),

          (create_button_overlay, "$g_presentation_obj_custom_banner_38", "str_flip_horizontal", 0),
          (position_set_x, pos1, 700),
          (position_set_y, pos1, 60),
          (overlay_set_position, "$g_presentation_obj_custom_banner_38", pos1),
          (create_button_overlay, "$g_presentation_obj_custom_banner_39", "str_flip_vertical", 0),
          (position_set_x, pos1, 800),
          (overlay_set_position, "$g_presentation_obj_custom_banner_39", pos1),
        (try_end),
        
        (position_set_x, pos1, 350),
        (position_set_y, pos1, 400),
        (overlay_set_position, "$g_presentation_obj_custom_banner_1", pos1),
        (position_set_x, pos1, 275),
        (position_set_y, pos1, 550),
        (overlay_set_position, "$g_presentation_obj_custom_banner_2", pos1),
        (position_set_y, pos1, 500),
        (overlay_set_position, "$g_presentation_obj_custom_banner_3", pos1),
        (position_set_x, pos1, 175),
        (position_set_y, pos1, 600),
        (overlay_set_position, "$g_presentation_obj_custom_banner_4", pos1),
        (position_set_x, pos1, 880),
        (position_set_y, pos1, 575),
        (overlay_set_position, "$g_presentation_obj_custom_banner_5", pos1),
        (position_set_y, pos1, 400),
        (overlay_set_position, "$g_presentation_obj_custom_banner_19", pos1),
        (position_set_y, pos1, 650),
        (position_set_x, pos1, 175),
        (overlay_set_position, "$g_presentation_obj_custom_banner_16", pos1),
        (position_set_y, pos1, 150),
        (position_set_x, pos1, 850),
        (overlay_set_position, "$g_presentation_obj_custom_banner_20", pos1),
        (presentation_set_duration, 999999),
        ]),
     (ti_on_presentation_event_state_change,
      [
        (store_trigger_param_1, ":object"),
        (troop_get_slot, ":num_charges", "trp_player", slot_troop_custom_banner_num_charges),
        (try_begin),
          (this_or_next|eq, ":object", "$g_presentation_obj_custom_banner_2"),
          (eq, ":object", "$g_presentation_obj_custom_banner_22"),
          (assign, "$g_presentation_next_presentation", "prsnt_custom_banner"),
          (assign, "$g_presentation_output_slot", slot_troop_custom_banner_bg_color_1),
          (start_presentation, "prsnt_color_selection"),
        (else_try),
          (this_or_next|eq, ":object", "$g_presentation_obj_custom_banner_3"),
          (eq, ":object", "$g_presentation_obj_custom_banner_23"),
          (assign, "$g_presentation_next_presentation", "prsnt_custom_banner"),
          (assign, "$g_presentation_output_slot", slot_troop_custom_banner_bg_color_2),
          (start_presentation, "prsnt_color_selection"),
        (else_try),
          (this_or_next|eq, ":object", "$g_presentation_obj_custom_banner_4"),
          (eq, ":object", "$g_presentation_obj_custom_banner_1"),
          (assign, "$g_presentation_next_presentation", "prsnt_custom_banner"),
          (start_presentation, "prsnt_banner_background_selection"),
        (else_try),
          (eq, ":object", "$g_presentation_obj_custom_banner_5"),
          (assign, "$g_presentation_next_presentation", "prsnt_custom_banner"),
          (start_presentation, "prsnt_banner_flag_type_selection"),
        (else_try),
          (ge, ":num_charges", 1),
          (this_or_next|eq, ":object", "$g_presentation_obj_custom_banner_6"),
          (eq, ":object", "$g_presentation_obj_custom_banner_24"),
          (assign, "$g_presentation_next_presentation", "prsnt_custom_banner"),
          (assign, "$g_presentation_output_slot", slot_troop_custom_banner_charge_type_1),
          (start_presentation, "prsnt_banner_charge_selection"),
        (else_try),
          (ge, ":num_charges", 1),
          (this_or_next|eq, ":object", "$g_presentation_obj_custom_banner_7"),
          (eq, ":object", "$g_presentation_obj_custom_banner_28"),
          (assign, "$g_presentation_next_presentation", "prsnt_custom_banner"),
          (assign, "$g_presentation_output_slot", slot_troop_custom_banner_charge_color_1),
          (start_presentation, "prsnt_color_selection"),
        (else_try),
          (ge, ":num_charges", 2),
          (this_or_next|eq, ":object", "$g_presentation_obj_custom_banner_8"),
          (eq, ":object", "$g_presentation_obj_custom_banner_25"),
          (assign, "$g_presentation_next_presentation", "prsnt_custom_banner"),
          (assign, "$g_presentation_output_slot", slot_troop_custom_banner_charge_type_2),
          (start_presentation, "prsnt_banner_charge_selection"),
        (else_try),
          (ge, ":num_charges", 2),
          (this_or_next|eq, ":object", "$g_presentation_obj_custom_banner_9"),
          (eq, ":object", "$g_presentation_obj_custom_banner_29"),
          (assign, "$g_presentation_next_presentation", "prsnt_custom_banner"),
          (assign, "$g_presentation_output_slot", slot_troop_custom_banner_charge_color_2),
          (start_presentation, "prsnt_color_selection"),
        (else_try),
          (ge, ":num_charges", 3),
          (this_or_next|eq, ":object", "$g_presentation_obj_custom_banner_10"),
          (eq, ":object", "$g_presentation_obj_custom_banner_26"),
          (assign, "$g_presentation_next_presentation", "prsnt_custom_banner"),
          (assign, "$g_presentation_output_slot", slot_troop_custom_banner_charge_type_3),
          (start_presentation, "prsnt_banner_charge_selection"),
        (else_try),
          (ge, ":num_charges", 3),
          (this_or_next|eq, ":object", "$g_presentation_obj_custom_banner_11"),
          (eq, ":object", "$g_presentation_obj_custom_banner_30"),
          (assign, "$g_presentation_next_presentation", "prsnt_custom_banner"),
          (assign, "$g_presentation_output_slot", slot_troop_custom_banner_charge_color_3),
          (start_presentation, "prsnt_color_selection"),
        (else_try),
          (ge, ":num_charges", 4),
          (this_or_next|eq, ":object", "$g_presentation_obj_custom_banner_12"),
          (eq, ":object", "$g_presentation_obj_custom_banner_27"),
          (assign, "$g_presentation_next_presentation", "prsnt_custom_banner"),
          (assign, "$g_presentation_output_slot", slot_troop_custom_banner_charge_type_4),
          (start_presentation, "prsnt_banner_charge_selection"),
        (else_try),
          (ge, ":num_charges", 4),
          (this_or_next|eq, ":object", "$g_presentation_obj_custom_banner_13"),
          (eq, ":object", "$g_presentation_obj_custom_banner_31"),
          (assign, "$g_presentation_next_presentation", "prsnt_custom_banner"),
          (assign, "$g_presentation_output_slot", slot_troop_custom_banner_charge_color_4),
          (start_presentation, "prsnt_color_selection"),
        (else_try),
          (ge, ":num_charges", 1),
          (eq, ":object", "$g_presentation_obj_custom_banner_14"),
          (assign, "$g_presentation_next_presentation", "prsnt_custom_banner"),
          (start_presentation, "prsnt_banner_charge_positioning"),
        (else_try),
          (eq, ":object", "$g_presentation_obj_custom_banner_15"),
          (troop_get_slot, ":num_charges", "trp_player", slot_troop_custom_banner_num_charges),
          (val_add, ":num_charges", 1),
          (val_clamp, ":num_charges", 0, 5),
          (troop_set_slot, "trp_player", slot_troop_custom_banner_num_charges, ":num_charges"),
          (start_presentation, "prsnt_custom_banner"),
        (else_try),
          (eq, ":object", "$g_presentation_obj_custom_banner_21"),
          (troop_get_slot, ":num_charges", "trp_player", slot_troop_custom_banner_num_charges),
          (val_sub, ":num_charges", 1),
          (val_clamp, ":num_charges", 0, 5),
          (troop_set_slot, "trp_player", slot_troop_custom_banner_num_charges, ":num_charges"),
          (start_presentation, "prsnt_custom_banner"),
        (else_try),
          (eq, ":object", "$g_presentation_obj_custom_banner_16"),
          (call_script, "script_get_random_custom_banner", "trp_player"),
          (start_presentation, "prsnt_custom_banner"),
        (else_try),
          (eq, ":object", "$g_presentation_obj_custom_banner_17"),
          (assign, "$g_presentation_next_presentation", "prsnt_custom_banner"),
          (start_presentation, "prsnt_banner_flag_type_selection"),
        (else_try),
          (eq, ":object", "$g_presentation_obj_custom_banner_18"),
          (assign, "$g_presentation_next_presentation", "prsnt_custom_banner"),
          (start_presentation, "prsnt_banner_flag_map_type_selection"),
        (else_try),
          (eq, ":object", "$g_presentation_obj_custom_banner_19"),
          (assign, "$g_presentation_next_presentation", "prsnt_custom_banner"),
          (start_presentation, "prsnt_banner_flag_map_type_selection"),
        (else_try),
          (eq, ":object", "$g_presentation_obj_custom_banner_32"),
          (troop_get_slot, ":charge_type", "trp_player", slot_troop_custom_banner_charge_type_1),
          (store_mod, ":charge_type_base", ":charge_type", 256),
          (val_div, ":charge_type", 256),
          (store_mod, ":flag", ":charge_type", 2),
          (val_div, ":charge_type", 2), #remove flag
          (val_add, ":flag", 1),
          (val_mod, ":flag", 2), #switch flag
          (val_mul, ":charge_type", 2),
          (val_add, ":charge_type", ":flag"),
          (val_mul, ":charge_type", 256),
          (val_add, ":charge_type", ":charge_type_base"),
          (troop_set_slot, "trp_player", slot_troop_custom_banner_charge_type_1, ":charge_type"),
          (start_presentation, "prsnt_custom_banner"),
        (else_try),
          (eq, ":object", "$g_presentation_obj_custom_banner_34"),
          (troop_get_slot, ":charge_type", "trp_player", slot_troop_custom_banner_charge_type_2),
          (store_mod, ":charge_type_base", ":charge_type", 256),
          (val_div, ":charge_type", 256),
          (store_mod, ":flag", ":charge_type", 2),
          (val_div, ":charge_type", 2), #remove flag
          (val_add, ":flag", 1),
          (val_mod, ":flag", 2), #switch flag
          (val_mul, ":charge_type", 2),
          (val_add, ":charge_type", ":flag"),
          (val_mul, ":charge_type", 256),
          (val_add, ":charge_type", ":charge_type_base"),
          (troop_set_slot, "trp_player", slot_troop_custom_banner_charge_type_2, ":charge_type"),
          (start_presentation, "prsnt_custom_banner"),
        (else_try),
          (eq, ":object", "$g_presentation_obj_custom_banner_36"),
          (troop_get_slot, ":charge_type", "trp_player", slot_troop_custom_banner_charge_type_3),
          (store_mod, ":charge_type_base", ":charge_type", 256),
          (val_div, ":charge_type", 256),
          (store_mod, ":flag", ":charge_type", 2),
          (val_div, ":charge_type", 2), #remove flag
          (val_add, ":flag", 1),
          (val_mod, ":flag", 2), #switch flag
          (val_mul, ":charge_type", 2),
          (val_add, ":charge_type", ":flag"),
          (val_mul, ":charge_type", 256),
          (val_add, ":charge_type", ":charge_type_base"),
          (troop_set_slot, "trp_player", slot_troop_custom_banner_charge_type_3, ":charge_type"),
          (start_presentation, "prsnt_custom_banner"),
        (else_try),
          (eq, ":object", "$g_presentation_obj_custom_banner_38"),
          (troop_get_slot, ":charge_type", "trp_player", slot_troop_custom_banner_charge_type_4),
          (store_mod, ":charge_type_base", ":charge_type", 256),
          (val_div, ":charge_type", 256),
          (store_mod, ":flag", ":charge_type", 2),
          (val_div, ":charge_type", 2), #remove flag
          (val_add, ":flag", 1),
          (val_mod, ":flag", 2), #switch flag
          (val_mul, ":charge_type", 2),
          (val_add, ":charge_type", ":flag"),
          (val_mul, ":charge_type", 256),
          (val_add, ":charge_type", ":charge_type_base"),
          (troop_set_slot, "trp_player", slot_troop_custom_banner_charge_type_4, ":charge_type"),
          (start_presentation, "prsnt_custom_banner"),
        (else_try),
          (eq, ":object", "$g_presentation_obj_custom_banner_33"),
          (troop_get_slot, ":charge_type", "trp_player", slot_troop_custom_banner_charge_type_1),
          (store_div, ":flag", ":charge_type", 512),
          (val_add, ":flag", 1),
          (val_mod, ":flag", 2), #switch flag
          (val_mul, ":flag", 512),
          (val_mod, ":charge_type", 512), #remove flag
          (val_add, ":charge_type", ":flag"),
          (troop_set_slot, "trp_player", slot_troop_custom_banner_charge_type_1, ":charge_type"),
          (start_presentation, "prsnt_custom_banner"),
        (else_try),
          (eq, ":object", "$g_presentation_obj_custom_banner_35"),
          (troop_get_slot, ":charge_type", "trp_player", slot_troop_custom_banner_charge_type_2),
          (store_div, ":flag", ":charge_type", 512),
          (val_add, ":flag", 1),
          (val_mod, ":flag", 2), #switch flag
          (val_mul, ":flag", 512),
          (val_mod, ":charge_type", 512), #remove flag
          (val_add, ":charge_type", ":flag"),
          (troop_set_slot, "trp_player", slot_troop_custom_banner_charge_type_2, ":charge_type"),
          (start_presentation, "prsnt_custom_banner"),
        (else_try),
          (eq, ":object", "$g_presentation_obj_custom_banner_37"),
          (troop_get_slot, ":charge_type", "trp_player", slot_troop_custom_banner_charge_type_3),
          (store_div, ":flag", ":charge_type", 512),
          (val_add, ":flag", 1),
          (val_mod, ":flag", 2), #switch flag
          (val_mul, ":flag", 512),
          (val_mod, ":charge_type", 512), #remove flag
          (val_add, ":charge_type", ":flag"),
          (troop_set_slot, "trp_player", slot_troop_custom_banner_charge_type_3, ":charge_type"),
          (start_presentation, "prsnt_custom_banner"),
        (else_try),
          (eq, ":object", "$g_presentation_obj_custom_banner_39"),
          (troop_get_slot, ":charge_type", "trp_player", slot_troop_custom_banner_charge_type_4),
          (store_div, ":flag", ":charge_type", 512),
          (val_add, ":flag", 1),
          (val_mod, ":flag", 2), #switch flag
          (val_mul, ":flag", 512),
          (val_mod, ":charge_type", 512), #remove flag
          (val_add, ":charge_type", ":flag"),
          (troop_set_slot, "trp_player", slot_troop_custom_banner_charge_type_4, ":charge_type"),
          (start_presentation, "prsnt_custom_banner"),
        (else_try),
          (eq, ":object", "$g_presentation_obj_custom_banner_20"),
          (troop_get_slot, ":flag_icon", "trp_player", slot_troop_custom_banner_map_flag_type),
          (try_begin),
            (ge, ":flag_icon", 0),
            (val_add, ":flag_icon", custom_banner_map_icons_begin),
            (party_set_banner_icon, "p_main_party", ":flag_icon"),
          (try_end),
          (presentation_set_duration, 0),
        (try_end),
        ]),
##     (ti_on_presentation_run,
##      [(try_begin),
##         (this_or_next|key_clicked, key_space),
##         (this_or_next|key_clicked, key_enter),
##         (this_or_next|key_clicked, key_escape),
##         (key_clicked, key_back_space),
##         (presentation_set_duration, 0),
##       (try_end),
##       ]),
     ]),

  ("banner_charge_positioning", 0, mesh_load_window,
   [
     (ti_on_presentation_load,
      [
        (set_fixed_point_multiplier, 1000),
        (create_text_overlay, reg1, "str_choose_position", tf_center_justify),
        (position_set_x, pos1, 500),
        (position_set_y, pos1, 600),
        (overlay_set_position, reg1, pos1),
        (assign, ":pos_x", 125),
        (assign, ":pos_y", 400),
        (call_script, "script_get_troop_custom_banner_num_positionings", "trp_player"),
        (assign, ":num_positionings", reg0),
        (store_mul, ":x_needed", ":num_positionings", 125),
        (val_sub, ":x_needed", 25),
        (store_div, ":pos_x", ":x_needed", 2),
        (store_sub, ":pos_x", 500, ":pos_x"),
        (try_for_range, ":cur_positioning", 0, ":num_positionings"),
          (create_image_button_overlay_with_tableau_material, reg1, -1, "tableau_positioning_selection", ":cur_positioning"),
          (position_set_x, pos1, ":pos_x"),
          (position_set_y, pos1, ":pos_y"),
          (val_add, ":pos_x", 125),
          (overlay_set_position, reg1, pos1),
          (troop_set_slot, "trp_temp_array_a", ":cur_positioning", reg1),
        (try_end),
        (presentation_set_duration, 999999),
        ]),
     (ti_on_presentation_event_state_change,
      [
        (store_trigger_param_1, ":object"),
        (call_script, "script_get_troop_custom_banner_num_positionings", "trp_player"),
        (assign, ":num_positionings", reg0),
        (try_for_range, ":trp_slot_index", 0, ":num_positionings"),
          (troop_slot_eq, "trp_temp_array_a", ":trp_slot_index", ":object"),
          (troop_set_slot, "trp_player", slot_troop_custom_banner_positioning, ":trp_slot_index"),
          (assign, ":num_positionings", 0),
        (try_end),
        (try_begin),
          (gt, "$g_presentation_next_presentation", 0),
          (start_presentation, "$g_presentation_next_presentation"),
        (else_try),
          (presentation_set_duration, 0),
        (try_end),
        ]),
     ]),

  ("banner_charge_selection", 0, mesh_load_window,
   [
     (ti_on_presentation_load,
      [
        (set_fixed_point_multiplier, 1000),
        (create_text_overlay, reg1, "str_choose_charge", tf_center_justify),

        (position_set_x, pos1, 500),
        (position_set_y, pos1, 650),
        (overlay_set_position, reg1, pos1),
        (assign, ":pos_x", 100),
        (assign, ":pos_y", 600),
        (try_for_range, ":cur_charge", custom_banner_charges_begin, custom_banner_charges_end),
          (create_image_button_overlay, reg1, ":cur_charge", ":cur_charge"),
          (position_set_x, pos1, ":pos_x"),
          (position_set_y, pos1, ":pos_y"),
          (val_add, ":pos_x", 100),
          (try_begin),
            (gt, ":pos_x", 900),
            (assign, ":pos_x", 100),
            (val_sub, ":pos_y", 100),
          (try_end),
          (overlay_set_position, reg1, pos1),
          (position_set_x, pos1, 80),
          (position_set_y, pos1, 80),
          (overlay_set_size, reg1, pos1),
          (store_sub, ":slot_index", ":cur_charge", custom_banner_charges_begin),
          (troop_set_slot, "trp_temp_array_a", ":slot_index", reg1),
        (try_end),
        (presentation_set_duration, 999999),
        ]),
     (ti_on_presentation_event_state_change,
      [
        (store_trigger_param_1, ":object"),
        (assign, ":end_cond", custom_banner_charges_end),
        (val_sub, ":end_cond", custom_banner_charges_begin),
        (try_for_range, ":trp_slot_index", 0, ":end_cond"),
          (troop_slot_eq, "trp_temp_array_a", ":trp_slot_index", ":object"),
          (troop_set_slot, "trp_player", "$g_presentation_output_slot", ":trp_slot_index"),
          (assign, ":end_cond", 0),
        (try_end),
        (try_begin),
          (gt, "$g_presentation_next_presentation", 0),
          (start_presentation, "$g_presentation_next_presentation"),
        (else_try),
          (presentation_set_duration, 0),
        (try_end),
        ]),
     ]),

  ("banner_background_selection", 0, mesh_load_window,
   [
     (ti_on_presentation_load,
      [
        (set_fixed_point_multiplier, 1000),
        (create_text_overlay, reg1, "str_choose_background", tf_center_justify),
        (position_set_x, pos1, 500),
        (position_set_y, pos1, 600),
        (overlay_set_position, reg1, pos1),
        (assign, ":pos_x", 75),
        (assign, ":pos_y", 450),
        (try_for_range, ":cur_banner", custom_banner_backgrounds_begin, custom_banner_backgrounds_end),
          (store_sub, ":slot_index", ":cur_banner", custom_banner_backgrounds_begin),
          (create_image_button_overlay_with_tableau_material, reg1, -1, "tableau_background_selection", ":slot_index"),
          (position_set_x, pos1, ":pos_x"),
          (position_set_y, pos1, ":pos_y"),
          (val_add, ":pos_x", 125),
          (try_begin),
            (gt, ":pos_x", 900),
            (assign, ":pos_x", 75),
            (val_sub, ":pos_y", 125),
          (try_end),
          (overlay_set_position, reg1, pos1),
          (troop_set_slot, "trp_temp_array_a", ":slot_index", reg1),
        (try_end),
        (presentation_set_duration, 999999),
        ]),
     (ti_on_presentation_event_state_change,
      [
        (store_trigger_param_1, ":object"),
        (assign, ":end_cond", custom_banner_backgrounds_end),
        (val_sub, ":end_cond", custom_banner_backgrounds_begin),
        (try_for_range, ":trp_slot_index", 0, ":end_cond"),
          (troop_slot_eq, "trp_temp_array_a", ":trp_slot_index", ":object"),
          (troop_set_slot, "trp_player", slot_troop_custom_banner_bg_type, ":trp_slot_index"),
          (assign, ":end_cond", 0),
        (try_end),
        (try_begin),
          (gt, "$g_presentation_next_presentation", 0),
          (start_presentation, "$g_presentation_next_presentation"),
        (else_try),
          (presentation_set_duration, 0),
        (try_end),
        ]),
     ]),

  ("banner_flag_type_selection", 0, mesh_load_window,
   [
     (ti_on_presentation_load,
      [
        (set_fixed_point_multiplier, 1000),
        (create_text_overlay, reg1, "str_choose_flag_type", tf_center_justify),
        (position_set_x, pos1, 500),
        (position_set_y, pos1, 600),
        (overlay_set_position, reg1, pos1),

        (assign, ":pos_x", 435),
        (assign, ":pos_y", 450),
        (try_for_range, ":cur_flag", custom_banner_flag_types_begin, custom_banner_flag_types_end),
          (store_sub, ":slot_index", ":cur_flag", custom_banner_flag_types_begin),
          (troop_set_slot, "trp_player", slot_troop_custom_banner_flag_type, ":slot_index"),
          (create_image_button_overlay_with_tableau_material, reg1, ":cur_flag", "tableau_custom_banner_default", "trp_player"),
          (position_set_x, pos1, ":pos_x"),
          (position_set_y, pos1, ":pos_y"),
          (val_add, ":pos_x", 130),
          (overlay_set_position, reg1, pos1),
          (position_set_x, pos1, 100),
          (position_set_y, pos1, 100),
          (overlay_set_size, reg1, pos1),
          (troop_set_slot, "trp_temp_array_a", ":slot_index", reg1),
        (try_end),
        (presentation_set_duration, 999999),
        ]),
     (ti_on_presentation_event_state_change,
      [
        (store_trigger_param_1, ":object"),
        (assign, ":end_cond", custom_banner_flag_types_end),
        (val_sub, ":end_cond", custom_banner_flag_types_begin),
        (try_for_range, ":trp_slot_index", 0, ":end_cond"),
          (troop_slot_eq, "trp_temp_array_a", ":trp_slot_index", ":object"),
          (troop_set_slot, "trp_player", slot_troop_custom_banner_flag_type, ":trp_slot_index"),
          (assign, ":end_cond", 0),
        (try_end),
        (try_begin),
          (gt, "$g_presentation_next_presentation", 0),
          (start_presentation, "$g_presentation_next_presentation"),
        (else_try),
          (presentation_set_duration, 0),
        (try_end),
        ]),
     ]),

  ("banner_flag_map_type_selection", 0, mesh_load_window,
   [
     (ti_on_presentation_load,
      [
        (set_fixed_point_multiplier, 1000),
        (create_text_overlay, reg1, "str_choose_map_flag_type", tf_center_justify),
        (position_set_x, pos1, 500),
        (position_set_y, pos1, 600),
        (overlay_set_position, reg1, pos1),
        (troop_get_slot, ":bg_type", "trp_player", slot_troop_custom_banner_bg_type),
        (val_add, ":bg_type", custom_banner_backgrounds_begin),
        (assign, ":pos_x", 250),
        (assign, ":pos_y", 150),
        (try_for_range, ":cur_flag", custom_banner_flag_map_types_begin, custom_banner_flag_map_types_end),
          (store_sub, ":slot_index", ":cur_flag", custom_banner_flag_map_types_begin),
          (troop_set_slot, "trp_player", slot_troop_custom_banner_map_flag_type, ":slot_index"),
          (try_begin),
            (eq, ":cur_flag", "mesh_custom_map_banner_01"),
            (create_image_button_overlay_with_tableau_material, reg1, ":cur_flag", "tableau_custom_banner_square", "trp_player"),
          (else_try),
            (eq, ":cur_flag", "mesh_custom_map_banner_02"),
            (create_image_button_overlay_with_tableau_material, reg1, ":cur_flag", "tableau_custom_banner_short", "trp_player"),
          (else_try),
            (create_image_button_overlay_with_tableau_material, reg1, ":cur_flag", "tableau_custom_banner_tall", "trp_player"),
          (try_end),
          (position_set_x, pos1, ":pos_x"),
          (position_set_y, pos1, ":pos_y"),
          (val_add, ":pos_x", 200),
          (overlay_set_position, reg1, pos1),
          (position_set_x, pos1, 100),
          (position_set_y, pos1, 100),
          (overlay_set_size, reg1, pos1),
          (troop_set_slot, "trp_temp_array_a", ":slot_index", reg1),
        (try_end),
        (presentation_set_duration, 999999),
        ]),
     (ti_on_presentation_event_state_change,
      [
        (store_trigger_param_1, ":object"),
        (assign, ":end_cond", custom_banner_flag_map_types_end),
        (val_sub, ":end_cond", custom_banner_flag_map_types_begin),
        (try_for_range, ":trp_slot_index", 0, ":end_cond"),
          (troop_slot_eq, "trp_temp_array_a", ":trp_slot_index", ":object"),
          (troop_set_slot, "trp_player", slot_troop_custom_banner_map_flag_type, ":trp_slot_index"),
          (assign, ":end_cond", 0),
        (try_end),
        (try_begin),
          (gt, "$g_presentation_next_presentation", 0),
          (start_presentation, "$g_presentation_next_presentation"),
        (else_try),
          (presentation_set_duration, 0),
        (try_end),
        ]),
     ]),

  ("color_selection", 0, mesh_load_window,
   [
     (ti_on_presentation_load,
      [
        (set_fixed_point_multiplier, 1000),
        (create_text_overlay, reg1, "str_choose_color", tf_center_justify),
        (position_set_x, pos1, 500),
        (position_set_y, pos1, 600),
        (overlay_set_position, reg1, pos1),

        (assign, ":pos_x", 125),
        (assign, ":pos_y", 450),
        (try_for_range, ":i_color", 0, 42),
          (call_script, "script_get_custom_banner_color_from_index", ":i_color"),
          (assign, ":cur_color", reg0),
          (create_image_button_overlay_with_tableau_material, reg1, "mesh_color_picker", "tableau_color_picker", ":cur_color"),
          (position_set_x, pos1, ":pos_x"),
          (position_set_y, pos1, ":pos_y"),
          (val_add, ":pos_x", 50),
          (try_begin),
            (store_mod, ":mod_i_color", ":i_color", 7),
            (eq, ":mod_i_color", 6),
            (assign, ":pos_x", 125),
            (val_sub, ":pos_y", 50),
          (try_end),
          (overlay_set_position, reg1, pos1),
          (position_set_x, pos1, 500),
          (position_set_y, pos1, 500),
          (overlay_set_size, reg1, pos1),
          (store_mul, ":trp_slot_index", ":i_color", 2),
          (store_add, ":trp_slot_color", ":trp_slot_index", 1),
          (troop_set_slot, "trp_temp_array_a", ":trp_slot_index", reg1),
          (troop_set_slot, "trp_temp_array_a", ":trp_slot_color", ":cur_color"),
        (try_end),
        (presentation_set_duration, 999999),
        ]),
     (ti_on_presentation_event_state_change,
      [
        (store_trigger_param_1, ":object"),
        (assign, ":end_cond", 64),
        (try_for_range, ":i_color", 0, ":end_cond"),
          (store_mul, ":trp_slot_index", ":i_color", 2),
          (troop_slot_eq, "trp_temp_array_a", ":trp_slot_index", ":object"),
          (store_add, ":trp_slot_color", ":trp_slot_index", 1),
          (troop_get_slot, ":output_color", "trp_temp_array_a", ":trp_slot_color"),
          (troop_set_slot, "trp_player", "$g_presentation_output_slot", ":output_color"),
          (assign, ":end_cond", 0),
        (try_end),
        (try_begin),
          (gt, "$g_presentation_next_presentation", 0),
          (start_presentation, "$g_presentation_next_presentation"),
        (else_try),
          (presentation_set_duration, 0),
        (try_end),
        ]),
     ]),

  ("marshall_selection", 0, mesh_load_window,
   [
     (ti_on_presentation_load,
      [
        (assign, "$g_presentation_obj_marshall_selection_1", -1),
        (assign, "$g_presentation_obj_marshall_selection_2", -1),
        (assign, "$g_presentation_obj_marshall_selection_3", -1),
        (set_fixed_point_multiplier, 1000),
        (assign, "$g_presentation_next_presentation", -1),

        (store_add, ":total_renown", "$g_presentation_marshall_selection_max_renown_1", "$g_presentation_marshall_selection_max_renown_2"),
        (faction_get_slot, ":king", "$players_kingdom", slot_faction_leader),

        (str_store_troop_name, s1, "$g_presentation_marshall_selection_max_renown_1_troop"),
        (create_text_overlay, reg1, "@Candidate #1: {s1}", tf_center_justify),
        (position_set_x, pos1, 200),
        (position_set_y, pos1, 600),
        (overlay_set_position, reg1, pos1),
        (str_store_troop_name, s1, "$g_presentation_marshall_selection_max_renown_2_troop"),
        (create_text_overlay, reg1, "@Candidate #2: {s1}", tf_center_justify),
        (position_set_x, pos1, 800),
        (position_set_y, pos1, 600),
        (overlay_set_position, reg1, pos1),
        (create_mesh_overlay_with_tableau_material, reg1, -1, "tableau_troop_note_mesh", "$g_presentation_marshall_selection_max_renown_1_troop"),
        (position_set_x, pos1, 500),
        (position_set_y, pos1, 500),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 100),
        (position_set_y, pos1, 300),
        (overlay_set_position, reg1, pos1),
        (create_mesh_overlay_with_tableau_material, reg1, -1, "tableau_troop_note_mesh", "$g_presentation_marshall_selection_max_renown_2_troop"),
        (position_set_x, pos1, 500),
        (position_set_y, pos1, 500),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 700),
        (position_set_y, pos1, 300),
        (overlay_set_position, reg1, pos1),

        (assign, ":lord_index", "$g_presentation_input"),
        (val_add, "$g_presentation_input", 1),

        (try_begin),
          (lt, ":lord_index", 0),
          (str_store_troop_name, s1, "$g_presentation_marshall_selection_max_renown_1_troop"),
          (str_store_troop_name, s2, "$g_presentation_marshall_selection_max_renown_2_troop"),
          (str_store_troop_name, s3, ":king"),
          (str_store_faction_name, s4, "$players_kingdom"),
          (create_text_overlay, reg1, "@{s3} of {s4} wishes to select a new marshall and invites his vassals for a counsel. {s1} and {s2} are the likely candidates.", tf_center_justify),
          (position_set_x, pos1, 500),
          (position_set_y, pos1, 200),
          (overlay_set_position, reg1, pos1),

          (create_button_overlay, "$g_presentation_obj_marshall_selection_1", "@Continue...", tf_center_justify),
          (position_set_x, pos1, 500),
          (position_set_y, pos1, 100),
          (overlay_set_position, "$g_presentation_obj_marshall_selection_1", pos1),
          (assign, "$g_presentation_next_presentation", "prsnt_marshall_selection"),
        (else_try),
          (assign, ":cur_index", ":lord_index"),
          (try_for_range_backwards, ":loop_var", "trp_kingdom_heroes_including_player_begin", active_npcs_end),
            (ge, ":cur_index", 0),
            (assign, ":cur_troop", ":loop_var"),
            (assign, ":continue", 0),
            (try_begin),
              (eq, ":loop_var", "trp_kingdom_heroes_including_player_begin"),
              (assign, ":cur_troop", "trp_player"),
              (try_begin),
                (eq, "$g_player_is_captive", 0),
                (assign, ":continue", 1),
              (try_end),
            (else_try),
              (store_troop_faction, ":cur_troop_faction", ":cur_troop"),
              (eq, "$players_kingdom", ":cur_troop_faction"),
              #(troop_slot_eq, ":cur_troop", slot_troop_is_prisoner, 0),
              (neg|troop_slot_ge, ":cur_troop", slot_troop_prisoner_of_party, 0),
              (troop_slot_ge, ":cur_troop", slot_troop_leaded_party, 1),
              (troop_slot_eq, ":cur_troop", slot_troop_occupation, slto_kingdom_hero),
              (neg|faction_slot_eq, ":cur_troop_faction", slot_faction_leader, ":cur_troop"),
              (assign, ":continue", 1),
            (try_end),
            (eq, ":continue", 1),

            (neq, "$g_presentation_marshall_selection_max_renown_1_troop", ":cur_troop"),
            (neq, "$g_presentation_marshall_selection_max_renown_2_troop", ":cur_troop"),

            (val_sub, ":cur_index", 1),
            (lt, ":cur_index", 0),

            (assign, "$g_presentation_next_presentation", "prsnt_marshall_selection"),

            (create_mesh_overlay_with_tableau_material, reg1, -1, "tableau_troop_note_mesh", ":cur_troop"),
            (position_set_x, pos1, 300),
            (position_set_y, pos1, 300),
            (overlay_set_size, reg1, pos1),
            (position_set_x, pos1, 440),
            (position_set_y, pos1, 400),
            (overlay_set_position, reg1, pos1),

            (try_begin),
              (eq, ":cur_troop", "trp_player"),
              (create_text_overlay, reg1, "@Who do you wish to support?", tf_center_justify),
              (position_set_x, pos1, 500),
              (position_set_y, pos1, 200),
              (overlay_set_position, reg1, pos1),
              (str_store_troop_name, s1, "$g_presentation_marshall_selection_max_renown_1_troop"),
              (create_button_overlay, "$g_presentation_obj_marshall_selection_2", "@{!}{s1}", tf_center_justify),
              (position_set_x, pos1, 300),
              (position_set_y, pos1, 100),
              (overlay_set_position, "$g_presentation_obj_marshall_selection_2", pos1),
              (str_store_troop_name, s1, "$g_presentation_marshall_selection_max_renown_2_troop"),
              (create_button_overlay, "$g_presentation_obj_marshall_selection_3", "@{!}{s1}", tf_center_justify),
              (position_set_x, pos1, 700),
              (position_set_y, pos1, 100),
              (overlay_set_position, "$g_presentation_obj_marshall_selection_3", pos1),
            (else_try),
              (str_store_troop_name, s1, ":cur_troop"),
              (store_random_in_range, ":random_renown", 0, ":total_renown"),
              (val_sub, ":random_renown", "$g_presentation_marshall_selection_max_renown_1"),
              (try_begin),
                (lt, ":random_renown", 0),
                (val_add, "$g_presentation_marshall_selection_1_vote", 1),
                (str_store_troop_name, s2, "$g_presentation_marshall_selection_max_renown_1_troop"),
              (else_try),
                (val_add, "$g_presentation_marshall_selection_2_vote", 1),
                (str_store_troop_name, s2, "$g_presentation_marshall_selection_max_renown_2_troop"),
              (try_end),
              (create_text_overlay, reg1, "@{s1} gives his support to {s2}.", tf_center_justify),
              (position_set_x, pos1, 500),
              (position_set_y, pos1, 200),
              (overlay_set_position, reg1, pos1),

              (create_button_overlay, "$g_presentation_obj_marshall_selection_1", "@Continue...", tf_center_justify),
              (position_set_x, pos1, 500),
              (position_set_y, pos1, 100),
              (overlay_set_position, "$g_presentation_obj_marshall_selection_1", pos1),
            (try_end),
          (try_end),
        (try_end),

        (assign, reg0, "$g_presentation_marshall_selection_1_vote"),
        (create_text_overlay, reg1, "@Number of Supporters: {reg0}", tf_center_justify),
        (position_set_x, pos1, 200),
        (position_set_y, pos1, 550),
        (overlay_set_position, reg1, pos1),
        (assign, reg0, "$g_presentation_marshall_selection_2_vote"),
        (create_text_overlay, reg1, "@Number of Supporters: {reg0}", tf_center_justify),
        (position_set_x, pos1, 800),
        (position_set_y, pos1, 550),
        (overlay_set_position, reg1, pos1),

        (try_begin),
          (lt, "$g_presentation_next_presentation", 0),
          (try_begin),
            (gt, "$g_presentation_marshall_selection_2_vote", "$g_presentation_marshall_selection_1_vote"),
            (assign, ":local_temp", "$g_presentation_marshall_selection_max_renown_1_troop"),
            (assign, "$g_presentation_marshall_selection_max_renown_1_troop", "$g_presentation_marshall_selection_max_renown_2_troop"),
            (assign, "$g_presentation_marshall_selection_max_renown_2_troop", ":local_temp"),
          (try_end),
          #Winner is set to g_presentation_marshall_selection_max_renown_1_troop
          (str_store_troop_name, s1, "$g_presentation_marshall_selection_max_renown_1_troop"),
          (str_store_troop_name, s2, ":king"),
          (str_store_faction_name, s3, "$players_kingdom"),
          (create_text_overlay, reg1, "@{s2} has heard his vassals' counsel. He selects {s1} as the marshall of {s3}.", tf_center_justify),
          (position_set_x, pos1, 500),
          (position_set_y, pos1, 200),
          (overlay_set_position, reg1, pos1),
          (create_button_overlay, "$g_presentation_obj_marshall_selection_1", "@Continue...", tf_center_justify),
          (position_set_x, pos1, 500),
          (position_set_y, pos1, 100),
          (overlay_set_position, "$g_presentation_obj_marshall_selection_1", pos1),
        (try_end),

        (presentation_set_duration, 999999),
        ]),
     (ti_on_presentation_event_state_change,
      [
        (store_trigger_param_1, ":object"),
        (try_begin),
          (eq, ":object", "$g_presentation_obj_marshall_selection_2"),
          (val_add, "$g_presentation_marshall_selection_1_vote", 1),
          (call_script, "script_change_player_relation_with_troop", "$g_presentation_marshall_selection_max_renown_1_troop", 2),
          (call_script, "script_change_player_relation_with_troop", "$g_presentation_marshall_selection_max_renown_2_troop", -2),
        (else_try),
          (eq, ":object", "$g_presentation_obj_marshall_selection_3"),
          (val_add, "$g_presentation_marshall_selection_2_vote", 1),
          (call_script, "script_change_player_relation_with_troop", "$g_presentation_marshall_selection_max_renown_1_troop", -2),
          (call_script, "script_change_player_relation_with_troop", "$g_presentation_marshall_selection_max_renown_2_troop", 2),
        (try_end),
        (try_begin),
          (this_or_next|eq, ":object", "$g_presentation_obj_marshall_selection_1"),
          (this_or_next|eq, ":object", "$g_presentation_obj_marshall_selection_2"),
          (eq, ":object", "$g_presentation_obj_marshall_selection_3"),
          (try_begin),
            (ge, "$g_presentation_next_presentation", 0),
            (start_presentation, "$g_presentation_next_presentation"),
          (else_try),
            (try_begin),
              (neg|faction_slot_eq, "$players_kingdom", slot_faction_marshall, "$g_presentation_marshall_selection_max_renown_1_troop"),
              (call_script, "script_check_and_finish_active_army_quests_for_faction", "$players_kingdom"),
            (try_end),

           (faction_get_slot, ":old_marshall", "$players_kingdom", slot_faction_marshall),
           (try_begin),
             (ge, ":old_marshall", 0),
             (party_is_active, ":old_marshall"),
             (party_set_marshall, ":old_marshall", 0),
           (try_end),  

            (faction_set_slot, "$players_kingdom", slot_faction_marshall, "$g_presentation_marshall_selection_max_renown_1_troop"),
            (try_begin),
              (eq, "$g_presentation_marshall_selection_max_renown_1_troop", "trp_player"),
              (call_script, "script_change_player_relation_with_troop", "$g_presentation_marshall_selection_max_renown_2_troop", -3),
            (try_end),
            (assign, "$g_recalculate_ais", 1),
            (assign, "$g_presentation_marshall_selection_ended", 1),
            (presentation_set_duration, 0),
          (try_end),
        (try_end),
        ]),
     ]),
  
  ("battle",0,0,[
      (ti_on_presentation_load,
       [(set_fixed_point_multiplier, 1000),
        (assign, "$g_formation_group0_selected", 0),
        (assign, "$g_formation_group1_selected", 0),
        (assign, "$g_formation_group2_selected", 0),
        (assign, "$g_formation_group3_selected", 0),
        (assign, "$g_formation_group4_selected", 0),
        (assign, "$g_formation_group5_selected", 0),
        (assign, "$g_formation_group6_selected", 0),
        (assign, "$g_formation_group7_selected", 0),
        (assign, "$g_formation_group8_selected", 0),
        (assign, "$g_presentation_obj_battle_but0", -1),
        (assign, "$g_presentation_obj_battle_but1", -1),
        (assign, "$g_presentation_obj_battle_but2", -1),
        (assign, "$g_presentation_obj_battle_but3", -1),
        (assign, "$g_presentation_obj_battle_but4", -1),
        (assign, "$g_presentation_obj_battle_but5", -1),
        (assign, "$g_presentation_obj_battle_but6", -1),
        (assign, "$g_presentation_obj_battle_but7", -1),
        (assign, "$g_presentation_obj_battle_but8", -1),
        (str_clear, s7),

        ## PBOD Changes
        # (try_for_agents, ":agent_no"),
          # (agent_set_slot, ":agent_no", slot_agent_map_overlay_id, 0),
        # (try_end),

        # (get_player_agent_no, ":player_agent"),
        # (agent_get_troop_id, ":player_troop_id", ":player_agent"),
        ## PBOD Changes End

        (position_set_y, pos1, 700),
        (create_text_overlay, reg1, "@Action", tf_center_justify|tf_single_line|tf_with_outline),
        (overlay_set_color, reg1, 0xFFAAAAAA),
        (position_set_x, pos1, 270),
        (overlay_set_position, reg1, pos1),
        (create_text_overlay, reg1, "str_formation", tf_center_justify|tf_single_line|tf_with_outline),
        (overlay_set_color, reg1, 0xFFAAAAAA),
        (position_set_x, pos1, 410),
        (overlay_set_position, reg1, pos1),
        (create_text_overlay, reg1, "@Attack Type", tf_center_justify|tf_single_line|tf_with_outline),
        (overlay_set_color, reg1, 0xFFAAAAAA),
        (position_set_x, pos1, 550),
        (overlay_set_position, reg1, pos1),

        (assign, "$group0_has_troops", 0),
        (assign, "$group1_has_troops", 0),
        (assign, "$group2_has_troops", 0),
        (assign, "$group3_has_troops", 0),
        (assign, "$group4_has_troops", 0),
        (assign, "$group5_has_troops", 0),
        (assign, "$group6_has_troops", 0),
        (assign, "$group7_has_troops", 0),
        (assign, "$group8_has_troops", 0),
        #(party_get_num_companion_stacks, ":num_stacks", "p_main_party"),
        (assign, "$num_classes", 0),
        #(try_for_range, ":troop_iterator", 0, ":num_stacks"),
        #  (party_stack_get_troop_id, ":cur_troop_id", "p_main_party", ":troop_iterator"),
        #  (troop_get_class, ":troop_class", ":cur_troop_id"),
        #  (neq, ":player_troop_id", ":cur_troop_id"),
        ## PBOD Changes - includes comments out above
        (try_for_agents, ":agent"),
          (agent_set_slot, ":agent", slot_agent_map_overlay_id, 0),
          (agent_is_alive, ":agent"),
          (agent_is_human, ":agent"),
          (agent_is_non_player, ":agent"),
          (agent_get_party_id, ":party", ":agent"),
          (eq, ":party", "p_main_party"),
          (agent_get_division, ":troop_class", ":agent"),
        ## PBOD Changes End
          (try_begin),
            (eq, ":troop_class", 0),
            (try_begin),
              (neq, "$group0_has_troops", 1),
              (val_add, "$num_classes", 1),
            (try_end),
            (assign, "$group0_has_troops", 1),
          (else_try),
            (eq, ":troop_class", 1),
            (try_begin),
              (neq, "$group1_has_troops", 1),
              (val_add, "$num_classes", 1),
            (try_end),
            (assign, "$group1_has_troops", 1),
          (else_try),
            (eq, ":troop_class", 2),
            (try_begin),
              (neq, "$group2_has_troops", 1),
              (val_add, "$num_classes", 1),
            (try_end),
            (assign, "$group2_has_troops", 1),
          (else_try),
            (eq, ":troop_class", 3),
            (try_begin),
              (neq, "$group3_has_troops", 1),
              (val_add, "$num_classes", 1),
            (try_end),
            (assign, "$group3_has_troops", 1),
          (else_try),
            (eq, ":troop_class", 4),
            (try_begin),
              (neq, "$group4_has_troops", 1),
              (val_add, "$num_classes", 1),
            (try_end),
            (assign, "$group4_has_troops", 1),
          (else_try),
            (eq, ":troop_class", 5),
            (try_begin),
              (neq, "$group5_has_troops", 1),
              (val_add, "$num_classes", 1),
            (try_end),
            (assign, "$group5_has_troops", 1),
          (else_try),
            (eq, ":troop_class", 6),
            (try_begin),
              (neq, "$group6_has_troops", 1),
              (val_add, "$num_classes", 1),
            (try_end),
            (assign, "$group6_has_troops", 1),
          (else_try),
            (eq, ":troop_class", 7),
            (try_begin),
              (neq, "$group7_has_troops", 1),
              (val_add, "$num_classes", 1),
            (try_end),
            (assign, "$group7_has_troops", 1),
          (else_try),
            (eq, ":troop_class", 8),
            (try_begin),
              (neq, "$group8_has_troops", 1),
              (val_add, "$num_classes", 1),
            (try_end),
            (assign, "$group8_has_troops", 1),
          (try_end),
        (try_end),

        (assign, ":stat_position_x", 0),
        (assign, ":stat_position_y", 653),
        (assign, ":stat_position_check_x", 20),
        (assign, ":stat_position_check_y", 662),
        (assign, ":stat_position_name_x", 50),
        (assign, ":stat_position_name_y", 660),
        (try_begin),
          (eq, "$group0_has_troops", 1),
          (create_image_button_overlay, "$g_presentation_obj_battle_but0", "mesh_white_plane", "mesh_white_plane"),
          (position_set_x, pos1, ":stat_position_x"),
          (position_set_y, pos1, ":stat_position_y"),
          (overlay_set_position, "$g_presentation_obj_battle_but0", pos1),
          (val_add, ":stat_position_y", -40),

          (position_set_x, pos1, 32500),
          (position_set_y, pos1, 2000),
          (overlay_set_size, "$g_presentation_obj_battle_but0", pos1),
          (overlay_set_alpha, "$g_presentation_obj_battle_but0", 0),
          (overlay_set_color, "$g_presentation_obj_battle_but0", 0xFFFF00),

          (create_check_box_overlay, "$g_presentation_obj_battle_check0", "mesh_checkbox_off", "mesh_checkbox_on"),
          (position_set_x, pos2, ":stat_position_check_x"),
          (position_set_y, pos2, ":stat_position_check_y"),
          (overlay_set_position, "$g_presentation_obj_battle_check0", pos2),
          (val_add, ":stat_position_check_y", -40),

          (create_text_overlay, "$g_presentation_obj_battle_name0", s7, 0),
          (position_set_x, pos3, ":stat_position_name_x"),
          (position_set_y, pos3, ":stat_position_name_y"),
          (overlay_set_position, "$g_presentation_obj_battle_name0", pos3),
        
          (val_add, ":stat_position_name_y", -40),

          (create_text_overlay, "$g_presentation_but0_movement", s7, tf_center_justify),
          (create_text_overlay, "$g_presentation_but0_riding", s7, tf_center_justify),
          (create_text_overlay, "$g_presentation_but0_weapon_usage", s7, tf_center_justify),
        (try_end),
        (try_begin),
          (eq, "$group1_has_troops", 1),
          (create_image_button_overlay, "$g_presentation_obj_battle_but1", "mesh_white_plane", "mesh_white_plane"),
          (position_set_x, pos1, ":stat_position_x"),
          (position_set_y, pos1, ":stat_position_y"),
          (overlay_set_position, "$g_presentation_obj_battle_but1", pos1),
          (val_add, ":stat_position_y", -40),

          (position_set_x, pos1, 32500),
          (position_set_y, pos1, 2000),
          (overlay_set_size, "$g_presentation_obj_battle_but1", pos1),
          (overlay_set_alpha, "$g_presentation_obj_battle_but1", 0),
          (overlay_set_color, "$g_presentation_obj_battle_but1", 0xFFFF00),

          (create_check_box_overlay, "$g_presentation_obj_battle_check1", "mesh_checkbox_off", "mesh_checkbox_on"),
          (position_set_x, pos2, ":stat_position_check_x"),
          (position_set_y, pos2, ":stat_position_check_y"),
          (overlay_set_position, "$g_presentation_obj_battle_check1", pos2),
          (val_add, ":stat_position_check_y", -40),        

          (create_text_overlay, "$g_presentation_obj_battle_name1", s7, 0),
          (position_set_x, pos3, ":stat_position_name_x"),
          (position_set_y, pos3, ":stat_position_name_y"),
          (overlay_set_position, "$g_presentation_obj_battle_name1", pos3),
          (val_add, ":stat_position_name_y", -40),

          (create_text_overlay, "$g_presentation_but1_movement", s7, tf_center_justify),
          (create_text_overlay, "$g_presentation_but1_riding", s7, tf_center_justify),
          (create_text_overlay, "$g_presentation_but1_weapon_usage", s7, tf_center_justify),
        (try_end),
        (try_begin),
          (eq, "$group2_has_troops", 1),
          (create_image_button_overlay, "$g_presentation_obj_battle_but2", "mesh_white_plane", "mesh_white_plane"),
          (position_set_x, pos1, ":stat_position_x"),
          (position_set_y, pos1, ":stat_position_y"),
          (overlay_set_position, "$g_presentation_obj_battle_but2", pos1),
          (val_add, ":stat_position_y", -40),

          (position_set_x, pos1, 32500),
          (position_set_y, pos1, 2000),
          (overlay_set_size, "$g_presentation_obj_battle_but2", pos1),
          (overlay_set_alpha, "$g_presentation_obj_battle_but2", 0),
          (overlay_set_color, "$g_presentation_obj_battle_but2", 0xFFFF00),

          (create_check_box_overlay, "$g_presentation_obj_battle_check2", "mesh_checkbox_off", "mesh_checkbox_on"),          
          (position_set_x, pos2, ":stat_position_check_x"),
          (position_set_y, pos2, ":stat_position_check_y"),
          (overlay_set_position, "$g_presentation_obj_battle_check2", pos2),
          (val_add, ":stat_position_check_y", -40),        

          (create_text_overlay, "$g_presentation_obj_battle_name2", s7, 0),
          (position_set_x, pos3, ":stat_position_name_x"),
          (position_set_y, pos3, ":stat_position_name_y"),
          (overlay_set_position, "$g_presentation_obj_battle_name2", pos3),
          (val_add, ":stat_position_name_y", -40),

          (create_text_overlay, "$g_presentation_but2_movement", s7, tf_center_justify),
          (create_text_overlay, "$g_presentation_but2_riding", s7, tf_center_justify),
          (create_text_overlay, "$g_presentation_but2_weapon_usage", s7, tf_center_justify),
        (try_end),
        (try_begin),
          (eq, "$group3_has_troops", 1),
          (create_image_button_overlay, "$g_presentation_obj_battle_but3", "mesh_white_plane", "mesh_white_plane"),
          (position_set_x, pos1, ":stat_position_x"),
          (position_set_y, pos1, ":stat_position_y"),
          (overlay_set_position, "$g_presentation_obj_battle_but3", pos1),
          (val_add, ":stat_position_y", -40),

          (position_set_x, pos1, 32500),
          (position_set_y, pos1, 2000),
          (overlay_set_size, "$g_presentation_obj_battle_but3", pos1),
          (overlay_set_alpha, "$g_presentation_obj_battle_but3", 0),
          (overlay_set_color, "$g_presentation_obj_battle_but3", 0xFFFF00),

          (create_check_box_overlay, "$g_presentation_obj_battle_check3", "mesh_checkbox_off", "mesh_checkbox_on"),          
          (position_set_x, pos2, ":stat_position_check_x"),
          (position_set_y, pos2, ":stat_position_check_y"),
          (overlay_set_position, "$g_presentation_obj_battle_check3", pos2),
          (val_add, ":stat_position_check_y", -40),        

          (create_text_overlay, "$g_presentation_obj_battle_name3", s7, 0),
          (position_set_x, pos3, ":stat_position_name_x"),
          (position_set_y, pos3, ":stat_position_name_y"),
          (overlay_set_position, "$g_presentation_obj_battle_name3", pos3),
          (val_add, ":stat_position_name_y", -40),

          (create_text_overlay, "$g_presentation_but3_movement", s7, tf_center_justify),
          (create_text_overlay, "$g_presentation_but3_riding", s7, tf_center_justify),
          (create_text_overlay, "$g_presentation_but3_weapon_usage", s7, tf_center_justify),
        (try_end),
        (try_begin),
          (eq, "$group4_has_troops", 1),
          (create_image_button_overlay, "$g_presentation_obj_battle_but4", "mesh_white_plane", "mesh_white_plane"),
          (position_set_x, pos1, ":stat_position_x"),
          (position_set_y, pos1, ":stat_position_y"),
          (overlay_set_position, "$g_presentation_obj_battle_but4", pos1),
          (val_add, ":stat_position_y", -40),

          (position_set_x, pos1, 32500),
          (position_set_y, pos1, 2000),
          (overlay_set_size, "$g_presentation_obj_battle_but4", pos1),
          (overlay_set_alpha, "$g_presentation_obj_battle_but4", 0),
          (overlay_set_color, "$g_presentation_obj_battle_but4", 0xFFFF00),

          (create_check_box_overlay, "$g_presentation_obj_battle_check4", "mesh_checkbox_off", "mesh_checkbox_on"),          
          (position_set_x, pos2, ":stat_position_check_x"),
          (position_set_y, pos2, ":stat_position_check_y"),
          (overlay_set_position, "$g_presentation_obj_battle_check4", pos2),
          (val_add, ":stat_position_check_y", -40),        

          (create_text_overlay, "$g_presentation_obj_battle_name4", s7, 0),
          (position_set_x, pos3, ":stat_position_name_x"),
          (position_set_y, pos3, ":stat_position_name_y"),
          (overlay_set_position, "$g_presentation_obj_battle_name4", pos3),
          (val_add, ":stat_position_name_y", -40),
        
          (create_text_overlay, "$g_presentation_but4_movement", s7, tf_center_justify),
          (create_text_overlay, "$g_presentation_but4_riding", s7, tf_center_justify),
          (create_text_overlay, "$g_presentation_but4_weapon_usage", s7, tf_center_justify),
        (try_end),
        (try_begin),
          (eq, "$group5_has_troops", 1),
          (create_image_button_overlay, "$g_presentation_obj_battle_but5", "mesh_white_plane", "mesh_white_plane"),
          (position_set_x, pos1, ":stat_position_x"),
          (position_set_y, pos1, ":stat_position_y"),
          (overlay_set_position, "$g_presentation_obj_battle_but5", pos1),
          (val_add, ":stat_position_y", -40),

          (position_set_x, pos1, 32500),
          (position_set_y, pos1, 2000),
          (overlay_set_size, "$g_presentation_obj_battle_but5", pos1),
          (overlay_set_alpha, "$g_presentation_obj_battle_but5", 0),
          (overlay_set_color, "$g_presentation_obj_battle_but5", 0xFFFF00),

          (create_check_box_overlay, "$g_presentation_obj_battle_check5", "mesh_checkbox_off", "mesh_checkbox_on"),          
          (position_set_x, pos2, ":stat_position_check_x"),
          (position_set_y, pos2, ":stat_position_check_y"),
          (overlay_set_position, "$g_presentation_obj_battle_check5", pos2),
          (val_add, ":stat_position_check_y", -40),        

          (create_text_overlay, "$g_presentation_obj_battle_name5", s7, 0),
          (position_set_x, pos3, ":stat_position_name_x"),
          (position_set_y, pos3, ":stat_position_name_y"),
          (overlay_set_position, "$g_presentation_obj_battle_name5", pos3),
          (val_add, ":stat_position_name_y", -40),

          (create_text_overlay, "$g_presentation_but5_movement", s7, tf_center_justify),
          (create_text_overlay, "$g_presentation_but5_riding", s7, tf_center_justify),
          (create_text_overlay, "$g_presentation_but5_weapon_usage", s7, tf_center_justify),
        (try_end),
        (try_begin),
          (eq, "$group6_has_troops", 1),
          (create_image_button_overlay, "$g_presentation_obj_battle_but6", "mesh_white_plane", "mesh_white_plane"),
          (position_set_x, pos1, ":stat_position_x"),
          (position_set_y, pos1, ":stat_position_y"),
          (overlay_set_position, "$g_presentation_obj_battle_but6", pos1),
          (val_add, ":stat_position_y", -40),

          (position_set_x, pos1, 32500),
          (position_set_y, pos1, 2000),
          (overlay_set_size, "$g_presentation_obj_battle_but6", pos1),
          (overlay_set_alpha, "$g_presentation_obj_battle_but6", 0),
          (overlay_set_color, "$g_presentation_obj_battle_but6", 0xFFFF00),

          (create_check_box_overlay, "$g_presentation_obj_battle_check6", "mesh_checkbox_off", "mesh_checkbox_on"),          
          (position_set_x, pos2, ":stat_position_check_x"),
          (position_set_y, pos2, ":stat_position_check_y"),
          (overlay_set_position, "$g_presentation_obj_battle_check6", pos2),
          (val_add, ":stat_position_check_y", -40),        

          (create_text_overlay, "$g_presentation_obj_battle_name6", s7, 0),
          (position_set_x, pos3, ":stat_position_name_x"),
          (position_set_y, pos3, ":stat_position_name_y"),
          (overlay_set_position, "$g_presentation_obj_battle_name6", pos3),
          (val_add, ":stat_position_name_y", -40),

          (create_text_overlay, "$g_presentation_but6_movement", s7, tf_center_justify),
          (create_text_overlay, "$g_presentation_but6_riding", s7, tf_center_justify),
          (create_text_overlay, "$g_presentation_but6_weapon_usage", s7, tf_center_justify),
        (try_end),
        (try_begin),
          (eq, "$group7_has_troops", 1),
          (create_image_button_overlay, "$g_presentation_obj_battle_but7", "mesh_white_plane", "mesh_white_plane"),
          (position_set_x, pos1, ":stat_position_x"),
          (position_set_y, pos1, ":stat_position_y"),
          (overlay_set_position, "$g_presentation_obj_battle_but7", pos1),
          (val_add, ":stat_position_y", -40),

          (position_set_x, pos1, 32500),
          (position_set_y, pos1, 2000),
          (overlay_set_size, "$g_presentation_obj_battle_but7", pos1),
          (overlay_set_alpha, "$g_presentation_obj_battle_but7", 0),
          (overlay_set_color, "$g_presentation_obj_battle_but7", 0xFFFF00),

          (create_check_box_overlay, "$g_presentation_obj_battle_check7", "mesh_checkbox_off", "mesh_checkbox_on"),          
          (position_set_x, pos2, ":stat_position_check_x"),
          (position_set_y, pos2, ":stat_position_check_y"),
          (overlay_set_position, "$g_presentation_obj_battle_check7", pos2),
          (val_add, ":stat_position_check_y", -40),        

          (create_text_overlay, "$g_presentation_obj_battle_name7", s7, 0),
          (position_set_x, pos3, ":stat_position_name_x"),
          (position_set_y, pos3, ":stat_position_name_y"),
          (overlay_set_position, "$g_presentation_obj_battle_name7", pos3),
          (val_add, ":stat_position_name_y", -40),

          (create_text_overlay, "$g_presentation_but7_movement", s7, tf_center_justify),
          (create_text_overlay, "$g_presentation_but7_riding", s7, tf_center_justify),
          (create_text_overlay, "$g_presentation_but7_weapon_usage", s7, tf_center_justify),
        (try_end),
        (try_begin),
          (eq, "$group8_has_troops", 1),
          (create_image_button_overlay, "$g_presentation_obj_battle_but8", "mesh_white_plane", "mesh_white_plane"),
          (position_set_x, pos1, ":stat_position_x"),
          (position_set_y, pos1, ":stat_position_y"),
          (overlay_set_position, "$g_presentation_obj_battle_but8", pos1),
          (val_add, ":stat_position_y", -40),

          (position_set_x, pos1, 32500),
          (position_set_y, pos1, 2000),
          (overlay_set_size, "$g_presentation_obj_battle_but8", pos1),
          (overlay_set_alpha, "$g_presentation_obj_battle_but8", 0),
          (overlay_set_color, "$g_presentation_obj_battle_but8", 0xFFFF00),

          (create_check_box_overlay, "$g_presentation_obj_battle_check8", "mesh_checkbox_off", "mesh_checkbox_on"),          
          (position_set_x, pos2, ":stat_position_check_x"),
          (position_set_y, pos2, ":stat_position_check_y"),
          (overlay_set_position, "$g_presentation_obj_battle_check8", pos2),
          (val_add, ":stat_position_check_y", -40),        

          (create_text_overlay, "$g_presentation_obj_battle_name8", s7, 0),
          (position_set_x, pos3, ":stat_position_name_x"),
          (position_set_y, pos3, ":stat_position_name_y"),
          (overlay_set_position, "$g_presentation_obj_battle_name8", pos3),
          (val_add, ":stat_position_name_y", -40),

          (create_text_overlay, "$g_presentation_but8_movement", s7, tf_center_justify),
          (create_text_overlay, "$g_presentation_but8_riding", s7, tf_center_justify),
          (create_text_overlay, "$g_presentation_but8_weapon_usage", s7, tf_center_justify),
        (try_end),
        
        (get_player_agent_no, ":player_agent"),
        (agent_get_team, ":player_team", ":player_agent"),
        
        (call_script, "script_update_order_panel", ":player_team"),

        #(create_button_overlay, "$g_presentation_obj_battle_10", "@Hold This Position", tf_center_justify),
        #(create_button_overlay, "$g_presentation_obj_battle_11", "@Follow Me", tf_center_justify),
        #(create_button_overlay, "$g_presentation_obj_battle_12", "@Charge", tf_center_justify),
        #(create_button_overlay, "$g_presentation_obj_battle_13", "@Advance", tf_center_justify),
        #(create_button_overlay, "$g_presentation_obj_battle_14", "@Fall Back", tf_center_justify),
        #(create_button_overlay, "$g_presentation_obj_battle_15", "@Stand Closer", tf_center_justify),
        #(create_button_overlay, "$g_presentation_obj_battle_16", "@Spread Out", tf_center_justify),
        #(create_button_overlay, "$g_presentation_obj_battle_17", "@Stand Ground", tf_center_justify),
        #(create_button_overlay, "$g_presentation_obj_battle_18", "@Mount", tf_center_justify),
        #(create_button_overlay, "$g_presentation_obj_battle_19", "@Dismount", tf_center_justify),
        #(create_button_overlay, "$g_presentation_obj_battle_20", "@Use Any Weapon", tf_center_justify),
        #(create_button_overlay, "$g_presentation_obj_battle_21", "@Use Blunt Weapons", tf_center_justify),
        #(create_button_overlay, "$g_presentation_obj_battle_28", "@Hold Your Fire", tf_center_justify),
        #(create_button_overlay, "$g_presentation_obj_battle_29", "@Fire At Will", tf_center_justify),
        
        (assign, ":y_position_for_order_buttons", 640),
        (assign, ":addition_y_position", "$num_classes"),
        (val_mul, ":addition_y_position", -40),
        (val_add, ":y_position_for_order_buttons", ":addition_y_position"),

        (create_listbox_overlay, "$g_presentation_obj_battle_10", "str_space", 0),
        (create_listbox_overlay, "$g_presentation_obj_battle_11", "str_space", 0),
        (create_listbox_overlay, "$g_presentation_obj_battle_12", "str_space", 0),
        (create_listbox_overlay, "$g_presentation_obj_battle_13", "str_space", 0),
        (create_listbox_overlay, "$g_presentation_obj_battle_19", "str_space", 0),
        
        (overlay_add_item, "$g_presentation_obj_battle_10", "@Stand Ground"),
        ##(overlay_add_item, "$g_presentation_obj_battle_10", "@Spread Out"),
        ##(overlay_add_item, "$g_presentation_obj_battle_10", "@Stand Closer"),
        ##(overlay_add_item, "$g_presentation_obj_battle_10", "@Fall Back"),
        ##(overlay_add_item, "$g_presentation_obj_battle_10", "@Advance"),
        (overlay_add_item, "$g_presentation_obj_battle_10", "@Charge"),
        (overlay_add_item, "$g_presentation_obj_battle_10", "@Follow Me"),
        (overlay_add_item, "$g_presentation_obj_battle_10", "@Hold This Position"),

        (create_button_overlay, "$g_presentation_obj_battle_14", "@Spread Out", tf_center_justify|tf_single_line|tf_with_outline),
        (overlay_set_color, "$g_presentation_obj_battle_14", 0xFFFFFFFF),
        (create_button_overlay, "$g_presentation_obj_battle_15", "@Stand Closer", tf_center_justify|tf_single_line|tf_with_outline),
        (overlay_set_color, "$g_presentation_obj_battle_15", 0xFFFFFFFF),
        (create_button_overlay, "$g_presentation_obj_battle_16", "@Fall Back", tf_center_justify|tf_single_line|tf_with_outline),
        (overlay_set_color, "$g_presentation_obj_battle_16", 0xFFFFFFFF),
        (create_button_overlay, "$g_presentation_obj_battle_17", "@Advance", tf_center_justify|tf_single_line|tf_with_outline),
        (overlay_set_color, "$g_presentation_obj_battle_17", 0xFFFFFFFF),
        
        (create_button_overlay, "$g_presentation_obj_battle_18", "str_all_fire_now", tf_center_justify|tf_single_line|tf_with_outline),
        (overlay_set_color, "$g_presentation_obj_battle_18", 0xFFFFFFFF),
        (overlay_set_alpha, "$g_presentation_obj_battle_18", 0),
        (overlay_set_hilight_alpha, "$g_presentation_obj_battle_18", 0),
        
        (create_button_overlay, "$g_presentation_obj_battle_29", "str_left_fire_now", tf_center_justify|tf_single_line|tf_with_outline),
        (overlay_set_color, "$g_presentation_obj_battle_29", 0xFFFFFFFF),
        (overlay_set_alpha, "$g_presentation_obj_battle_29", 0),
        (overlay_set_hilight_alpha, "$g_presentation_obj_battle_29", 0),
        (create_button_overlay, "$g_presentation_obj_battle_30", "str_middle_fire_now", tf_center_justify|tf_single_line|tf_with_outline),
        (overlay_set_color, "$g_presentation_obj_battle_30", 0xFFFFFFFF),
        (overlay_set_alpha, "$g_presentation_obj_battle_30", 0),
        (overlay_set_hilight_alpha, "$g_presentation_obj_battle_30", 0),
        (create_button_overlay, "$g_presentation_obj_battle_31", "str_right_fire_now", tf_center_justify|tf_single_line|tf_with_outline),
        (overlay_set_color, "$g_presentation_obj_battle_31", 0xFFFFFFFF),
        (overlay_set_alpha, "$g_presentation_obj_battle_31", 0),
        (overlay_set_hilight_alpha, "$g_presentation_obj_battle_31", 0),
        
        (position_set_x, pos1, 600),
        (position_set_y, pos1, 600),
        (overlay_set_size, "$g_presentation_obj_battle_10", pos1),

        (val_add, ":y_position_for_order_buttons", -35),
        (position_set_x, pos1, 205),
        (position_set_y, pos1, ":y_position_for_order_buttons"),
        (val_add, ":y_position_for_order_buttons", 35),
        (overlay_set_position, "$g_presentation_obj_battle_10", pos1),
        (overlay_set_alpha, "$g_presentation_obj_battle_10", 0x60),
        (overlay_set_val, "$g_presentation_obj_battle_10", "$g_latest_order_1"),

        #(val_add, ":y_position_for_order_buttons", -40), #new
        (position_set_x, pos1, 435), #new
        (position_set_y, pos1, 486), #new
        #(val_add, ":y_position_for_order_buttons", 40), #new
        (overlay_set_position, "$g_presentation_obj_battle_14", pos1), #new
        #(overlay_set_alpha, "$g_presentation_obj_battle_14", 0x60), #new

        #(val_add, ":y_position_for_order_buttons", -20), #new
        (position_set_x, pos1, 435), #new
        (position_set_y, pos1, 466), #new
        #(val_add, ":y_position_for_order_buttons", 20), #new
        (overlay_set_position, "$g_presentation_obj_battle_15", pos1), #new
        #(overlay_set_alpha, "$g_presentation_obj_battle_15", 0x60), #new

        (val_add, ":y_position_for_order_buttons", -80), #new
        (position_set_x, pos1, 285), #new
        (position_set_y, pos1, ":y_position_for_order_buttons"), #new
        (val_add, ":y_position_for_order_buttons", 80), #new
        (overlay_set_position, "$g_presentation_obj_battle_16", pos1), #new
        #(overlay_set_alpha, "$g_presentation_obj_battle_16", 0x60), #new

        (val_add, ":y_position_for_order_buttons", -60), #new
        (position_set_x, pos1, 285), #new
        (position_set_y, pos1, ":y_position_for_order_buttons"), #new
        (val_add, ":y_position_for_order_buttons", 60), #new
        (overlay_set_position, "$g_presentation_obj_battle_17", pos1), #new
        #(overlay_set_alpha, "$g_presentation_obj_battle_17", 0x60), #new

        
        (val_add, ":y_position_for_order_buttons", -25), #new
        (position_set_x, pos1, 130), #new
        (position_set_y, pos1, ":y_position_for_order_buttons"), #new
        (overlay_set_position, "$g_presentation_obj_battle_18", pos1), #new
        (val_add, ":y_position_for_order_buttons", 25), #new
        
        (val_add, ":y_position_for_order_buttons", -45), #new
        (position_set_x, pos1, 130), #new
        (position_set_y, pos1, ":y_position_for_order_buttons"), #new
        (overlay_set_position, "$g_presentation_obj_battle_29", pos1), #new
        (val_add, ":y_position_for_order_buttons", 45), #new
        
        (val_add, ":y_position_for_order_buttons", -65), #new
        (position_set_x, pos1, 130), #new
        (position_set_y, pos1, ":y_position_for_order_buttons"), #new
        (overlay_set_position, "$g_presentation_obj_battle_30", pos1), #new
        (val_add, ":y_position_for_order_buttons", 65), #new
        
        (val_add, ":y_position_for_order_buttons", -85), #new
        (position_set_x, pos1, 130), #new
        (position_set_y, pos1, ":y_position_for_order_buttons"), #new
        (overlay_set_position, "$g_presentation_obj_battle_31", pos1), #new
        (val_add, ":y_position_for_order_buttons", 85), #new

        (overlay_add_item, "$g_presentation_obj_battle_11", "@Dismount"),
        (overlay_add_item, "$g_presentation_obj_battle_11", "@Mount"),
        
        (position_set_x, pos1, 600),
        (position_set_y, pos1, 600),
        (overlay_set_size, "$g_presentation_obj_battle_11", pos1),

        (val_add, ":y_position_for_order_buttons", -70),
        (position_set_x, pos1, 495),
        (position_set_y, pos1, ":y_position_for_order_buttons"),
        (val_add, ":y_position_for_order_buttons", 70),
        (overlay_set_position, "$g_presentation_obj_battle_11", pos1),

        (overlay_set_alpha, "$g_presentation_obj_battle_11", 0x60),
        (overlay_set_val, "$g_presentation_obj_battle_11", "$g_latest_order_2"),



        (overlay_add_item, "$g_presentation_obj_battle_12", "@Fire At Will"),
        (overlay_add_item, "$g_presentation_obj_battle_12", "str_fire_at_my_command"),
        (assign, reg0, 5),
        (overlay_add_item, "$g_presentation_obj_battle_19", "str_form_reg0_rows"),
        (assign, reg0, 4),
        (overlay_add_item, "$g_presentation_obj_battle_19", "str_form_reg0_rows"),
        (assign, reg0, 3),
        (overlay_add_item, "$g_presentation_obj_battle_19", "str_form_reg0_rows"),
        (assign, reg0, 2),
        (overlay_add_item, "$g_presentation_obj_battle_19", "str_form_reg0_rows"),
        (overlay_add_item, "$g_presentation_obj_battle_19", "str_form_1_row"),
        
        (position_set_x, pos1, 600),
        (position_set_y, pos1, 600),
        (overlay_set_size, "$g_presentation_obj_battle_12", pos1),
        (overlay_set_size, "$g_presentation_obj_battle_19", pos1),

        (val_add, ":y_position_for_order_buttons", -0),
        (position_set_x, pos1, 50),
        (position_set_y, pos1, ":y_position_for_order_buttons"),
        (val_add, ":y_position_for_order_buttons", 0),
        (overlay_set_position, "$g_presentation_obj_battle_12", pos1),
        (val_add, ":y_position_for_order_buttons", -52.5),
        (position_set_x, pos1, 350),
        (position_set_y, pos1, ":y_position_for_order_buttons"),
        (val_add, ":y_position_for_order_buttons", 52.5),
        (overlay_set_position, "$g_presentation_obj_battle_19", pos1),

        (overlay_set_alpha, "$g_presentation_obj_battle_12", 0x60),
        (assign, "$g_latest_order_3", 0),
        (overlay_set_val, "$g_presentation_obj_battle_12", "$g_latest_order_3"),

        (overlay_set_alpha, "$g_presentation_obj_battle_19", 0x60),
        (assign, "$g_latest_order_5", 3),
        (overlay_set_val, "$g_presentation_obj_battle_19", "$g_latest_order_5"),


        (overlay_add_item, "$g_presentation_obj_battle_13", "str_use_melee_weapons"),
        (overlay_add_item, "$g_presentation_obj_battle_13", "str_use_ranged_weapons"),
        (overlay_add_item, "$g_presentation_obj_battle_13", "@Use Blunt Weapons"),
        (overlay_add_item, "$g_presentation_obj_battle_13", "@Use Any Weapon"),
        
        (position_set_x, pos1, 600),
        (position_set_y, pos1, 600),
        (overlay_set_size, "$g_presentation_obj_battle_13", pos1),

        (val_add, ":y_position_for_order_buttons", -35),
        (position_set_x, pos1, 495),
        (position_set_y, pos1, ":y_position_for_order_buttons"),
        (val_add, ":y_position_for_order_buttons", 35),
        (overlay_set_position, "$g_presentation_obj_battle_13", pos1),

        (overlay_set_alpha, "$g_presentation_obj_battle_13", 0x60),
        (overlay_set_val, "$g_presentation_obj_battle_13", "$g_latest_order_4"),



        (create_text_overlay, "$g_presentation_obj_battle_22", "str_us_", 0),
        (create_text_overlay, "$g_presentation_obj_battle_23", "str_allies_", 0),
        (create_text_overlay, "$g_presentation_obj_battle_24", "str_enemies_", 0),
        (create_text_overlay, "$g_presentation_obj_battle_25", "@Ready", tf_center_justify),
        (create_text_overlay, "$g_presentation_obj_battle_26", "@Wounded", tf_center_justify),
        (create_text_overlay, "$g_presentation_obj_battle_28", "str_routed", tf_center_justify),
        (create_text_overlay, "$g_presentation_obj_battle_27", "@Dead", tf_center_justify),

        (create_text_overlay, "$g_battle_us_ready", s7, tf_center_justify),
        (create_text_overlay, "$g_battle_us_wounded", s7, tf_center_justify),
        (create_text_overlay, "$g_battle_us_routed", s7, tf_center_justify),
        (create_text_overlay, "$g_battle_us_dead", s7, tf_center_justify),
        
        (create_text_overlay, "$g_battle_enemies_ready", s7, tf_center_justify),
        (create_text_overlay, "$g_battle_enemies_wounded", s7, tf_center_justify),
        (create_text_overlay, "$g_battle_enemies_routed", s7, tf_center_justify),
        (create_text_overlay, "$g_battle_enemies_dead", s7, tf_center_justify),

        (create_text_overlay, "$g_battle_allies_ready", s7, tf_center_justify),
        (create_text_overlay, "$g_battle_allies_wounded", s7, tf_center_justify),
        (create_text_overlay, "$g_battle_allies_routed", s7, tf_center_justify),
        (create_text_overlay, "$g_battle_allies_dead", s7, tf_center_justify),


        (create_image_button_overlay, "$g_battle_report_plane", "mesh_white_plane", "mesh_white_plane"),
        (overlay_set_color, "$g_battle_report_plane", 0),
        (position_set_x, pos1, 15500),
        (position_set_y, pos1, 6000),
        (overlay_set_size, "$g_battle_report_plane", pos1),
        (position_set_x, pos1, 672),
        (position_set_y, pos1, 275),
        (overlay_set_position, "$g_battle_report_plane", pos1),
        (overlay_set_alpha, "$g_battle_report_plane", 0x44),
        (overlay_set_color, "$g_battle_report_plane", 0x1166BB),


        (position_set_x, pos1, 750),
        (position_set_y, pos1, 750),

        (overlay_set_size, "$g_presentation_obj_battle_14", pos1), #new
        (overlay_set_size, "$g_presentation_obj_battle_15", pos1), #new
        (overlay_set_size, "$g_presentation_obj_battle_16", pos1), #new
        (overlay_set_size, "$g_presentation_obj_battle_17", pos1), #new
        (overlay_set_size, "$g_presentation_obj_battle_18", pos1), #new
        
        (overlay_set_size, "$g_presentation_obj_battle_29", pos1), #new
        (overlay_set_size, "$g_presentation_obj_battle_30", pos1), #new
        (overlay_set_size, "$g_presentation_obj_battle_31", pos1), #new

        (overlay_set_size, "$g_presentation_obj_battle_22", pos1),
        (overlay_set_size, "$g_presentation_obj_battle_23", pos1),
        (overlay_set_size, "$g_presentation_obj_battle_24", pos1),
        (overlay_set_size, "$g_presentation_obj_battle_25", pos1),
        (overlay_set_size, "$g_presentation_obj_battle_26", pos1),
        (overlay_set_size, "$g_presentation_obj_battle_27", pos1),
        (overlay_set_size, "$g_presentation_obj_battle_28", pos1),
        (overlay_set_size, "$g_battle_us_ready", pos1),
        (overlay_set_size, "$g_battle_us_wounded", pos1),
        (overlay_set_size, "$g_battle_us_routed", pos1),
        (overlay_set_size, "$g_battle_us_dead", pos1),
        (overlay_set_size, "$g_battle_enemies_ready", pos1),
        (overlay_set_size, "$g_battle_enemies_wounded", pos1),
        (overlay_set_size, "$g_battle_enemies_routed", pos1),
        (overlay_set_size, "$g_battle_enemies_dead", pos1),
        (overlay_set_size, "$g_battle_allies_ready", pos1),        
        (overlay_set_size, "$g_battle_allies_wounded", pos1),
        (overlay_set_size, "$g_battle_allies_routed", pos1),
        (overlay_set_size, "$g_battle_allies_dead", pos1),

        (assign, ":stat_position_x", 675),
        (assign, ":stat_position_y", 280),

        (val_add, ":stat_position_x", 70),
        (val_add, ":stat_position_y", 90),
        (position_set_x, pos1, ":stat_position_x"),
        (position_set_y, pos1, ":stat_position_y"),
        (overlay_set_position, "$g_presentation_obj_battle_25", pos1),
        (val_add, ":stat_position_x", 70),
        (position_set_x, pos1, ":stat_position_x"),
        (overlay_set_position, "$g_presentation_obj_battle_26", pos1),
        (val_add, ":stat_position_x", 70),
        (position_set_x, pos1, ":stat_position_x"),
        (overlay_set_position, "$g_presentation_obj_battle_28", pos1),
        (val_add, ":stat_position_x", 70),
        (position_set_x, pos1, ":stat_position_x"),
        (overlay_set_position, "$g_presentation_obj_battle_27", pos1),

        (val_add, ":stat_position_x", -280),
        (val_add, ":stat_position_y", -30),
        (position_set_x, pos1, ":stat_position_x"),
        (position_set_y, pos1, ":stat_position_y"),
        (overlay_set_position, "$g_presentation_obj_battle_22", pos1),
        (val_add, ":stat_position_y", -30),
        (position_set_y, pos1, ":stat_position_y"),
        (overlay_set_position, "$g_presentation_obj_battle_23", pos1),
        (val_add, ":stat_position_y", -30),
        (position_set_y, pos1, ":stat_position_y"),
        (overlay_set_position, "$g_presentation_obj_battle_24", pos1),

        (get_scene_boundaries, pos2, pos3),
        (position_transform_position_to_local, pos4, pos2, pos3),
        (set_fixed_point_multiplier, 1000),
        (position_get_x, ":map_width", pos4),
        (position_get_y, ":map_height", pos4),
        (set_fixed_point_multiplier, 1000),
        (store_div, ":map_ratio", ":map_height", 100),
        (store_div, ":map_ratio", ":map_width", ":map_ratio"),
        (try_begin),
          (gt, ":map_ratio", 100),
          ## CC
          (store_mul, ":minimap_ratio", "$g_minimap_ratio", 3),
          (assign, "$g_battle_map_width", ":minimap_ratio"),
          ## CC
          (store_div, "$g_battle_map_scale", ":map_width", "$g_battle_map_width"),
          (store_div, "$g_battle_map_height", ":map_height", "$g_battle_map_scale"),
        (else_try),
          ## CC
          (store_mul, ":minimap_ratio", "$g_minimap_ratio", 3),
          (assign, "$g_battle_map_height", ":minimap_ratio"),
          ## CC
          (store_div, "$g_battle_map_scale", ":map_height", "$g_battle_map_height"),
          (store_div, "$g_battle_map_width", ":map_width", "$g_battle_map_scale"),
        (try_end),
        
        (create_image_button_overlay, "$g_battle_map_plane", "mesh_white_plane", "mesh_white_plane"),
        (overlay_set_color, "$g_battle_map_plane", 0),
        (store_add, ":map_bordered_width", "$g_battle_map_width", 20),
        (store_add, ":map_bordered_height", "$g_battle_map_height", 20),
        (store_mul, ":map_scale_x", ":map_bordered_width", 50),
        (store_mul, ":map_scale_y", ":map_bordered_height", 50),
        (position_set_x, pos1, ":map_scale_x"),
        (position_set_y, pos1, ":map_scale_y"),
        (overlay_set_size, "$g_battle_map_plane", pos1),
        (store_sub, ":map_pos_x", 990, ":map_bordered_width"),
        (store_sub, ":map_pos_y", 740, ":map_bordered_height"),
        (position_set_x, pos1, ":map_pos_x"),
        (position_set_y, pos1, ":map_pos_y"),
        (overlay_set_position, "$g_battle_map_plane", pos1),
        (overlay_set_alpha, "$g_battle_map_plane", 0x22), ## CC

        (create_mesh_overlay, "$g_battle_map_infantry_order_flag", "mesh_flag_infantry"),
        (create_mesh_overlay, "$g_battle_map_archers_order_flag", "mesh_flag_archers"),
        (create_mesh_overlay, "$g_battle_map_cavalry_order_flag", "mesh_flag_cavalry"),
        (overlay_set_alpha, "$g_battle_map_infantry_order_flag", 0),
        (overlay_set_alpha, "$g_battle_map_archers_order_flag", 0),
        (overlay_set_alpha, "$g_battle_map_cavalry_order_flag", 0),
        ##PBOD Begin
        (create_mesh_overlay, reg0, "mesh_flag4"),
        (overlay_set_alpha, reg0, 0),
        (create_mesh_overlay, reg0, "mesh_flag5"),
        (overlay_set_alpha, reg0, 0),
        (create_mesh_overlay, reg0, "mesh_flag6"),
        (overlay_set_alpha, reg0, 0),
        (create_mesh_overlay, reg0, "mesh_flag7"),
        (overlay_set_alpha, reg0, 0),
        (create_mesh_overlay, reg0, "mesh_flag8"),
        (overlay_set_alpha, reg0, 0),
        (create_mesh_overlay, reg0, "mesh_flag9"),
        (overlay_set_alpha, reg0, 0),
        ##PBOD End

        (call_script, "script_update_order_panel_checked_classes"),
        (call_script, "script_update_order_panel_statistics_and_map"),

        (presentation_set_duration, 999999),
        ]),
      (ti_on_presentation_event_state_change,
       [(store_trigger_param_1, ":object"),
        (store_trigger_param_2, ":value"),
        (get_player_agent_no, ":player_agent"),
        (agent_get_team, ":player_team", ":player_agent"),

        (assign, ":update_listeners", 0),
        (try_begin),
          (eq, "$group0_has_troops", 1),
          (eq, ":object", "$g_presentation_obj_battle_check0"),
          (assign, ":update_listeners", 1),
          (assign, "$g_formation_group0_selected", ":value"),
          (try_begin),
            (eq, ":value", 1),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but0", 250, 0x44),
          (else_try),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but0", 250, 0),
          (try_end),
        (else_try),
          (eq, "$group1_has_troops", 1),
          (eq, ":object", "$g_presentation_obj_battle_check1"),
          (assign, ":update_listeners", 1),
          (assign, "$g_formation_group1_selected", ":value"),
          (try_begin),
            (eq, ":value", 1),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but1", 250, 0x44),
          (else_try),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but1", 250, 0),
          (try_end),
        (else_try),
          (eq, "$group2_has_troops", 1),
          (eq, ":object", "$g_presentation_obj_battle_check2"),
          (assign, ":update_listeners", 1),
          (assign, "$g_formation_group2_selected", ":value"),
          (try_begin),
            (eq, ":value", 1),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but2", 250, 0x44),
          (else_try),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but2", 250, 0),
          (try_end),
        (else_try),
          (eq, "$group3_has_troops", 1),
          (eq, ":object", "$g_presentation_obj_battle_check3"),
          (assign, ":update_listeners", 1),
          (assign, "$g_formation_group3_selected", ":value"),
          (try_begin),
            (eq, ":value", 1),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but3", 250, 0x44),
          (else_try),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but3", 250, 0),
          (try_end),
        (else_try),
          (eq, "$group4_has_troops", 1),
          (eq, ":object", "$g_presentation_obj_battle_check4"),
          (assign, ":update_listeners", 1),
          (assign, "$g_formation_group4_selected", ":value"),
          (try_begin),
            (eq, ":value", 1),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but4", 250, 0x44),
          (else_try),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but4", 250, 0),
          (try_end),
        (else_try),
          (eq, "$group5_has_troops", 1),
          (eq, ":object", "$g_presentation_obj_battle_check5"),
          (assign, ":update_listeners", 1),
          (assign, "$g_formation_group5_selected", ":value"),
          (try_begin),
            (eq, ":value", 1),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but5", 250, 0x44),
          (else_try),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but5", 250, 0),
          (try_end),
        (else_try),
          (eq, "$group6_has_troops", 1),
          (eq, ":object", "$g_presentation_obj_battle_check6"),
          (assign, ":update_listeners", 1),
          (assign, "$g_formation_group6_selected", ":value"),
          (try_begin),
            (eq, ":value", 1),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but6", 250, 0x44),
          (else_try),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but6", 250, 0),
          (try_end),
        (else_try),
          (eq, "$group7_has_troops", 1),
          (eq, ":object", "$g_presentation_obj_battle_check7"),
          (assign, ":update_listeners", 1),
          (assign, "$g_formation_group7_selected", ":value"),
          (try_begin),
            (eq, ":value", 1),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but7", 250, 0x44),
          (else_try),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but7", 250, 0),
          (try_end),
        (else_try),
          (eq, "$group8_has_troops", 1),
          (eq, ":object", "$g_presentation_obj_battle_check8"),
          (assign, ":update_listeners", 1),
          (assign, "$g_formation_group8_selected", ":value"),
          (try_begin),
            (eq, ":value", 1),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but8", 250, 0x44),
          (else_try),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but8", 250, 0),
          (try_end),        
        (else_try),
          (eq, ":object", "$g_presentation_obj_battle_but0"),
          (assign, ":update_listeners", 1),
        
          (assign, "$g_formation_group0_selected", 1),
          (overlay_animate_to_alpha, "$g_presentation_obj_battle_but0", 250, 0x44),
          (overlay_set_val, "$g_presentation_obj_battle_check0", 1),

          (try_begin),
            (eq, "$group1_has_troops", 1),
            (assign, "$g_formation_group1_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check1", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but1", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group2_has_troops", 1),
            (assign, "$g_formation_group2_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check2", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but2", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group3_has_troops", 1),
            (assign, "$g_formation_group3_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check3", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but3", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group4_has_troops", 1),
            (assign, "$g_formation_group4_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check4", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but4", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group5_has_troops", 1),
            (assign, "$g_formation_group5_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check5", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but5", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group6_has_troops", 1),
            (assign, "$g_formation_group6_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check6", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but6", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group7_has_troops", 1),
            (assign, "$g_formation_group7_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check7", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but7", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group8_has_troops", 1),
            (assign, "$g_formation_group8_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check8", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but8", 250, 0),
          (try_end),
        (else_try),
          (eq, ":object", "$g_presentation_obj_battle_but1"),
          (assign, ":update_listeners", 1),

          (assign, "$g_formation_group1_selected", 1),
          (overlay_animate_to_alpha, "$g_presentation_obj_battle_but1", 250, 0x44),
          (overlay_set_val, "$g_presentation_obj_battle_check1", 1),

          (try_begin),
            (eq, "$group0_has_troops", 1),
            (assign, "$g_formation_group0_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check0", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but0", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group2_has_troops", 1),
            (assign, "$g_formation_group2_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check2", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but2", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group3_has_troops", 1),
            (assign, "$g_formation_group3_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check3", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but3", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group4_has_troops", 1),
            (assign, "$g_formation_group4_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check4", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but4", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group5_has_troops", 1),
            (assign, "$g_formation_group5_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check5", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but5", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group6_has_troops", 1),
            (assign, "$g_formation_group6_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check6", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but6", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group7_has_troops", 1),
            (assign, "$g_formation_group7_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check7", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but7", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group8_has_troops", 1),
            (assign, "$g_formation_group8_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check8", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but8", 250, 0),
          (try_end),
        (else_try),
          (eq, ":object", "$g_presentation_obj_battle_but2"),
          (assign, ":update_listeners", 1),

          (assign, "$g_formation_group2_selected", 1),
          (overlay_animate_to_alpha, "$g_presentation_obj_battle_but2", 250, 0x44),
          (overlay_set_val, "$g_presentation_obj_battle_check2", 1),

          (try_begin),
            (eq, "$group0_has_troops", 1),
            (assign, "$g_formation_group0_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check0", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but0", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group1_has_troops", 1),
            (assign, "$g_formation_group1_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check1", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but1", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group3_has_troops", 1),
            (assign, "$g_formation_group3_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check3", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but3", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group4_has_troops", 1),
            (assign, "$g_formation_group4_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check4", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but4", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group5_has_troops", 1),
            (assign, "$g_formation_group5_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check5", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but5", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group6_has_troops", 1),
            (assign, "$g_formation_group6_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check6", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but6", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group7_has_troops", 1),
            (assign, "$g_formation_group7_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check7", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but7", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group8_has_troops", 1),
            (assign, "$g_formation_group8_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check8", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but8", 250, 0),
          (try_end),
        (else_try),
          (eq, ":object", "$g_presentation_obj_battle_but3"),
          (assign, ":update_listeners", 1),

          (assign, "$g_formation_group3_selected", 1),
          (overlay_animate_to_alpha, "$g_presentation_obj_battle_but3", 250, 0x44),
          (overlay_set_val, "$g_presentation_obj_battle_check3", 1),

          (try_begin),
            (eq, "$group0_has_troops", 1),
            (assign, "$g_formation_group0_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check0", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but0", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group1_has_troops", 1),
            (assign, "$g_formation_group1_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check1", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but1", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group2_has_troops", 1),
            (assign, "$g_formation_group2_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check2", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but2", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group4_has_troops", 1),
            (assign, "$g_formation_group4_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check4", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but4", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group5_has_troops", 1),
            (assign, "$g_formation_group5_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check5", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but5", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group6_has_troops", 1),
            (assign, "$g_formation_group6_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check6", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but6", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group7_has_troops", 1),
            (assign, "$g_formation_group7_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check7", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but7", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group8_has_troops", 1),
            (assign, "$g_formation_group8_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check8", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but8", 250, 0),
          (try_end),
        (else_try),
          (eq, ":object", "$g_presentation_obj_battle_but4"),
          (assign, ":update_listeners", 1),

          (assign, "$g_formation_group4_selected", 1),
          (overlay_animate_to_alpha, "$g_presentation_obj_battle_but4", 250, 0x44),
          (overlay_set_val, "$g_presentation_obj_battle_check4", 1),

          (try_begin),
            (eq, "$group0_has_troops", 1),
            (assign, "$g_formation_group0_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check0", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but0", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group1_has_troops", 1),
            (assign, "$g_formation_group1_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check1", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but1", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group2_has_troops", 1),
            (assign, "$g_formation_group2_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check2", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but2", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group3_has_troops", 1),
            (assign, "$g_formation_group3_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check3", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but3", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group5_has_troops", 1),
            (assign, "$g_formation_group5_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check5", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but5", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group6_has_troops", 1),
            (assign, "$g_formation_group6_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check6", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but6", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group7_has_troops", 1),
            (assign, "$g_formation_group7_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check7", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but7", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group8_has_troops", 1),
            (assign, "$g_formation_group8_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check8", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but8", 250, 0),
          (try_end),
        (else_try),
          (eq, ":object", "$g_presentation_obj_battle_but5"),
          (assign, ":update_listeners", 1),

          (assign, "$g_formation_group5_selected", 1),
          (overlay_animate_to_alpha, "$g_presentation_obj_battle_but5", 250, 0x44),
          (overlay_set_val, "$g_presentation_obj_battle_check5", 1),

          (try_begin),
            (eq, "$group0_has_troops", 1),
            (assign, "$g_formation_group0_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check0", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but0", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group1_has_troops", 1),
            (assign, "$g_formation_group1_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check1", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but1", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group2_has_troops", 1),
            (assign, "$g_formation_group2_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check2", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but2", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group3_has_troops", 1),
            (assign, "$g_formation_group3_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check3", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but3", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group4_has_troops", 1),
            (assign, "$g_formation_group4_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check4", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but4", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group6_has_troops", 1),
            (assign, "$g_formation_group6_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check6", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but6", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group7_has_troops", 1),
            (assign, "$g_formation_group7_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check7", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but7", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group8_has_troops", 1),
            (assign, "$g_formation_group8_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check8", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but8", 250, 0),
          (try_end),
        (else_try),
          (eq, ":object", "$g_presentation_obj_battle_but6"),
          (assign, ":update_listeners", 1),

          (assign, "$g_formation_group6_selected", 1),
          (overlay_animate_to_alpha, "$g_presentation_obj_battle_but6", 250, 0x44),
          (overlay_set_val, "$g_presentation_obj_battle_check6", 1),

          (try_begin),
            (eq, "$group0_has_troops", 1),
            (assign, "$g_formation_group0_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check0", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but0", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group1_has_troops", 1),
            (assign, "$g_formation_group1_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check1", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but1", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group2_has_troops", 1),
            (assign, "$g_formation_group2_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check2", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but2", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group3_has_troops", 1),
            (assign, "$g_formation_group3_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check3", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but3", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group4_has_troops", 1),
            (assign, "$g_formation_group4_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check4", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but4", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group5_has_troops", 1),
            (assign, "$g_formation_group5_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check5", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but5", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group7_has_troops", 1),
            (assign, "$g_formation_group7_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check7", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but7", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group8_has_troops", 1),
            (assign, "$g_formation_group8_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check8", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but8", 250, 0),
          (try_end),
        (else_try),
          (eq, ":object", "$g_presentation_obj_battle_but7"),
          (assign, ":update_listeners", 1),

          (assign, "$g_formation_group7_selected", 1),
          (overlay_animate_to_alpha, "$g_presentation_obj_battle_but7", 250, 0x44),
          (overlay_set_val, "$g_presentation_obj_battle_check7", 1),

          (try_begin),
            (eq, "$group0_has_troops", 1),
            (assign, "$g_formation_group0_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check0", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but0", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group1_has_troops", 1),
            (assign, "$g_formation_group1_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check1", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but1", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group2_has_troops", 1),
            (assign, "$g_formation_group2_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check2", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but2", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group3_has_troops", 1),
            (assign, "$g_formation_group3_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check3", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but3", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group4_has_troops", 1),
            (assign, "$g_formation_group4_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check4", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but4", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group5_has_troops", 1),
            (assign, "$g_formation_group5_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check5", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but5", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group6_has_troops", 1),
            (assign, "$g_formation_group6_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check6", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but6", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group8_has_troops", 1),
            (assign, "$g_formation_group8_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check8", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but8", 250, 0),
          (try_end),
        (else_try),
          (eq, ":object", "$g_presentation_obj_battle_but8"),
          (assign, ":update_listeners", 1),

          (assign, "$g_formation_group8_selected", 1),
          (overlay_animate_to_alpha, "$g_presentation_obj_battle_but8", 250, 0x44),
          (overlay_set_val, "$g_presentation_obj_battle_check8", 1),

          (try_begin),
            (eq, "$group0_has_troops", 1),
            (assign, "$g_formation_group0_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check0", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but0", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group1_has_troops", 1),
            (assign, "$g_formation_group1_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check1", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but1", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group2_has_troops", 1),
            (assign, "$g_formation_group2_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check2", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but2", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group3_has_troops", 1),
            (assign, "$g_formation_group3_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check3", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but3", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group4_has_troops", 1),
            (assign, "$g_formation_group4_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check4", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but4", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group5_has_troops", 1),
            (assign, "$g_formation_group5_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check5", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but5", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group6_has_troops", 1),
            (assign, "$g_formation_group6_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check6", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but6", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group7_has_troops", 1),
            (assign, "$g_formation_group7_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check7", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but7", 250, 0),
          (try_end),
        (else_try),
          (eq, ":object", "$g_presentation_obj_battle_14"),
          (call_script, "script_team_give_order_from_order_panel", ":player_agent", mordr_spread_out),
          (call_script, "script_update_order_panel", ":player_team"),
        (else_try),
          (eq, ":object", "$g_presentation_obj_battle_15"),
          (call_script, "script_team_give_order_from_order_panel", ":player_agent", mordr_stand_closer),
          (call_script, "script_update_order_panel", ":player_team"),
        (else_try),
          (eq, ":object", "$g_presentation_obj_battle_16"),
          (call_script, "script_team_give_order_from_order_panel", ":player_agent", mordr_fall_back),
        (else_try),
          (eq, ":object", "$g_presentation_obj_battle_17"),
          (call_script, "script_team_give_order_from_order_panel", ":player_agent", mordr_advance),
        (else_try),
          (eq, ":object", "$g_presentation_obj_battle_18"),
          (call_script, "script_team_give_order_from_order_panel", ":player_agent", mordr_all_fire_now),
        (else_try),
          (eq, ":object", "$g_presentation_obj_battle_29"),
          (call_script, "script_team_give_order_from_order_panel", ":player_agent", mordr_left_fire_now),
        (else_try),
          (eq, ":object", "$g_presentation_obj_battle_30"),
          (call_script, "script_team_give_order_from_order_panel", ":player_agent", mordr_middle_fire_now),
        (else_try),
          (eq, ":object", "$g_presentation_obj_battle_31"),
          (call_script, "script_team_give_order_from_order_panel", ":player_agent", mordr_right_fire_now),
        (else_try),
          (eq, ":object", "$g_presentation_obj_battle_10"),
          (try_begin),
            (eq, ":value", 3),
            (call_script, "script_team_give_order_from_order_panel", ":player_agent", mordr_hold),
            (call_script, "script_update_order_panel", ":player_team"),
            (assign, "$g_latest_order_1", 3),
          (else_try),
            (eq, ":value", 2),
            (call_script, "script_team_give_order_from_order_panel", ":player_agent", mordr_follow),
            (call_script, "script_update_order_panel", ":player_team"),
            (assign, "$g_latest_order_1", 2),
          (else_try),
            (eq, ":value", 1),
            (call_script, "script_team_give_order_from_order_panel", ":player_agent", mordr_charge),
            (call_script, "script_update_order_panel", ":player_team"),
##          (else_try),
##            (eq, ":value", 4),
##            (call_script, "script_team_give_order_from_order_panel", ":player_agent", mordr_advance),
##            (call_script, "script_update_order_panel", ":player_team"),
##          (else_try),
##            (eq, ":value", 3),
##            (call_script, "script_team_give_order_from_order_panel", ":player_agent", mordr_fall_back),
##            (call_script, "script_update_order_panel", ":player_team"),
##          (else_try),
##            (eq, ":value", 2),
##            (call_script, "script_team_give_order_from_order_panel", ":player_agent", mordr_stand_closer),
##            (call_script, "script_update_order_panel", ":player_team"),
##          (else_try),
##            (eq, ":value", 1),
##            (call_script, "script_team_give_order_from_order_panel", ":player_agent", mordr_spread_out),
##            (call_script, "script_update_order_panel", ":player_team"),
            (assign, "$g_latest_order_1", 1),
          (else_try),
            (eq, ":value", 0),
            (call_script, "script_team_give_order_from_order_panel", ":player_agent", mordr_stand_ground),
            (call_script, "script_update_order_panel", ":player_team"),
            (assign, "$g_latest_order_1", 0),
          (try_end),
        (else_try),
          (eq, ":object", "$g_presentation_obj_battle_11"),
          (try_begin),
            (eq, ":value", 1),
            (call_script, "script_team_give_order_from_order_panel", ":player_agent", mordr_mount),
            (call_script, "script_update_order_panel", ":player_team"),
            (assign, "$g_latest_order_2", 1),
          (else_try),
            (eq, ":value", 0),
            (call_script, "script_team_give_order_from_order_panel", ":player_agent", mordr_dismount),
            (call_script, "script_update_order_panel", ":player_team"),
            (assign, "$g_latest_order_2", 0),
          (try_end),        
        (else_try),
          (eq, ":object", "$g_presentation_obj_battle_12"),
          (try_begin),
            (eq, ":value", 1),
            (call_script, "script_team_give_order_from_order_panel", ":player_agent", mordr_fire_at_my_command),
            (call_script, "script_update_order_panel", ":player_team"),
            (overlay_set_alpha, "$g_presentation_obj_battle_18", 0xFF),
            (overlay_set_alpha, "$g_presentation_obj_battle_29", 0xFF),
            (overlay_set_alpha, "$g_presentation_obj_battle_30", 0xFF),
            (overlay_set_alpha, "$g_presentation_obj_battle_31", 0xFF),
            (overlay_set_hilight_alpha, "$g_presentation_obj_battle_18", 0xFF),
            (overlay_set_hilight_alpha, "$g_presentation_obj_battle_29", 0xFF),
            (overlay_set_hilight_alpha, "$g_presentation_obj_battle_30", 0xFF),
            (overlay_set_hilight_alpha, "$g_presentation_obj_battle_31", 0xFF),
            (assign, "$g_latest_order_3", 1),
          (else_try),
            (eq, ":value", 0),
            (call_script, "script_team_give_order_from_order_panel", ":player_agent", mordr_fire_at_will),
            (call_script, "script_update_order_panel", ":player_team"),
            (overlay_set_alpha, "$g_presentation_obj_battle_18", 0),
            (overlay_set_alpha, "$g_presentation_obj_battle_29", 0),
            (overlay_set_alpha, "$g_presentation_obj_battle_30", 0),
            (overlay_set_alpha, "$g_presentation_obj_battle_31", 0),
            (overlay_set_hilight_alpha, "$g_presentation_obj_battle_18", 0),
            (overlay_set_hilight_alpha, "$g_presentation_obj_battle_29", 0),
            (overlay_set_hilight_alpha, "$g_presentation_obj_battle_30", 0),
            (overlay_set_hilight_alpha, "$g_presentation_obj_battle_31", 0),
            (assign, "$g_latest_order_3", 0),
          (try_end),        
        (else_try),
          (eq, ":object", "$g_presentation_obj_battle_13"),
          (try_begin),
            (eq, ":value", 3),
            (call_script, "script_team_give_order_from_order_panel", ":player_agent", mordr_use_any_weapon),
            (call_script, "script_update_order_panel", ":player_team"),
            (assign, "$g_latest_order_4", 3),
          (else_try),
            (eq, ":value", 2),
            (call_script, "script_team_give_order_from_order_panel", ":player_agent", mordr_use_blunt_weapons),
            (call_script, "script_update_order_panel", ":player_team"),
            (assign, "$g_latest_order_4", 2),
          (else_try),
            (eq, ":value", 1),
            (call_script, "script_team_give_order_from_order_panel", ":player_agent", mordr_use_ranged_weapons),
            (call_script, "script_update_order_panel", ":player_team"),
            (assign, "$g_latest_order_4", 1),
          (else_try),
            (eq, ":value", 0),
            (call_script, "script_team_give_order_from_order_panel", ":player_agent", mordr_use_melee_weapons),
            (call_script, "script_update_order_panel", ":player_team"),
            (assign, "$g_latest_order_4", 0),
          (try_end),
        (else_try),
          (eq, ":object", "$g_presentation_obj_battle_19"),
          (try_begin),
            (eq, ":value", 4),
            (call_script, "script_team_give_order_from_order_panel", ":player_agent", mordr_form_1_row),
            (call_script, "script_update_order_panel", ":player_team"),
            (assign, "$g_latest_order_5", 4),
          (else_try),
            (eq, ":value", 3),
            (call_script, "script_team_give_order_from_order_panel", ":player_agent", mordr_form_2_row),
            (call_script, "script_update_order_panel", ":player_team"),
            (assign, "$g_latest_order_5", 3),
          (else_try),
            (eq, ":value", 2),
            (call_script, "script_team_give_order_from_order_panel", ":player_agent", mordr_form_3_row),
            (call_script, "script_update_order_panel", ":player_team"),
            (assign, "$g_latest_order_5", 2),
          (else_try),
            (eq, ":value", 1),
            (call_script, "script_team_give_order_from_order_panel", ":player_agent", mordr_form_4_row),
            (call_script, "script_update_order_panel", ":player_team"),
            (assign, "$g_latest_order_5", 1),
          (else_try),
            (eq, ":value", 0),
            (call_script, "script_team_give_order_from_order_panel", ":player_agent", mordr_form_5_row),
            (call_script, "script_update_order_panel", ":player_team"),
            (assign, "$g_latest_order_5", 0),
          (try_end),
        (else_try),
          (eq, ":object", "$g_battle_map_plane"),
          (get_scene_boundaries, pos2, pos3),
          (mouse_get_position, pos1),
          (set_fixed_point_multiplier, 1000),
          (position_get_x, ":mouse_x", pos1),
          (position_get_y, ":mouse_y", pos1),
          (store_sub, ":map_x", 980, "$g_battle_map_width"),
          (store_sub, ":map_y", 730, "$g_battle_map_height"),
          (val_sub, ":mouse_x", ":map_x"),
          (val_sub, ":mouse_y", ":map_y"),
          (val_clamp, ":mouse_x", 0, "$g_battle_map_width"),
          (val_clamp, ":mouse_y", 0, "$g_battle_map_height"),
          (val_mul, ":mouse_x", "$g_battle_map_scale"),
          (val_mul, ":mouse_y", "$g_battle_map_scale"),
          (set_fixed_point_multiplier, 1000),
          (position_set_x, pos1, ":mouse_x"),
          (position_set_y, pos1, ":mouse_y"),
          (position_transform_position_to_parent, pos3, pos2, pos1),
          (try_begin),
            (eq, "$g_formation_group0_selected", 1),
            (team_give_order, ":player_team", 0, mordr_hold),
            (team_set_order_position, ":player_team", 0, pos3),
          (try_end),
          (try_begin),
            (eq, "$g_formation_group1_selected", 1),
            (team_give_order, ":player_team", 1, mordr_hold),
            (team_set_order_position, ":player_team", 1, pos3),
          (try_end),
          (try_begin),
            (eq, "$g_formation_group2_selected", 1),
            (team_give_order, ":player_team", 2, mordr_hold),
            (team_set_order_position, ":player_team", 2, pos3),
          (try_end),
          (try_begin),
            (eq, "$g_formation_group3_selected", 1),
            (team_give_order, ":player_team", 3, mordr_hold),
            (team_set_order_position, ":player_team", 3, pos3),
          (try_end),
          (try_begin),
            (eq, "$g_formation_group4_selected", 1),
            (team_give_order, ":player_team", 4, mordr_hold),
            (team_set_order_position, ":player_team", 4, pos3),
          (try_end),
          (try_begin),
            (eq, "$g_formation_group5_selected", 1),
            (team_give_order, ":player_team", 5, mordr_hold),
            (team_set_order_position, ":player_team", 5, pos3),
          (try_end),
          (try_begin),
            (eq, "$g_formation_group6_selected", 1),
            (team_give_order, ":player_team", 6, mordr_hold),
            (team_set_order_position, ":player_team", 6, pos3),
          (try_end),
          (try_begin),
            (eq, "$g_formation_group7_selected", 1),
            (team_give_order, ":player_team", 7, mordr_hold),
            (team_set_order_position, ":player_team", 7, pos3),
          (try_end),
          (try_begin),
            (eq, "$g_formation_group8_selected", 1),
            (team_give_order, ":player_team", 8, mordr_hold),
            (team_set_order_position, ":player_team", 8, pos3),
          (try_end),        
          (call_script, "script_update_order_flags_on_map"),
          (call_script, "script_update_order_panel", ":player_team"),
        (try_end),
        
        (try_begin),
          (eq, ":update_listeners", 1),
          (team_set_order_listener, ":player_team", -1),
          (try_begin),
            (this_or_next|eq, "$g_formation_group0_selected", 1),
            (eq, "$group0_has_troops", 0),
            (this_or_next|eq, "$g_formation_group1_selected", 1),
            (eq, "$group1_has_troops", 0),
            (this_or_next|eq, "$g_formation_group2_selected", 1),
            (eq, "$group2_has_troops", 0),
            (this_or_next|eq, "$g_formation_group3_selected", 1),
            (eq, "$group3_has_troops", 0),
            (this_or_next|eq, "$g_formation_group4_selected", 1),
            (eq, "$group4_has_troops", 0),
            (this_or_next|eq, "$g_formation_group5_selected", 1),
            (eq, "$group5_has_troops", 0),
            (this_or_next|eq, "$g_formation_group6_selected", 1),
            (eq, "$group6_has_troops", 0),
            (this_or_next|eq, "$g_formation_group7_selected", 1),
            (eq, "$group7_has_troops", 0),
            (this_or_next|eq, "$g_formation_group8_selected", 1),
            (eq, "$group8_has_troops", 0),
            (team_set_order_listener, ":player_team", grc_everyone),
          (else_try),
            (eq, "$g_formation_group0_selected", 1),
            (team_set_order_listener, ":player_team", 0, 1),
          (else_try),
            (eq, "$g_formation_group1_selected", 1),
            (team_set_order_listener, ":player_team", 1, 1),
          (else_try),
            (eq, "$g_formation_group2_selected", 1),
            (team_set_order_listener, ":player_team", 2, 1),
          (else_try),
            (eq, "$g_formation_group3_selected", 1),
            (team_set_order_listener, ":player_team", 3, 1),
          (else_try),
            (eq, "$g_formation_group4_selected", 1),
            (team_set_order_listener, ":player_team", 4, 1),
          (else_try),
            (eq, "$g_formation_group5_selected", 1),
            (team_set_order_listener, ":player_team", 5, 1),
          (else_try),
            (eq, "$g_formation_group6_selected", 1),
            (team_set_order_listener, ":player_team", 6, 1),
          (else_try),
            (eq, "$g_formation_group7_selected", 1),
            (team_set_order_listener, ":player_team", 7, 1),
          (else_try),
            (eq, "$g_formation_group8_selected", 1),
            (team_set_order_listener, ":player_team", 8, 1),
          (try_end),
        (try_end),
        ]),
      (ti_on_presentation_mouse_enter_leave,
       [(store_trigger_param_1, ":object"),
        (store_trigger_param_2, ":enter_leave"),
        (try_begin),
          (eq, ":object", "$g_presentation_obj_battle_but0"),
          (try_begin),
            (eq, ":enter_leave", 0),
            (overlay_animate_to_color, "$g_presentation_but0_movement", 250, 0xFFFFFF),
            (overlay_animate_to_color, "$g_presentation_but0_riding", 250, 0xFFFFFF),
            (overlay_animate_to_color, "$g_presentation_but0_weapon_usage", 250, 0xFFFFFF),
            (overlay_animate_to_color, "$g_presentation_obj_battle_name0", 250, 0xFFFFFF),
          (else_try),
            (overlay_animate_to_color, "$g_presentation_but0_movement", 250, 0),
            (overlay_animate_to_color, "$g_presentation_but0_riding", 250, 0),
            (overlay_animate_to_color, "$g_presentation_but0_weapon_usage", 250, 0),
            (overlay_animate_to_color, "$g_presentation_obj_battle_name0", 250, 0),
          (try_end),
        (else_try),
          (eq, ":object", "$g_presentation_obj_battle_but1"),
          (try_begin),
            (eq, ":enter_leave", 0),
            (overlay_animate_to_color, "$g_presentation_but1_movement", 250, 0xFFFFFF),
            (overlay_animate_to_color, "$g_presentation_but1_riding", 250, 0xFFFFFF),
            (overlay_animate_to_color, "$g_presentation_but1_weapon_usage", 250, 0xFFFFFF),
            (overlay_animate_to_color, "$g_presentation_obj_battle_name1", 250, 0xFFFFFF),
          (else_try),
            (overlay_animate_to_color, "$g_presentation_but1_movement", 250, 0),
            (overlay_animate_to_color, "$g_presentation_but1_riding", 250, 0),
            (overlay_animate_to_color, "$g_presentation_but1_weapon_usage", 250, 0),
            (overlay_animate_to_color, "$g_presentation_obj_battle_name1", 250, 0),
          (try_end),
        (else_try),
          (eq, ":object", "$g_presentation_obj_battle_but2"),
          (try_begin),
            (eq, ":enter_leave", 0),
            (overlay_animate_to_color, "$g_presentation_but2_movement", 250, 0xFFFFFF),
            (overlay_animate_to_color, "$g_presentation_but2_riding", 250, 0xFFFFFF),
            (overlay_animate_to_color, "$g_presentation_but2_weapon_usage", 250, 0xFFFFFF),
            (overlay_animate_to_color, "$g_presentation_obj_battle_name2", 250, 0xFFFFFF),
          (else_try),
            (overlay_animate_to_color, "$g_presentation_but2_movement", 250, 0),
            (overlay_animate_to_color, "$g_presentation_but2_riding", 250, 0),
            (overlay_animate_to_color, "$g_presentation_but2_weapon_usage", 250, 0),
            (overlay_animate_to_color, "$g_presentation_obj_battle_name2", 250, 0),
          (try_end),
        (else_try),
          (eq, ":object", "$g_presentation_obj_battle_but3"),
          (try_begin),
            (eq, ":enter_leave", 0),
            (overlay_animate_to_color, "$g_presentation_but3_movement", 250, 0xFFFFFF),
            (overlay_animate_to_color, "$g_presentation_but3_riding", 250, 0xFFFFFF),
            (overlay_animate_to_color, "$g_presentation_but3_weapon_usage", 250, 0xFFFFFF),
            (overlay_animate_to_color, "$g_presentation_obj_battle_name3", 250, 0xFFFFFF),
          (else_try),
            (overlay_animate_to_color, "$g_presentation_but3_movement", 250, 0),
            (overlay_animate_to_color, "$g_presentation_but3_riding", 250, 0),
            (overlay_animate_to_color, "$g_presentation_but3_weapon_usage", 250, 0),
            (overlay_animate_to_color, "$g_presentation_obj_battle_name3", 250, 0),
          (try_end),
        (else_try),
          (eq, ":object", "$g_presentation_obj_battle_but4"),
          (try_begin),
            (eq, ":enter_leave", 0),
            (overlay_animate_to_color, "$g_presentation_but4_movement", 250, 0xFFFFFF),
            (overlay_animate_to_color, "$g_presentation_but4_riding", 250, 0xFFFFFF),
            (overlay_animate_to_color, "$g_presentation_but4_weapon_usage", 250, 0xFFFFFF),
            (overlay_animate_to_color, "$g_presentation_obj_battle_name4", 250, 0xFFFFFF),
          (else_try),
            (overlay_animate_to_color, "$g_presentation_but4_movement", 250, 0),
            (overlay_animate_to_color, "$g_presentation_but4_riding", 250, 0),
            (overlay_animate_to_color, "$g_presentation_but4_weapon_usage", 250, 0),
            (overlay_animate_to_color, "$g_presentation_obj_battle_name4", 250, 0),
          (try_end),
        (else_try),
          (eq, ":object", "$g_presentation_obj_battle_but5"),
          (try_begin),
            (eq, ":enter_leave", 0),
            (overlay_animate_to_color, "$g_presentation_but5_movement", 250, 0xFFFFFF),
            (overlay_animate_to_color, "$g_presentation_but5_riding", 250, 0xFFFFFF),
            (overlay_animate_to_color, "$g_presentation_but5_weapon_usage", 250, 0xFFFFFF),
            (overlay_animate_to_color, "$g_presentation_obj_battle_name5", 250, 0xFFFFFF),
          (else_try),
            (overlay_animate_to_color, "$g_presentation_but5_movement", 250, 0),
            (overlay_animate_to_color, "$g_presentation_but5_riding", 250, 0),
            (overlay_animate_to_color, "$g_presentation_but5_weapon_usage", 250, 0),
            (overlay_animate_to_color, "$g_presentation_obj_battle_name5", 250, 0),
          (try_end),
        (else_try),
          (eq, ":object", "$g_presentation_obj_battle_but6"),
          (try_begin),
            (eq, ":enter_leave", 0),
            (overlay_animate_to_color, "$g_presentation_but6_movement", 250, 0xFFFFFF),
            (overlay_animate_to_color, "$g_presentation_but6_riding", 250, 0xFFFFFF),
            (overlay_animate_to_color, "$g_presentation_but6_weapon_usage", 250, 0xFFFFFF),
            (overlay_animate_to_color, "$g_presentation_obj_battle_name6", 250, 0xFFFFFF),
          (else_try),
            (overlay_animate_to_color, "$g_presentation_but6_movement", 250, 0),
            (overlay_animate_to_color, "$g_presentation_but6_riding", 250, 0),
            (overlay_animate_to_color, "$g_presentation_but6_weapon_usage", 250, 0),
            (overlay_animate_to_color, "$g_presentation_obj_battle_name6", 250, 0),
          (try_end),
        (else_try),
          (eq, ":object", "$g_presentation_obj_battle_but7"),
          (try_begin),
            (eq, ":enter_leave", 0),
            (overlay_animate_to_color, "$g_presentation_but7_movement", 250, 0xFFFFFF),
            (overlay_animate_to_color, "$g_presentation_but7_riding", 250, 0xFFFFFF),
            (overlay_animate_to_color, "$g_presentation_but7_weapon_usage", 250, 0xFFFFFF),
            (overlay_animate_to_color, "$g_presentation_obj_battle_name7", 250, 0xFFFFFF),
          (else_try),
            (overlay_animate_to_color, "$g_presentation_but7_movement", 250, 0),
            (overlay_animate_to_color, "$g_presentation_but7_riding", 250, 0),
            (overlay_animate_to_color, "$g_presentation_but7_weapon_usage", 250, 0),
            (overlay_animate_to_color, "$g_presentation_obj_battle_name7", 250, 0),
          (try_end),
        (else_try),
          (eq, ":object", "$g_presentation_obj_battle_but8"),
          (try_begin),
            (eq, ":enter_leave", 0),
            (overlay_animate_to_color, "$g_presentation_but8_movement", 250, 0xFFFFFF),
            (overlay_animate_to_color, "$g_presentation_but8_riding", 250, 0xFFFFFF),
            (overlay_animate_to_color, "$g_presentation_but8_weapon_usage", 250, 0xFFFFFF),
            (overlay_animate_to_color, "$g_presentation_obj_battle_name8", 250, 0xFFFFFF),
          (else_try),
            (overlay_animate_to_color, "$g_presentation_but8_movement", 250, 0),
            (overlay_animate_to_color, "$g_presentation_but8_riding", 250, 0),
            (overlay_animate_to_color, "$g_presentation_but8_weapon_usage", 250, 0),
            (overlay_animate_to_color, "$g_presentation_obj_battle_name8", 250, 0),
          (try_end),
        (try_end),
        ]),
      (ti_on_presentation_run,
       [(store_trigger_param_1, ":cur_time"),
        (try_begin),
          (this_or_next|game_key_clicked, gk_group0_hear),
          (this_or_next|game_key_clicked, gk_group1_hear),
          (this_or_next|game_key_clicked, gk_group2_hear),
          (this_or_next|game_key_clicked, gk_group3_hear),
          (this_or_next|game_key_clicked, gk_group4_hear),
          (this_or_next|game_key_clicked, gk_group5_hear),
          (this_or_next|game_key_clicked, gk_group6_hear),
          (this_or_next|game_key_clicked, gk_group7_hear),
          (this_or_next|game_key_clicked, gk_group8_hear),
          (this_or_next|game_key_clicked, gk_everyone_hear),
          (game_key_clicked, gk_reverse_order_group),
          (call_script, "script_update_order_panel_checked_classes"),
        (try_end),
        (try_begin),
          (this_or_next|game_key_clicked, gk_order_1),
          (this_or_next|game_key_clicked, gk_order_2),
          (this_or_next|game_key_clicked, gk_order_3),
          (this_or_next|game_key_clicked, gk_order_4),
          (this_or_next|game_key_clicked, gk_order_5),
          (game_key_clicked, gk_order_6),
          (get_player_agent_no, ":player_agent"),
          (agent_get_team, ":player_team", ":player_agent"),
          (call_script, "script_update_order_panel", ":player_team"),
        (try_end),
        (try_begin),
          (gt, ":cur_time", 200),
          (game_key_clicked, gk_view_orders),
          (try_for_agents, ":cur_agent"),
            (agent_set_slot, ":cur_agent", slot_agent_map_overlay_id, 0),
          (try_end),
          (presentation_set_duration, 0),
          ## CC
          (start_presentation, "prsnt_mini_map"),
          ## CC
        (try_end),
        ]),
      ]),


    ("sliders",0,0,[
      (ti_on_presentation_load,
       [(set_fixed_point_multiplier, 1000),
        (create_slider_overlay, "$g_presentation_obj_sliders_1", 0, 100),
        (create_slider_overlay, "$g_presentation_obj_sliders_2", 0, 100),
        (create_slider_overlay, "$g_presentation_obj_sliders_3", 0, 100),
        (create_slider_overlay, "$g_presentation_obj_sliders_4", 0, 100),
        (assign, reg1, 25),
        (str_store_string, s1, "str_reg1"),
        (create_text_overlay, "$g_presentation_obj_sliders_5", s1),
        (create_text_overlay, "$g_presentation_obj_sliders_6", s1),
        (create_text_overlay, "$g_presentation_obj_sliders_7", s1),
        (create_text_overlay, "$g_presentation_obj_sliders_8", s1),
        (assign, "$g_presentation_obj_sliders_1_val", 25),
        (overlay_set_val, "$g_presentation_obj_sliders_1", 25),
        (assign, "$g_presentation_obj_sliders_2_val", 25),
        (overlay_set_val, "$g_presentation_obj_sliders_2", 25),
        (assign, "$g_presentation_obj_sliders_3_val", 25),
        (overlay_set_val, "$g_presentation_obj_sliders_3", 25),
        (assign, "$g_presentation_obj_sliders_4_val", 25),
        (overlay_set_val, "$g_presentation_obj_sliders_4", 25),
        (position_set_x, pos1, 600),
        (position_set_y, pos1, 200),
        (overlay_set_position, "$g_presentation_obj_sliders_1", pos1),
        (position_set_y, pos1, 300),
        (overlay_set_position, "$g_presentation_obj_sliders_2", pos1),
        (position_set_y, pos1, 400),
        (overlay_set_position, "$g_presentation_obj_sliders_3", pos1),
        (position_set_y, pos1, 500),
        (overlay_set_position, "$g_presentation_obj_sliders_4", pos1),
        (position_set_x, pos1, 800),
        (position_set_y, pos1, 200),
        (overlay_set_position, "$g_presentation_obj_sliders_5", pos1),
        (position_set_y, pos1, 300),
        (overlay_set_position, "$g_presentation_obj_sliders_6", pos1),
        (position_set_y, pos1, 400),
        (overlay_set_position, "$g_presentation_obj_sliders_7", pos1),
        (position_set_y, pos1, 500),
        (overlay_set_position, "$g_presentation_obj_sliders_8", pos1),
        (position_set_x, pos1, 500),
        (overlay_set_size, "$g_presentation_obj_sliders_3", pos1),
        ]),
      (ti_on_presentation_run,
       [
        ]),
      (ti_on_presentation_event_state_change,
       [(store_trigger_param_1, ":object"),
        (store_trigger_param_2, ":value"),
        (assign, ":val_changed", 0),
        (try_begin),
          (eq, ":object", "$g_presentation_obj_sliders_1"),
          (try_begin),
            (neq, "$g_presentation_obj_sliders_1_val", ":value"),
            (assign, "$g_presentation_obj_sliders_1_val", ":value"),
            (assign, ":val_changed", 1),
          (try_end),
        (else_try),
          (eq, ":object", "$g_presentation_obj_sliders_2"),
          (try_begin),
            (neq, "$g_presentation_obj_sliders_2_val", ":value"),
            (assign, "$g_presentation_obj_sliders_2_val", ":value"),
            (assign, ":val_changed", 1),
          (try_end),
        (else_try),
          (eq, ":object", "$g_presentation_obj_sliders_3"),
          (try_begin),
            (neq, "$g_presentation_obj_sliders_3_val", ":value"),
            (assign, "$g_presentation_obj_sliders_3_val", ":value"),
            (assign, ":val_changed", 1),
          (try_end),
        (else_try),
          (eq, ":object", "$g_presentation_obj_sliders_4"),
          (try_begin),
            (neq, "$g_presentation_obj_sliders_4_val", ":value"),
            (assign, "$g_presentation_obj_sliders_4_val", ":value"),
            (assign, ":val_changed", 1),
          (try_end),
        (try_end),
        (try_begin),
          (eq, ":val_changed", 1),
          (assign, ":sum_values", 0),
          (val_add, ":sum_values", "$g_presentation_obj_sliders_1_val"),
          (val_add, ":sum_values", "$g_presentation_obj_sliders_2_val"),
          (val_add, ":sum_values", "$g_presentation_obj_sliders_3_val"),
          (val_add, ":sum_values", "$g_presentation_obj_sliders_4_val"),
          (store_sub, ":difference", 100, ":sum_values"),
          (assign, ":obj_1_new_val", "$g_presentation_obj_sliders_1_val"),
          (assign, ":obj_2_new_val", "$g_presentation_obj_sliders_2_val"),
          (assign, ":obj_3_new_val", "$g_presentation_obj_sliders_3_val"),
          (assign, ":obj_4_new_val", "$g_presentation_obj_sliders_4_val"),
          (assign, ":adder", 1),
          (assign, ":between_1", 0),
          (assign, ":between_2", 100),
          (try_begin),
            (lt, ":difference", 0),
            (val_mul, ":difference", -1),
            (assign, ":adder", -1),
            (assign, ":between_1", 1),
            (assign, ":between_2", 101),
          (try_end),
          (store_sub, ":sum_non_changed_values", ":sum_values", ":value"),
          (val_add, ":sum_non_changed_values", 30),
          (try_for_range, ":unused", 0, ":difference"),
            (store_random_in_range, ":random_no", 0, ":sum_non_changed_values"),
            (try_begin),
              (neq, ":object", "$g_presentation_obj_sliders_1"),
              (val_sub, ":random_no", "$g_presentation_obj_sliders_1_val"),
              (val_sub, ":random_no", 10),
              (lt, ":random_no", 0),
              (is_between, ":obj_1_new_val", ":between_1", ":between_2"),
              (val_add, ":obj_1_new_val", ":adder"),
            (else_try),
              (neq, ":object", "$g_presentation_obj_sliders_2"),
              (val_sub, ":random_no", "$g_presentation_obj_sliders_2_val"),
              (val_sub, ":random_no", 10),
              (lt, ":random_no", 0),
              (is_between, ":obj_2_new_val", ":between_1", ":between_2"),
              (val_add, ":obj_2_new_val", ":adder"),
            (else_try),
              (neq, ":object", "$g_presentation_obj_sliders_3"),
              (val_sub, ":random_no", "$g_presentation_obj_sliders_3_val"),
              (val_sub, ":random_no", 10),
              (lt, ":random_no", 0),
              (is_between, ":obj_3_new_val", ":between_1", ":between_2"),
              (val_add, ":obj_3_new_val", ":adder"),
            (else_try),
              (is_between, ":obj_4_new_val", ":between_1", ":between_2"),
              (val_add, ":obj_4_new_val", ":adder"),
            (else_try),
              (val_add, ":difference", 1),
            (try_end),
          (try_end),
          (assign, "$g_presentation_obj_sliders_1_val", ":obj_1_new_val"),
          (assign, "$g_presentation_obj_sliders_2_val", ":obj_2_new_val"),
          (assign, "$g_presentation_obj_sliders_3_val", ":obj_3_new_val"),
          (assign, "$g_presentation_obj_sliders_4_val", ":obj_4_new_val"),
        (try_end),
        (overlay_set_val, "$g_presentation_obj_sliders_1", "$g_presentation_obj_sliders_1_val"),
        (overlay_set_val, "$g_presentation_obj_sliders_2", "$g_presentation_obj_sliders_2_val"),
        (overlay_set_val, "$g_presentation_obj_sliders_3", "$g_presentation_obj_sliders_3_val"),
        (overlay_set_val, "$g_presentation_obj_sliders_4", "$g_presentation_obj_sliders_4_val"),
        (assign, reg1, "$g_presentation_obj_sliders_1_val"),
        (str_store_string, s1, "str_reg1"),
        (overlay_set_text, "$g_presentation_obj_sliders_5", s1),
        (assign, reg1, "$g_presentation_obj_sliders_2_val"),
        (str_store_string, s1, "str_reg1"),
        (overlay_set_text, "$g_presentation_obj_sliders_6", s1),
        (assign, reg1, "$g_presentation_obj_sliders_3_val"),
        (str_store_string, s1, "str_reg1"),
        (overlay_set_text, "$g_presentation_obj_sliders_7", s1),
        (assign, reg1, "$g_presentation_obj_sliders_4_val"),
        (str_store_string, s1, "str_reg1"),
        (overlay_set_text, "$g_presentation_obj_sliders_8", s1),
        ]),
      ]),

  ("arena_training", prsntf_read_only|prsntf_manual_end_only, 0, [
      (ti_on_presentation_load,
       [(presentation_set_duration, 999999),
        (set_fixed_point_multiplier, 1000),
        (get_player_agent_no, ":player_agent"),
        (agent_get_kill_count, reg1, ":player_agent", 1),
        (str_store_string, s1, "@Number of men knocked down: {reg1}"),
        (create_text_overlay, "$g_presentation_obj_arena_training_1", s1),
        (overlay_set_color, "$g_presentation_obj_arena_training_1", 0xFFFFFF),
        (position_set_x, pos1, 10),
        (position_set_y, pos1, 700),
        (overlay_set_position, "$g_presentation_obj_arena_training_1", pos1),
        (assign, reg1, 0),
        (str_store_string, s1, "@Number of men left: {reg1}"),
        (create_text_overlay, "$g_presentation_obj_arena_training_2", s1),
        (overlay_set_color, "$g_presentation_obj_arena_training_2", 0xFFFFFF),
        (position_set_x, pos1, 10),
        (position_set_y, pos1, 670),
        (overlay_set_position, "$g_presentation_obj_arena_training_2", pos1),
        ]),
      (ti_on_presentation_run,
       [(get_player_agent_no, ":player_agent"),
        (agent_get_kill_count, reg1, ":player_agent", 1),
        (str_store_string, s1, "@Opponents Beaten: {reg1}"),
        (overlay_set_text, "$g_presentation_obj_arena_training_1", s1),
        (assign, ":num_left", "$g_arena_training_max_opponents"),
        (try_for_agents, ":agent_no"),
          (agent_is_human, ":agent_no"),
          (neg|agent_is_alive, ":agent_no"),
          (neq, ":agent_no", ":player_agent"),
          (val_sub, ":num_left", 1),
        (try_end),
        (assign, reg1, ":num_left"),
        (str_store_string, s1, "@Opponents Remaining: {reg1}"),
        (overlay_set_text, "$g_presentation_obj_arena_training_2", s1),
          ## CC
          (start_presentation, "prsnt_mini_map"),
          ## CC
        ]),
      ]),

  ("retirement", 0, mesh_load_window,
   [
     (ti_on_presentation_load,
      [
        (presentation_set_duration, 999999),
        (set_fixed_point_multiplier, 1000),
        (create_button_overlay, "$g_presentation_obj_retirement_1", "@Remain in retirement.", tf_center_justify),
        (create_button_overlay, "$g_presentation_obj_retirement_2", "@Go back to the adventuring.", tf_center_justify),
        (position_set_x, pos1, 500),
        (position_set_y, pos1, 80),
        (overlay_set_position, "$g_presentation_obj_retirement_1", pos1),
        (position_set_y, pos1, 40),
        (overlay_set_position, "$g_presentation_obj_retirement_2", pos1),
        (assign, ":total_effect", 0),
        #wealth
        (store_troop_gold, ":wealth", "trp_player"),
        (store_div, ":wealth_effect", ":wealth", 200),
        (val_add, ":total_effect", ":wealth_effect"),
        #ruled centers and friendly/enemy centers
        (assign, ":num_towns", 0),
        (assign, ":num_castles", 0),
        (assign, ":num_villages", 0),
        (assign, ":num_friendly_towns", 0),
        (assign, ":num_friendly_villages", 0),
        (assign, ":num_enemy_towns", 0),
        (assign, ":num_enemy_villages", 0),
        (try_for_range, ":center_no", centers_begin, centers_end),
          (party_get_slot, ":type", ":center_no", slot_party_type),
          (try_begin),
            (party_slot_eq, ":center_no", slot_town_lord, "trp_player"),
            (try_begin),
              (eq, ":type", spt_town),
              (val_add, ":num_towns", 1),
            (else_try),
              (eq, ":type", spt_castle),
              (val_add, ":num_castles", 1),
            (else_try),
              (val_add, ":num_villages", 1),
            (try_end),
          (try_end),
          (party_get_slot, ":relation", ":center_no", slot_center_player_relation),
          (try_begin),
            (ge, ":relation", 40),
            (try_begin),
              (eq, ":type", spt_town),
              (val_add, ":num_friendly_towns", 1),
            (else_try),
              (eq, ":type", spt_village),
              (val_add, ":num_friendly_villages", 1),
            (try_end),
          (else_try),
            (le, ":relation", -40),
            (try_begin),
              (eq, ":type", spt_town),
              (val_add, ":num_enemy_towns", 1),
            (else_try),
              (eq, ":type", spt_village),
              (val_add, ":num_enemy_villages", 1),
            (try_end),
          (try_end),
        (try_end),
        (store_mul, ":num_towns_effect", ":num_towns", 100),
        (store_mul, ":num_castles_effect", ":num_castles", 50),
        (store_mul, ":num_villages_effect", ":num_villages", 20),
        (store_add, ":num_centers", ":num_towns", ":num_castles"),
        (val_add, ":num_centers", ":num_villages"),
        (store_add, ":ruled_centers_effect", ":num_towns_effect", ":num_castles_effect"),
        (val_add, ":ruled_centers_effect", ":num_villages_effect"),
        (val_add, ":total_effect", ":ruled_centers_effect"),
        (store_mul, ":num_friendly_towns_effect", ":num_friendly_towns", 20),
        (store_mul, ":num_friendly_villages_effect", ":num_friendly_villages", 4),
        (store_add, ":num_friendly_centers", ":num_friendly_towns", ":num_friendly_villages"),
        (store_add, ":friendly_centers_effect", ":num_friendly_towns_effect", ":num_friendly_villages_effect"),
        (val_add, ":total_effect", ":friendly_centers_effect"),
        (store_mul, ":num_enemy_towns_effect", ":num_enemy_towns", -40),
        (store_mul, ":num_enemy_villages_effect", ":num_enemy_villages", -8),
        (store_add, ":num_enemy_centers", ":num_enemy_towns", ":num_enemy_villages"),
        (store_add, ":enemy_centers_effect", ":num_enemy_towns_effect", ":num_enemy_villages_effect"),
        (val_add, ":total_effect", ":enemy_centers_effect"),
        #inventory
        (assign, ":total_item_value", 0),
        (troop_get_inventory_capacity, ":capacity", "trp_player"),
        (try_for_range, ":i_inv", 0, ":capacity"),
          (troop_get_inventory_slot, ":item", "trp_player", ":i_inv"),
          (ge, ":item", 0),
          (store_item_value, ":item_value", ":item"),
          (val_add, ":total_item_value", ":item_value"),
        (try_end),
        (store_div, ":total_item_value_effect", ":total_item_value", 200),
        (val_add, ":total_effect", ":total_item_value_effect"),
        #renown
        (troop_get_slot, ":renown", "trp_player", slot_troop_renown),
        (store_div, ":renown_effect", ":renown", 1),
        (val_add, ":total_effect", ":renown_effect"),
        #enemies and friends
        (assign, ":num_enemies", 0),
        (assign, ":num_friends", 0),
        (try_for_range, ":troop_no", heroes_begin, heroes_end),
          (this_or_next|troop_slot_eq, ":troop_no", slot_troop_occupation, slto_kingdom_hero),
          (troop_slot_eq, ":troop_no", slot_troop_occupation, slto_kingdom_lady),
          (call_script, "script_troop_get_player_relation", ":troop_no"),
          (assign, ":relation", reg0),
          #(troop_get_slot, ":relation", ":troop_no", slot_troop_player_relation),
          (try_begin),
            (ge, ":relation", 40),
            (val_add, ":num_friends", 1),
          (else_try),
            (le, ":relation", -40),
            (val_add, ":num_enemies", 1),
          (try_end),
        (try_end),
        (store_mul, ":num_friends_effect", ":num_friends", 10),
        (val_add, ":total_effect", ":num_friends_effect"),
        (store_mul, ":num_enemies_effect", ":num_enemies", -10),
        (val_add, ":total_effect", ":num_enemies_effect"),
        #current day
        (store_current_day, ":cur_day"),
        (store_div, ":cur_day_effect", ":cur_day", -1),
        (val_add, ":total_effect", ":cur_day_effect"),
        #g_total_victories
        (store_mul, ":total_victories_effect", "$g_total_victories", 2),
        (val_add, ":total_effect", ":total_victories_effect"),
        #g_total_defeats
        (store_mul, ":total_defeats_effect", "$g_total_defeats", -3),
        (val_add, ":total_effect", ":total_defeats_effect"),
        #g_total_quests_completed
        (store_mul, ":total_quests_completed_effect", "$g_total_quests_completed", 4),
        (val_add, ":total_effect", ":total_quests_completed_effect"),
        #xp
        (troop_get_xp, ":xp", "trp_player"),
        (store_div, ":xp_effect", ":xp", 5000),
        (val_add, ":total_effect", ":xp_effect"),
        #companions joined / departed
        (assign, ":num_companions_joined", 0),
        (assign, ":num_companions_departed", 0),
        (try_for_range, ":troop_no", companions_begin, companions_end),
          (try_begin),
            (troop_slot_eq, ":troop_no", slot_troop_occupation, slto_player_companion),
            (val_add, ":num_companions_joined", 1),
          (else_try),
            (troop_slot_ge, ":troop_no", slot_troop_playerparty_history, 1),
            (val_add, ":num_companions_departed", 1),
          (try_end),
        (try_end),
        (store_div, ":num_companions_joined_effect", ":num_companions_joined", 2),
        (val_add, ":total_effect", ":num_companions_joined_effect"),
        (store_div, ":num_companions_departed_effect", ":num_companions_departed", -4),
        (val_add, ":total_effect", ":num_companions_departed_effect"),
        #difficulty
        (get_average_game_difficulty, ":difficulty"),
        (assign, ":difficulty_effect", ":total_effect"),
        (val_mul, ":total_effect", ":difficulty"),
        (val_div, ":total_effect", 75),
        (val_mul, ":total_effect", ":difficulty"),
        (val_div, ":total_effect", 75),
        (store_sub, ":difficulty_effect", ":total_effect", ":difficulty_effect"),

        (assign, reg5, ":cur_day"),
        (store_character_level, reg4, "trp_player"),
        (create_text_overlay, reg1, "@You have retired at level {reg4} after {reg5} days of adventuring.", tf_center_justify),
        (position_set_x, pos1, 700),
        (position_set_y, pos1, 700),
        (overlay_set_position, reg1, pos1),
        (position_set_x, pos1, 950),
        (position_set_y, pos1, 950),
        (overlay_set_size, reg1, pos1),
##        (overlay_set_color, reg1, 0),
        (create_text_overlay, reg2, "@Effect on Score", tf_center_justify),
        (position_set_x, pos1, 750),
        (position_set_y, pos1, 750),
        (overlay_set_size, reg2, pos1),
        (position_set_x, pos1, 850),
        (position_set_y, pos1, 670),
        (overlay_set_position, reg2, pos1),
        (assign, reg0, ":num_centers"),
        (create_text_overlay, reg1, "@Settlements owned by you: {reg0}", 0),
        (position_set_x, pos1, 750),
        (position_set_y, pos1, 750),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 600),
        (position_set_y, pos1, 650),
        (overlay_set_position, reg1, pos1),
        (assign, reg0, ":ruled_centers_effect"),
        (create_text_overlay, reg1, "@{!}{reg0?+:}{reg0}", tf_center_justify),
        (position_set_x, pos1, 750),
        (position_set_y, pos1, 750),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 850),
        (position_set_y, pos1, 650),
        (overlay_set_position, reg1, pos1),
        (try_begin),
          (gt, reg0, 0),
          (overlay_set_color, reg1, 0x00AA00),
        (try_end),

        (assign, reg0, ":num_friendly_centers"),
        (create_text_overlay, reg1, "@Friendly Settlements: {reg0}", 0),
        (position_set_x, pos1, 750),
        (position_set_y, pos1, 750),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 600),
        (position_set_y, pos1, 630),
        (overlay_set_position, reg1, pos1),
        (assign, reg0, ":friendly_centers_effect"),
        (create_text_overlay, reg1, "@{!}{reg0?+:}{reg0}", tf_center_justify),
        (position_set_x, pos1, 750),
        (position_set_y, pos1, 750),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 850),
        (position_set_y, pos1, 630),
        (overlay_set_position, reg1, pos1),
        (try_begin),
          (gt, reg0, 0),
          (overlay_set_color, reg1, 0x00AA00),
        (try_end),

        (assign, reg0, ":num_enemy_centers"),
        (create_text_overlay, reg1, "@Hostile Settlements: {reg0}", 0),
        (position_set_x, pos1, 750),
        (position_set_y, pos1, 750),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 600),
        (position_set_y, pos1, 610),
        (overlay_set_position, reg1, pos1),
        (assign, reg0, ":enemy_centers_effect"),
        (create_text_overlay, reg1, "@{!}{reg0}", tf_center_justify),
        (position_set_x, pos1, 750),
        (position_set_y, pos1, 750),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 850),
        (position_set_y, pos1, 610),
        (overlay_set_position, reg1, pos1),
        (try_begin),
          (lt, reg0, 0),
          (overlay_set_color, reg1, 0xFF0000),
        (try_end),

        (assign, reg0, ":num_friends"),
        (create_text_overlay, reg1, "@Friendly Lords: {reg0}", 0),
        (position_set_x, pos1, 750),
        (position_set_y, pos1, 750),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 600),
        (position_set_y, pos1, 590),
        (overlay_set_position, reg1, pos1),
        (assign, reg0, ":num_friends_effect"),
        (create_text_overlay, reg1, "@{!}{reg0?+:}{reg0}", tf_center_justify),
        (position_set_x, pos1, 750),
        (position_set_y, pos1, 750),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 850),
        (position_set_y, pos1, 590),
        (overlay_set_position, reg1, pos1),
        (try_begin),
          (gt, reg0, 0),
          (overlay_set_color, reg1, 0x00AA00),
        (try_end),

        (assign, reg0, ":num_enemies"),
        (create_text_overlay, reg1, "@Enemy Lords: {reg0}", 0),
        (position_set_x, pos1, 750),
        (position_set_y, pos1, 750),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 600),
        (position_set_y, pos1, 570),
        (overlay_set_position, reg1, pos1),
        (assign, reg0, ":num_enemies_effect"),
        (create_text_overlay, reg1, "@{!}{reg0}", tf_center_justify),
        (position_set_x, pos1, 750),
        (position_set_y, pos1, 750),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 850),
        (position_set_y, pos1, 570),
        (overlay_set_position, reg1, pos1),
        (try_begin),
          (lt, reg0, 0),
          (overlay_set_color, reg1, 0xFF0000),
        (try_end),

        (assign, reg0, "$g_total_victories"),
        (create_text_overlay, reg1, "@Victories: {reg0}", 0),
        (position_set_x, pos1, 750),
        (position_set_y, pos1, 750),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 600),
        (position_set_y, pos1, 550),
        (overlay_set_position, reg1, pos1),
        (assign, reg0, ":total_victories_effect"),
        (create_text_overlay, reg1, "@{!}{reg0?+:}{reg0}", tf_center_justify),
        (position_set_x, pos1, 750),
        (position_set_y, pos1, 750),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 850),
        (position_set_y, pos1, 550),
        (overlay_set_position, reg1, pos1),
        (try_begin),
          (gt, reg0, 0),
          (overlay_set_color, reg1, 0x00AA00),
        (try_end),

        (assign, reg0, "$g_total_defeats"),
        (create_text_overlay, reg1, "@Defeats: {reg0}", 0),
        (position_set_x, pos1, 750),
        (position_set_y, pos1, 750),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 600),
        (position_set_y, pos1, 530),
        (overlay_set_position, reg1, pos1),
        (assign, reg0, ":total_defeats_effect"),
        (create_text_overlay, reg1, "@{!}{reg0}", tf_center_justify),
        (position_set_x, pos1, 750),
        (position_set_y, pos1, 750),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 850),
        (position_set_y, pos1, 530),
        (overlay_set_position, reg1, pos1),
        (try_begin),
          (lt, reg0, 0),
          (overlay_set_color, reg1, 0xFF0000),
        (try_end),

        (assign, reg0, "$g_total_quests_completed"),
        (create_text_overlay, reg1, "@Quests Completed: {reg0}", 0),
        (position_set_x, pos1, 750),
        (position_set_y, pos1, 750),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 600),
        (position_set_y, pos1, 510),
        (overlay_set_position, reg1, pos1),
        (assign, reg0, ":total_quests_completed_effect"),
        (create_text_overlay, reg1, "@{!}{reg0?+:}{reg0}", tf_center_justify),
        (position_set_x, pos1, 750),
        (position_set_y, pos1, 750),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 850),
        (position_set_y, pos1, 510),
        (overlay_set_position, reg1, pos1),
        (try_begin),
          (gt, reg0, 0),
          (overlay_set_color, reg1, 0x00AA00),
        (try_end),

        (assign, reg0, ":num_companions_joined"),
        (create_text_overlay, reg1, "@Companions Found: {reg0}", 0),
        (position_set_x, pos1, 750),
        (position_set_y, pos1, 750),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 600),
        (position_set_y, pos1, 490),
        (overlay_set_position, reg1, pos1),
        (assign, reg0, ":num_companions_joined_effect"),
        (create_text_overlay, reg1, "@{!}{reg0?+:}{reg0}", tf_center_justify),
        (position_set_x, pos1, 750),
        (position_set_y, pos1, 750),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 850),
        (position_set_y, pos1, 490),
        (overlay_set_position, reg1, pos1),
        (try_begin),
          (gt, reg0, 0),
          (overlay_set_color, reg1, 0x00AA00),
        (try_end),

        (assign, reg0, ":num_companions_departed"),
        (create_text_overlay, reg1, "@Companions Lost/Departed: {reg0}", 0),
        (position_set_x, pos1, 750),
        (position_set_y, pos1, 750),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 600),
        (position_set_y, pos1, 470),
        (overlay_set_position, reg1, pos1),
        (assign, reg0, ":num_companions_departed_effect"),
        (create_text_overlay, reg1, "@{!}{reg0}", tf_center_justify),
        (position_set_x, pos1, 750),
        (position_set_y, pos1, 750),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 850),
        (position_set_y, pos1, 470),
        (overlay_set_position, reg1, pos1),
        (try_begin),
          (lt, reg0, 0),
          (overlay_set_color, reg1, 0xFF0000),
        (try_end),

        (assign, reg0, ":wealth"),
        (create_text_overlay, reg1, "@Wealth: {reg0} denars", 0),
        (position_set_x, pos1, 750),
        (position_set_y, pos1, 750),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 600),
        (position_set_y, pos1, 450),
        (overlay_set_position, reg1, pos1),
        (assign, reg0, ":wealth_effect"),
        (create_text_overlay, reg1, "@{!}{reg0?+:}{reg0}", tf_center_justify),
        (position_set_x, pos1, 750),
        (position_set_y, pos1, 750),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 850),
        (position_set_y, pos1, 450),
        (overlay_set_position, reg1, pos1),
        (try_begin),
          (gt, reg0, 0),
          (overlay_set_color, reg1, 0x00AA00),
        (try_end),

        (assign, reg0, ":total_item_value"),
        (create_text_overlay, reg1, "@Inventory: {reg0} denars", 0),
        (position_set_x, pos1, 750),
        (position_set_y, pos1, 750),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 600),
        (position_set_y, pos1, 430),
        (overlay_set_position, reg1, pos1),
        (assign, reg0, ":total_item_value_effect"),
        (create_text_overlay, reg1, "@{!}{reg0?+:}{reg0}", tf_center_justify),
        (position_set_x, pos1, 750),
        (position_set_y, pos1, 750),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 850),
        (position_set_y, pos1, 430),
        (overlay_set_position, reg1, pos1),
        (try_begin),
          (gt, reg0, 0),
          (overlay_set_color, reg1, 0x00AA00),
        (try_end),

        (assign, reg0, ":renown"),
        (create_text_overlay, reg1, "@Renown: {reg0}", 0),
        (position_set_x, pos1, 750),
        (position_set_y, pos1, 750),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 600),
        (position_set_y, pos1, 410),
        (overlay_set_position, reg1, pos1),
        (assign, reg0, ":renown_effect"),
        (create_text_overlay, reg1, "@{!}{reg0?+:}{reg0}", tf_center_justify),
        (position_set_x, pos1, 750),
        (position_set_y, pos1, 750),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 850),
        (position_set_y, pos1, 410),
        (overlay_set_position, reg1, pos1),
        (try_begin),
          (gt, reg0, 0),
          (overlay_set_color, reg1, 0x00AA00),
        (try_end),

        (assign, reg0, ":xp"),
        (create_text_overlay, reg1, "@Experience: {reg0}", 0),
        (position_set_x, pos1, 750),
        (position_set_y, pos1, 750),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 600),
        (position_set_y, pos1, 390),
        (overlay_set_position, reg1, pos1),
        (assign, reg0, ":xp_effect"),
        (create_text_overlay, reg1, "@{!}{reg0?+:}{reg0}", tf_center_justify),
        (position_set_x, pos1, 750),
        (position_set_y, pos1, 750),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 850),
        (position_set_y, pos1, 390),
        (overlay_set_position, reg1, pos1),
        (try_begin),
          (gt, reg0, 0),
          (overlay_set_color, reg1, 0x00AA00),
        (try_end),

        (assign, reg0, ":cur_day"),
        (create_text_overlay, reg1, "@Days Passed: {reg0}", 0),
        (position_set_x, pos1, 750),
        (position_set_y, pos1, 750),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 600),
        (position_set_y, pos1, 370),
        (overlay_set_position, reg1, pos1),
        (assign, reg0, ":cur_day_effect"),
        (create_text_overlay, reg1, "@{!}{reg0}", tf_center_justify),
        (position_set_x, pos1, 750),
        (position_set_y, pos1, 750),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 850),
        (position_set_y, pos1, 370),
        (overlay_set_position, reg1, pos1),
        (try_begin),
          (lt, reg0, 0),
          (overlay_set_color, reg1, 0xFF0000),
        (try_end),

        (assign, reg0, ":difficulty"),
        (create_text_overlay, reg1, "@Difficulty: {reg0}%", 0),
        (position_set_x, pos1, 750),
        (position_set_y, pos1, 750),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 600),
        (position_set_y, pos1, 350),
        (overlay_set_position, reg1, pos1),
        (assign, reg0, ":difficulty_effect"),
        (assign, reg3, reg0),
        (val_max, reg3, 0),
        (create_text_overlay, reg1, "@{!}{reg3?+:}{reg0}", tf_center_justify),
        (position_set_x, pos1, 750),
        (position_set_y, pos1, 750),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 850),
        (position_set_y, pos1, 350),
        (overlay_set_position, reg1, pos1),
        (try_begin),
          (gt, reg0, 0),
          (overlay_set_color, reg1, 0x00AA00),
        (else_try),
          (lt, reg0, 0),
          (overlay_set_color, reg1, 0xFF0000),
        (try_end),

        (assign, reg0, ":total_effect"),
        (create_text_overlay, reg1, "@TOTAL SCORE: {reg0}", tf_center_justify),
        (position_set_x, pos1, 750),
        (position_set_y, pos1, 320),
        (overlay_set_position, reg1, pos1),

        (assign, ":total_villages", 0),
        (assign, ":total_castles", 0),
        (assign, ":total_towns", 0),
        (assign, ":total_village_rels", 0),
        (assign, ":total_castle_rels", 0),
        (assign, ":total_town_rels", 0),
        (try_for_range, ":cur_center_no", centers_begin, centers_end),
          (try_begin),
            (party_slot_eq, ":cur_center_no", slot_town_lord, "trp_player"),
            (try_begin),
              (party_slot_eq, ":cur_center_no", slot_party_type, spt_town),
              (val_add, ":total_towns", 1),
            (else_try),
              (party_slot_eq, ":cur_center_no", slot_party_type, spt_castle),
              (val_add, ":total_castles", 1),
            (else_try),
              (val_add, ":total_villages", 1),
            (try_end),
          (else_try),
            (party_get_slot, ":center_relation", ":cur_center_no", slot_center_player_relation),
            (gt, ":center_relation", 0),
            (try_begin),
              (party_slot_eq, ":cur_center_no", slot_party_type, spt_town),
              (val_add, ":total_town_rels", ":center_relation"),
            (else_try),
              (party_slot_eq, ":cur_center_no", slot_party_type, spt_castle),
              (val_add, ":total_castle_rels", ":center_relation"),
            (else_try),
              (val_add, ":total_village_rels", ":center_relation"),
            (try_end),
          (try_end),
        (try_end),
        (try_begin),
          (gt, ":total_towns", 0),
          (store_random_in_range, ":random_town", 0, ":total_towns"),
          (try_for_range, ":cur_center_no", towns_begin, towns_end),
            (party_slot_eq, ":cur_center_no", slot_town_lord, "trp_player"),
            (val_sub, ":random_town", 1),
            (lt, ":random_town", 0),
            (str_store_party_name, s9, ":cur_center_no"),
          (try_end),
        (else_try),
          (gt, ":total_town_rels", 0),
          (store_random_in_range, ":random_town_rel", 0, ":total_town_rels"),
          (try_for_range, ":cur_center_no", towns_begin, towns_end),
            (party_get_slot, ":center_relation", ":cur_center_no", slot_center_player_relation),
            (gt, ":center_relation", 0),
            (val_sub, ":random_town_rel", ":center_relation"),
            (lt, ":random_town_rel", 0),
            (str_store_party_name, s9, ":cur_center_no"),
          (try_end),
        (else_try),
          (store_random_in_range, ":random_town", towns_begin, towns_end),
          (str_store_party_name, s9, ":random_town"),
        (try_end),
        (try_begin),
          (gt, ":total_castles", 0),
          (store_random_in_range, ":random_castle", 0, ":total_castles"),
          (try_for_range, ":cur_center_no", castles_begin, castles_end),
            (party_slot_eq, ":cur_center_no", slot_town_lord, "trp_player"),
            (val_sub, ":random_castle", 1),
            (lt, ":random_castle", 0),
            (str_store_party_name, s8, ":cur_center_no"),
          (try_end),
        (else_try),
          (gt, ":total_castle_rels", 0),
          (store_random_in_range, ":random_castle_rel", 0, ":total_castle_rels"),
          (try_for_range, ":cur_center_no", castles_begin, castles_end),
            (party_get_slot, ":center_relation", ":cur_center_no", slot_center_player_relation),
            (gt, ":center_relation", 0),
            (val_sub, ":random_castle_rel", ":center_relation"),
            (lt, ":random_castle_rel", 0),
            (str_store_party_name, s8, ":cur_center_no"),
          (try_end),
        (else_try),
          (store_random_in_range, ":random_castle", castles_begin, castles_end),
          (str_store_party_name, s8, ":random_castle"),
        (try_end),
        (try_begin),
          (gt, ":total_villages", 0),
          (store_random_in_range, ":random_village", 0, ":total_villages"),
          (try_for_range, ":cur_center_no", villages_begin, villages_end),
            (party_slot_eq, ":cur_center_no", slot_town_lord, "trp_player"),
            (val_sub, ":random_village", 1),
            (lt, ":random_village", 0),
            (str_store_party_name, s7, ":cur_center_no"),
          (try_end),
        (else_try),
          (gt, ":total_village_rels", 0),
          (store_random_in_range, ":random_village_rel", 0, ":total_village_rels"),
          (try_for_range, ":cur_center_no", villages_begin, villages_end),
            (party_get_slot, ":center_relation", ":cur_center_no", slot_center_player_relation),
            (gt, ":center_relation", 0),
            (val_sub, ":random_village_rel", ":center_relation"),
            (lt, ":random_village_rel", 0),
            (str_store_party_name, s7, ":cur_center_no"),
          (try_end),
        (else_try),
          (store_random_in_range, ":random_village", villages_begin, villages_end),
          (str_store_party_name, s7, ":random_village"),
        (try_end),

        (try_begin),
          (lt, ":total_effect", 100),
          (create_mesh_overlay_with_tableau_material, reg1, -1, "tableau_retirement_troop", 0),
          (str_store_string, s0, "str_retirement_text_1"),
        (else_try),
          (lt, ":total_effect", 200),
          (create_mesh_overlay_with_tableau_material, reg1, -1, "tableau_retirement_troop", 1),
          (str_store_string, s0, "str_retirement_text_2"),
        (else_try),
          (lt, ":total_effect", 400),
          (create_mesh_overlay_with_tableau_material, reg1, -1, "tableau_retirement_troop", 2),
          (str_store_string, s0, "str_retirement_text_3"),
        (else_try),
          (lt, ":total_effect", 700),
          (create_mesh_overlay_with_tableau_material, reg1, -1, "tableau_retirement_troop", 3),
          (str_store_string, s0, "str_retirement_text_4"),
        (else_try),
          (lt, ":total_effect", 1200),
          (create_mesh_overlay_with_tableau_material, reg1, -1, "tableau_retirement_troop", 4),
          (str_store_string, s0, "str_retirement_text_5"),
        (else_try),
          (lt, ":total_effect", 1850),
          (create_mesh_overlay_with_tableau_material, reg1, -1, "tableau_retirement_troop", 5),
          (str_store_string, s0, "str_retirement_text_6"),
        (else_try),
          (lt, ":total_effect", 2500),
          (create_mesh_overlay_with_tableau_material, reg1, -1, "tableau_retirement_troop", 6),
          (str_store_string, s0, "str_retirement_text_7"),
        (else_try),
          (lt, ":total_effect", 3500),
          (create_mesh_overlay_with_tableau_material, reg1, -1, "tableau_retirement_troop", 7),
          (str_store_string, s0, "str_retirement_text_8"),
        (else_try),
          (lt, ":total_effect", 5000),
          (create_mesh_overlay_with_tableau_material, reg1, -1, "tableau_retirement_troop", 8),
          (str_store_string, s0, "str_retirement_text_9"),
        (else_try),
          (create_mesh_overlay_with_tableau_material, reg1, -1, "tableau_retirement_troop", 9),
          (str_store_string, s0, "str_retirement_text_10"),
        (try_end),
        (position_set_x, pos1, 0),
        (position_set_y, pos1, 120),
        (overlay_set_position, reg1, pos1),

        (create_text_overlay, reg1, s0, tf_double_space|tf_scrollable),
        (position_set_x, pos1, 600),
        (position_set_y, pos1, 120),
        (overlay_set_position, reg1, pos1),
        (position_set_x, pos1, 360),
        (position_set_y, pos1, 190),
        (overlay_set_area_size, reg1, pos1),
        (position_set_x, pos1, 800),
        (position_set_y, pos1, 800),
        (overlay_set_size, reg1, pos1),
        ]),
     (ti_on_presentation_event_state_change,
      [
        (store_trigger_param_1, ":object"),
        (try_begin),
          (eq, ":object", "$g_presentation_obj_retirement_1"),
          (jump_to_menu, "mnu_end_game"),
          (start_presentation, "prsnt_game_credits"),
        (else_try),
          (eq, ":object", "$g_presentation_obj_retirement_2"),
          (presentation_set_duration, 0),
          (change_screen_return),
        (try_end),
        ]),
     ]),

  ("budget_report", 0, mesh_budget_report,
   [(ti_on_presentation_load,
     [(presentation_set_duration, 999999),
      (set_fixed_point_multiplier, 1000),
      
      (create_mesh_overlay, reg1, "mesh_pic_payment"),
      (position_set_x, pos1, 800),
      (position_set_y, pos1, 800),
      (overlay_set_size, reg1, pos1),
      (position_set_x, pos1, 170),
      (position_set_y, pos1, 0),
      (overlay_set_position, reg1, pos1),
      
      (create_text_overlay, reg1, "str_weekly_budget", tf_center_justify),
      (position_set_x, pos1, 1500),
      (position_set_y, pos1, 1500),
      (overlay_set_size, reg1, pos1),
      (position_set_x, pos1, 260),
      (position_set_y, pos1, 650),
      (overlay_set_position, reg1, pos1),

      (str_clear, s0),
      (create_text_overlay, "$g_presentation_obj_bugdet_report_container", s0, tf_scrollable_style_2),
      (position_set_x, pos1, 0),
      (position_set_y, pos1, 100),
      (overlay_set_position, "$g_presentation_obj_bugdet_report_container", pos1),
      (position_set_x, pos1, 505),
      (position_set_y, pos1, 500),
      (overlay_set_area_size, "$g_presentation_obj_bugdet_report_container", pos1),
      (set_container_overlay, "$g_presentation_obj_bugdet_report_container"),

      #(game_get_reduce_campaign_ai, ":reduce_campaign_ai"),      
      #(try_begin),
        #(eq, ":reduce_campaign_ai", 0), #hard
        #(assign, ":num_centers_needed_for_efficiency_loss", 6),
        #(assign, ":tax_efficiency_loss_ratio_per_center", 5),
      #(else_try),  
        #(eq, ":reduce_campaign_ai", 1), #medium
        #(assign, ":num_centers_needed_for_efficiency_loss", 6),
        #(assign, ":tax_efficiency_loss_ratio_per_center", 4),
      #(else_try),  
        #(eq, ":reduce_campaign_ai", 2), #easy
        #(assign, ":num_centers_needed_for_efficiency_loss", 6),
        #(assign, ":tax_efficiency_loss_ratio_per_center", 3),
      #(try_end),  

      (assign, ":num_centers_needed_for_efficiency_loss", 10),
      (assign, ":tax_efficiency_loss_ratio_per_center", 4),
      (try_begin),
        (faction_get_slot, ":centralization", "$players_kingdom", dplmc_slot_faction_centralization),
        (neq, ":centralization", 0),
        (val_mul, ":centralization", 3),
        (val_add, ":num_centers_needed_for_efficiency_loss", ":centralization"),                 
      (try_end),
      (try_begin),
        (faction_get_slot, ":centralization", "$players_kingdom", dplmc_slot_faction_centralization),
        (neq, ":centralization", 0),
        (val_mul, ":centralization", -1),
        (val_add, ":tax_efficiency_loss_ratio_per_center", ":centralization"),                 
      (try_end),
      (assign, ":num_lines", 0),
      (assign, ":num_owned_center_values_for_tax_efficiency", 0),
      (assign, ":all_centers_accumulated_total", 0),
      (assign, ":all_centers_accumulated_taxes_and_rents", 0),
      (try_for_range, ":center_no", centers_begin, centers_end),      
        (try_begin),
          (party_slot_ge, ":center_no", slot_center_player_enterprise, 1),          
          (val_add, ":num_lines", 1),
        (try_end),      
      
        (party_slot_eq, ":center_no", slot_town_lord, "trp_player"),
        (val_add, ":num_lines", 1),
        (val_add, ":num_owned_center_values_for_tax_efficiency", 1),
        (try_begin),
          (is_between, ":center_no", towns_begin, towns_end),
          (val_add, ":num_lines", 1),
          (val_add, ":num_owned_center_values_for_tax_efficiency", 1),
        (try_end),
      (try_end),
      (try_begin),
        (gt, "$players_kingdom", 0),
        (neq, "$players_kingdom", "fac_player_supporters_faction"),
        (neq, "$players_kingdom", "fac_player_faction"),
        (eq, "$player_has_homage", 0),
        (val_add, ":num_lines", 1),
      (try_end),
      (try_begin),      
        (gt, ":num_owned_center_values_for_tax_efficiency", ":num_centers_needed_for_efficiency_loss"),
      #gt accumulated total is ignored
        (val_add, ":num_lines", 1),
      (try_end),
      (try_for_parties, ":party_no"),
        (assign, ":garrison_troop", 0),
        (try_begin),
          (this_or_next|party_slot_eq, ":party_no", slot_party_type, spt_town),
          (this_or_next|party_slot_eq, ":party_no", slot_party_type, spt_village),
          (party_slot_eq, ":party_no", slot_party_type, spt_castle),
          (party_slot_eq, ":party_no", slot_town_lord, "trp_player"),
          (assign, ":garrison_troop", 1),
        (else_try),
          (this_or_next|party_slot_eq, ":party_no", slot_party_type, spt_town),
          (this_or_next|party_slot_eq, ":party_no", slot_party_type, spt_village),
          (party_slot_eq, ":party_no", slot_party_type, spt_castle),
          (neg|party_slot_ge, ":party_no", slot_town_lord, 1), #unassigned
          (store_faction_of_party, ":center_faction", ":party_no"),
          (eq, ":center_faction", "fac_player_supporters_faction"),
          (faction_slot_eq, "fac_player_supporters_faction", slot_faction_leader, "trp_player"),
          (assign, ":garrison_troop", 1),          
        (try_end),
        (this_or_next|eq, ":party_no", "p_main_party"),
        ##diplomacy begin
        (assign, ":patrol_troop", 0),
        (try_begin),
          (party_slot_eq, ":party_no",slot_party_type, spt_patrol),
          (party_slot_eq, ":party_no", dplmc_slot_party_mission_diplomacy, "trp_player"),          
          (assign, ":patrol_troop", 1),
        (try_end),
        (this_or_next|eq, ":patrol_troop", 1),
        ##diplomacy end
        (eq, ":garrison_troop", 1),
        (val_add, ":num_lines", 1), #include empty towns/castles
      (try_end),
      (try_begin),
        (gt, "$g_player_debt_to_party_members", 0),
        (val_add, ":num_lines", 2), #include new debt line
      (try_end),
      ##diplomacy begin
      (try_begin),
        (this_or_next|gt, "$g_player_minister", 0),
        (this_or_next|troop_slot_ge, "trp_player", slot_troop_spouse, 0),
        (this_or_next|gt, "$g_player_chamberlain", 0),
        (gt, "$g_player_constable", 0),
        (val_add, ":num_lines", 1), # staff salary
      (try_end),

      (try_begin),
        (gt, "$g_player_chamberlain", 0),
        (val_add, ":num_lines", 2), #earlier cash, new cash
      (try_end),
      ##diplomacy end   
      (val_add, ":num_lines", 3),
      (store_mul, ":cur_y", 27, ":num_lines"),
      (assign, ":net_change", 0), #this is the amount added
      (try_for_range, ":center_no", centers_begin, centers_end),        
        #Enterprise
        (try_begin),
          (party_get_slot, ":enterprise_output", ":center_no", slot_center_player_enterprise),
          (gt, ":enterprise_output", 1),
          #(neg|party_slot_ge, ":center_no", slot_center_player_enterprise_days_until_complete, 1),
          
          (party_get_slot, ":cur_improvement_end_time", ":center_no", slot_center_player_enterprise_days_until_complete),
          (store_current_hours, ":cur_hours"),
          (ge, ":cur_hours", ":cur_improvement_end_time"),
          
          
          (str_store_party_name, s0, ":center_no"),
          
          (call_script, "script_process_player_enterprise", ":enterprise_output", ":center_no"),
          (assign, ":net_profit", reg0),
          (assign, ":price_of_single_output", reg4),
          (assign, ":price_of_single_input", reg5),
          (assign, ":price_of_secondary_input", reg10),
          
          (store_sub, ":town_order", ":center_no", towns_begin),
		  (try_begin),
		    (is_between, ":center_no", towns_begin, towns_end),
			(store_add, ":craftsman_troop", ":town_order", "trp_town_1_master_craftsman"),
		  (else_try),
		    (assign, ":craftsman_troop", "trp_town_1_master_craftsman"),
		  (try_end),

          (item_get_slot, ":outputs_added_to_market", ":enterprise_output", slot_item_output_per_run),
          (assign, ":outputs_added_to_warehouse", 0),
          (val_mul,":outputs_added_to_market","$g_game_difficulty"),
          #Enterprise impact of outputs
          (try_begin),
            #output placed in inventory: deduct selling price and add one good
            (party_slot_eq, ":center_no", slot_center_player_enterprise_production_order, 1),
            
            #Count empty slots
            (assign, ":empty_slots", 0),
            (troop_get_inventory_capacity, ":total_capacity", ":craftsman_troop"),
            (try_for_range, ":capacity_iterator", 0, ":total_capacity"),
                (troop_get_inventory_slot, ":slot", ":craftsman_troop", ":capacity_iterator"),
                (lt, ":slot", 1),
                (val_add, ":empty_slots", 1),
            (try_end),
            
            (assign, ":outputs_added_to_warehouse", ":outputs_added_to_market"),
            (val_min, ":outputs_added_to_warehouse",  ":empty_slots"),
            (gt, ":outputs_added_to_warehouse", 0),
            
            (store_mul, ":cancelled_sales", ":price_of_single_output", ":outputs_added_to_warehouse"),
            (val_sub, ":net_profit", ":cancelled_sales"),
            (val_sub, ":outputs_added_to_market", ":outputs_added_to_warehouse"),
          (try_end),
          
          
          #If the transaction is for real, and not just a budget check
          (try_begin),
            (eq, "$g_apply_budget_report_to_gold", 1),
            (try_for_range, ":unused", 0, ":outputs_added_to_warehouse"),
              (troop_add_item, ":craftsman_troop", ":enterprise_output", imod_fine),
            (try_end),
            
            #(troop_add_items, ":craftsman_troop", ":enterprise_output", ":outputs_added_to_warehouse"),

            #Affect prices by outputs added to market
            (store_sub, ":item_slot_no", ":enterprise_output", trade_goods_begin),
            (val_add, ":item_slot_no", slot_town_trade_good_prices_begin),
            (party_get_slot, ":current_index", ":center_no", ":item_slot_no"),            
            (store_mul, ":impact_on_price", ":outputs_added_to_market", 15),
            (val_sub, ":current_index", ":impact_on_price"),
            (party_set_slot, ":center_no", ":item_slot_no",":current_index"),            
                        
            (gt, "$cheat_mode", 0),
            (str_store_troop_name, s3, ":craftsman_troop"),
            (assign, reg3, ":outputs_added_to_warehouse"),
            (display_message, "@{!}DEBUG -- Adding {reg3} items to {s3}"),
          (try_end),
          
          #Enterprise impact of outputs
          (item_get_slot, ":inputs_taken_from_market", ":enterprise_output", slot_item_input_number),   
          (val_mul,":inputs_taken_from_market","$g_game_difficulty"),
          (try_begin),
            (item_slot_ge, ":enterprise_output", slot_item_secondary_raw_material, 1),
            (assign, ":2ary_inputs_taken_from_market", ":inputs_taken_from_market"),
          (else_try),
            (assign, ":2ary_inputs_taken_from_market", 0),
          (try_end),
          
          (assign, ":inputs_taken_from_warehouse", 0),
          (assign, ":2ary_inputs_taken_from_warehouse", 0),
          
          (try_begin),
            #input present in inventory: reimburse for input cost and remove one good
            (troop_get_inventory_capacity, ":total_capacity", ":craftsman_troop"),
            (try_for_range, ":capacity_iterator", 0, ":total_capacity"),
                (troop_get_inventory_slot, ":item_in_slot", ":craftsman_troop", ":capacity_iterator"),
            
                (lt, ":inputs_taken_from_warehouse", ":inputs_taken_from_market"),
                (item_slot_eq, ":enterprise_output", slot_item_primary_raw_material, ":item_in_slot"),
                #(troop_inventory_slot_get_item_amount, ":item_ammo", ":craftsman_troop", ":capacity_iterator"),
                #(troop_inventory_slot_get_item_max_amount, ":item_max_ammo", ":craftsman_troop", ":capacity_iterator"),
                #(eq, ":item_ammo", ":item_max_ammo"),
                
                (val_add, ":inputs_taken_from_warehouse", 1),
            (else_try),    
                (lt, ":2ary_inputs_taken_from_warehouse", ":2ary_inputs_taken_from_market"),
                (item_slot_eq, ":enterprise_output", slot_item_secondary_raw_material, ":item_in_slot"),
                #(troop_inventory_slot_get_item_amount, ":item_ammo", ":craftsman_troop", ":capacity_iterator"),
                #(troop_inventory_slot_get_item_max_amount, ":item_max_ammo", ":craftsman_troop", ":capacity_iterator"),
                #(eq, ":item_ammo", ":item_max_ammo"),

                (val_add, ":2ary_inputs_taken_from_warehouse", 1),
            (try_end),
          
            (try_begin),
                (gt, ":inputs_taken_from_warehouse", 0),
                (val_sub, ":inputs_taken_from_market", ":inputs_taken_from_warehouse"),
                (store_mul, ":savings_from_warehoused_inputs",    ":price_of_single_input", ":inputs_taken_from_warehouse"),
                (val_add, ":net_profit", ":savings_from_warehoused_inputs"),
            (try_end),    
            (try_begin),
                (gt, ":2ary_inputs_taken_from_warehouse", 0),
                (val_sub, ":2ary_inputs_taken_from_market", ":2ary_inputs_taken_from_warehouse"),
                (assign, ":savings_from_warehoused_inputs",    ":price_of_secondary_input"),
                (val_add, ":net_profit", ":savings_from_warehoused_inputs"),
            (try_end),                    
          (try_end),
          
          #If the transaction is for real, and not just a budget check
          (try_begin),
            (eq, "$g_apply_budget_report_to_gold", 1),
            (item_get_slot, ":raw_material", ":enterprise_output", slot_item_primary_raw_material),
            (troop_remove_items, ":craftsman_troop", ":raw_material", ":inputs_taken_from_warehouse"),
            (item_get_slot, ":secondary_raw_material", ":enterprise_output", slot_item_secondary_raw_material),
            (troop_remove_items, ":craftsman_troop", ":secondary_raw_material", ":2ary_inputs_taken_from_warehouse"),
            
            #Affect prices by intputs added to market
            (store_sub, ":item_slot_no", ":raw_material", trade_goods_begin),
            (val_add, ":item_slot_no", slot_town_trade_good_prices_begin),
            (party_get_slot, ":current_index", ":center_no", ":item_slot_no"),            
            (store_mul, ":impact_on_price", ":outputs_added_to_market", 15),
            (val_add, ":current_index", ":impact_on_price"),
            (party_set_slot, ":center_no", ":item_slot_no",":current_index"),            
            
            (try_begin),
                (gt, ":2ary_inputs_taken_from_market", 0),
                (store_sub, ":item_slot_no", ":secondary_raw_material", trade_goods_begin),
                (val_add, ":item_slot_no", slot_town_trade_good_prices_begin),
                (party_get_slot, ":current_index", ":center_no", ":item_slot_no"),            
                (val_add, ":current_index", 15),
                (party_set_slot, ":center_no", ":item_slot_no",":current_index"),            
            (try_end),
          (try_end),          
                    
          (call_script, "script_get_enterprise_name", ":enterprise_output"),
          (str_store_string, s5, reg0),
          
          (create_text_overlay, reg1, "str_enterprise_s5_at_s0", 0),
          (position_set_x, pos1, 900),
          (position_set_y, pos1, 900),
          (overlay_set_size, reg1, pos1),
          (position_set_x, pos1, 25),
          (position_set_y, pos1, ":cur_y"),
          (overlay_set_position, reg1, pos1),
          
          (assign, reg0, ":net_profit"),
          
          #Enterprise revenue strings
          (try_begin),
            (store_faction_of_party, ":faction_no", ":center_no"),
            (store_relation, ":relation", ":faction_no", "$players_kingdom"),
            (lt, ":relation", 0),
            
            (val_mul, ":net_profit", -1),
            (val_div, ":net_profit", 4),
            (assign, reg0, ":net_profit"),
            #(assign, reg0, 0), 
            #(assign, ":net_profit", 0), 
          
            (create_text_overlay, reg1, "str_under_sequestration_2", tf_right_align|tf_single_line),
            (overlay_set_color, reg1, 0xFF0000),          
          (else_try),
            (ge, reg0, 0), 
            (create_text_overlay, reg1, "@{!}{reg0}", tf_right_align|tf_single_line),
            (overlay_set_color, reg1, 0x00AA00),
          (else_try),
            (create_text_overlay, reg1, "@{!}{reg0}", tf_right_align|tf_single_line),
            (overlay_set_color, reg1, 0xFF0000),
          (try_end),
          
          (val_add, ":all_centers_accumulated_total", ":net_profit"),
          (val_add, ":net_change", ":net_profit"),          
          
          (position_set_x, pos1, 900),
          (position_set_y, pos1, 900),
          (overlay_set_size, reg1, pos1),
          (position_set_x, pos1, 500),
          (position_set_y, pos1, ":cur_y"),
          (overlay_set_position, reg1, pos1),
          (val_sub, ":cur_y", 27),
        (try_end),

        #Enterprise ends, taxes begin
        (party_slot_eq, ":center_no", slot_town_lord, "trp_player"),
        (party_get_slot, ":accumulated_rents", ":center_no", slot_center_accumulated_rents),
        (party_get_slot, ":accumulated_tariffs", ":center_no", slot_center_accumulated_tariffs),
        
        (store_add, ":accumulated_total", ":accumulated_rents", ":accumulated_tariffs"),
        (val_add, ":all_centers_accumulated_total", ":accumulated_total"),
        (val_add, ":all_centers_accumulated_taxes_and_rents", ":accumulated_total"),
        (val_add, ":net_change", ":accumulated_total"),
        (str_store_party_name, s0, ":center_no"),
        ##diplomacy begin
        (try_begin),
          (neg|is_between, ":center_no", castles_begin, castles_end), 
          (party_get_slot, ":tax_rate", ":center_no", dplmc_slot_center_taxation),
          (neq, ":tax_rate", 0),
          (call_script, "script_dplmc_describe_tax_rate_to_s50", ":tax_rate"),
          (str_store_string, s0, "@{s0} ({s50})"),
        (try_end),
        ##diplomacy end     
        (create_text_overlay, reg1, "str_rents_from_s0", 0),
        ##diplomacy begin
        (str_store_party_name, s0, ":center_no"), 
        ##diplomacy end
        (position_set_x, pos1, 900),
        (position_set_y, pos1, 900),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 25),
        (position_set_y, pos1, ":cur_y"),
        (overlay_set_position, reg1, pos1),
        (try_begin),
          (gt, ":accumulated_rents", 0),
          (assign, reg0, ":accumulated_rents"),
          (create_text_overlay, reg1, "@{!}{reg0}", tf_right_align|tf_single_line),
          (overlay_set_color, reg1, 0x00AA00),
        (else_try),
          (create_text_overlay, reg1, "@None", tf_right_align|tf_single_line),
        (try_end),
        (position_set_x, pos1, 900),
        (position_set_y, pos1, 900),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 500),
        (position_set_y, pos1, ":cur_y"),
        (overlay_set_position, reg1, pos1),
        (val_sub, ":cur_y", 27),
        
        (try_begin),
          (is_between, ":center_no", towns_begin, towns_end),
          (create_text_overlay, reg1, "str_tariffs_from_s0", 0),
          (position_set_x, pos1, 900),
          (position_set_y, pos1, 900),
          (overlay_set_size, reg1, pos1),
          (position_set_x, pos1, 25),
          (position_set_y, pos1, ":cur_y"),
          (overlay_set_position, reg1, pos1),
          (try_begin),
            (gt, ":accumulated_tariffs", 0),
            (assign, reg0, ":accumulated_tariffs"),
            (create_text_overlay, reg1, "@{!}{reg0}", tf_right_align|tf_single_line),
            (overlay_set_color, reg1, 0x00AA00),
          (else_try),
            (create_text_overlay, reg1, "@None", tf_right_align|tf_single_line),
          (try_end),
          (position_set_x, pos1, 900),
          (position_set_y, pos1, 900),
          (overlay_set_size, reg1, pos1),
          (position_set_x, pos1, 500),
          (position_set_y, pos1, ":cur_y"),
          (overlay_set_position, reg1, pos1),
          (val_sub, ":cur_y", 27),
        (try_end),                                
      (try_end),

      (try_begin),
        (gt, "$players_kingdom", 0),
        (neq, "$players_kingdom", "fac_player_supporters_faction"),
        (neq, "$players_kingdom", "fac_player_faction"),
        (eq, "$player_has_homage", 0),
        (str_store_faction_name, s0, "$players_kingdom"),
        (create_text_overlay, reg1, "str_mercenary_payment_from_s0", 0),
        (position_set_x, pos1, 900),
        (position_set_y, pos1, 900),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 25),
        (position_set_y, pos1, ":cur_y"),
        (overlay_set_position, reg1, pos1),
        #(call_script, "script_party_calculate_strength", "p_main_party", 0),
        (call_script, "script_get_main_party_total_wage"),
        (assign, ":offer_value", reg0),
        (val_mul, ":offer_value", 7),
        (val_div, ":offer_value", 10),
        #(val_add, ":offer_value", 30),
        (call_script, "script_round_value", ":offer_value"),
        (val_add, ":net_change", reg0),
        (create_text_overlay, reg1, "@{!}{reg0}", tf_right_align|tf_single_line),
        (position_set_x, pos1, 900),
        (position_set_y, pos1, 900),
        (overlay_set_size, reg1, pos1),
        (overlay_set_color, reg1, 0x00AA00),
        (position_set_x, pos1, 500),
        (position_set_y, pos1, ":cur_y"),
        (overlay_set_position, reg1, pos1),
        (val_sub, ":cur_y", 27),
      (try_end),
      
      (try_begin),
        (gt, ":num_owned_center_values_for_tax_efficiency", ":num_centers_needed_for_efficiency_loss"),
        (gt, ":all_centers_accumulated_total", 0),
        (store_sub, ":ratio_lost", ":num_owned_center_values_for_tax_efficiency", ":num_centers_needed_for_efficiency_loss"),
        (val_mul, ":ratio_lost", ":tax_efficiency_loss_ratio_per_center"),
        (val_min, ":ratio_lost", 60),
                
        #(store_mul, ":tax_lost", ":all_centers_accumulated_total", ":ratio_lost"),
        (store_mul, ":tax_lost", ":all_centers_accumulated_taxes_and_rents", ":ratio_lost"),        
        (val_div, ":tax_lost", 100),
        ##diplomacy begin  
        (assign, ":percent", 0),
        (try_begin),
          (gt, "$g_player_chamberlain", 0),
          (val_add, ":percent", 10),
        (try_end),
        (try_begin),
          (faction_slot_eq, "fac_player_supporters_faction", slot_faction_state, sfs_active),
          (try_begin),
            (faction_get_slot, ":centralization", "fac_player_supporters_faction", dplmc_slot_faction_centralization),
            (neq, ":centralization", 0),
            (val_mul, ":centralization", 5),
            (val_add, ":percent", ":centralization"),
          (try_end),
          (try_begin),
            (faction_get_slot, ":serfdom", "fac_player_supporters_faction", dplmc_slot_faction_serfdom),
            (neq, ":serfdom", 0),
            (val_mul, ":serfdom", 3),
            (val_add, ":percent", ":serfdom"),
          (try_end),
        (else_try),
          (gt, "$players_kingdom", 0),  
          (faction_get_slot, ":centralization", "$players_kingdom", dplmc_slot_faction_centralization),
          (neq, ":centralization", 0),
          (val_mul, ":centralization", -5),
          (val_add, ":percent", ":centralization"),          
        (try_end),
        
         (try_begin),
            (troop_slot_ge,"trp_player", slot_troop_player_class,16),
            (val_add, ":percent", 85),
         (else_try),
            (troop_slot_ge,"trp_player", slot_troop_player_class,15),
            (val_add, ":percent", 60),
         (else_try),
            (troop_slot_ge,"trp_player", slot_troop_player_class,14),
            (val_add, ":percent", 40),
         (else_try),
            (troop_slot_ge,"trp_player", slot_troop_player_class,13),
            (val_add, ":percent", 25),
         (else_try),
            (troop_slot_ge,"trp_player", slot_troop_player_class,12),
            (val_add, ":percent", 15),
         (else_try),
            (troop_slot_ge,"trp_player", slot_troop_player_class,11),
            (val_add, ":percent", 10),
         (try_end),
        
        (try_begin),
          (gt, ":tax_lost", 0),
        (store_mul, ":save", ":tax_lost", ":percent"),
        (val_div, ":save", 100),
        (store_mul, ":percent", ":save", 100),
        (val_div, ":percent", ":tax_lost"),
        (val_sub, ":tax_lost", ":save"),
        (try_end),
         ##diplomacy end
        (val_sub, ":net_change", ":tax_lost"),
        ##diplomacy begin
        (try_begin),
          (gt, "$g_player_chamberlain", 0),
          (str_store_string, s55, "str_loss_due_to_tax_inefficiency"),
          (assign, reg0, ":percent"),
          (val_mul, reg0, -1),
            (str_store_string, s55, "@{s55} ({reg0}%)"),        
          (create_text_overlay, reg1, "@{s55}", 0),
        (else_try),
        ##diplomacy end
          (create_text_overlay, reg1, "str_loss_due_to_tax_inefficiency", 0),
        ##diplomacy begin
        (try_end),
        ##diplomacy end
        (position_set_x, pos1, 25),
        (position_set_y, pos1, ":cur_y"),
        (overlay_set_position, reg1, pos1),
        (position_set_x, pos1, 900),
        (position_set_y, pos1, 900),
        (overlay_set_size, reg1, pos1),
        (store_mul, reg0, ":tax_lost", -1),
        (create_text_overlay, reg1, "@{!}{reg0}", tf_right_align|tf_single_line),
        (position_set_x, pos1, 900),
        (position_set_y, pos1, 900),
        (overlay_set_size, reg1, pos1),
        (overlay_set_color, reg1, 0xFF0000),
        (position_set_x, pos1, 500),
        (position_set_y, pos1, ":cur_y"),
        (overlay_set_position, reg1, pos1),
        (val_sub, ":cur_y", 27),
      (try_end),

      (try_for_parties, ":party_no"),
        (assign, ":garrison_troop", 0),
        (try_begin),
          (this_or_next|party_slot_eq, ":party_no", slot_party_type, spt_town),
          (this_or_next|party_slot_eq, ":party_no", slot_party_type, spt_village),
          (party_slot_eq, ":party_no", slot_party_type, spt_castle),
          (party_slot_eq, ":party_no", slot_town_lord, "trp_player"),
          ##diplomacy begin
          (neg|party_slot_eq, ":party_no", slot_village_infested_by_bandits, "trp_peasant_woman"),
          ##diplomacy end
          (assign, ":garrison_troop", 1),
        (else_try),  
          (this_or_next|party_slot_eq, ":party_no", slot_party_type, spt_town),
            (party_slot_eq, ":party_no", slot_party_type, spt_castle),
          (neg|party_slot_ge, ":party_no", slot_town_lord, 1), #unassigned
          (store_faction_of_party, ":center_faction", ":party_no"),
          (eq, ":center_faction", "fac_player_supporters_faction"),
          (faction_slot_eq, "fac_player_supporters_faction", slot_faction_leader, "trp_player"),
          (assign, ":garrison_troop", 1),
        (try_end),
        ##diplomacy begin
        (assign, ":patrol_troop", 0),
        (try_begin),
          (party_slot_eq, ":party_no",slot_party_type, spt_patrol),
          (party_slot_eq, ":party_no", dplmc_slot_party_mission_diplomacy, "trp_player"),         
          (assign, ":patrol_troop", 1),
        (try_end),
        (this_or_next|eq, ":patrol_troop", 1),
        ##diplomacy end
        (this_or_next|eq, ":party_no", "p_main_party"),
        (eq, ":garrison_troop", 1),
        (assign, ":total_wage", 0),
        (party_get_num_companion_stacks, ":num_stacks", ":party_no"),
        (try_for_range, ":i_stack", 0, ":num_stacks"),
          (party_stack_get_troop_id, ":stack_troop", ":party_no", ":i_stack"),
          (party_stack_get_size, ":stack_size", ":party_no", ":i_stack"),
          (call_script, "script_game_get_troop_wage", ":stack_troop", ":party_no"),
          (assign, ":cur_wage", reg0),
          (val_mul, ":cur_wage", ":stack_size"),
          (val_add, ":total_wage", ":cur_wage"),
        (try_end),
        (try_begin),
          (eq, ":garrison_troop", 1),
          (val_div, ":total_wage", 2), #Half payment for garrisons
        (else_try),
          (eq, ":party_no", "p_main_party"),
          (call_script, "script_get_main_party_total_wage"),
          (assign, ":total_wage", reg0),
          (store_sub, ":total_payment_ratio", 14, "$g_cur_week_half_daily_wage_payments"), #between 0 and 7
          (val_mul, ":total_wage", ":total_payment_ratio"),
          (val_div, ":total_wage", 14),
        (try_end),
##        (gt, ":total_wage", 0),
        (val_mul, ":total_wage", -1),
        (val_add, ":net_change", ":total_wage"),
        (str_store_party_name, s0, ":party_no"),
        (try_begin),
          (eq, ":party_no", "p_main_party"),
          (str_store_string, s0, "str_s0s_party"),
        (try_end),
        (create_text_overlay, reg1, "str_wages_for_s0", 0),
        (position_set_x, pos1, 900),
        (position_set_y, pos1, 900),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 25),
        (position_set_y, pos1, ":cur_y"),
        (overlay_set_position, reg1, pos1),
        (try_begin),
          (lt, ":total_wage", 0),
          (assign, reg0, ":total_wage"),
          (create_text_overlay, reg1, "@{!}{reg0}", tf_right_align|tf_single_line),
          (overlay_set_color, reg1, 0xFF0000),
        (else_try),
          (create_text_overlay, reg1, "@None", tf_right_align|tf_single_line),
        (try_end),
        (position_set_x, pos1, 900),
        (position_set_y, pos1, 900),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 500),
        (position_set_y, pos1, ":cur_y"),
        (overlay_set_position, reg1, pos1),
        (val_sub, ":cur_y", 27),
      (try_end),

      (try_begin),
        (gt, "$g_player_debt_to_party_members", 0),
        (val_sub, ":net_change", "$g_player_debt_to_party_members"),
        (create_text_overlay, reg1, "str_earlier_debts", 0),
        (position_set_x, pos1, 900),
        (position_set_y, pos1, 900),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 25),
        (position_set_y, pos1, ":cur_y"),
        (overlay_set_position, reg1, pos1),
        (store_mul, reg0, "$g_player_debt_to_party_members", -1),
        (create_text_overlay, reg1, "@{!}{reg0}", tf_right_align|tf_single_line),
        (position_set_x, pos1, 900),
        (position_set_y, pos1, 900),
        (overlay_set_size, reg1, pos1),
        (overlay_set_color, reg1, 0xFF0000),
        (position_set_x, pos1, 500),
        (position_set_y, pos1, ":cur_y"),
        (overlay_set_position, reg1, pos1),
        (val_sub, ":cur_y", 27),
      (try_end),
      ##diplomacy begin
      (assign, ":staff_salary", 0),
      (try_begin),
        (gt, "$g_player_minister", 0),
        (val_add, ":staff_salary", 15),
      (try_end),
      (try_begin),
        (troop_slot_ge, "trp_player", slot_troop_spouse, 0),
        (val_add, ":staff_salary", 10),
      (try_end),
      (try_begin),
        (gt, "$g_player_chamberlain", 0),
        (val_add, ":staff_salary", 15),
      (try_end),
      (try_begin),
        (gt, "$g_player_constable", 0),
        (val_add, ":staff_salary", 15),
      (try_end),
      (try_begin),
        (gt, "$g_player_chancellor", 0),
        (val_add, ":staff_salary", 20),
      (try_end),
        
      (try_begin),
        (gt, ":staff_salary", 0),
        (val_sub, ":net_change", ":staff_salary"),
        (create_text_overlay, reg1, "@Staff:", 0),
        (position_set_x, pos1, 900),
        (position_set_y, pos1, 900),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 25),
        (position_set_y, pos1, ":cur_y"),
        (overlay_set_position, reg1, pos1),
        (store_mul, reg0, ":staff_salary", -1),
        (create_text_overlay, reg1, "@{!}{reg0}", tf_right_align|tf_single_line),
        (position_set_x, pos1, 900),
        (position_set_y, pos1, 900),
        (overlay_set_size, reg1, pos1),
        (overlay_set_color, reg1, 0xFF0000),
        (position_set_x, pos1, 500),
        (position_set_y, pos1, ":cur_y"),
        (overlay_set_position, reg1, pos1),
        (val_sub, ":cur_y", 27),
      (try_end),
      ##diplomacy end
      (create_mesh_overlay, reg1, "mesh_white_plane"),
      (overlay_set_color, reg1, 0x000000),
      (position_set_x, pos1, 24000),
      (position_set_y, pos1, 50),
      (overlay_set_size, reg1, pos1),
      (position_set_x, pos1, 25),
      (store_add, ":line_y", ":cur_y", 25),
      (position_set_y, pos1, ":line_y"),
      (overlay_set_position, reg1, pos1),
      (create_text_overlay, reg1, "str_net_change", 0),
      (position_set_x, pos1, 900),
      (position_set_y, pos1, 900),
      (overlay_set_size, reg1, pos1),
      (position_set_x, pos1, 25),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, reg1, pos1),
      (assign, reg0, ":net_change"),
      (create_text_overlay, reg1, "@{!}{reg0}", tf_right_align|tf_single_line),
      (position_set_x, pos1, 900),
      (position_set_y, pos1, 900),
      (overlay_set_size, reg1, pos1),
      (try_begin),
        (gt, reg0, 0),
        (overlay_set_color, reg1, 0x00AA00),
      (else_try),
        (lt, reg0, 0),
        (overlay_set_color, reg1, 0xFF0000),
      (try_end),
      (position_set_x, pos1, 500),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, reg1, pos1),
      (val_sub, ":cur_y", 27),
      (create_text_overlay, reg1, "str_earlier_wealth", 0),
      (position_set_x, pos1, 900),
      (position_set_y, pos1, 900),
      (overlay_set_size, reg1, pos1),
      (position_set_x, pos1, 25),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, reg1, pos1),
      ##diplomacy begin
      (try_begin),
        (gt, "$g_player_chamberlain", 0),
        (store_troop_gold, ":player_wealth", "trp_household_possessions"),
      (else_try),
      ##diplomacy end
      (store_troop_gold, ":player_wealth", "trp_player"),
      ##diplomacy begin
      (try_end),
      ##diplomacy end
      (assign, reg0, ":player_wealth"),
      (create_text_overlay, reg1, "@{!}{reg0}", tf_right_align|tf_single_line),
      (position_set_x, pos1, 900),
      (position_set_y, pos1, 900),
      (overlay_set_size, reg1, pos1),
      (position_set_x, pos1, 500),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, reg1, pos1),
      (val_sub, ":cur_y", 27),
      (val_mul, ":net_change", -1),
      ##diplomacy begin
      (assign, ":cash_to_pay", 0),
      ##diplomacy end      
      (try_begin),
        (ge, ":player_wealth", ":net_change"),
        (assign, ":player_wealth_dif", ":net_change"),
        (assign, ":player_new_debt_to_party_members", 0),
      (else_try),
        (assign, ":player_wealth_dif", ":player_wealth"),
        (store_sub, ":player_new_debt_to_party_members", ":net_change", ":player_wealth"),
        ##diplomacy begin
        (try_begin),        
          (gt, "$g_player_chamberlain", 0),
          (store_troop_gold, ":player_inv_wealth", "trp_player"),
                
          (try_begin), #drawing debts from personal money
            (ge, ":player_inv_wealth", ":player_new_debt_to_party_members"),
            (assign, ":cash_to_pay", ":player_new_debt_to_party_members"),    
            (assign, ":player_new_debt_to_party_members", 0),
          (else_try),
            (assign, ":cash_to_pay", ":player_inv_wealth"),
            (val_sub, ":player_new_debt_to_party_members",":player_inv_wealth"),
          (try_end),
  
          (try_begin),
            (eq, "$g_apply_budget_report_to_gold", 1), 
            (troop_remove_gold, "trp_player", ":cash_to_pay"),  
            (assign, reg0, ":cash_to_pay"),
            (display_message, "@You paid {reg0} cash to liquidate a debt"),
          (try_end),
        (try_end),
        ##diplomacy end
      (try_end),
      (create_text_overlay, reg1, "str_new_wealth", 0),
      (position_set_x, pos1, 900),
      (position_set_y, pos1, 900),
      (overlay_set_size, reg1, pos1),
      (position_set_x, pos1, 25),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, reg1, pos1),
      (store_sub, reg0, ":player_wealth", ":player_wealth_dif"),
      (create_text_overlay, reg1, "@{!}{reg0}", tf_right_align|tf_single_line),
      (position_set_x, pos1, 900),
      (position_set_y, pos1, 900),
      (overlay_set_size, reg1, pos1),
      (position_set_x, pos1, 500),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, reg1, pos1),
      (val_sub, ":cur_y", 27),
      ##diplomacy begin
      (try_begin),
        (gt, "$g_player_chamberlain", 0),
        (gt, ":cash_to_pay", 0),
        (create_text_overlay, reg1, "@Earlier cash:", 0),
        (position_set_x, pos1, 900),
        (position_set_y, pos1, 900),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 25),
        (position_set_y, pos1, ":cur_y"),
        (overlay_set_position, reg1, pos1),          
        (assign, reg0, ":player_inv_wealth"),
        (create_text_overlay, reg1, "@{!}{reg0}", tf_right_align|tf_single_line),
        (position_set_x, pos1, 900),
        (position_set_y, pos1, 900),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 500),
        (position_set_y, pos1, ":cur_y"),
        (overlay_set_position, reg1, pos1),
        (val_sub, ":cur_y", 27),
            
        (create_text_overlay, reg1, "@New cash:", 0),
        (position_set_x, pos1, 900),
        (position_set_y, pos1, 900),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 25),
        (position_set_y, pos1, ":cur_y"),
        (overlay_set_position, reg1, pos1),          
        (store_sub, reg0, ":player_inv_wealth", ":cash_to_pay"),
        (create_text_overlay, reg1, "@{!}{reg0}", tf_right_align|tf_single_line),
        (position_set_x, pos1, 900),
        (position_set_y, pos1, 900),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 500),
        (position_set_y, pos1, ":cur_y"),
        (overlay_set_position, reg1, pos1),
        (val_sub, ":cur_y", 27),
      (try_end),
      ##diplomacy end

      (try_begin),
        (gt, ":player_new_debt_to_party_members", 0),
        (create_text_overlay, reg1, "str_new_debts", 0),
        (position_set_x, pos1, 900),
        (position_set_y, pos1, 900),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 25),
        (position_set_y, pos1, ":cur_y"),
        (overlay_set_position, reg1, pos1),
        (assign, reg0, ":player_new_debt_to_party_members"),
        (create_text_overlay, reg1, "@{!}{reg0}", tf_right_align|tf_single_line),
        (position_set_x, pos1, 900),
        (position_set_y, pos1, 900),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 500),
        (position_set_y, pos1, ":cur_y"),
        (overlay_set_position, reg1, pos1),
        (val_sub, ":cur_y", 27),
        (neq, "$g_apply_budget_report_to_gold", 0),
        (call_script, "script_objectionable_action", tmt_egalitarian, "str_men_unpaid"),
      (try_end),

      (set_container_overlay, -1),

      (create_button_overlay, "$g_presentation_obj_budget_report_1", "@Continue..."),
      (position_set_x, pos1, 225),
      (position_set_y, pos1, 60),
      (overlay_set_position, "$g_presentation_obj_budget_report_1", pos1),

      (try_begin),
        (eq, "$g_apply_budget_report_to_gold", 1),
        (assign, "$g_player_debt_to_party_members", ":player_new_debt_to_party_members"),
        (try_begin),
          (gt, ":player_wealth_dif", 0),
          ##diplomacy begin
          (try_begin),
            (gt, "$g_player_chamberlain", 0),
            (call_script, "script_dplmc_withdraw_from_treasury", ":player_wealth_dif"),
          (else_try),
          ##diplomacy end
          (troop_remove_gold, "trp_player", ":player_wealth_dif"),
          ##diplomacy begin
          (try_end),
          ##diplomacy end
        (else_try),
          (val_mul, ":player_wealth_dif", -1),
          ##diplomacy begin
          (try_begin),
            (gt, "$g_player_chamberlain", 0),
            (call_script, "script_dplmc_pay_into_treasury", ":player_wealth_dif"),
          (else_try),
          ##diplomacy end
          (troop_add_gold, "trp_player", ":player_wealth_dif"),
          ##diplomacy begin
          (try_end),
          ##diplomacy end
        (try_end),
        (try_for_range, ":center_no", centers_begin, centers_end),
          (party_slot_eq, ":center_no", slot_town_lord, "trp_player"),
          (party_set_slot, ":center_no", slot_center_accumulated_rents, 0),
          (party_set_slot, ":center_no", slot_center_accumulated_tariffs, 0),
        (try_end),
        (assign, "$g_cur_week_half_daily_wage_payments", 0),#Reseting the weekly half wage payments
      (try_end),
      ]),
    (ti_on_presentation_event_state_change,
     [(store_trigger_param_1, ":object"),
      (try_begin),
        (eq, ":object", "$g_presentation_obj_budget_report_1"),
        (presentation_set_duration, 0),
      (try_end),
      ]),
    ]),

  ("game_before_quit", 0, mesh_load_window,
   [
     (ti_on_presentation_load,
      [
        (try_begin),
          (is_trial_version),
          (set_fixed_point_multiplier, 1000),
          (create_mesh_overlay, reg0, "mesh_quit_adv"),
          (position_set_x, pos1, -1),
          (position_set_y, pos1, -1),
          (overlay_set_position, reg0, pos1),
          (position_set_x, pos1, 1002),
          (position_set_y, pos1, 1002),
          (overlay_set_size, reg0, pos1),
          (assign, "$g_game_before_quit_state", 0),
          (presentation_set_duration, 999999),
        (try_end),
      ]),
     (ti_on_presentation_run,
       [
        (store_trigger_param_1, ":cur_time"),
        (gt, ":cur_time", 500),
        (try_begin),
          (this_or_next|key_clicked, key_space),
          (this_or_next|key_clicked, key_enter),
          (this_or_next|key_clicked, key_escape),
          (this_or_next|key_clicked, key_back_space),
          (this_or_next|key_clicked, key_left_mouse_button),
          (key_clicked, key_right_mouse_button),
          (try_begin),
            (eq, "$g_game_before_quit_state", 0),
            (val_add, "$g_game_before_quit_state", 1),
            (create_mesh_overlay, reg0, "mesh_quit_adv_b"),
            (position_set_x, pos1, -1),
            (position_set_y, pos1, -1),
            (overlay_set_position, reg0, pos1),
            (position_set_x, pos1, 1002),
            (position_set_y, pos1, 1002),
            (overlay_set_size, reg0, pos1),
          (else_try),
            (presentation_set_duration, 0),
          (try_end),
        (try_end),
        ]),
     ]),
  ("multiplayer_duel_start_counter", prsntf_read_only|prsntf_manual_end_only, 0, [
    (ti_on_presentation_load, [      
      (set_fixed_point_multiplier, 1000),

      (assign, "$g_multiplayer_duel_start_counter_overlay", -1),
      (assign, "$g_multiplayer_last_duel_start_counter_value", -1),

      (str_clear, s0),
      (create_text_overlay, "$g_multiplayer_duel_start_counter_overlay", s0, tf_center_justify|tf_with_outline),
      (overlay_set_color, "$g_multiplayer_duel_start_counter_overlay", 0xFFFFFF),
      (position_set_x, pos1, 500),
      (position_set_y, pos1, 600),
      (overlay_set_position, "$g_multiplayer_duel_start_counter_overlay", pos1),
      (position_set_x, pos1, 2000),
      (position_set_y, pos1, 2000),
      (overlay_set_size, "$g_multiplayer_duel_start_counter_overlay", pos1),

      (presentation_set_duration, 999999),
      ]),
  
    (ti_on_presentation_run, [
      (ge, "$g_multiplayer_duel_start_counter_overlay", 0),
      (store_mission_timer_a, ":current_time"),
      (store_sub, ":seconds_past_in_duel_start", ":current_time", "$g_multiplayer_duel_start_time"),
      (store_sub, ":seconds_left_in_duel_start", 3, ":seconds_past_in_duel_start"),
      (try_begin),
        (le, ":seconds_left_in_duel_start", 0),
        (presentation_set_duration, 0),
      (else_try),
        (neq, "$g_multiplayer_last_duel_start_counter_value", ":seconds_left_in_duel_start"),
        (assign, "$g_multiplayer_last_duel_start_counter_value", ":seconds_left_in_duel_start"),
        (assign, reg0, ":seconds_left_in_duel_start"),
        (str_store_string, s0, "str_duel_starts_in_reg0_seconds"),
        (overlay_set_text, "$g_multiplayer_duel_start_counter_overlay", s0),
      (try_end),
      ]),
    ]),



## CC

## CC
  ("auto_trade", 0, mesh_load_window, [
    (ti_on_presentation_load,
      [
        (presentation_set_duration, 999999),
        (set_fixed_point_multiplier, 1000),

        # done
        (create_game_button_overlay, "$g_presentation_obj_admin_panel_3", "@Done"),
        (position_set_x, pos1, 500),
        (position_set_y, pos1, 20),
        (overlay_set_position, "$g_presentation_obj_admin_panel_3", pos1),
        
        ## do auto-sell automaticly when leaving
        (create_text_overlay, reg1, "@Sell items automaticly when leaving:", tf_vertical_align_center),
        (position_set_x, pos1, 70),
        (position_set_y, pos1, 28),
        (overlay_set_position, reg1, pos1),
        (create_check_box_overlay, "$g_presentation_obj_admin_panel_1", "mesh_checkbox_off", "mesh_checkbox_on"),
        (position_set_x, pos1, 50),
        (position_set_y, pos1, 20),
        (overlay_set_position, "$g_presentation_obj_admin_panel_1", pos1),
        (overlay_set_val, "$g_presentation_obj_admin_panel_1", "$g_sell_items_when_leaving"),
        
        ## Auto-sell button
        (create_in_game_button_overlay, "$g_presentation_obj_admin_panel_7", "@Auto-sell items"),
        (position_set_x, pos1, 270),
        (position_set_y, pos1, 450),
        (overlay_set_position, "$g_presentation_obj_admin_panel_7", pos1),
        (overlay_set_color, "$g_presentation_obj_admin_panel_7", 0xFFFFFF),
        
        (create_text_overlay, reg1, "@Click the button below, then items in the inventory of companions which fits the conditions below will be sold automaticly. Specifically foods, trade goods and books will never be sold.", tf_scrollable),
        (position_set_x, pos1, 50),
        (position_set_y, pos1, 500),
        (overlay_set_position, reg1, pos1),
        (position_set_x, pos1, 400),
        (position_set_y, pos1, 200),
        (overlay_set_area_size, reg1, pos1),
        
        ## price_limit
        (create_text_overlay, reg1, "@Price limit for auto-sell:", tf_vertical_align_center),
        (position_set_x, pos1, 50),
        (position_set_y, pos1, 410),
        (overlay_set_position, reg1, pos1),

        (create_number_box_overlay, "$g_presentation_obj_admin_panel_2", 10, 10000),
        (position_set_x, pos1, 350),
        (position_set_y, pos1, 396),
        (overlay_set_val, "$g_presentation_obj_admin_panel_2", "$g_auto_sell_price_limit"),
        (overlay_set_position, "$g_presentation_obj_admin_panel_2", pos1),

        ## Item types
        (create_text_overlay, reg0, "@Item types for auto-sell:", tf_vertical_align_center),
        (position_set_x, pos1, 50),
        (position_set_y, pos1, 378),
        (overlay_set_position, reg0, pos1),

        # select all
        (create_image_button_overlay, "$g_presentation_obj_admin_panel_5", "mesh_drop_button_child", "mesh_drop_button_child_down"),
        (position_set_x, pos1, 50),
        (position_set_y, pos1, 328),
        (overlay_set_position, "$g_presentation_obj_admin_panel_5", pos1),
        (create_text_overlay, reg1, "@Select all", tf_center_justify|tf_vertical_align_center),
        (position_set_x, pos1, 155),
        (position_set_y, pos1, 338),
        (overlay_set_position, reg1, pos1),

        # select invert
        (create_image_button_overlay, "$g_presentation_obj_admin_panel_6", "mesh_drop_button_child", "mesh_drop_button_child_down"),
        (position_set_x, pos1, 275),
        (position_set_y, pos1, 328),
        (overlay_set_position, "$g_presentation_obj_admin_panel_6", pos1),
        (create_text_overlay, reg1, "@Select invert", tf_center_justify|tf_vertical_align_center),
        (position_set_x, pos1, 380),
        (position_set_y, pos1, 338),
        (overlay_set_position, reg1, pos1),

        (assign, ":pos_x", 50),
        (assign, ":pos_y", 300),
        (try_for_range, ":cur_type", 0, 20),
          (store_add, ":cur_item_type", itp_type_horse, ":cur_type"),
          (neq, ":cur_item_type", itp_type_goods),
          (neq, ":cur_item_type", itp_type_animal),
          (neq, ":cur_item_type", itp_type_book),
          # button
          (position_set_x, pos1, ":pos_x"),
          (position_set_y, pos1, ":pos_y"),
          (create_mesh_overlay, reg1, "mesh_drop_button_child"),
          (overlay_set_position, reg1, pos1),
          # text
          (store_add, ":text_pos_x", ":pos_x", 120),
          (store_add, ":text_pos_y", ":pos_y", 10),
          (position_set_x, pos1, ":text_pos_x"),
          (position_set_y, pos1, ":text_pos_y"),
          (store_add, ":out_string", "str_hero_wpn_slot_horse", ":cur_type"),
          (str_store_string, s1, ":out_string"),
          (create_text_overlay, reg1, "@{s1}", tf_center_justify|tf_vertical_align_center),
          (overlay_set_position, reg1, pos1),
          # checkbox
          (store_add, ":checkbox_pos_x", ":pos_x", 0),
          (store_add, ":checkbox_pos_y", ":pos_y", 4),
          (position_set_x, pos1, ":checkbox_pos_x"),
          (position_set_y, pos1, ":checkbox_pos_y"),
          (create_check_box_overlay, reg1, "mesh_checkbox_off", "mesh_checkbox_on"),
          (overlay_set_position, reg1, pos1),
          (store_add, ":item_type", itp_type_horse, ":cur_type"),
          (item_get_slot, ":for_sell", ":item_type", slot_item_type_not_for_sell),
          (store_sub, ":for_sell", 1, ":for_sell"),
          (overlay_set_val, reg1, ":for_sell"),
          (troop_set_slot, "trp_temp_array_b", ":cur_type", reg1),
          # focous
          (val_add, ":pos_x", 225),
          (try_begin),
            (eq, ":pos_x", 500),
            (assign, ":pos_x", 50),
            (val_sub, ":pos_y", 28),
          (try_end),
        (try_end),
        
        ##------------------------------------------------------------------------------------------------
        ## buy foos automaticly when leaving
        (create_text_overlay, reg1, "@Buy foods automaticly when leaving:", tf_vertical_align_center),
        (position_set_x, pos1, 620),
        (position_set_y, pos1, 28),
        (overlay_set_position, reg1, pos1),

        (create_check_box_overlay, "$g_presentation_obj_admin_panel_4", "mesh_checkbox_off", "mesh_checkbox_on"),
        (position_set_x, pos1, 600),
        (position_set_y, pos1, 20),
        (overlay_set_position, "$g_presentation_obj_admin_panel_4", pos1),
        (overlay_set_val, "$g_presentation_obj_admin_panel_4", "$g_buy_foods_when_leaving"),
        
        ## Auto-buy_food button
        (create_in_game_button_overlay, "$g_presentation_obj_admin_panel_8", "@Auto-buy food"),
        (position_set_x, pos1, 750),
        (position_set_y, pos1, 550),
        (overlay_set_position, "$g_presentation_obj_admin_panel_8", pos1),
        (overlay_set_color, "$g_presentation_obj_admin_panel_8", 0xFFFFFF),
        
        (create_text_overlay, reg1, "@Click the button below, you will buy food according to the shopping list of foods below automaticly.", tf_scrollable),
        (position_set_x, pos1, 560),
        (position_set_y, pos1, 600),
        (overlay_set_position, reg1, pos1),
        (position_set_x, pos1, 380),
        (position_set_y, pos1, 100),
        (overlay_set_area_size, reg1, pos1),
        
        (create_text_overlay, reg1, "@Set the portion of all food to:", 0),
        (position_set_x, pos1, 510),
        (position_set_y, pos1, 550),
        (overlay_set_position, reg1, pos1),
        
        (assign, ":pos_x", 820),
        (try_for_range, ":portion", 0, 6),
          (assign, reg2, ":portion"),
          (create_button_overlay, reg1, "@{reg2}"),
          (position_set_x, pos1, ":pos_x"),
          (overlay_set_position, reg1, pos1),
          (troop_set_slot, "trp_temp_array_d", ":portion", reg1),
          (val_add, ":pos_x", 30),
        (try_end),
        
        
        (assign, ":base_x", 560),
        (assign, ":base_y", 450),
        (assign, ":row_adder", -120),
        (assign, ":col_adder", 100),
        (assign, ":num_cols", 4),
        (store_mul, ":max_x", ":col_adder", ":num_cols"),
        (val_add, ":max_x", ":base_x"),
        (assign, ":pos_x", ":base_x"),
        (assign, ":pos_y", ":base_y"),
        (try_for_range, ":cur_food", food_begin, food_end),
          (neg|is_between, ":cur_food", "itm_raw_grapes", "itm_grain"),
        
          # frame
          (create_mesh_overlay, reg1, "mesh_mp_inventory_choose"),
          (position_set_x, pos1, 640),
          (position_set_y, pos1, 640),
          (overlay_set_size, reg1, pos1),
          (position_set_x, pos1, ":pos_x"),
          (position_set_y, pos1, ":pos_y"),
          (overlay_set_position, reg1, pos1),
          # back ground
          (create_mesh_overlay, reg1, "mesh_inv_slot"),
          (position_set_x, pos1, 800),
          (position_set_y, pos1, 800),
          (overlay_set_size, reg1, pos1),
          (position_set_x, pos1, ":pos_x"),
          (position_set_y, pos1, ":pos_y"),
          (overlay_set_position, reg1, pos1),
          (troop_set_slot, "trp_temp_array_a", ":cur_food", reg1),
          # item overlay
          (create_mesh_overlay_with_item_id, reg1, ":cur_food"),
          (position_set_x, pos1, 800),
          (position_set_y, pos1, 800),
          (overlay_set_size, reg1, pos1),
          (store_add, ":item_x", ":pos_x", 40),
          (store_add, ":item_y", ":pos_y", 40),
          (position_set_x, pos1, ":item_x"),
          (position_set_y, pos1, ":item_y"),
          (overlay_set_position, reg1, pos1),
          # number box
          (create_number_box_overlay, reg1, 0, 7),
          (store_add, ":box_x", ":pos_x", 10),
          (store_add, ":box_y", ":pos_y", -25),
          (position_set_x, pos1, ":box_x"),
          (position_set_y, pos1, ":box_y"),
          (overlay_set_position, reg1, pos1),
          (item_get_slot, ":food_portion", ":cur_food", slot_item_food_portion),
          (overlay_set_val, reg1, ":food_portion"),
          (troop_set_slot, "trp_temp_array_c", ":cur_food", reg1),
          # next
          (val_add, ":pos_x", ":col_adder"),
          (try_begin),
            (eq, ":pos_x", ":max_x"),
            (assign, ":pos_x", ":base_x"),
            (val_add, ":pos_y", ":row_adder"),
          (try_end),
        (try_end),
 
        ### mouse fix pos system #######
        # (call_script, "script_mouse_fix_pos_ready"),
        ### mouse fix pos system #######
      ]),

      # (ti_on_presentation_run,
        # [
        # #### mouse fix pos system #######
        # (call_script, "script_mouse_fix_pos_run"),
        # #### mouse fix pos system #######
      # ]),

    (ti_on_presentation_mouse_enter_leave,
      [
      (store_trigger_param_1, ":object"),
      (store_trigger_param_2, ":enter_leave"),

      (try_begin),
        (eq, ":enter_leave", 0),
        (try_for_range, ":cur_food", food_begin, food_end),
          (neg|is_between, ":cur_food", "itm_raw_grapes", "itm_grain"),
          (troop_slot_eq, "trp_temp_array_a", ":cur_food", ":object"),
          (overlay_get_position, pos0, ":object"),
          (position_get_x, ":pos_x", pos0),
          (position_get_y, ":pos_y", pos0),
          (store_add, ":item_x", ":pos_x", 40),
          (store_add, ":item_y", ":pos_y", 40),
          (position_set_x, pos1, ":item_x"),
          (position_set_y, pos1, ":item_y"),
          (show_item_details, ":cur_food", pos1, 100),
          (assign, "$g_current_opened_item_details", ":cur_food"),
        (try_end),
      (else_try),
        (try_for_range, ":cur_food", food_begin, food_end),
          (neg|is_between, ":cur_food", "itm_raw_grapes", "itm_grain"),
          (troop_slot_eq, "trp_temp_array_a", ":cur_food", ":object"),
          (try_begin),
            (eq, "$g_current_opened_item_details", ":cur_food"),
            (close_item_details),
          (try_end),
        (try_end),
      (try_end),
    ]),
      
    (ti_on_presentation_event_state_change,
      [
        (store_trigger_param_1, ":object"),
        (store_trigger_param_2, ":value"),

        ## check boxes
        (try_for_range, ":slot_item_type_checkbox", 0, 20),
          (troop_slot_eq, "trp_temp_array_b", ":slot_item_type_checkbox", ":object"),
          (store_add, ":item_type", itp_type_horse, ":slot_item_type_checkbox"),
          (store_sub, ":for_sell", 1, ":value"),
          (item_set_slot, ":item_type", slot_item_type_not_for_sell, ":for_sell"),
        (try_end),
        
        ## number boxes
        (try_for_range, ":cur_food", food_begin, food_end),
          (troop_slot_eq, "trp_temp_array_c", ":cur_food", ":object"),
          (item_set_slot, ":cur_food", slot_item_food_portion, ":value"),
        (try_end),
        
        ## portion of all food
        (try_for_range, ":portion", 0, 6),
          (troop_slot_eq, "trp_temp_array_d", ":portion", ":object"),
          (try_for_range, ":cur_food", food_begin, food_end),
            (item_set_slot, ":cur_food", slot_item_food_portion, ":portion"),
            (troop_get_slot, ":number_box", "trp_temp_array_c", ":cur_food"),
            (overlay_set_val, ":number_box", ":portion"),
          (try_end),
        (try_end),
        
        (try_begin),
          (eq, ":object", "$g_presentation_obj_admin_panel_1"),
          (assign, "$g_sell_items_when_leaving", ":value"),
        (else_try),
          (eq, ":object", "$g_presentation_obj_admin_panel_2"),
          (assign, "$g_auto_sell_price_limit", ":value"),
        (else_try),
          (eq, ":object", "$g_presentation_obj_admin_panel_3"),
          (item_set_slot, itp_type_book, slot_item_type_not_for_sell, 1),
          (item_set_slot, itp_type_goods, slot_item_type_not_for_sell, 1),
          (item_set_slot, itp_type_animal, slot_item_type_not_for_sell, 1),
          (presentation_set_duration, 0),
        (else_try),
          (eq, ":object", "$g_presentation_obj_admin_panel_4"),
          (assign, "$g_buy_foods_when_leaving", ":value"),
        (else_try),
          (eq, ":object", "$g_presentation_obj_admin_panel_7"),
          (call_script, "script_auto_sell_all"),
        (else_try),
          (eq, ":object", "$g_presentation_obj_admin_panel_8"),
          (call_script, "script_auto_buy_food"),
        (else_try),
          ## select all
          (eq, ":object", "$g_presentation_obj_admin_panel_5"),
          (try_for_range, ":cur_type", 0, 20),
            (store_add, ":cur_item_type", itp_type_horse, ":cur_type"),
            (item_set_slot, ":cur_item_type", slot_item_type_not_for_sell, 0),
            (troop_get_slot, ":dest_checkbox", "trp_temp_array_b", ":cur_type"),
            (overlay_set_val, ":dest_checkbox", 1),
          (try_end),
        (else_try),
          ## select invert
          (eq, ":object", "$g_presentation_obj_admin_panel_6"),
          (try_for_range, ":cur_type", 0, 20),
            (store_add, ":cur_item_type", itp_type_horse, ":cur_type"),
            (item_get_slot, ":for_sell", ":cur_item_type", slot_item_type_not_for_sell),
            (val_add, ":for_sell", 1),
            (val_mod, ":for_sell", 2),
            (item_set_slot, ":cur_item_type", slot_item_type_not_for_sell, ":for_sell"),
            (troop_get_slot, ":dest_checkbox", "trp_temp_array_b", ":cur_type"),
            (store_sub, ":dest_val", 1, ":for_sell"),
            (overlay_set_val, ":dest_checkbox", ":dest_val"),
          (try_end),
        (try_end),
      ]),
    ]),

  ("mini_map", prsntf_read_only, 0, [
    (ti_on_presentation_load,
     [
      (set_fixed_point_multiplier, 1000),

      (create_mesh_overlay, reg0, "mesh_white_plane"),
      (position_set_x, pos1, 1200),
      (position_set_y, pos1, 800),
      (overlay_set_position, reg0, pos1),

      (try_begin),
        (eq, "$g_show_minimap", 1),
        (try_for_agents, ":agent_no"),
          (agent_set_slot, ":agent_no", slot_agent_map_overlay_id, 0),
        (try_end),

        (get_scene_boundaries, pos2, pos3),
        (position_transform_position_to_local, pos4, pos2, pos3),
        (set_fixed_point_multiplier, 1000),
        (position_get_x, ":map_width", pos4),
        (position_get_y, ":map_height", pos4),
        (set_fixed_point_multiplier, 1000),
        (store_div, ":map_ratio", ":map_height", 100),
        (store_div, ":map_ratio", ":map_width", ":map_ratio"),
        (try_begin),
          (gt, ":map_ratio", 100),
          (store_mul, ":minimap_ratio", "$g_minimap_ratio", 3),
          (assign, "$g_battle_map_width", ":minimap_ratio"),
          (store_div, "$g_battle_map_scale", ":map_width", "$g_battle_map_width"),
          (store_div, "$g_battle_map_height", ":map_height", "$g_battle_map_scale"),
        (else_try),
          (store_mul, ":minimap_ratio", "$g_minimap_ratio", 3),
          (assign, "$g_battle_map_height", ":minimap_ratio"),
          (store_div, "$g_battle_map_scale", ":map_height", "$g_battle_map_height"),
          (store_div, "$g_battle_map_width", ":map_width", "$g_battle_map_scale"),
        (try_end),

        (create_mesh_overlay, "$g_battle_map_plane", "mesh_white_plane"),
        (overlay_set_color, "$g_battle_map_plane", 0),
        (store_add, ":map_bordered_width", "$g_battle_map_width", 20),
        (store_add, ":map_bordered_height", "$g_battle_map_height", 20),
        (store_mul, ":map_scale_x", ":map_bordered_width", 50),
        (store_mul, ":map_scale_y", ":map_bordered_height", 50),
        (position_set_x, pos1, ":map_scale_x"),
        (position_set_y, pos1, ":map_scale_y"),
        (overlay_set_size, "$g_battle_map_plane", pos1),
        (store_sub, ":map_pos_x", 990, ":map_bordered_width"),
        (store_sub, ":map_pos_y", 740, ":map_bordered_height"),
        (position_set_x, pos1, ":map_pos_x"),
        (position_set_y, pos1, ":map_pos_y"),
        (overlay_set_position, "$g_battle_map_plane", pos1),
        (overlay_set_alpha, "$g_battle_map_plane", 0x22),

        (try_begin),
          (scene_prop_get_instance, ":player_chest", "spr_inventory", 0),
          (ge, ":player_chest", 0),
          (create_mesh_overlay, "$g_presentation_obj_39", "mesh_white_plane"),
          (overlay_set_color, "$g_presentation_obj_39", 0xFF00FF),
          (position_set_x, pos1, 250),
          (position_set_y, pos1, 250),
          (overlay_set_size, "$g_presentation_obj_39", pos1),
        (try_end),
        
        
        
        ## horse stamina

        (create_mesh_overlay, "$g_stamina_bar1", "mesh_stamina_bar"),
        (position_set_x, pos1, 840), # 30
        (position_set_y, pos1, 170), # 700
        (overlay_set_position, "$g_stamina_bar1", pos1),
       
        (position_set_x, pos1, 845), # 35
        (position_set_y, pos1, 183), # 713
               
        (create_mesh_overlay, "$g_stamina_bar3", "mesh_stamina_bar_white_plane"),
        (overlay_set_color, "$g_stamina_bar3", 0x1FAA1F),
        (overlay_set_position, "$g_stamina_bar3", pos1),
           
        (create_mesh_overlay, "$g_stamina_bar4", "mesh_stamina_bar_button"),
              
        (create_mesh_overlay, "$g_stamina_bar5", "mesh_stamina_bar"),
        (position_set_x, pos1, 840), # 30
        (position_set_y, pos1, 185), # 700
        (overlay_set_position, "$g_stamina_bar5", pos1),
       
        (position_set_x, pos1, 845), # 35
        (position_set_y, pos1, 198), # 713
               
        (create_mesh_overlay, "$g_stamina_bar7", "mesh_stamina_bar_white_plane"),
        (overlay_set_color, "$g_stamina_bar7", 0x0099FF),
        (overlay_set_position, "$g_stamina_bar7", pos1),

        (create_mesh_overlay, "$g_stamina_bar8", "mesh_stamina_bar_button"),
      
          (create_mesh_overlay, "$g_enemy_hp_background", "mesh_progressbar"),
          (position_set_x, pos1, 350),
          (position_set_y, pos1, 720),
          (overlay_set_position, "$g_enemy_hp_background", pos1),
          (position_set_x, pos4, 469),
          (position_set_y, pos4, 600),
          (overlay_set_size, "$g_enemy_hp_background", pos4),

          (create_mesh_overlay, "$g_enemy_hp_bar", "mesh_white_plane"),
          (position_set_x, pos1, 351),
          (position_set_y, pos1, 725),
          (overlay_set_position, "$g_enemy_hp_bar", pos1),
          (overlay_set_color, "$g_enemy_hp_bar", 0xFFFFFF),
          (overlay_set_alpha, "$g_enemy_hp_bar", 0),
          
          ## horse stamina
          (create_text_overlay, "$g_enemy_name_overlay", "@0", tf_center_justify),
          (position_set_x, pos1, 500),
          (position_set_y, pos1, 680),
          (overlay_set_position, "$g_enemy_name_overlay", pos1),
          (position_set_x, pos1, 900),
          (position_set_y, pos1, 900),
          (overlay_set_size, "$g_enemy_name_overlay", pos1),
          (overlay_set_color, "$g_enemy_name_overlay", 0xFFFFFF),
          (overlay_set_alpha, "$g_enemy_name_overlay", 0),

          ## skill name 1
          (create_text_overlay, "$g_presentation_credits_obj_5", "str_space", tf_center_justify),
          (position_set_x, pos1, 840), # 30
          (position_set_y, pos1, 285),
          (overlay_set_position, "$g_presentation_credits_obj_5", pos1),
          (position_set_x, pos1, 900),
          (position_set_y, pos1, 900),
          (overlay_set_size, "$g_presentation_credits_obj_5", pos1),
          ## skill name 2
          (create_text_overlay, "$g_presentation_credits_obj_6", "str_space", tf_center_justify),
          (position_set_x, pos1, 840), # 30
          (position_set_y, pos1, 265),
          (overlay_set_position, "$g_presentation_credits_obj_6", pos1),
          (position_set_x, pos1, 900),
          (position_set_y, pos1, 900),
          (overlay_set_size, "$g_presentation_credits_obj_6", pos1),
          ## skill name 3
          (create_text_overlay, "$g_presentation_credits_obj_7", "str_space", tf_center_justify),
          (position_set_x, pos1, 840), # 30
          (position_set_y, pos1, 245),
          (overlay_set_position, "$g_presentation_credits_obj_7", pos1),
          (position_set_x, pos1, 900),
          (position_set_y, pos1, 900),
          (overlay_set_size, "$g_presentation_credits_obj_7", pos1),
          ## affect name
          (create_text_overlay, "$g_presentation_credits_obj_8", "str_space", tf_center_justify),
          (position_set_x, pos1, 840), # 30
          (position_set_y, pos1, 225),
          (overlay_set_position, "$g_presentation_credits_obj_8", pos1),
          (position_set_x, pos1, 900),
          (position_set_y, pos1, 900),
          (overlay_set_size, "$g_presentation_credits_obj_8", pos1),
          ## special_damage name
          (create_text_overlay, "$g_presentation_credits_obj_9", "str_space", tf_center_justify),
          (position_set_x, pos1, 840), # 30
          (position_set_y, pos1, 205), # 700
          (overlay_set_position, "$g_presentation_credits_obj_9", pos1),
          (position_set_x, pos1, 900),
          (position_set_y, pos1, 900),
          (overlay_set_size, "$g_presentation_credits_obj_9", pos1),

          #(create_text_overlay, "$g_presentation_credits_obj_10", "str_empty_string", 2056),
          #(position_set_x, pos1, 780),
          #(position_set_y, pos1, 20),
          #(overlay_set_position, "$g_presentation_credits_obj_10", pos1),
          #(position_set_x, pos1, 900),
          #(position_set_y, pos1, 900),
          #(overlay_set_size, "$g_presentation_credits_obj_10", pos1),
          #(overlay_set_color, "$g_presentation_credits_obj_10", 0xEEF7ED),
          #
          #  (position_set_x, pos1, 790),
          #  (position_set_y, pos1, 25),
          #
          #  (position_set_x, pos2, 1),
          #  (position_set_y, pos2, 1),
          #  (get_player_agent_no, ":player_agent"),
          #  (agent_get_troop_id, ":player", ":player_agent"),
          #
          #  (troop_get_slot, ":magic_id_1", ":player", slot_troop_spell_1),
          #  (create_mesh_overlay_with_item_id, "$g_magic_mesh_1", ":magic_id_1"),
          #  (overlay_set_position, "$g_magic_mesh_1", pos1),
          #  (overlay_set_size, "$g_magic_mesh_1", pos2),
          #  
          #  (troop_get_slot, ":magic_id_1", ":player", slot_troop_spell_2),
          #  (create_mesh_overlay_with_item_id, "$g_magic_mesh_2", ":magic_id_1"),
          #  (overlay_set_position, "$g_magic_mesh_2", pos1),
          #  (overlay_set_size, "$g_magic_mesh_2", pos2),
          #  
          #  (troop_get_slot, ":magic_id_1", ":player", slot_troop_spell_3),
          #  (create_mesh_overlay_with_item_id, "$g_magic_mesh_3", ":magic_id_1"),
          #  (overlay_set_position, "$g_magic_mesh_3", pos1),
          #  (overlay_set_size, "$g_magic_mesh_3", pos2),
          #  
          #  (troop_get_slot, ":magic_id_1", ":player", slot_troop_spell_4),
          #  (create_mesh_overlay_with_item_id, "$g_magic_mesh_4", ":magic_id_1"),
          #  (overlay_set_position, "$g_magic_mesh_4", pos1),
          #  (overlay_set_size, "$g_magic_mesh_4", pos2),

        (call_script, "script_update_order_panel_map"),
      (try_end),
      ## hp bar
      (get_player_agent_no, ":player_agent"),

      (try_for_agents, ":agent_no"),
        (agent_set_slot, ":agent_no", slot_agent_hp_bar_overlay_id, 0),
        (agent_set_slot, ":agent_no", slot_agent_hp_bar_bg_overlay_id, 0),
        (neg|eq, ":agent_no", ":player_agent"),
        (agent_set_slot, ":agent_no", slot_agent_player_target, 0),
      (try_end),
      (call_script, "script_update_agent_hp_bar"),
      (presentation_set_duration, 999999),
     ]),
    (ti_on_presentation_run,
     [
      (set_fixed_point_multiplier, 1000),
      (get_player_agent_no, ":player_agent"),
      (try_begin),
        # Horse Stamina
            
        (agent_get_slot, ":player_stamina", ":player_agent", slot_agent_stamina),
        (store_mul, ":player_percent", ":player_stamina", 12000),
        (val_div, ":player_percent", 100),
        (position_set_x, pos1, ":player_percent"),
        (position_set_y, pos1, 300),
        (overlay_animate_to_size, "$g_stamina_bar3", 200, pos1),
       
        (store_mul, ":player_percent_2", ":player_stamina", 132),
        (val_div, ":player_percent_2", 100),
        (val_add, ":player_percent_2", 845),
        (position_set_x, pos1, ":player_percent_2"),
        (position_set_y, pos1, 170),
        (overlay_animate_to_position, "$g_stamina_bar4", 100, pos1),
      (try_end),
      (try_begin),
        # Horse Stamina
    
        (agent_get_slot, ":player_mana", ":player_agent", slot_agent_mana),
        (store_mul, ":player_percent_3", ":player_mana", 120),
        (position_set_x, pos1, ":player_percent_3"),
        (position_set_y, pos1, 300),
        (overlay_animate_to_size, "$g_stamina_bar7", 200, pos1),
       
        (store_mul, ":player_percent_2", ":player_mana", 132),
        (val_div, ":player_percent_2", 100),
        (val_add, ":player_percent_2", 845),
        (position_set_x, pos1, ":player_percent_2"),
        (position_set_y, pos1, 185),
        (overlay_animate_to_position, "$g_stamina_bar8", 100, pos1),
      (try_end),
      
          (assign, ":green_color", 0x33ff33),
          (assign, ":blue_color", 0x33DDDD),
          (assign, ":yellow_color", 0xFFCC00),
          (assign, ":red_color", 0xff3333),
          (assign, ":white_color", 0xEEF7ED),
      (agent_get_troop_id, ":player", ":player_agent"),
      
      #(agent_get_slot, ":choose_magic", ":player", slot_agent_cur_magic),
      #(agent_get_slot, reg1, ":player", slot_agent_shield_bash_timer),
      #(try_begin),
      #  (gt, ":choose_magic", 0),
      #  (assign, ":cur_magic_slot",-1),
      #  (try_for_range, ":slot_spell", slot_troop_spell_1, slot_troop_spell_end),
      #    (eq, ":cur_magic_slot", -1),
      #    (troop_get_slot, ":magic_id", ":player", ":slot_spell"),
      #    (eq, ":magic_id", ":choose_magic"),
      #    (assign, ":cur_magic_slot", ":slot_spell"),
      #  (try_end),
      #  
      #  (position_set_x, pos1, 200),
      #  (position_set_y, pos1, 200),
      #      
      #  (try_begin),
      #      (eq, ":cur_magic_slot", 1),
      #      (overlay_set_size, "$g_magic_mesh_1", pos1),
      #  (else_try),
      #      (eq, ":cur_magic_slot", 2),
      #      (overlay_set_size, "$g_magic_mesh_2", pos1),
      #  (else_try),
      #      (eq, ":cur_magic_slot", 3),
      #      (overlay_set_size, "$g_magic_mesh_3", pos1),
      #  (else_try),
      #      (eq, ":cur_magic_slot", 4),
      #      (overlay_set_size, "$g_magic_mesh_4", pos1),
      #  (try_end),
      #  
      #  (store_sub, ":offset", ":cur_magic_slot", slot_troop_spell_1),
      #  (store_add, ":slot_spell_cd", slot_agent_spell_1_cooldown, ":offset"),
      #  (agent_get_slot, reg2, ":player", ":slot_spell_cd"),
      #  
      #  
      #  
      #  (overlay_set_display, "$g_presentation_credits_obj_10", 1),
      #  (str_store_item_name, s1, ":magic_id"),
      #  (overlay_set_text, "$g_presentation_credits_obj_10", "@{s1} spell cd : {reg2}  CD: {reg1}"),
      #  (try_begin),
      #      (eq, reg1, 0),
      #      (eq, reg2, 0),
      #      (overlay_set_color, "$g_presentation_credits_obj_10", ":blue_color"),
      #  (else_try),
      #      (eq, reg1, 0),
      #      (ge, reg2, 1),
      #      (overlay_set_color, "$g_presentation_credits_obj_10", ":white_color"),
      #  (else_try),
      #      (ge, reg1, 1),
      #      (eq, reg2, 0),
      #      (overlay_set_color, "$g_presentation_credits_obj_10", ":red_color"),
      #  (else_try),
      #      (ge, reg1, 1),
      #      (ge, reg2, 1),
      #      (overlay_set_color, "$g_presentation_credits_obj_10", ":red_color"),
      #  (try_end),
      #(else_try),
      #  (overlay_set_display, "$g_presentation_credits_obj_10", 0),
      #(try_end),
      
      (try_begin),
        (try_begin),
          (troop_get_slot, ":special", ":player", slot_troop_special_ability),
          (call_script, "script_get_special_ability_text_to_s2", ":special", 0),
          (agent_get_slot, reg1, ":player_agent", slot_agent_special_ability_cooldown),
          (agent_get_slot, reg2, ":player_agent", slot_agent_special_ability_counter),
          (overlay_set_text, "$g_presentation_credits_obj_5", "@{s2}  counter: {reg2}  cooldown: {reg1}"),
          (try_begin),
            (eq, reg1, 0),
            (eq, reg2, 0),
            (overlay_set_color, "$g_presentation_credits_obj_5", ":white_color"),
          (else_try),
            (eq, reg1, 0),
            (ge, reg2, 1),
            (overlay_set_color, "$g_presentation_credits_obj_5", ":blue_color"),
          (else_try),
            (ge, reg1, 1),
            (eq, reg2, 0),
            (overlay_set_color, "$g_presentation_credits_obj_5", ":red_color"),
          (else_try),
            (ge, reg1, 1),
            (ge, reg2, 0),
            (overlay_set_color, "$g_presentation_credits_obj_5", ":green_color"),
          (try_end),
        (try_end),
        (try_begin),
          (troop_get_slot, ":special", ":player", slot_troop_special_ability_extra),
          (call_script, "script_get_special_ability_text_to_s2", ":special", 1),
          (agent_get_slot, reg1, ":player_agent", slot_agent_special_ability_extra_cooldown),
          (agent_get_slot, reg2, ":player_agent", slot_agent_special_ability_extra_counter),
          (overlay_set_text, "$g_presentation_credits_obj_6", "@{s2}  counter: {reg2}  cooldown: {reg1}"),
          (try_begin),
            (eq, reg1, 0),
            (eq, reg2, 0),
            (overlay_set_color, "$g_presentation_credits_obj_6", ":white_color"),
          (else_try),
            (eq, reg1, 0),
            (ge, reg2, 1),
            (overlay_set_color, "$g_presentation_credits_obj_6", ":blue_color"),
          (else_try),
            (ge, reg1, 1),
            (eq, reg2, 0),
            (overlay_set_color, "$g_presentation_credits_obj_6", ":red_color"),
          (else_try),
            (ge, reg1, 1),
            (ge, reg2, 0),
            (overlay_set_color, "$g_presentation_credits_obj_6", ":green_color"),
          (try_end),
        (try_end),
        (try_begin),
          (troop_get_slot, ":special", ":player", slot_troop_special_ability_passive),
          (call_script, "script_get_special_ability_text_to_s2", ":special", 2),
          (agent_get_slot, reg1, ":player_agent", slot_agent_special_ability_passiv_cooldown),
          (agent_get_slot, reg2, ":player_agent", slot_agent_special_ability_passiv_counter),
          (overlay_set_text, "$g_presentation_credits_obj_7", "@{s2}  counter: {reg2}  cooldown: {reg1}"),
          (try_begin),
            (eq, reg1, 0),
            (eq, reg2, 0),
            (overlay_set_color, "$g_presentation_credits_obj_7", ":white_color"),
          (else_try),
            (eq, reg1, 0),
            (ge, reg2, 1),
            (overlay_set_color, "$g_presentation_credits_obj_7", ":blue_color"),
          (else_try),
            (ge, reg1, 1),
            (eq, reg2, 0),
            (overlay_set_color, "$g_presentation_credits_obj_7", ":red_color"),
          (else_try),
            (ge, reg1, 1),
            (ge, reg2, 0),
            (overlay_set_color, "$g_presentation_credits_obj_7", ":green_color"),
          (try_end),
        (try_end),

        (try_begin),
          (agent_get_slot, ":special", ":player_agent", slot_agent_special_ability_affect_type),
          (agent_get_slot, reg2, ":player_agent", slot_agent_special_ability_affect_time),
          
          (try_begin),
            (le,reg2, 0),
            (overlay_set_color, "$g_presentation_credits_obj_8", 0xFFFFFF),
            (overlay_set_alpha, "$g_presentation_credits_obj_8", 0),
          (else_try),
            (overlay_set_alpha, "$g_presentation_credits_obj_8", 0x88),
          (try_end),
          (try_begin),
            (eq,":special", divine_strength),
            (str_store_string, s2, "@divine_strength"),
            (overlay_set_color, "$g_presentation_credits_obj_8", ":blue_color"),
          (else_try),
            (eq,":special", power_strike),
            (str_store_string, s2, "@assault_plate"),
            (overlay_set_color, "$g_presentation_credits_obj_8", ":yellow_color"),
          (else_try),
            (eq,":special", weakness),
            (str_store_string, s2, "@weakness"),
            (overlay_set_color, "$g_presentation_credits_obj_8", ":red_color"),
          (else_try),
            (eq,":special", wound_strike),
            (str_store_string, s2, "@curse_armor"),
            (overlay_set_color, "$g_presentation_credits_obj_8", ":red_color"),
          (else_try),
            (eq,":special", haste),
            (str_store_string, s2, "@haste"),
            (overlay_set_color, "$g_presentation_credits_obj_8", ":blue_color"),
          (else_try),
            (eq,":special", slow),
            (str_store_string, s2, "@slow"),
            (overlay_set_color, "$g_presentation_credits_obj_8", ":red_color"),
          (else_try),
            (eq,":special", master_archer),
            (str_store_string, s2, "@master_archer"),
            (overlay_set_color, "$g_presentation_credits_obj_8", ":yellow_color"),
          (else_try),
            (eq,":special", regeneration),
            (str_store_string, s2, "@regeneration"),
            (overlay_set_color, "$g_presentation_credits_obj_8", ":green_color"),
          (else_try),
            (eq,":special", Nurgle_blessing),
            (str_store_string, s2, "@Nurgle_blessing"),
            (overlay_set_color, "$g_presentation_credits_obj_8", ":green_color"),
          (else_try),
            (eq,":special",stoneskin),
            (str_store_string, s2, "@stoneskin"),
            (overlay_set_color, "$g_presentation_credits_obj_8", ":yellow_color"),
          (else_try),
            (eq,":special", haste_reload),
            (str_store_string, s2, "@haste_reload"),
            (overlay_set_color, "$g_presentation_credits_obj_8", ":blue_color"),
          (else_try),
            (eq,":special", berserk),
            (str_store_string, s2, "@berserk"),
            (overlay_set_color, "$g_presentation_credits_obj_8", ":green_color"),
          (else_try),
            (eq,":special", mummy_curse),
            (str_store_string, s2, "@mummy_curse"),
            (overlay_set_color, "$g_presentation_credits_obj_8", ":red_color"),
          (else_try),
            (eq,":special", entangle),
            (str_store_string, s2, "@entangle"),
            (overlay_set_color, "$g_presentation_credits_obj_8", ":red_color"),
          (else_try),
            (eq,":special", grasp),
            (str_store_string, s2, "@grasp"),
            (overlay_set_color, "$g_presentation_credits_obj_8", ":red_color"),
          (else_try),
            (eq,":special", dragon_voice),
            (str_store_string, s2, "@dragon_voice"),
            (overlay_set_color, "$g_presentation_credits_obj_8", ":red_color"),
          (else_try),
            (eq,":special", battlecry),
            (str_store_string, s2, "@battlecry"),
            (overlay_set_color, "$g_presentation_credits_obj_8", ":green_color"),
          (else_try),
            (eq,":special", fright_aura),
            (str_store_string, s2, "@fright_aura"),
            (overlay_set_color, "$g_presentation_credits_obj_8", ":red_color"),
          (else_try),
            (eq,":special", inspire),
            (str_store_string, s2, "@inspire"),
            (overlay_set_color, "$g_presentation_credits_obj_8", ":green_color"),
          (else_try),
            (eq,":special", holy_light),
            (str_store_string, s2, "@inspire"),
            (overlay_set_color, "$g_presentation_credits_obj_8", ":green_color"),
          (try_end),
          (overlay_set_text, "$g_presentation_credits_obj_8", "@{s2}  counter: {reg2}"),
        (try_end),
        
        (try_begin),
          (agent_get_slot, ":special", ":player_agent", slot_agent_special_damage_type),
          (agent_get_slot, reg1, ":player_agent", slot_agent_special_damage_power),
          (agent_get_slot, reg2, ":player_agent", slot_agent_special_damage_time),
          (try_begin),
            (le,reg2, 0),
            (overlay_set_color, "$g_presentation_credits_obj_9", 0xFFFFFF),
            (overlay_set_alpha, "$g_presentation_credits_obj_9", 0),
          (else_try),
            (overlay_set_alpha, "$g_presentation_credits_obj_9", 0x88),
          (try_end),
          
          (try_begin),
            (eq,":special", burn),
              (str_store_string, s2, "@burn"),
            (overlay_set_color, "$g_presentation_credits_obj_9", ":yellow_color"),
          (else_try),
            (eq,":special", holy_fire),
              (str_store_string, s2, "@holy_fire"),
            (overlay_set_color, "$g_presentation_credits_obj_9", ":yellow_color"),
          (else_try),
            (eq,":special", poison),
            (str_store_string, s2, "@poison"),
            (overlay_set_color, "$g_presentation_credits_obj_9", ":green_color"),
          (else_try),
            (eq,":special", power_poison),
            (str_store_string, s2, "@power_poison"),
            (overlay_set_color, "$g_presentation_credits_obj_9", ":green_color"),
          (else_try),
            (eq,":special", wound),
              (str_store_string, s2, "@bleed"),
            (overlay_set_color, "$g_presentation_credits_obj_9", ":red_color"),
          (else_try),
            (eq,":special", ice),
              (str_store_string, s2, "@cold"),
            (overlay_set_color, "$g_presentation_credits_obj_9", ":blue_color"),
          (else_try),
            (eq,":special", power_jump),
              (str_store_string, s2, "@cold"),
            (overlay_set_color, "$g_presentation_credits_obj_9", ":white_color"),
          (else_try),
            (eq,":special", thunder),
              (str_store_string, s2, "@thunder"),
            (overlay_set_color, "$g_presentation_credits_obj_9", ":white_color"),
          (else_try),
            (eq,":special", freeze),
              (str_store_string, s2, "@freeze"),
            (overlay_set_color, "$g_presentation_credits_obj_9", ":blue_color"),
          (else_try),
            (eq,":special", curse),
              (str_store_string, s2, "@curse"),
            (overlay_set_color, "$g_presentation_credits_obj_9", ":red_color"),
          (else_try),
            (eq,":special", severe_burn),
              (str_store_string, s2, "@severe_burn"),
            (overlay_set_color, "$g_presentation_credits_obj_9", ":yellow_color"),
          (try_end),
          (overlay_set_text, "$g_presentation_credits_obj_9", "@{s2}  power: {reg1}  time: {reg2}"),
        (try_end),
      (try_end),
      
      (try_begin),
        (game_key_clicked, gk_view_orders),
        (presentation_set_duration, 0),
        (start_presentation, "prsnt_battle"),
      (try_end),
     ]),
  ]),
    
    

  ("upgrade_trees_fantasy", 0, mesh_load_window, [
    (ti_on_presentation_load,
      [
        (presentation_set_duration, 999999),
        (set_fixed_point_multiplier, 1000),

        ## next presentation
        (assign, "$g_presentation_next_presentation", -1),
        
        ## combo_button
        (create_combo_button_overlay, "$g_presentation_obj_1"),
        (position_set_x, pos1, 500),
        (position_set_y, pos1, 690),
        (overlay_set_position, "$g_presentation_obj_1", pos1),
        # factions
        (try_for_range_backwards, ":i_upgrade_tree", 0, 12),
          (store_add, ":faction_no", ":i_upgrade_tree", "fac_kingdom_1"),
          ## faction name
          (try_begin),
            (eq, ":faction_no", "fac_kingdom_1"),
            (str_store_faction_name, s0, "fac_elf"),
          (else_try),
            (eq, ":faction_no", "fac_kingdom_3"),
            (str_store_faction_name, s0, "fac_orc"),
          (else_try),
            (eq, ":faction_no", "fac_kingdom_4"),
            (str_store_faction_name, s0, "fac_dwarf"),
          (else_try),
            (eq, ":faction_no", "fac_kingdom_5"),
            (str_store_faction_name, s0, "fac_undeads_2"),
          (else_try),
            (eq, ":faction_no", "fac_kingdom_7"),
            (str_store_faction_name, s0, "fac_demon_hunters"),
          (else_try),
            (eq, ":faction_no", "fac_kingdom_8"),
            (str_store_faction_name, s0, "fac_demon"),
          (else_try),
            (eq, ":faction_no", "fac_kingdom_9"),
            (str_store_faction_name, s0, "fac_dark_knights"),
          (else_try),
            (eq, ":faction_no", "fac_kingdom_10"),
            (str_store_faction_name, s0, "fac_beast"),
          (else_try),
            (eq, ":faction_no", "fac_kingdoms_end"),
            (str_store_faction_name, s0, "fac_scotland"),
          (else_try),
            (eq, ":faction_no", "fac_robber_knights"),
            (str_store_string, s0, "@Outlaws"),
          (else_try),
            (eq, ":faction_no", "fac_khergits"),
            (str_store_string, s0, "@Mercenaries"),
          (else_try),
            (eq, ":faction_no", "fac_manhunters"),
            (str_store_string, s0, "@Others"),
          (try_end),
          (overlay_add_item, "$g_presentation_obj_1", s0),
        (try_end),
        (store_sub, ":presentation_obj_val", 11, "$g_prsnt_param_2"),
        (overlay_set_val, "$g_presentation_obj_1", ":presentation_obj_val"),
        (store_add, ":faction_no", "fac_kingdom_1", "$g_prsnt_param_2"),
        
        ## tips
        (create_text_overlay, reg1, "@Click the center button to toggle faction^Click the avatars to view details of them", tf_vertical_align_center),
        (position_set_x, pos1, 800),
        (position_set_y, pos1, 800),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 650),
        (position_set_y, pos1, 700),
        (overlay_set_position, reg1, pos1),
        
        ## back
        (create_game_button_overlay, "$g_presentation_obj_5", "@Done"),
        (position_set_x, pos1, 900),
        (position_set_y, pos1, 25),
        (overlay_set_position, "$g_presentation_obj_5", pos1),

        (str_clear, s0),
        (create_text_overlay, "$g_presentation_obj_6", s0, tf_scrollable),
        (position_set_x, pos1, 15),
        (position_set_y, pos1, 80),
        (overlay_set_position, "$g_presentation_obj_6", pos1),
        (position_set_x, pos1, 950),
        (position_set_y, pos1, 600),
        (overlay_set_area_size, "$g_presentation_obj_6", pos1),
        (set_container_overlay, "$g_presentation_obj_6"),
                
        (assign, "$temp_3", 0),

        (assign, ":num_fit_lords", 0),
        (try_for_range, ":active_npc", soldiers_begin, soldiers_end),
          (neg|troop_is_hero, ":active_npc"),
          (store_faction_of_troop, ":troop_faction", ":active_npc"),
          (try_begin),
            (this_or_next|eq, ":troop_faction", "fac_forest_ranger"), 
            (eq, ":troop_faction", "fac_elf"), 
            (assign, ":troop_faction", "fac_kingdom_1"),
          (else_try),
            (eq, ":troop_faction", "fac_orc"), 
            (assign, ":troop_faction", "fac_kingdom_3"),
          (else_try),
            (eq, ":troop_faction", "fac_dwarf"), 
            (assign, ":troop_faction", "fac_kingdom_4"),
          (else_try),
            (eq, ":troop_faction", "fac_undeads_2"), 
            (assign, ":troop_faction", "fac_kingdom_5"),
          (else_try),
            (this_or_next|eq, ":troop_faction", "fac_demon_hunters"), 
            (this_or_next|eq, ":troop_faction", "fac_hospitalier_knights"), 
            (this_or_next|is_between, ":active_npc", "trp_monk", "trp_manhunter"),
            (is_between, ":active_npc", "trp_sissofbattle", "trp_titan_0"),
            (assign, ":troop_faction", "fac_kingdom_7"),
          (else_try),
            (eq, ":troop_faction", "fac_demon"), 
            (assign, ":troop_faction", "fac_kingdom_8"),
          (else_try),
            (eq, ":troop_faction", "fac_dark_knights"), 
            (assign, ":troop_faction", "fac_kingdom_9"),
          (else_try),
            (eq, ":troop_faction", "fac_beast"), 
            (assign, ":troop_faction", "fac_kingdom_10"),
          (else_try),
            (this_or_next|is_between, ":active_npc", "trp_draugr_1", "trp_dullahan"),
            (this_or_next|eq, ":active_npc", "trp_lich_3"),
            (eq, ":troop_faction", "fac_scotland"), 
            (assign, ":troop_faction", "fac_kingdoms_end"),
          (else_try),
            (this_or_next|eq, ":troop_faction", "fac_swiss"),
            (this_or_next|eq, ":troop_faction", "fac_commoners"),
            (is_between, ":troop_faction", "fac_culture_1", "fac_teutonic_knights"),
            (assign, ":troop_faction", "fac_khergits"),
          (else_try),
            (is_between, ":active_npc", "trp_looter", "trp_caravan_master"),
            (assign, ":troop_faction", "fac_robber_knights"),
          (else_try),
            (troop_get_slot, ":cost_troop", ":active_npc", slot_troop_upgrade_1),
            (gt, ":cost_troop", 0),
            (assign, ":troop_faction", "fac_manhunters"),
          (else_try),
            (store_faction_of_troop, ":old_faction", ":active_npc"),
            (is_between, ":old_faction", commom_kingdoms_begin, commom_kingdoms_end),
            (assign, ":troop_faction", -1),
          (try_end),
          (eq, ":troop_faction", ":faction_no"),
          (val_add, ":num_fit_lords", 1),
        (try_end),
        (assign, "$temp_3", ":num_fit_lords"),
        
        (assign, ":x_offset", 150),
        (assign, ":y_offset", 200),
        (store_mod, ":mod_value", ":num_fit_lords", 5),
        (try_begin),
          (eq, ":mod_value", 0),
          (assign, ":mod_value", 4),
        (try_end),
        (store_mul, ":cur_x", ":mod_value", ":x_offset"),
        
        (val_sub, ":cur_x", ":x_offset"),
        (val_add, ":cur_x", 115),
        (assign, ":cur_y", 0),

        (try_for_range_backwards, ":active_npc", soldiers_begin, soldiers_end),
          #(store_sub, ":num_lords", ":active_npc", active_npcs_begin),
          (assign,":num_lords",":active_npc"),
          
          (neg|troop_is_hero, ":active_npc"),
          (store_faction_of_troop, ":troop_faction", ":active_npc"),
          (try_begin),
            (this_or_next|eq, ":troop_faction", "fac_forest_ranger"), 
            (eq, ":troop_faction", "fac_elf"), 
            (assign, ":troop_faction", "fac_kingdom_1"),
          (else_try),
            (eq, ":troop_faction", "fac_orc"), 
            (assign, ":troop_faction", "fac_kingdom_3"),
          (else_try),
            (eq, ":troop_faction", "fac_dwarf"), 
            (assign, ":troop_faction", "fac_kingdom_4"),
          (else_try),
            (eq, ":troop_faction", "fac_undeads_2"), 
            (assign, ":troop_faction", "fac_kingdom_5"),
          (else_try),
            (this_or_next|eq, ":troop_faction", "fac_demon_hunters"), 
            (this_or_next|eq, ":troop_faction", "fac_hospitalier_knights"), 
            (this_or_next|is_between, ":active_npc", "trp_monk", "trp_manhunter"),
            (is_between, ":active_npc", "trp_sissofbattle", "trp_titan_0"),
            (assign, ":troop_faction", "fac_kingdom_7"),
          (else_try),
            (eq, ":troop_faction", "fac_demon"), 
            (assign, ":troop_faction", "fac_kingdom_8"),
          (else_try),
            (eq, ":troop_faction", "fac_dark_knights"), 
            (assign, ":troop_faction", "fac_kingdom_9"),
          (else_try),
            (eq, ":troop_faction", "fac_beast"), 
            (assign, ":troop_faction", "fac_kingdom_10"),
          (else_try),
            (this_or_next|is_between, ":active_npc", "trp_draugr_1", "trp_dullahan"),
            (this_or_next|eq, ":active_npc", "trp_lich_3"),
            (eq, ":troop_faction", "fac_scotland"), 
            (assign, ":troop_faction", "fac_kingdoms_end"),
          (else_try),
            (this_or_next|eq, ":troop_faction", "fac_swiss"),
            (this_or_next|eq, ":troop_faction", "fac_commoners"),
            (is_between, ":troop_faction", "fac_culture_1", "fac_teutonic_knights"),
            (assign, ":troop_faction", "fac_khergits"),
          (else_try),
            (is_between, ":active_npc", "trp_looter", "trp_caravan_master"),
            (assign, ":troop_faction", "fac_robber_knights"),
          (else_try),
            (troop_get_slot, ":cost_troop", ":active_npc", slot_troop_upgrade_1),
            (gt, ":cost_troop", 0),
            (assign, ":troop_faction", "fac_manhunters"),
          (else_try),
            (store_faction_of_troop, ":old_faction", ":active_npc"),
            (is_between, ":old_faction", commom_kingdoms_begin, commom_kingdoms_end),
            (assign, ":troop_faction", -1),
          (try_end),
          
          (eq, ":troop_faction", ":faction_no"),
          (call_script, "script_prsnt_upgrade_tree_troop_and_name", ":num_lords", ":active_npc", ":cur_x", ":cur_y"),
          (val_sub, ":cur_x", ":x_offset"),
          (try_begin),
            (eq, ":cur_x", -35),
            (assign, ":cur_x", 715),
            (val_add, ":cur_y", ":y_offset"),
          (try_end),
        (try_end),
                
        (set_container_overlay, -1),
        
        ###### mouse fix pos system #######
        # (call_script, "script_mouse_fix_pos_ready"),
        ###### mouse fix pos system #######
      ]),

    # (ti_on_presentation_run,
      # [
        ### mouse fix pos system #######
        # (call_script, "script_mouse_fix_pos_run"),
        ### mouse fix pos system #######
    # ]),

    (ti_on_presentation_event_state_change,
      [
        (store_trigger_param_1, ":object"),
        (store_trigger_param_2, ":value"),

        (assign,":op",0),
        (try_begin),
          (eq, ":object", "$g_presentation_obj_1"),
          (store_sub, "$g_prsnt_param_2", 11, ":value"),
          (assign,":op",1),
          (start_presentation, "prsnt_upgrade_trees_fantasy"),
        (else_try),
          (eq, ":object", "$g_presentation_obj_5"),
          (presentation_set_duration, 0),
        (try_end),
        (store_add, ":faction_no", "fac_kingdom_1", "$g_prsnt_param_2"),

        (eq,":op",0),
        (try_for_range, ":slot_no", soldiers_begin, soldiers_end),
          (neg|troop_is_hero, ":slot_no"),
          (store_faction_of_troop, ":troop_faction", ":slot_no"),
          (try_begin),
            (this_or_next|eq, ":troop_faction", "fac_forest_ranger"), 
            (eq, ":troop_faction", "fac_elf"), 
            (assign, ":troop_faction", "fac_kingdom_1"),
          (else_try),
            (eq, ":troop_faction", "fac_orc"), 
            (assign, ":troop_faction", "fac_kingdom_3"),
          (else_try),
            (eq, ":troop_faction", "fac_dwarf"), 
            (assign, ":troop_faction", "fac_kingdom_4"),
          (else_try),
            (eq, ":troop_faction", "fac_undeads_2"), 
            (assign, ":troop_faction", "fac_kingdom_5"),
          (else_try),
            (this_or_next|eq, ":troop_faction", "fac_demon_hunters"), 
            (this_or_next|eq, ":troop_faction", "fac_hospitalier_knights"), 
            (this_or_next|is_between, ":slot_no", "trp_monk", "trp_manhunter"),
            (is_between, ":slot_no", "trp_sissofbattle", "trp_titan_0"),
            (assign, ":troop_faction", "fac_kingdom_7"),
          (else_try),
            (eq, ":troop_faction", "fac_demon"), 
            (assign, ":troop_faction", "fac_kingdom_8"),
          (else_try),
            (eq, ":troop_faction", "fac_dark_knights"), 
            (assign, ":troop_faction", "fac_kingdom_9"),
          (else_try),
            (eq, ":troop_faction", "fac_beast"), 
            (assign, ":troop_faction", "fac_kingdom_10"),
          (else_try),
            (this_or_next|is_between, ":slot_no", "trp_draugr_1", "trp_dullahan"),
            (this_or_next|eq, ":slot_no", "trp_lich_3"),
            (eq, ":troop_faction", "fac_scotland"), 
            (assign, ":troop_faction", "fac_kingdoms_end"),
          (else_try),
            (this_or_next|eq, ":troop_faction", "fac_swiss"),
            (this_or_next|eq, ":troop_faction", "fac_commoners"),
            (is_between, ":troop_faction", "fac_culture_1", "fac_teutonic_knights"),
            (assign, ":troop_faction", "fac_khergits"),
          (else_try),
            (is_between, ":slot_no", "trp_looter", "trp_caravan_master"),
            (assign, ":troop_faction", "fac_robber_knights"),
          (else_try),
            (troop_get_slot, ":cost_troop", ":slot_no", slot_troop_upgrade_1),
            (gt, ":cost_troop", 0),
            (assign, ":troop_faction", "fac_manhunters"),
          (else_try),
            (store_faction_of_troop, ":old_faction", ":slot_no"),
            (is_between, ":old_faction", commom_kingdoms_begin, commom_kingdoms_end),
            (assign, ":troop_faction", -1),
          (try_end),
          (eq, ":troop_faction", ":faction_no"),
          (troop_slot_eq, "trp_temp_array_a", ":slot_no", ":object"),
          (troop_get_slot, ":selected_troop", "trp_temp_array_b", ":slot_no"),
          (assign, "$g_prsnt_param_1", ":selected_troop"),
          (assign, "$g_presentation_next_presentation", "prsnt_upgrade_trees_fantasy"),
          (start_presentation, "prsnt_troop_note"),
        (try_end),
        
      ]),
  ]),

  ("upgrade_trees_special", 0, mesh_load_window, [
    (ti_on_presentation_load,
      [
        (presentation_set_duration, 999999),
        (set_fixed_point_multiplier, 1000),

        ## next presentation
        (assign, "$g_presentation_next_presentation", -1),
        
        ## combo_button
        (create_combo_button_overlay, "$g_presentation_obj_1"),
        (position_set_x, pos1, 500),
        (position_set_y, pos1, 690),
        (overlay_set_position, "$g_presentation_obj_1", pos1),

        
        ## tips
        (create_text_overlay, reg1, "@Click the avatars to view details of them", tf_vertical_align_center),
        (position_set_x, pos1, 800),
        (position_set_y, pos1, 800),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 650),
        (position_set_y, pos1, 700),
        (overlay_set_position, reg1, pos1),
        
        ## back
        (create_game_button_overlay, "$g_presentation_obj_5", "@Done"),
        (position_set_x, pos1, 900),
        (position_set_y, pos1, 25),
        (overlay_set_position, "$g_presentation_obj_5", pos1),

        (str_clear, s0),
        (create_text_overlay, "$g_presentation_obj_6", s0, tf_scrollable),
        (position_set_x, pos1, 15),
        (position_set_y, pos1, 80),
        (overlay_set_position, "$g_presentation_obj_6", pos1),
        (position_set_x, pos1, 950),
        (position_set_y, pos1, 600),
        (overlay_set_area_size, "$g_presentation_obj_6", pos1),
        (set_container_overlay, "$g_presentation_obj_6"),
                
        (assign, "$temp_3", 0),

        (assign, ":num_fit_lords", 0),
        (try_for_range, ":active_npc", soldiers_begin, soldiers_end),
          (troop_get_slot, ":cost_troop", ":active_npc", slot_troop_upgrade_1),
          (gt, ":cost_troop", 0),
          
          (val_add, ":num_fit_lords", 1),
        (try_end),
        (assign, "$temp_3", ":num_fit_lords"),
        
        (assign, ":x_offset", 150),
        (assign, ":y_offset", 200),
        (store_mod, ":mod_value", ":num_fit_lords", 5),
        (try_begin),
          (eq, ":mod_value", 0),
          (assign, ":mod_value", 4),
        (try_end),
        (store_mul, ":cur_x", ":mod_value", ":x_offset"),
        
        (val_sub, ":cur_x", ":x_offset"),
        (val_add, ":cur_x", 115),
        (assign, ":cur_y", 0),

        (try_for_range_backwards, ":active_npc", soldiers_begin, soldiers_end),
          #(store_sub, ":num_lords", ":active_npc", active_npcs_begin),
          (assign,":num_lords",":active_npc"),
          (troop_get_slot, ":cost_troop", ":active_npc", slot_troop_upgrade_1),
          (gt, ":cost_troop", 0),
          
          (call_script, "script_prsnt_upgrade_tree_troop_and_name_special", ":num_lords", ":active_npc", ":cur_x", ":cur_y"),
          (val_sub, ":cur_x", ":x_offset"),
          (try_begin),
            (eq, ":cur_x", -35),
            (assign, ":cur_x", 715),
            (val_add, ":cur_y", ":y_offset"),
          (try_end),
        (try_end),
                
        (set_container_overlay, -1),
        
        ###### mouse fix pos system #######
        # (call_script, "script_mouse_fix_pos_ready"),
        ###### mouse fix pos system #######
      ]),

    # (ti_on_presentation_run,
      # [
        ### mouse fix pos system #######
        # (call_script, "script_mouse_fix_pos_run"),
        ### mouse fix pos system #######
    # ]),

    (ti_on_presentation_event_state_change,
      [
        (store_trigger_param_1, ":object"),
        #(store_trigger_param_2, ":value"),

        (try_begin),
          (eq, ":object", "$g_presentation_obj_5"),
          (presentation_set_duration, 0),
        (try_end),
        
      ]),
  ]),

  ("upgrade_trees_heroes", 0, mesh_load_window, [
    (ti_on_presentation_load,
      [
        (presentation_set_duration, 999999),
        (set_fixed_point_multiplier, 1000),

        ## next presentation
        (assign, "$g_presentation_next_presentation", -1),
        
        ## combo_button
        (create_combo_button_overlay, "$g_presentation_obj_1"),
        (position_set_x, pos1, 500),
        (position_set_y, pos1, 690),
        (overlay_set_position, "$g_presentation_obj_1", pos1),
        # factions
        (try_for_range_backwards, ":i_upgrade_tree", 0, 18),
          (store_add, ":faction_no", ":i_upgrade_tree", kingdoms_begin),
          ## faction name
          (try_begin),
            (eq, ":faction_no", "fac_khergits"),
            (str_store_string, s0, "@Adventurer"),
          (else_try),
            (eq, ":faction_no", "fac_robber_knights"),
            (str_store_string, s0, "@Others"),
          (else_try),
            (eq, ":faction_no", "fac_kingdoms_end"),
            (str_store_faction_name, s0, "fac_player_supporters_faction"),
          (else_try),
            (is_between, ":faction_no", kingdoms_begin, kingdoms_end),
            (str_store_faction_name, s0, ":faction_no"),
          (try_end),
          (overlay_add_item, "$g_presentation_obj_1", s0),
        (try_end),
        (store_sub, ":presentation_obj_val", 17, "$g_prsnt_param_2"),
        (overlay_set_val, "$g_presentation_obj_1", ":presentation_obj_val"),
        (store_add, ":faction_no", kingdoms_begin, "$g_prsnt_param_2"),
        
        
        
        
        ## tips
        (create_text_overlay, reg1, "@Click the center button to toggle faction^Click the avatars to view details of them", tf_vertical_align_center),
        (position_set_x, pos1, 800),
        (position_set_y, pos1, 800),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 650),
        (position_set_y, pos1, 700),
        (overlay_set_position, reg1, pos1),
        
        ## back
        (create_game_button_overlay, "$g_presentation_obj_5", "@Done"),
        (position_set_x, pos1, 900),
        (position_set_y, pos1, 25),
        (overlay_set_position, "$g_presentation_obj_5", pos1),
        

        (str_clear, s0),
        (create_text_overlay, "$g_presentation_obj_6", s0, tf_scrollable),
        (position_set_x, pos1, 15),
        (position_set_y, pos1, 80),
        (overlay_set_position, "$g_presentation_obj_6", pos1),
        (position_set_x, pos1, 950),
        (position_set_y, pos1, 600),
        (overlay_set_area_size, "$g_presentation_obj_6", pos1),
        (set_container_overlay, "$g_presentation_obj_6"),
                
        (assign, "$temp_3", 0),

        (assign, ":num_fit_lords", 0),
        (try_for_range, ":active_npc", active_npcs_begin, active_npcs_end),
        
          (this_or_next|troop_slot_eq, ":active_npc", slot_troop_occupation, slto_player_companion),
          (this_or_next|troop_slot_eq, ":active_npc", slot_troop_occupation, slto_kingdom_hero),
          (this_or_next|troop_slot_eq, ":active_npc", slot_troop_occupation, slto_adventurer),
          (troop_slot_eq, ":active_npc", slot_troop_occupation, 0),
          
          (store_faction_of_troop, ":troop_faction", ":active_npc"),
          (try_begin),
            (eq, ":troop_faction", "fac_player_supporters_faction"),
            (assign, ":troop_faction", "fac_kingdoms_end"),
          (else_try),
            (this_or_next|troop_slot_eq, ":active_npc", slot_troop_occupation, slto_player_companion),
            (this_or_next|is_between, ":active_npc", companions_begin, companions_end),
            (is_between, ":active_npc", adventurer_troops_begin, adventurer_troops_end),
            (assign, ":troop_faction", "fac_robber_knights"),
          (else_try),
            (troop_slot_eq, ":active_npc", slot_troop_occupation, slto_adventurer),
            (assign, ":troop_faction", "fac_khergits"),
          (try_end),
          (eq, ":troop_faction", ":faction_no"),
          (val_add, ":num_fit_lords", 1),
        (try_end),
        (assign, "$temp_3", ":num_fit_lords"),
        
        (assign, ":x_offset", 150),
        (assign, ":y_offset", 200),
        (store_mod, ":mod_value", ":num_fit_lords", 5),
        (try_begin),
          (eq, ":mod_value", 0),
          (assign, ":mod_value", 4),
        (try_end),
        (store_mul, ":cur_x", ":mod_value", ":x_offset"),
        
        (val_sub, ":cur_x", ":x_offset"),
        (val_add, ":cur_x", 115),
        (assign, ":cur_y", 0),
        (assign, "$g_cur_slot_no", 0),
        (try_for_range_backwards, ":active_npc", active_npcs_begin, active_npcs_end),
          #(store_sub, ":num_lords", ":active_npc", active_npcs_begin),
          #(assign,":num_lords",":active_npc"),
          
          (this_or_next|troop_slot_eq, ":active_npc", slot_troop_occupation, slto_player_companion),
          (this_or_next|troop_slot_eq, ":active_npc", slot_troop_occupation, slto_kingdom_hero),
          (this_or_next|troop_slot_eq, ":active_npc", slot_troop_occupation, slto_adventurer),
          (troop_slot_eq, ":active_npc", slot_troop_occupation, 0),
          
          (store_faction_of_troop, ":troop_faction", ":active_npc"),
          (try_begin),
            (eq, ":troop_faction", "fac_player_supporters_faction"),
            (assign, ":troop_faction", "fac_kingdoms_end"),
          (else_try),
            (this_or_next|troop_slot_eq, ":active_npc", slot_troop_occupation, slto_player_companion),
            (this_or_next|is_between, ":active_npc", companions_begin, companions_end),
            (is_between, ":active_npc", adventurer_troops_begin, adventurer_troops_end),
            (assign, ":troop_faction", "fac_robber_knights"),
          (else_try),
            (troop_slot_eq, ":active_npc", slot_troop_occupation, slto_adventurer),
            (assign, ":troop_faction", "fac_khergits"),
          (try_end),
          
          (eq, ":troop_faction", ":faction_no"),
          (call_script, "script_prsnt_upgrade_tree_troop_and_name", "$g_cur_slot_no", ":active_npc", ":cur_x", ":cur_y"),
          (val_add, "$g_cur_slot_no", 1),
          (val_sub, ":cur_x", ":x_offset"),
          (try_begin),
            (eq, ":cur_x", -35),
            (assign, ":cur_x", 715),
            (val_add, ":cur_y", ":y_offset"),
          (try_end),
        (try_end),

        (set_container_overlay, -1),
        
        ###### mouse fix pos system #######
        # (call_script, "script_mouse_fix_pos_ready"),
        ###### mouse fix pos system #######
      ]),

    # (ti_on_presentation_run,
      # [
        ### mouse fix pos system #######
        # (call_script, "script_mouse_fix_pos_run"),
        ### mouse fix pos system #######
    # ]),

    (ti_on_presentation_event_state_change,
      [
        (store_trigger_param_1, ":object"),
        (store_trigger_param_2, ":value"),

		(assign,":op",0),
        (try_begin),
          (eq, ":object", "$g_presentation_obj_1"),
          (store_sub, "$g_prsnt_param_2", 17, ":value"),
		  (assign,":op",1),
          (start_presentation, "prsnt_upgrade_trees_heroes"),
        (else_try),
          (eq, ":object", "$g_presentation_obj_5"),
          (presentation_set_duration, 0),
        (try_end),

        (eq,":op",0),
        (try_for_range, ":slot_no", 0, "$g_cur_slot_no"),
          (troop_slot_eq, "trp_temp_array_a", ":slot_no", ":object"),
          (troop_get_slot, ":selected_troop", "trp_temp_array_b", ":slot_no"),
          (assign, "$g_prsnt_param_1", ":selected_troop"),
          (assign, "$g_presentation_next_presentation", "prsnt_upgrade_trees_heroes"),
          (start_presentation, "prsnt_troop_note"),
        (try_end),
        
        
      ]),
  ]),

  ("upgrade_trees_heroes_2", 0, mesh_load_window, [
    (ti_on_presentation_load,
      [
        (presentation_set_duration, 999999),
        (set_fixed_point_multiplier, 1000),

        ## next presentation
        (assign, "$g_presentation_next_presentation", -1),
        
        ## combo_button
        (create_combo_button_overlay, "$g_presentation_obj_1"),
        (position_set_x, pos1, 500),
        (position_set_y, pos1, 690),
        (overlay_set_position, "$g_presentation_obj_1", pos1),
        # factions
        (try_for_range_backwards, ":i_upgrade_tree", 0, 18),
          (store_add, ":faction_no", ":i_upgrade_tree", kingdoms_begin),
          ## faction name
          (try_begin),
            (eq, ":faction_no", "fac_khergits"),
            (str_store_string, s0, "@Adventurer"),
          (else_try),
            (eq, ":faction_no", "fac_robber_knights"),
            (str_store_string, s0, "@Others"),
          (else_try),
            (eq, ":faction_no", "fac_kingdoms_end"),
            (str_store_faction_name, s0, "fac_player_supporters_faction"),
          (else_try),
            (is_between, ":faction_no", kingdoms_begin, kingdoms_end),
            (str_store_faction_name, s0, ":faction_no"),
          (try_end),
          (overlay_add_item, "$g_presentation_obj_1", s0),
        (try_end),
        (store_sub, ":presentation_obj_val", 17, "$g_prsnt_param_2"),
        (overlay_set_val, "$g_presentation_obj_1", ":presentation_obj_val"),
        (store_add, ":faction_no", kingdoms_begin, "$g_prsnt_param_2"),
        
        
        
        
        ## tips
        (create_text_overlay, reg1, "@Click the center button to toggle faction^Click the avatars to view details of them", tf_vertical_align_center),
        (position_set_x, pos1, 800),
        (position_set_y, pos1, 800),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 650),
        (position_set_y, pos1, 700),
        (overlay_set_position, reg1, pos1),
        
        ## back
        (create_game_button_overlay, "$g_presentation_obj_5", "@Done"),
        (position_set_x, pos1, 900),
        (position_set_y, pos1, 25),
        (overlay_set_position, "$g_presentation_obj_5", pos1),
        

        (str_clear, s0),
        (create_text_overlay, "$g_presentation_obj_6", s0, tf_scrollable),
        (position_set_x, pos1, 15),
        (position_set_y, pos1, 80),
        (overlay_set_position, "$g_presentation_obj_6", pos1),
        (position_set_x, pos1, 950),
        (position_set_y, pos1, 600),
        (overlay_set_area_size, "$g_presentation_obj_6", pos1),
        (set_container_overlay, "$g_presentation_obj_6"),
                
        (assign, "$temp_3", 0),

        (assign, ":num_fit_lords", 0),
        (try_for_range, ":active_npc", active_npcs_begin, active_npcs_end),
        
          (this_or_next|troop_slot_eq, ":active_npc", slot_troop_occupation, slto_player_companion),
          (this_or_next|troop_slot_eq, ":active_npc", slot_troop_occupation, slto_kingdom_hero),
          (this_or_next|troop_slot_eq, ":active_npc", slot_troop_occupation, slto_adventurer),
          (troop_slot_eq, ":active_npc", slot_troop_occupation, 0),
          
          (store_faction_of_troop, ":troop_faction", ":active_npc"),
          (try_begin),
            (eq, ":troop_faction", "fac_player_supporters_faction"),
            (assign, ":troop_faction", "fac_kingdoms_end"),
          (else_try),
            (this_or_next|troop_slot_eq, ":active_npc", slot_troop_occupation, slto_player_companion),
            (this_or_next|is_between, ":active_npc", companions_begin, companions_end),
            (is_between, ":active_npc", adventurer_troops_begin, adventurer_troops_end),
            (assign, ":troop_faction", "fac_robber_knights"),
          (else_try),
            (troop_slot_eq, ":active_npc", slot_troop_occupation, slto_adventurer),
            (assign, ":troop_faction", "fac_khergits"),
          (try_end),
          (eq, ":troop_faction", ":faction_no"),
          (val_add, ":num_fit_lords", 1),
        (try_end),
        (assign, "$temp_3", ":num_fit_lords"),
        
        (assign, ":x_offset", 150),
        (assign, ":y_offset", 200),
        (store_mod, ":mod_value", ":num_fit_lords", 5),
        (try_begin),
          (eq, ":mod_value", 0),
          (assign, ":mod_value", 4),
        (try_end),
        (store_mul, ":cur_x", ":mod_value", ":x_offset"),
        
        (val_sub, ":cur_x", ":x_offset"),
        (val_add, ":cur_x", 115),
        (assign, ":cur_y", 0),
        (assign, "$g_cur_slot_no", 0),
        (try_for_range_backwards, ":active_npc", active_npcs_begin, active_npcs_end),
          #(store_sub, ":num_lords", ":active_npc", active_npcs_begin),
          #(assign,":num_lords",":active_npc"),
          
          (this_or_next|troop_slot_eq, ":active_npc", slot_troop_occupation, slto_player_companion),
          (this_or_next|troop_slot_eq, ":active_npc", slot_troop_occupation, slto_kingdom_hero),
          (this_or_next|troop_slot_eq, ":active_npc", slot_troop_occupation, slto_adventurer),
          (troop_slot_eq, ":active_npc", slot_troop_occupation, 0),
          
          (store_faction_of_troop, ":troop_faction", ":active_npc"),
          (try_begin),
            (eq, ":troop_faction", "fac_player_supporters_faction"),
            (assign, ":troop_faction", "fac_kingdoms_end"),
          (else_try),
            (this_or_next|troop_slot_eq, ":active_npc", slot_troop_occupation, slto_player_companion),
            (this_or_next|is_between, ":active_npc", companions_begin, companions_end),
            (is_between, ":active_npc", adventurer_troops_begin, adventurer_troops_end),
            (assign, ":troop_faction", "fac_robber_knights"),
          (else_try),
            (troop_slot_eq, ":active_npc", slot_troop_occupation, slto_adventurer),
            (assign, ":troop_faction", "fac_khergits"),
          (try_end),
          
          (eq, ":troop_faction", ":faction_no"),
          (call_script, "script_prsnt_upgrade_tree_troop_and_name", "$g_cur_slot_no", ":active_npc", ":cur_x", ":cur_y"),
          (val_add, "$g_cur_slot_no", 1),
          (val_sub, ":cur_x", ":x_offset"),
          (try_begin),
            (eq, ":cur_x", -35),
            (assign, ":cur_x", 715),
            (val_add, ":cur_y", ":y_offset"),
          (try_end),
        (try_end),

        (set_container_overlay, -1),
        
        ###### mouse fix pos system #######
        # (call_script, "script_mouse_fix_pos_ready"),
        ###### mouse fix pos system #######
      ]),

    # (ti_on_presentation_run,
      # [
        ### mouse fix pos system #######
        # (call_script, "script_mouse_fix_pos_run"),
        ### mouse fix pos system #######
    # ]),

    (ti_on_presentation_event_state_change,
      [
        (store_trigger_param_1, ":object"),
        (store_trigger_param_2, ":value"),

		(assign,":op",0),
        (try_begin),
          (eq, ":object", "$g_presentation_obj_1"),
          (store_sub, "$g_prsnt_param_2", 17, ":value"),
		  (assign,":op",1),
          (start_presentation, "prsnt_upgrade_trees_heroes_2"),
        (else_try),
          (eq, ":object", "$g_presentation_obj_5"),
          (presentation_set_duration, 0),
        (try_end),

        (eq,":op",0),
        (try_for_range, ":slot_no", 0, "$g_cur_slot_no"),
          (troop_slot_eq, "trp_temp_array_a", ":slot_no", ":object"),
          (troop_get_slot, ":selected_troop", "trp_temp_array_b", ":slot_no"),
          (assign, "$g_prsnt_param_1", ":selected_troop"),
          (assign, "$g_presentation_next_presentation", "prsnt_upgrade_trees_heroes_2"),
          (start_presentation, "prsnt_troop_note"),
        (try_end),
        
      ]),
  ]),

  ("faction_troop_trees", 0, 0, [
    (ti_on_presentation_load,
      [
        (presentation_set_duration, 999999),
        (set_fixed_point_multiplier, 1000),
        
        (assign, ":selected_page", "$g_prsnt_param_2"),
        
        ## next presentation
        (assign, "$g_presentation_next_presentation", -1),
        
        (create_mesh_overlay, reg1, "mesh_load_window"),
        (position_set_x, pos1, 0),
        (position_set_y, pos1, 0),
        (overlay_set_position, reg1, pos1),
        
        ## combo_button
        (create_combo_button_overlay, "$g_presentation_obj_admin_panel_1"),
        (position_set_x, pos1, 500),
        (position_set_y, pos1, 690),
        (overlay_set_position, "$g_presentation_obj_admin_panel_1", pos1),
        # factions
        (store_sub, ":num_factions", commom_kingdoms_end, commom_kingdoms_begin),
        (store_add, ":num_pages", ":num_factions", 3),
        
        ## page names, from bottom to top
        (overlay_add_item, "$g_presentation_obj_admin_panel_1", "@Mercenaries"),
        (overlay_add_item, "$g_presentation_obj_admin_panel_1", "@Outlaws"),
        (overlay_add_item, "$g_presentation_obj_admin_panel_1", "@Others"),
        (try_for_range_backwards, ":page_no", 0, ":num_factions"),
          (store_add, ":faction_no", ":page_no", commom_kingdoms_begin),
          (str_store_faction_name, s0, ":faction_no"),
          (overlay_add_item, "$g_presentation_obj_admin_panel_1", s0),
        (try_end),
        (store_sub, ":presentation_obj_val", ":num_pages", ":selected_page"),
        (val_sub, ":presentation_obj_val", 1),
        (overlay_set_val, "$g_presentation_obj_admin_panel_1", ":presentation_obj_val"),
        

        
        ## back
        (create_game_button_overlay, "$g_presentation_obj_admin_panel_2", "@Close"),
        (position_set_x, pos1, 900),
        (position_set_y, pos1, 685),
        (overlay_set_position, "$g_presentation_obj_admin_panel_2", pos1),
        
        ## tips
        (create_text_overlay, reg1, "@Click the center button to toggle faction^Click the avatars to view details of them", tf_vertical_align_center),
        (position_set_x, pos1, 800),
        (position_set_y, pos1, 800),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 30),
        (position_set_y, pos1, 705),
        (overlay_set_position, reg1, pos1),
        

        # detect_total_max_tier, calculate offset_x
        (assign, ":total_max_tier", 1),
        
        (try_for_range, ":cur_troop", soldiers_begin, customizable_troops_end),
          (neg|is_between, ":cur_troop", "trp_mercenaries_end", "trp_human_magic_4"),
          (this_or_next|is_between, ":cur_troop", soldiers_begin, soldiers_end),
          (is_between, ":cur_troop", customizable_troops_begin, customizable_troops_end),
          (neg|troop_is_hero, ":cur_troop"),
          # can upgrade
          (troop_get_upgrade_troop, ":upgrade_troop", ":cur_troop", 0),
          (gt, ":upgrade_troop", 0), 
          # page_no_for_cur_troop
          (call_script, "script_get_page_no_of_troop_tree_for_troop_on", ":cur_troop"),
          (assign, ":page_no_for_cur_troop", reg0),
          # on current page_no
          (eq, ":page_no_for_cur_troop", ":selected_page"),
          (assign, reg0, 1), # reg0: init max_tier to 1
          (call_script, "script_troop_tree_recursive_detect_max_tier", ":cur_troop", 1),
          (assign, ":cur_max_tier", reg0),
          (try_begin),
            (gt, ":cur_max_tier", ":total_max_tier"),
            (assign, ":total_max_tier", ":cur_max_tier"),
          (try_end),
        (try_end),
        (val_sub, ":total_max_tier", 1),
        (val_max, ":total_max_tier", 1),
        (store_div, ":offset_x", 850, ":total_max_tier"),
        (val_min, ":offset_x", 150),
        
        (str_clear, s0),
        (create_text_overlay, reg1, s0, tf_scrollable),
        (position_set_x, pos1, 15),
        (position_set_y, pos1, 15),
        (overlay_set_position, reg1, pos1),
        (position_set_x, pos1, 950),
        (position_set_y, pos1, 660),
        (overlay_set_area_size, reg1, pos1),
        (set_container_overlay, reg1),
        
        (assign, "$g_cur_slot_no", 0),
        (assign, reg2, 100),
        # find all root troops of selected faction
        (try_for_range, ":cur_troop", soldiers_begin, customizable_troops_end),
          (neg|is_between, ":cur_troop", "trp_mercenaries_end", "trp_human_magic_4"),
          (this_or_next|is_between, ":cur_troop", soldiers_begin, soldiers_end),
          (is_between, ":cur_troop", customizable_troops_begin, customizable_troops_end),
          (neg|troop_is_hero, ":cur_troop"),
          # can upgrade
          (troop_get_upgrade_troop, ":upgrade_troop", ":cur_troop", 0),
          (gt, ":upgrade_troop", 0), 
          # page_no_for_cur_troop
          (call_script, "script_get_page_no_of_troop_tree_for_troop_on", ":cur_troop"),
          (assign, ":page_no_for_cur_troop", reg0),
          # on current page_no
          (eq, ":page_no_for_cur_troop", ":selected_page"),
          # can't be upgraded from other troops of the same page
          (assign, ":is_root_troop", 1),
          (assign, ":end_cond", customizable_troops_end),
          (try_for_range, ":loop_troop", soldiers_begin, ":end_cond"),
            (neg|is_between, ":loop_troop", "trp_mercenaries_end", "trp_human_magic_4"),
            (this_or_next|is_between, ":loop_troop", soldiers_begin, soldiers_end),
            (is_between, ":loop_troop", customizable_troops_begin, customizable_troops_end),
            (neg|troop_is_hero, ":loop_troop"),
            # page_no_for_loop_troop
            (call_script, "script_get_page_no_of_troop_tree_for_troop_on", ":loop_troop"),
            (assign, ":page_no_for_loop_troop", reg0),
            # on current page_no
            (eq,  ":page_no_for_loop_troop", ":selected_page"),
            (troop_get_upgrade_troop, ":upgrade_troop_1", ":loop_troop", 0),
            (troop_get_upgrade_troop, ":upgrade_troop_2", ":loop_troop", 1),
            (this_or_next|eq, ":upgrade_troop_1", ":cur_troop"),
            (eq, ":upgrade_troop_2", ":cur_troop"),
            (assign, ":is_root_troop", 0),
            (assign, ":end_cond", 0), #break
          (try_end),
          (eq, ":is_root_troop", 1), # draw troop tree of cur root_troop
          (call_script, "script_troop_tree_recursive_backtracking", ":cur_troop", 50, reg2, ":offset_x"),
          (val_add, reg2, 160),
        (try_end),
        
        (set_container_overlay, -1),
        
        # ####### mouse fix pos system #######
        # (call_script, "script_mouse_fix_pos_ready"),
        # ####### mouse fix pos system #######
      ]),

    # (ti_on_presentation_run,
      # [
        # ####### mouse fix pos system #######
        # (call_script, "script_mouse_fix_pos_run"),
        # ####### mouse fix pos system #######
    # ]),

    (ti_on_presentation_event_state_change,
      [
        (store_trigger_param_1, ":object"),
        (store_trigger_param_2, ":value"),
        
        (try_for_range, ":slot_no", 0, "$g_cur_slot_no"),
          (troop_slot_eq, "trp_temp_array_a", ":slot_no", ":object"),
          (troop_get_slot, ":selected_troop", "trp_temp_array_b", ":slot_no"),
          (assign, "$g_prsnt_param_1", ":selected_troop"),
          (assign, "$g_presentation_next_presentation", "prsnt_faction_troop_trees"),
          (start_presentation, "prsnt_troop_note"),
        (try_end),
        
        (try_begin),
          (eq, ":object", "$g_presentation_obj_admin_panel_1"),
          (store_sub, ":num_pages", commom_kingdoms_end, commom_kingdoms_begin),
          (val_add, ":num_pages", 3),
          (store_sub, ":selected_page", ":num_pages", ":value"),
          (val_sub, ":selected_page", 1),
          (assign, "$g_prsnt_param_2", ":selected_page"),
          (start_presentation, "prsnt_faction_troop_trees"),
        (else_try),
          (eq, ":object", "$g_presentation_obj_admin_panel_2"),
          (presentation_set_duration, 0),
        (try_end),
      ]),
  ]),




  ("game_troop_tree",0,0,[
    (ti_on_presentation_load,
      [
        (presentation_set_duration, 999999),
        (set_fixed_point_multiplier, 1000),
        
        (assign, ":troop_no", "$temp_3"),
        
        # next presentation
        (assign, "$g_presentation_next_presentation", -1),
        
        (create_mesh_overlay, reg1, "mesh_load_window"),
        (position_set_x, pos1, 0),
        (position_set_y, pos1, 0),
        (overlay_set_position, reg1, pos1),
        
        ## back
        (create_game_button_overlay, "$g_presentation_obj_1", "@Done"),
        (position_set_x, pos1, 900),
        (position_set_y, pos1, 25),
        (overlay_set_position, "$g_presentation_obj_1", pos1),
        
        ## tips
        (create_text_overlay, reg1, "@Click the avatars to view details of them", tf_center_justify|tf_vertical_align_center),
        (position_set_x, pos1, 500),
        (position_set_y, pos1, 700),
        (overlay_set_position, reg1, pos1),
        
        (str_clear, s0),
        (create_text_overlay, reg1, s0, tf_scrollable),
        (position_set_x, pos1, 15),
        (position_set_y, pos1, 80),
        (overlay_set_position, reg1, pos1),
        (position_set_x, pos1, 950),
        (position_set_y, pos1, 600),
        (overlay_set_area_size, reg1, pos1),
        (set_container_overlay, reg1),
        
        (assign, "$g_cur_slot_no", 0),
        (assign, reg2, 100),
        (call_script, "script_troop_tree_recursive_backtracking", ":troop_no", 50, reg2, 150),
        
        (set_container_overlay, -1),
        
        # ####### mouse fix pos system #######
        # (call_script, "script_mouse_fix_pos_ready"),
        # ####### mouse fix pos system #######
      ]),
      
    # (ti_on_presentation_run,
      # [
        # ####### mouse fix pos system #######
        # (call_script, "script_mouse_fix_pos_run"),
        # ####### mouse fix pos system #######
    # ]),
          
    (ti_on_presentation_event_state_change,
      [
        (store_trigger_param_1, ":object"),
        
        (try_begin),
          (eq, ":object", "$g_presentation_obj_1"),
          (presentation_set_duration, 0),
        (try_end),
        
        (try_for_range, ":slot_no", 0, "$g_cur_slot_no"),
          (troop_slot_eq, "trp_temp_array_a", ":slot_no", ":object"),
          (troop_get_slot, ":selected_troop", "trp_temp_array_b", ":slot_no"),
          (assign, "$g_prsnt_param_1", ":selected_troop"),
          (assign, "$g_presentation_next_presentation", "prsnt_game_troop_tree"),
          (start_presentation, "prsnt_troop_note"),
        (try_end),        
      ]),
    ]),





  ("troop_note", 0, 0, [
    (ti_on_presentation_load,
      [
        (presentation_set_duration, 999999),
        (set_fixed_point_multiplier, 1000),

        (create_mesh_overlay, reg1, "mesh_load_window"),
        (position_set_x, pos1, 0),
        (position_set_y, pos1, 0),
        (overlay_set_position, reg1, pos1),
        
        (assign, ":selected_troop", "$g_prsnt_param_1"),
        
        ## init troop items
        (call_script, "script_copy_inventory", ":selected_troop", "trp_temp_array_a"),
        (try_for_range, ":i_slot", 0, 10),
          (troop_get_inventory_slot, ":item", "trp_temp_array_a", ":i_slot"),
          (troop_get_inventory_slot_modifier, ":cur_imod", "trp_temp_array_a", ":i_slot"),
          (gt, ":item", -1),
          (troop_add_item,"trp_temp_array_a",":item", ":cur_imod"),
          (troop_set_inventory_slot, "trp_temp_array_a", ":i_slot", -1),
        (try_end),

        ## back
        (create_game_button_overlay, "$g_presentation_obj_1", "@Done"),
        (position_set_x, pos1, 900),
        (position_set_y, pos1, 25),
        (overlay_set_position, "$g_presentation_obj_1", pos1),

        ## previous
        (create_game_button_overlay, "$g_presentation_obj_3", "@Previous"),
        (position_set_x, pos1, 540),
        (position_set_y, pos1, 25),
        (overlay_set_position, "$g_presentation_obj_3", pos1),
        ## next
        (create_game_button_overlay, "$g_presentation_obj_4", "@Next"),
        (position_set_x, pos1, 700),
        (position_set_y, pos1, 25),
        (overlay_set_position, "$g_presentation_obj_4", pos1),

        ## troop class
        (create_text_overlay, reg0, "@Class of troop", tf_center_justify|tf_vertical_align_center),
        (position_set_x, pos1, 875),
        (position_set_y, pos1, 340),
        (overlay_set_position, reg0, pos1),
        
        (create_combo_button_overlay, "$g_presentation_obj_5"),
        (position_set_x, pos1, 930),
        (position_set_y, pos1, 300),
        (overlay_set_position, "$g_presentation_obj_5", pos1),
        (position_set_x, pos1, 500),
        (position_set_y, pos1, 600),
        (overlay_set_size, "$g_presentation_obj_5", pos1),
        (try_for_range_backwards, ":class_id", 0, 9),
          (str_store_class_name, s0, ":class_id"),
          (overlay_add_item, "$g_presentation_obj_5", s0),
        (try_end),
        (troop_get_class, ":troop_class", ":selected_troop"),
        (store_sub, ":presentation_obj_val", 8, ":troop_class"),
        (overlay_set_val, "$g_presentation_obj_5", ":presentation_obj_val"),

        ################
        (store_mul, ":cur_troop", ":selected_troop", 2), #with weapons
        (create_mesh_overlay_with_tableau_material, reg0, -1, "tableau_game_party_window", ":cur_troop"),
        (position_set_x, pos1, 750),
        (position_set_y, pos1, 750),
        (overlay_set_size, reg0, pos1),
        (position_set_x, pos1, 765),
        (position_set_y, pos1, 350),
        (overlay_set_position, reg0, pos1),

        (str_store_troop_name, s1, ":selected_troop"),
        (store_character_level, ":troop_level", ":selected_troop"),
        (assign, reg1, ":troop_level"),
        (str_store_string, s1, "@Name: {s1}^Level: {reg1}"),
        (call_script, "script_get_troop_max_hp", ":selected_troop"),
        (str_store_string, s1, "@{s1} HP: {reg0}"),
        (assign, reg1, -1),
        (try_begin), 
          (troop_get_upgrade_troop, ":upgrade_troop_2", ":selected_troop" , 0),
          (gt, ":upgrade_troop_2", 0),
          (call_script, "script_game_get_upgrade_xp", ":selected_troop"),
          (assign, reg1, reg0),
        (try_end),
        (call_script, "script_game_get_troop_wage", ":selected_troop", "p_main_party"),
        (str_store_string, s1, "@{s1}^wage: {reg0} upgrade_xp: {reg1}"),
        (troop_get_slot, ":special", ":selected_troop", slot_troop_special_ability),
        (call_script, "script_get_special_ability_text_to_s2", ":special", 0),
        (str_store_string, s3, "@special: {s2}"),
        (troop_get_slot, ":special", ":selected_troop", slot_troop_special_ability_extra),
        (call_script, "script_get_special_ability_text_to_s2", ":special", 1),
        (str_store_string, s4, "@{s3}^ special2: {s2}"),
        (troop_get_slot, ":special", ":selected_troop", slot_troop_special_ability_passive),
        (call_script, "script_get_special_ability_text_to_s2", ":special", 2),
        (str_store_string, s1, "@{s1}^{s4}^ passive_special: {s2}"),

        (create_text_overlay, reg0, "@{s1}", tf_double_space),
        (position_set_x, pos1, 450),
        (position_set_y, pos1, 500),
        (overlay_set_position, reg0, pos1),

        (store_attribute_level, reg1, ":selected_troop", ca_strength),
        (store_attribute_level, reg2, ":selected_troop", ca_intelligence),
		(str_clear, s3),
        (str_store_string, s3, "@{s3}^STR: {reg1}^INT: {reg2}^"),
        (store_skill_level, reg1, skl_power_strike, ":selected_troop"),
        (store_skill_level, reg2, skl_power_draw, ":selected_troop"),
        (store_skill_level, reg3, skl_precise_shot, ":selected_troop"),
        (store_skill_level, reg4, skl_horse_archery, ":selected_troop"),
        (store_skill_level, reg5, skl_magic_power, ":selected_troop"),
        (store_skill_level, reg6, skl_stealth, ":selected_troop"),
		(store_skill_level, reg7, skl_undead_master, ":selected_troop"),
		(store_skill_level, reg8, skl_necromancy, ":selected_troop"),
		(store_skill_level, reg9, skl_magic_skill, ":selected_troop"),
        (str_store_string, s3, "@{s3}^Power Strike: {reg1}^Power Draw: {reg2}^Power Throw: {reg3}^Horse Archery: {reg4}^^Weapon Proficiencies:"),
        (store_proficiency_level, reg1, ":selected_troop", wpt_one_handed_weapon),
        (store_proficiency_level, reg2, ":selected_troop", wpt_two_handed_weapon),
        (store_proficiency_level, reg3, ":selected_troop", wpt_polearm),
        (str_store_string, s3, "@{s3}^1 Hand Wpns: {reg1}^2 Hand Wpns: {reg2}^Polearms: {reg3}"),
        (create_text_overlay, reg0, "@{s3}", tf_double_space),
        (position_set_x, pos1, 450),
        (position_set_y, pos1, 100),
        (overlay_set_position, reg0, pos1),

        (store_attribute_level, reg1, ":selected_troop", ca_agility),
        (store_attribute_level, reg2, ":selected_troop", ca_charisma),
		(str_clear, s4),
        (str_store_string, s4, "@{s4}^AGI: {reg1}^CHA: {reg2}^"),
        (store_skill_level, reg1, skl_ironflesh, ":selected_troop"),
        (store_skill_level, reg2, skl_physique, ":selected_troop"),
        (store_skill_level, reg3, skl_shield, ":selected_troop"),
        (store_skill_level, reg4, skl_riding, ":selected_troop"),
        (store_skill_level, reg5, skl_magic_defence, ":selected_troop"),
        (store_skill_level, reg6, skl_weapon_master, ":selected_troop"),
		(store_skill_level, reg7, skl_trainer, ":selected_troop"),
		(store_skill_level, reg8, skl_leadership, ":selected_troop"),
        (str_store_string, s4, "@{s4}^Ironflesh: {reg1}^Athletics: {reg2}^Shield: {reg3}^Riding: {reg4}^^"),
        (store_proficiency_level, reg1, ":selected_troop", wpt_archery),
        (store_proficiency_level, reg2, ":selected_troop", wpt_crossbow),
        (store_proficiency_level, reg3, ":selected_troop", wpt_throwing),
        (store_proficiency_level, reg4, ":selected_troop", wpt_firearm),
        (str_store_string, s4, "@{s4}^Archery: {reg1}^Crossbows: {reg2}^Throwing: {reg3}^Firearm: {reg4}"),        
        (create_text_overlay, reg0, "@{s4}", tf_double_space),
        (position_set_x, pos1, 660),
        (position_set_y, pos1, 100),
        (overlay_set_position, reg0, pos1),
        ################

        (str_clear, s0),
        (create_text_overlay, "$g_presentation_obj_2", s0, tf_scrollable),
        (position_set_x, pos1, 50),
        (position_set_y, pos1, 50),
        (overlay_set_position, "$g_presentation_obj_2", pos1),
        (position_set_x, pos1, 350),
        (position_set_y, pos1, 560),
        (overlay_set_area_size, "$g_presentation_obj_2", pos1),
        (set_container_overlay, "$g_presentation_obj_2"),

        (assign, ":pos_x", 0),
        (assign, ":pos_y", 1840),
        (assign, ":slot_no", 10),
        (try_for_range, ":unused_height", 0, 24),
          (try_for_range, ":unused_width", 0, 4),
            (create_mesh_overlay, reg1, "mesh_mp_inventory_choose"),
            (position_set_x, pos1, 640),
            (position_set_y, pos1, 640),
            (overlay_set_size, reg1, pos1),
            (position_set_x, pos1, ":pos_x"),
            (position_set_y, pos1, ":pos_y"),
            (overlay_set_position, reg1, pos1),
            (troop_set_slot, "trp_temp_array_a", ":slot_no", reg1),
            (create_mesh_overlay, reg1, "mesh_inv_slot"),
            (position_set_x, pos1, 800),
            (position_set_y, pos1, 800),
            (overlay_set_size, reg1, pos1),
            (position_set_x, pos1, ":pos_x"),
            (position_set_y, pos1, ":pos_y"),
            (overlay_set_position, reg1, pos1),
            (troop_get_inventory_slot, ":item_no", "trp_temp_array_a", ":slot_no"),
            (try_begin),
              (gt, ":item_no", -1),
              (create_mesh_overlay_with_item_id, reg1, ":item_no"),
              (position_set_x, pos1, 800),
              (position_set_y, pos1, 800),
              (overlay_set_size, reg1, pos1),
              (store_add, ":item_x", ":pos_x", 40),
              (store_add, ":item_y", ":pos_y", 40),
              (position_set_x, pos1, ":item_x"),
              (position_set_y, pos1, ":item_y"),
              (overlay_set_position, reg1, pos1),
              (troop_set_slot, "trp_temp_array_b", ":slot_no", reg1),
            (try_end),
            (val_add, ":pos_x", 80),
            (val_add, ":slot_no", 1),
          (try_end),
          (assign, ":pos_x", 0),
          (val_sub, ":pos_y", 80),
        (try_end),

        (set_container_overlay, -1),

        (create_text_overlay, reg1, "@Equipments: ", tf_vertical_align_center),
        (position_set_x, pos1, 60),
        (position_set_y, pos1, 635),
        (overlay_set_position, reg1, pos1),
        ## items

        ####### mouse fix pos system #######
        #(call_script, "script_mouse_fix_pos_ready"),
        ####### mouse fix pos system #######
      ]),

    #(ti_on_presentation_run,
      #[
        ####### mouse fix pos system #######
        #(call_script, "script_mouse_fix_pos_run"),
        ####### mouse fix pos system #######
    #]),

    (ti_on_presentation_mouse_enter_leave,
      [
      (store_trigger_param_1, ":object"),
      (store_trigger_param_2, ":enter_leave"),

      (try_begin),
        (eq, ":enter_leave", 0),
        (try_for_range, ":slot_no", 10, 106),
          (troop_slot_eq, "trp_temp_array_a", ":slot_no", ":object"),
          (troop_get_inventory_slot, ":item_no", "trp_temp_array_a", ":slot_no"),
          (troop_get_inventory_slot_modifier, ":cur_imod", "trp_temp_array_a", ":slot_no"),
          (try_begin),
            (gt, ":item_no", -1),
            (troop_get_slot, ":target_obj", "trp_temp_array_b", ":slot_no"),
            (overlay_get_position, pos0, ":target_obj"),
            (show_item_details_with_modifier, ":item_no", ":cur_imod", pos0, 100),
            (assign, "$g_current_opened_item_details", ":slot_no"),
          (try_end),
        (try_end),
      (else_try),
        (try_for_range, ":slot_no", 10, 106),
          (troop_slot_eq, "trp_temp_array_a", ":slot_no", ":object"),
          (try_begin),
            (eq, "$g_current_opened_item_details", ":slot_no"),
            (close_item_details),
          (try_end),
        (try_end),
      (try_end),
    ]),

    (ti_on_presentation_event_state_change,
      [
        (store_trigger_param_1, ":object"),
        (store_trigger_param_2, ":value"),

        (assign, ":selected_troop", "$g_prsnt_param_1"),

        (try_begin),
          (key_is_down, key_left_control),
          (assign, ":offset", 5),
        (else_try),
          (key_is_down, key_left_shift),
          (assign, ":offset", 10),
        (else_try),
          (key_is_down, key_left_alt),
          (assign, ":offset", 20),
        (else_try),
          (assign, ":offset", 1),
        (try_end),
        
        (try_begin),
          (eq, ":object", "$g_presentation_obj_3"),
          (val_sub, ":selected_troop", ":offset"),
          (val_max, ":selected_troop", 0),
          (assign, "$g_prsnt_param_1", ":selected_troop"),
          (start_presentation, "prsnt_troop_note"),
        (else_try),
          (eq, ":object", "$g_presentation_obj_4"),
          (val_add, ":selected_troop", ":offset"),
          (val_min, ":selected_troop", "trp_relative_of_merchants_end"),
          (assign, "$g_prsnt_param_1", ":selected_troop"),
          (start_presentation, "prsnt_troop_note"),
        (else_try),
          (eq, ":object", "$g_presentation_obj_5"),
          (store_sub, ":troop_class", 8, ":value"),
          (troop_set_class, ":selected_troop", ":troop_class"),
        (else_try),
          (eq, ":object", "$g_presentation_obj_1"),
          (try_begin),
            (gt, "$g_presentation_next_presentation", -1),
            (start_presentation, "$g_presentation_next_presentation"),
          (else_try),
            (presentation_set_duration, 0),
          (try_end),
        (try_end),
    ]),
  ]),

  ("all_items", 0, mesh_load_window, [
    (ti_on_presentation_load,
      [
        (presentation_set_duration, 999999),
        (set_fixed_point_multiplier, 1000),

        (create_combo_button_overlay, "$g_presentation_obj_1"),
        (position_set_x, pos1, 800),
        (position_set_y, pos1, 650),
        (overlay_set_position, "$g_presentation_obj_1", pos1),
        (overlay_add_item, "$g_presentation_obj_1", "@Weapons"),
        (overlay_add_item, "$g_presentation_obj_1", "@Weapons"),
        (overlay_add_item, "$g_presentation_obj_1", "@Armors"),
        (overlay_add_item, "$g_presentation_obj_1", "@Armors"),
        (overlay_add_item, "$g_presentation_obj_1", "@Armors"),
        (overlay_add_item, "$g_presentation_obj_1", "@Others"),
        (overlay_set_val, "$g_presentation_obj_1", "$temp"),

        ## back
        (create_game_button_overlay, "$g_presentation_obj_5", "@Done"),
        (position_set_x, pos1, 900),
        (position_set_y, pos1, 25),
        (overlay_set_position, "$g_presentation_obj_5", pos1),
        
        # item 0, preview 
        ## item slot
        (create_image_button_overlay, reg1, "mesh_mp_inventory_choose", "mesh_mp_inventory_choose"),
        (position_set_x, pos1, 2560),
        (position_set_y, pos1, 2560),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 635),
        (position_set_y, pos1, 215),
        (overlay_set_position, reg1, pos1),
        (troop_set_slot, "trp_temp_array_a", 0, reg1),
        ## item
        (create_mesh_overlay_with_item_id, reg1, 0),
        (position_set_x, pos1, 3200),
        (position_set_y, pos1, 3200),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 795),
        (position_set_y, pos1, 375),
        (overlay_set_position, reg1, pos1),
        (troop_set_slot, "trp_temp_array_b", 0, reg1),
        (troop_set_slot, "trp_temp_array_c", 0, 0),
        ## txt
        (create_text_overlay, reg1, "@Preview: ", tf_left_align),
        (position_set_x, pos1, 640),
        (position_set_y, pos1, 550),
        (overlay_set_position, reg1, pos1),
        ## items
        (str_clear, s0),
        (create_text_overlay, "$g_presentation_obj_6", s0, tf_scrollable),
        (position_set_x, pos1, 30),
        (position_set_y, pos1, 55),
        (overlay_set_position, "$g_presentation_obj_6", pos1),
        (position_set_x, pos1, 570),
        (position_set_y, pos1, 640),
        (overlay_set_area_size, "$g_presentation_obj_6", pos1),
        (set_container_overlay, "$g_presentation_obj_6"),

        (assign, ":num_items", len(items)),
        (assign, "$temp_2", 0),
                
        ## types
        (try_begin),
          (eq, "$temp", 0), # melee weapons
          (try_for_range, ":item_no", 1, ":num_items"),
            (item_get_type, ":type", ":item_no"),
            (is_between, ":type", itp_type_one_handed_wpn, itp_type_arrows),
            (val_add, "$temp_2", 1),
          (try_end),
        (else_try),
          (eq, "$temp", 1), # range weapons
          (try_for_range, ":item_no", 1, ":num_items"),
            (item_get_type, ":type", ":item_no"),
            (this_or_next|is_between, ":type", itp_type_arrows, itp_type_goods),
            (is_between, ":type", itp_type_pistol, itp_type_animal),
			(neq, ":type", itp_type_shield),
            (val_add, "$temp_2", 1),
          (try_end),
        (else_try),
          (eq, "$temp", 2), # head_armor
          (try_for_range, ":item_no", 1, ":num_items"),
            (item_get_type, ":type", ":item_no"),
            (eq, ":type", itp_type_head_armor),
            (val_add, "$temp_2", 1),
          (try_end),
        (else_try),
          (eq, "$temp", 3), # body_armor
          (try_for_range, ":item_no", 1, ":num_items"),
            (item_get_type, ":type", ":item_no"),
            (eq, ":type", itp_type_body_armor),
            (val_add, "$temp_2", 1),
          (try_end),
        (else_try),
          (eq, "$temp", 4), # other armors
          (try_for_range, ":item_no", 1, ":num_items"),
            (item_get_type, ":type", ":item_no"),
			(this_or_next|eq, ":type", itp_type_shield),
            (is_between, ":type", itp_type_foot_armor, itp_type_pistol),
            (val_add, "$temp_2", 1),
          (try_end),
        (else_try),
          (eq, "$temp", 5), # others
          (try_for_range, ":item_no", 1, ":num_items"),
            (item_get_type, ":type", ":item_no"),
            (this_or_next|eq, ":type", itp_type_horse),
            (this_or_next|eq, ":type", itp_type_goods),
            (this_or_next|eq, ":type", itp_type_animal),
            (eq, ":type", itp_type_book),
            (val_add, "$temp_2", 1),
          (try_end),
        (try_end),

        (store_div, ":height", "$temp_2", 7),
        (store_mod, ":offset", "$temp_2", 7),
        (val_min, ":offset", 1),
        (val_add, ":height", ":offset"),
        (store_mul, ":pos_y", ":height", 80),
        (val_sub, ":pos_y", 80),
        (assign, ":pos_x", 0),
        (assign, ":slot_no", 1),
        (try_for_range, ":item_no", 1, ":num_items"),
          (item_get_type, ":type", ":item_no"),
          (try_begin),
            (eq, "$temp", 0), # melee weapons
            (try_begin),
              (is_between, ":type", itp_type_one_handed_wpn, itp_type_arrows),
              (assign, ":continue", 1),
            (else_try),
              (assign, ":continue", 0),
            (try_end),
          (else_try),
            (eq, "$temp", 1), # range weapons
            (try_begin),
              (this_or_next|is_between, ":type", itp_type_arrows, itp_type_goods),
              (is_between, ":type", itp_type_pistol, itp_type_animal),
			  (neq, ":type", itp_type_shield),
              (assign, ":continue", 1),
            (else_try),
              (assign, ":continue", 0),
            (try_end),
          (else_try),
            (eq, "$temp", 2), # armors
            (try_begin),
              (eq, ":type", itp_type_head_armor),
              (assign, ":continue", 1),
            (else_try),
              (assign, ":continue", 0),
            (try_end),
          (else_try),
            (eq, "$temp", 3), # armors
            (try_begin),
              (eq, ":type", itp_type_body_armor),
              (assign, ":continue", 1),
            (else_try),
              (assign, ":continue", 0),
            (try_end),
          (else_try),
            (eq, "$temp", 4), # armors
            (try_begin),
			  (this_or_next|eq, ":type", itp_type_shield),
              (is_between, ":type", itp_type_foot_armor, itp_type_pistol),
              (assign, ":continue", 1),
            (else_try),
              (assign, ":continue", 0),
            (try_end),
          (else_try),
            (eq, "$temp", 5), # others
            (try_begin),
              (this_or_next|eq, ":type", itp_type_horse),
              (this_or_next|eq, ":type", itp_type_goods),
              (this_or_next|eq, ":type", itp_type_animal),
              (eq, ":type", itp_type_book),
              (assign, ":continue", 1),
            (else_try),
              (assign, ":continue", 0),
            (try_end),
          (try_end),
          (eq, ":continue", 1),
          ## item slot
          (create_image_button_overlay, reg1, "mesh_mp_inventory_choose", "mesh_mp_inventory_choose"),
          (position_set_x, pos1, 640),
          (position_set_y, pos1, 640),
          (overlay_set_size, reg1, pos1),
          (position_set_x, pos1, ":pos_x"),
          (position_set_y, pos1, ":pos_y"),
          (overlay_set_position, reg1, pos1),
          (troop_set_slot, "trp_temp_array_a", ":slot_no", reg1),
          ## item
          (create_mesh_overlay_with_item_id, reg1, ":item_no"),
          (position_set_x, pos1, 800),
          (position_set_y, pos1, 800),
          (overlay_set_size, reg1, pos1),
          (store_add, ":item_x", ":pos_x", 40),
          (store_add, ":item_y", ":pos_y", 40),
          (position_set_x, pos1, ":item_x"),
          (position_set_y, pos1, ":item_y"),
          (overlay_set_position, reg1, pos1),
          (troop_set_slot, "trp_temp_array_b", ":slot_no", reg1),
          (troop_set_slot, "trp_temp_array_c", ":slot_no", ":item_no"),
          (val_add, ":pos_x", 80),
          (val_add, ":slot_no", 1),
          (try_begin),
            (ge, ":pos_x", 560),
            (assign, ":pos_x", 0),
            (val_sub, ":pos_y", 80),
          (try_end),
        (try_end),

        (set_container_overlay, -1),
        ## items

#        ####### mouse fix pos system #######
#        (call_script, "script_mouse_fix_pos_ready"),
#        ####### mouse fix pos system #######
      ]),

#    (ti_on_presentation_run,
#      [
#        ####### mouse fix pos system #######
#        (call_script, "script_mouse_fix_pos_run"),
#        ####### mouse fix pos system #######
#    ]),

    (ti_on_presentation_mouse_enter_leave,
      [
      (store_trigger_param_1, ":object"),
      (store_trigger_param_2, ":enter_leave"),

      (store_add, ":upper_bound", "$temp_2", 1),
      (try_begin),
        (eq, ":enter_leave", 0),
        (try_for_range, ":slot_no", 0, ":upper_bound"),
          (troop_slot_eq, "trp_temp_array_a", ":slot_no", ":object"),
          (troop_get_slot, ":item_no", "trp_temp_array_c", ":slot_no"),
          (neq, ":item_no", 0),
          (troop_get_slot, ":target_obj", "trp_temp_array_b", ":slot_no"),
          (overlay_get_position, pos0, ":target_obj"),
          (show_item_details, ":item_no", pos0, 100),
          (assign, "$g_current_opened_item_details", ":slot_no"),
        (try_end),
      (else_try),
        (try_for_range, ":slot_no", 0, ":upper_bound"),
          (troop_slot_eq, "trp_temp_array_a", ":slot_no", ":object"),
          (try_begin),
            (eq, "$g_current_opened_item_details", ":slot_no"),
            (close_item_details),
          (try_end),
        (try_end),
      (try_end),
    ]),

    (ti_on_presentation_event_state_change,
      [
        (store_trigger_param_1, ":object"),
        (store_trigger_param_2, ":value"),

        (set_fixed_point_multiplier, 1000),
        # create new item overlay to cover item in slot_0
        (store_add, ":upper_bound", "$temp_2", 1),
        (try_for_range, ":slot_no", 0, ":upper_bound"),
          (neq, ":slot_no", 0),
          (troop_slot_eq, "trp_temp_array_a", ":slot_no", ":object"),
          (troop_get_slot, ":item_no", "trp_temp_array_c", ":slot_no"),
          (troop_get_slot, ":target_obj", "trp_temp_array_b", 0),
          (overlay_set_display, ":target_obj", 0),
          ## new item overlay
          (create_mesh_overlay_with_item_id, reg1, ":item_no"),
          (position_set_x, pos1, 3200),
          (position_set_y, pos1, 3200),
          (overlay_set_size, reg1, pos1),
          (position_set_x, pos1, 795),
          (position_set_y, pos1, 375),
          (overlay_set_position, reg1, pos1),
          (troop_set_slot, "trp_temp_array_b", 0, reg1),
          (troop_set_slot, "trp_temp_array_c", 0, ":item_no"),
        (try_end),
        (try_begin),
          (eq, ":object", "$g_presentation_obj_1"),
          (assign, "$temp", ":value"),
          (start_presentation, "prsnt_all_items"),
        (else_try),
          (eq, ":object", "$g_presentation_obj_5"),
          (presentation_set_duration, 0),
        (try_end),
    ]),
  ]),

  ("change_commander", 0, 0, [
    (ti_on_presentation_load,
      [
        (presentation_set_duration, 999999),
        (set_fixed_point_multiplier, 1000),

        (create_mesh_overlay, reg1, "mesh_load_window"),
        (position_set_x, pos1, 0),
        (position_set_y, pos1, 0),
        (overlay_set_position, reg1, pos1),
        
        (position_set_x, pos1, 630),
        (position_set_y, pos1, 650),
        (str_store_troop_name, s0, "$g_player_troop"),
        (str_store_string, s1, "@Please reselect a companion as the commander for the comming battle.^^Current commander: {s0}."),

        (create_text_overlay, "$g_presentation_obj_1", "@{s1}", tf_center_justify|tf_vertical_align_center),
        (overlay_set_position, "$g_presentation_obj_1", pos1),
        
        (create_game_button_overlay, "$g_presentation_obj_2", "@Done"),
        (position_set_x, pos1, 900),
        (position_set_y, pos1, 25),
        (overlay_set_position, "$g_presentation_obj_2", pos1),


        (str_clear, s0),
        (assign, ":area_size_y", 400),
        (assign, ":offset_y", 40),
        (create_text_overlay, "$g_presentation_obj_6", s0, tf_scrollable),
        (position_set_x, pos1, 800),
        (position_set_y, pos1, 150),
        (overlay_set_position, "$g_presentation_obj_6", pos1),
        (position_set_x, pos1, 100),
        (position_set_y, pos1, ":area_size_y"),
        (overlay_set_area_size, "$g_presentation_obj_6", pos1),
        (set_container_overlay, "$g_presentation_obj_6"),
  
        (call_script, "script_get_num_heroes_of_party", "p_main_party", 1),
        (assign, ":num_of_heroes", reg0),
        (store_mul, ":pos_y", ":num_of_heroes", ":offset_y"),
        (val_max, ":pos_y", ":area_size_y"),
        (val_sub, ":pos_y", ":offset_y"),
        (assign, ":pos_x", 50),
        
        (assign, ":trp_slot_prsnt_no", 0),
        (party_get_num_companion_stacks, ":num_stacks","p_main_party"),
        (try_for_range, ":i_stack", 0, ":num_stacks"),
          (party_stack_get_troop_id,":stack_troop","p_main_party",":i_stack"),
          (troop_is_hero, ":stack_troop"),
          (neg|troop_is_wounded, ":stack_troop"),
          (str_store_troop_name, s1, ":stack_troop"),
          (position_set_x, pos1, ":pos_x"),
          (position_set_y, pos1, ":pos_y"),
          (val_sub, ":pos_y", ":offset_y"),
          (create_button_overlay, reg0, "@{s1}", tf_center_justify),
          (overlay_set_position, reg0, pos1),

          (troop_set_slot, "trp_temp_array_a", ":trp_slot_prsnt_no", reg0),
          (troop_set_slot, "trp_temp_array_b", ":trp_slot_prsnt_no", ":stack_troop"),
          (val_add, ":trp_slot_prsnt_no", 1),
        (try_end),

        (set_container_overlay, -1),

        ################
        (create_mesh_overlay_with_tableau_material, reg0, -1, "tableau_troop_note_mesh", "$g_player_troop"),
        (position_set_x, pos1, 600),
        (position_set_y, pos1, 600),
        (overlay_set_size, reg0, pos1),
        (position_set_x, pos1, 60),
        (position_set_y, pos1, 60),
        (overlay_set_position, reg0, pos1),

        (str_store_troop_name, s1, "$g_player_troop"),
        (store_character_level, ":troop_level", "$g_player_troop"),
        (assign, reg1, ":troop_level"),
        (str_store_string, s1, "@Name: {s1}^Level: {reg1}"),

        (store_troop_health, ":cur_hp", "$g_player_troop", 1),
        (call_script, "script_get_troop_max_hp", "$g_player_troop"),
        (assign, reg1, ":cur_hp"),
        (assign, reg2, reg0),
        (str_store_string, s1, "@{s1}^HP: {reg1}/{reg2}"),

        (create_text_overlay, reg0, "@{s1}", tf_double_space),
        (position_set_x, pos1, 420),
        (position_set_y, pos1, 450),
        (overlay_set_position, reg0, pos1),

        ## cur_hero equipments
        (create_mesh_overlay, reg1, "mesh_inventory_equipment_panel"),
        (position_set_x, pos1, 960),
        (position_set_y, pos1, 960),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 10),
        (position_set_y, pos1, 15),
        (overlay_set_position, reg1, pos1),
        
        (assign, ":init_pos_x", 219),
        (assign, ":init_pos_y", 683),
        (assign, ":cur_troop", "$g_player_troop"),
        (assign, ":obj_troop", "trp_temp_array_d"),
        
        (create_text_overlay, reg1, "@Arms", tf_center_justify),
        (store_add, ":pos_x", ":init_pos_x", 42), 
        (store_add, ":pos_y", ":init_pos_y", 2), 
        (position_set_x, pos1, ":pos_x"),
        (position_set_y, pos1, ":pos_y"),
        (overlay_set_position, reg1, pos1),
        (create_text_overlay, reg1, "@Outfit", tf_center_justify),
        (store_add, ":pos_x", ":init_pos_x", -98), 
        (store_add, ":pos_y", ":init_pos_y", 2), 
        (position_set_x, pos1, ":pos_x"),
        (position_set_y, pos1, ":pos_y"),
        (overlay_set_position, reg1, pos1),
        (create_text_overlay, reg1, "@Horse", tf_center_justify),
        (store_add, ":pos_x", ":init_pos_x", -140), 
        (store_add, ":pos_y", ":init_pos_y", -278), 
        (position_set_x, pos1, ":pos_x"),
        (position_set_y, pos1, ":pos_y"),
        (overlay_set_position, reg1, pos1),
        
        (assign, "$g_current_opened_item_details", -1),
        
        (assign, ":pos_x", ":init_pos_x"),
        (assign, ":pos_y", ":init_pos_y"),
        (try_for_range, ":slot_no", 0, 9),
          (try_begin),
            (eq, ":slot_no", 4),
            (val_sub, ":pos_x", 96),
            (assign, ":pos_y", ":init_pos_y"),
          (else_try),
            (eq, ":slot_no", 7),
            (val_sub, ":pos_x", 84),
            (store_sub, ":pos_y", ":init_pos_y", 85),
          (else_try),
            (eq, ":slot_no", 8),
            (val_sub, ":pos_y", 108),
          (try_end),
          (val_sub, ":pos_y", 85),
          # frames
          # (create_mesh_overlay, reg1, "mesh_mp_inventory_choose"),
          # (position_set_x, pos1, 640),
          # (position_set_y, pos1, 640),
          # (overlay_set_size, reg1, pos1),
          # (position_set_x, pos1, ":pos_x"),
          # (position_set_y, pos1, ":pos_y"),
          # (overlay_set_position, reg1, pos1),

          (troop_get_inventory_slot, ":cur_item", ":cur_troop", ":slot_no"),
          # background meshes
          (try_begin), # empty
            (gt, ":cur_item", -1),
            (assign, ":bg_mesh", "mesh_inv_slot"),
            (create_mesh_overlay, reg1, ":bg_mesh"),
            (position_set_x, pos1, 820),
            (position_set_y, pos1, 820),
            (overlay_set_size, reg1, pos1),
            (position_set_x, pos1, ":pos_x"),
            (position_set_y, pos1, ":pos_y"),
            (overlay_set_position, reg1, pos1),
          # (else_try), # weapons
            # (is_between, ":slot_no", 0, 4),
            # (assign, ":bg_mesh", "mesh_mp_inventory_slot_equip"),
          # (else_try), # others
            # (store_sub, ":bg_mesh", ":slot_no", 4),
            # (val_add, ":bg_mesh", "mesh_mp_inventory_slot_helmet"),
          (try_end),

          (try_begin), # item mesh
            (gt, ":cur_item", -1),
            (create_mesh_overlay_with_item_id, reg1, ":cur_item"),
            (position_set_x, pos1, 800),
            (position_set_y, pos1, 800),
            (overlay_set_size, reg1, pos1),
            (store_add, ":item_x", ":pos_x", 40),
            (store_add, ":item_y", ":pos_y", 40),
            (position_set_x, pos1, ":item_x"),
            (position_set_y, pos1, ":item_y"),
            (overlay_set_position, reg1, pos1),
            (troop_set_slot, ":obj_troop", ":slot_no", reg1),
          (else_try),
            (troop_set_slot, ":obj_troop", ":slot_no", -1),
          (try_end),
        (try_end),

        (store_attribute_level, reg1, "$g_player_troop", ca_strength),
        (store_attribute_level, reg2, "$g_player_troop", ca_intelligence),
		(str_clear, s3),
        (str_store_string, s3, "@{s3}^STR: {reg1}^INT: {reg2}^"),
        (store_skill_level, reg1, skl_power_strike, "$g_player_troop"),
        (store_skill_level, reg2, skl_power_draw, "$g_player_troop"),
        (store_skill_level, reg3, skl_precise_shot, "$g_player_troop"),
        (store_skill_level, reg4, skl_horse_archery, "$g_player_troop"),
        (store_skill_level, reg5, skl_magic_power, "$g_player_troop"),
        (store_skill_level, reg6, skl_stealth, "$g_player_troop"),
		(store_skill_level, reg7, skl_undead_master, "$g_player_troop"),
		(store_skill_level, reg8, skl_necromancy, "$g_player_troop"),
		(store_skill_level, reg9, skl_magic_skill, "$g_player_troop"),		
        (str_store_string, s3, "@{s3}^Power Strike: {reg1}^Power Draw: {reg2}^Power Throw: {reg3}^Horse Archery: {reg4}^^Weapon Proficiencies:"),
        (store_proficiency_level, reg1, "$g_player_troop", wpt_one_handed_weapon),
        (store_proficiency_level, reg2, "$g_player_troop", wpt_two_handed_weapon),
        (store_proficiency_level, reg3, "$g_player_troop", wpt_polearm),
        (str_store_string, s3, "@{s3}^1 Hand Wpns: {reg1}^2 Hand Wpns: {reg2}^Polearms: {reg3}"),
        (create_text_overlay, reg0, "@{s3}", tf_double_space),
        (position_set_x, pos1, 420),
        (position_set_y, pos1, 50),
        (overlay_set_position, reg0, pos1),

        (store_attribute_level, reg1, "$g_player_troop", ca_agility),
        (store_attribute_level, reg2, "$g_player_troop", ca_charisma),
		(str_clear, s4),
        (str_store_string, s4, "@{s4}^AGI: {reg1}^CHA: {reg2}^"),
        (store_skill_level, reg1, skl_ironflesh, "$g_player_troop"),
        (store_skill_level, reg2, skl_physique, "$g_player_troop"),
        (store_skill_level, reg3, skl_shield, "$g_player_troop"),
        (store_skill_level, reg4, skl_riding, "$g_player_troop"),
        (store_skill_level, reg5, skl_magic_defence, "$g_player_troop"),
        (store_skill_level, reg6, skl_weapon_master, "$g_player_troop"),
		(store_skill_level, reg7, skl_trainer, "$g_player_troop"),
		(store_skill_level, reg8, skl_leadership, "$g_player_troop"),		
        (str_store_string, s4, "@{s4}^Ironflesh: {reg1}^Athletics: {reg2}^Shield: {reg3}^Riding: {reg4}^^"),
        (store_proficiency_level, reg1, "$g_player_troop", wpt_archery),
        (store_proficiency_level, reg2, "$g_player_troop", wpt_crossbow),
        (store_proficiency_level, reg3, "$g_player_troop", wpt_throwing),
        (store_proficiency_level, reg4, "$g_player_troop", wpt_firearm),
        (str_store_string, s4, "@{s4}^Archery: {reg1}^Crossbows: {reg2}^Throwing: {reg3}^Firearm: {reg4}"),
        (create_text_overlay, reg0, "@{s4}", tf_double_space),
        (position_set_x, pos1, 630),
        (position_set_y, pos1, 50),
        (overlay_set_position, reg0, pos1),
        ################
        
        ##### mouse fix pos system #######
        # (call_script, "script_mouse_fix_pos_ready"),
        ##### mouse fix pos system #######
      ]),

      # (ti_on_presentation_run,
        # [
        ##### mouse fix pos system #######
        # (call_script, "script_mouse_fix_pos_run"),
        ##### mouse fix pos system #######
      # ]),

    (ti_on_presentation_mouse_enter_leave,
      [
      (store_trigger_param_1, ":object"),
      (store_trigger_param_2, ":enter_leave"),

      (try_begin),
        (eq, ":enter_leave", 0),
        (try_for_range, ":item_slot", 0, 9),
          (troop_slot_eq, "trp_temp_array_d", ":item_slot", ":object"),
          (overlay_get_position, pos0, ":object"),
          (troop_get_inventory_slot, ":cur_item", "$g_player_troop", ":item_slot"),
          (troop_get_inventory_slot_modifier, ":cur_imod", "$g_player_troop", ":item_slot"),
          (try_begin),
            (gt, ":cur_imod", 0),
            (show_item_details_with_modifier, ":cur_item", ":cur_imod", pos0, 100),
          (else_try),
            (show_item_details, ":cur_item", pos0, 100),
          (try_end),
          (assign, "$g_current_opened_item_details", ":item_slot"),
        (try_end),
      (else_try),
        (try_for_range, ":item_slot", 0, 9),
          (troop_slot_eq, "trp_temp_array_d", ":item_slot", ":object"),
          (try_begin),
            (eq, "$g_current_opened_item_details", ":item_slot"),
            (close_item_details),
          (try_end),
        (try_end),
      (try_end),
    ]),

    (ti_on_presentation_event_state_change,
      [
        (store_trigger_param_1, ":object"),

        (try_begin),
          (eq, ":object", "$g_presentation_obj_2"),
          (presentation_set_duration, 0),
        (try_end),

        (call_script, "script_get_num_heroes_of_party", "p_main_party", 1),
        (assign, ":num_of_heroes", reg0),
        (try_for_range, ":trp_slot_prsnt_no", 0, ":num_of_heroes"),
          (troop_slot_eq, "trp_temp_array_a", ":trp_slot_prsnt_no", ":object"),
          (troop_get_slot, ":cur_troop", "trp_temp_array_b", ":trp_slot_prsnt_no"),
          (assign, "$g_player_troop", ":cur_troop"),
          (start_presentation, "prsnt_change_commander"),
        (try_end),
      ]),
    ]),

  ("deposit_withdraw_money", 0, 0, [
    (ti_on_presentation_load,
      [
        (presentation_set_duration, 999999),
        (set_fixed_point_multiplier, 1000),

        (party_get_slot, ":chest_troop", "$current_town", slot_town_seneschal),
        (store_troop_gold, ":account_money", ":chest_troop"),
        (store_troop_gold, ":player_money", "trp_player"),

        (create_mesh_overlay, reg0, "mesh_message_window"),
        (position_set_x, pos1, 224),
        (position_set_y, pos1, 230),
        (overlay_set_position, reg0, pos1),
        
        (assign, reg1, ":account_money"),
        (create_text_overlay, reg0, "@{reg1}^money in the chest", tf_center_justify|tf_vertical_align_center),
        (position_set_x, pos1, 370),
        (position_set_y, pos1, 320),
        (overlay_set_position, reg0, pos1),

        (assign, reg2, ":player_money"),
        (create_text_overlay, reg0, "@{reg2}^money in your inventory", tf_center_justify|tf_vertical_align_center),
        (position_set_x, pos1, 630),
        (position_set_y, pos1, 320),
        (overlay_set_position, reg0, pos1),

        (create_combo_button_overlay, "$g_presentation_obj_1"),
        (position_set_x, pos1, 480),
        (position_set_y, pos1, 380),
        (overlay_set_position, "$g_presentation_obj_1", pos1),
        (position_set_x, pos1, 800),
        (position_set_y, pos1, 800),
        (overlay_set_size, "$g_presentation_obj_1", pos1),
        (overlay_add_item, "$g_presentation_obj_1", "@Withdraw"),
        (overlay_add_item, "$g_presentation_obj_1", "@Deposit"),
        (overlay_set_val, "$g_presentation_obj_1", 1),
        
        (position_set_x, pos1, 600),
        (position_set_y, pos1, 380),
        (val_add, ":player_money", 1),
        (create_number_box_overlay, "$g_presentation_obj_2", 0, ":player_money"),
        (overlay_set_position, "$g_presentation_obj_2", pos1),
        (overlay_set_val, "$g_presentation_obj_2", 0),
        (overlay_set_display, "$g_presentation_obj_2", 1),
        (val_add, ":account_money", 1),
        (create_number_box_overlay, "$g_presentation_obj_3", 0, ":account_money"),
        (overlay_set_position, "$g_presentation_obj_3", pos1),
        (overlay_set_val, "$g_presentation_obj_3", 0),
        (overlay_set_display, "$g_presentation_obj_3", 0),
        
        (create_game_button_overlay, "$g_presentation_obj_5", "@Done"),
        (position_set_x, pos1, 500),
        (position_set_y, pos1, 250),
        (overlay_set_position, "$g_presentation_obj_5", pos1),
      ]),

    (ti_on_presentation_event_state_change,
      [
        (store_trigger_param_1, ":object"),
        (store_trigger_param_2, ":value"),

        (try_begin),
          (eq, ":object", "$g_presentation_obj_1"),
          (try_begin),
            (eq, ":value", 1),
            (overlay_set_display, "$g_presentation_obj_2", 1),
            (overlay_set_display, "$g_presentation_obj_3", 0),
          (else_try),
            (overlay_set_display, "$g_presentation_obj_2", 0),
            (overlay_set_display, "$g_presentation_obj_3", 1),
          (try_end),
        (else_try),
          (eq, ":object", "$g_presentation_obj_2"),
          (party_get_slot, ":chest_troop", "$current_town", slot_town_seneschal),
          (gt, ":value", 0),
          (troop_remove_gold, "trp_player",":value"),
          (troop_add_gold, ":chest_troop", ":value"),
          (start_presentation, "prsnt_deposit_withdraw_money"),
        (else_try),
          (eq, ":object", "$g_presentation_obj_3"),
          (party_get_slot, ":chest_troop", "$current_town", slot_town_seneschal),
          (gt, ":value", 0),
          (troop_remove_gold, ":chest_troop",":value"),
          (troop_add_gold, "trp_player", ":value"),
          (start_presentation, "prsnt_deposit_withdraw_money"),
        (else_try),
          (eq, ":object", "$g_presentation_obj_5"),
          (presentation_set_duration, 0),
        (try_end),
    ]),
  ]),

  ("make_a_loan", 0, 0, [
    (ti_on_presentation_load,
      [
        (presentation_set_duration, 999999),
        (set_fixed_point_multiplier, 1000),

        (party_get_slot, ":player_debt", "$current_town", slot_town_player_debt),
        
        (call_script, "script_get_max_loan", "$current_town"),
        (assign, ":max_loan", reg0),
        (val_sub, ":max_loan",":player_debt"),
        
        (create_mesh_overlay, reg0, "mesh_message_window"),
        (position_set_x, pos1, 224),
        (position_set_y, pos1, 230),
        (overlay_set_position, reg0, pos1),
        
        (assign, reg1, ":player_debt"),
        (create_text_overlay, reg0, "@{reg1}^money your borrowed", tf_center_justify|tf_vertical_align_center),
        (position_set_x, pos1, 370),
        (position_set_y, pos1, 320),
        (overlay_set_position, reg0, pos1),

        (assign, reg2, ":max_loan"),
        (create_text_overlay, reg0, "@{reg2}^money you can Borrow", tf_center_justify|tf_vertical_align_center),
        (position_set_x, pos1, 630),
        (position_set_y, pos1, 320),
        (overlay_set_position, reg0, pos1),

        (create_combo_button_overlay, "$g_presentation_obj_1"),
        (position_set_x, pos1, 480),
        (position_set_y, pos1, 380),
        (overlay_set_position, "$g_presentation_obj_1", pos1),
        (position_set_x, pos1, 800),
        (position_set_y, pos1, 800),
        (overlay_set_size, "$g_presentation_obj_1", pos1),
        (overlay_add_item, "$g_presentation_obj_1", "@return_money"),
        (overlay_add_item, "$g_presentation_obj_1", "@Borrow_money"),
        (overlay_set_val, "$g_presentation_obj_1", 1),
        
        (position_set_x, pos1, 600),
        (position_set_y, pos1, 380),
        (val_add, ":max_loan", 1),
        (create_number_box_overlay, "$g_presentation_obj_2", 0, ":max_loan"),
        (overlay_set_position, "$g_presentation_obj_2", pos1),
        (overlay_set_val, "$g_presentation_obj_2", 0),
        (overlay_set_display, "$g_presentation_obj_2", 1),
        (val_add, ":player_debt", 1),
        (create_number_box_overlay, "$g_presentation_obj_3", 0, ":player_debt"),
        (overlay_set_position, "$g_presentation_obj_3", pos1),
        (overlay_set_val, "$g_presentation_obj_3", 0),
        (overlay_set_display, "$g_presentation_obj_3", 0),
        
        (create_game_button_overlay, "$g_presentation_obj_5", "@Done"),
        (position_set_x, pos1, 500),
        (position_set_y, pos1, 250),
        (overlay_set_position, "$g_presentation_obj_5", pos1),
      ]),

    (ti_on_presentation_event_state_change,
      [
        (store_trigger_param_1, ":object"),
        (store_trigger_param_2, ":value"),

        (try_begin),
          (eq, ":object", "$g_presentation_obj_1"),
          (try_begin),
            (eq, ":value", 1),
            (overlay_set_display, "$g_presentation_obj_2", 1),
            (overlay_set_display, "$g_presentation_obj_3", 0),
          (else_try),
            (overlay_set_display, "$g_presentation_obj_2", 0),
            (overlay_set_display, "$g_presentation_obj_3", 1),
          (try_end),
        (else_try),
          (eq, ":object", "$g_presentation_obj_2"),
          (party_get_slot, ":player_debt", "$current_town", slot_town_player_debt),
          (gt, ":value", 0),
          (val_add, ":player_debt",":value"),
          (party_set_slot, "$current_town", slot_town_player_debt, ":player_debt"),
          (troop_add_gold, "trp_player", ":value"),
          (start_presentation, "prsnt_make_a_loan"),
        (else_try),
          (eq, ":object", "$g_presentation_obj_3"),
          (party_get_slot, ":player_debt", "$current_town", slot_town_player_debt),
          (gt, ":value", 0),
          (val_sub, ":player_debt",":value"),
          (val_max, ":player_debt",0),
          (party_set_slot, "$current_town", slot_town_player_debt, ":player_debt"),
          (troop_remove_gold, "trp_player", ":value"),
          (start_presentation, "prsnt_make_a_loan"),
        (else_try),
          (eq, ":object", "$g_presentation_obj_5"),
          (presentation_set_duration, 0),
        (try_end),
    ]),
  ]),

  ("mod_option", 0, mesh_load_window, [
    (ti_on_presentation_load,
      [
        (presentation_set_duration, 999999),
        (set_fixed_point_multiplier, 1000),

        (str_clear, s0),
        (create_text_overlay, "$g_presentation_obj_6", s0, tf_scrollable),
        (position_set_x, pos1, 25),
        (position_set_y, pos1, 50),
        (overlay_set_position, "$g_presentation_obj_6", pos1),
        (position_set_x, pos1, 575),
        (position_set_y, pos1, 630),
        (overlay_set_area_size, "$g_presentation_obj_6", pos1),
        (set_container_overlay, "$g_presentation_obj_6"),

        (position_set_x, pos1, 25),
        (position_set_x, pos2, 475),
        (assign, ":pos_y", 5),
        
        ## fog
        (create_text_overlay, reg0, "@Fog strength:", tf_left_align),
        (position_set_y, pos1, ":pos_y"),
        (overlay_set_position, reg0, pos1),
        (create_number_box_overlay, "$g_presentation_obj_24", 0, 101),
        (position_set_y, pos2, ":pos_y"),
        (overlay_set_position, "$g_presentation_obj_24", pos2),
        (get_global_haze_amount, ":cur_fog_amount"),
        (overlay_set_val, "$g_presentation_obj_24", ":cur_fog_amount"),
        (val_add, ":pos_y", 50),
        ## cloud
        (create_text_overlay, reg0, "@Cloud amount:", tf_left_align),
        (position_set_y, pos1, ":pos_y"),
        (overlay_set_position, reg0, pos1),
        (create_number_box_overlay, "$g_presentation_obj_25", 0, 101),
        (position_set_y, pos2, ":pos_y"),
        (overlay_set_position, "$g_presentation_obj_25", pos2),
        (get_global_cloud_amount, ":cur_cloud_amount"),
        (overlay_set_val, "$g_presentation_obj_25", ":cur_cloud_amount"),
        (val_add, ":pos_y", 50),
        ## rain/snow
        (create_text_overlay, reg0, "@Probability of rain/snow (%):", tf_left_align),
        (position_set_y, pos1, ":pos_y"),
        (overlay_set_position, reg0, pos1),
        (create_number_box_overlay, "$g_presentation_obj_18", 0, 101),
        (position_set_y, pos2, ":pos_y"),
        (overlay_set_position, "$g_presentation_obj_18", pos2),
        (overlay_set_val, "$g_presentation_obj_18", "$g_rand_rain_limit"),
        (val_add, ":pos_y", 50),
        
        # division line
        (store_add, ":line_pos_y", ":pos_y", -15),
        (call_script, "script_prsnt_lines", 520, 2, 25, ":line_pos_y", 0),
        
        ## show extra xp and proficiency
        (create_text_overlay, reg0, "@Report extra xp and proficiency point:", tf_left_align),
        (position_set_y, pos1, ":pos_y"),
        (overlay_set_position, reg0, pos1),
        (create_check_box_overlay, "$g_presentation_obj_16", "mesh_checkbox_off", "mesh_checkbox_on"),
        (position_set_y, pos2, ":pos_y"),
        (overlay_set_position, "$g_presentation_obj_16", pos2),
        (overlay_set_val, "$g_presentation_obj_16", "$g_report_extra_xp_and_wpt"),
        (val_add, ":pos_y", 50),
        ## shot distance
        (create_text_overlay, reg0, "@Report shot distance:", tf_left_align),
        (position_set_y, pos1, ":pos_y"),
        (overlay_set_position, reg0, pos1),
        (create_check_box_overlay, "$g_presentation_obj_5", "mesh_checkbox_off", "mesh_checkbox_on"),
        (position_set_y, pos2, ":pos_y"),
        (overlay_set_position, "$g_presentation_obj_5", pos2),
        (overlay_set_val, "$g_presentation_obj_5", "$g_report_shot_distance"),
        (val_add, ":pos_y", 50),
        ## size of battle minimap
        (create_text_overlay, reg0, "@Size of battle minimap (%):", tf_left_align),
        (position_set_y, pos1, ":pos_y"),
        (overlay_set_position, reg0, pos1),
        (create_number_box_overlay, "$g_presentation_obj_14", 60, 111),
        (position_set_y, pos2, ":pos_y"),
        (overlay_set_position, "$g_presentation_obj_14", pos2),
        (overlay_set_val, "$g_presentation_obj_14", "$g_minimap_ratio"),
        (val_add, ":pos_y", 50),
        ## show battle minimap
        (create_text_overlay, reg0, "@Show battle minimap:", tf_left_align),
        (position_set_y, pos1, ":pos_y"),
        (overlay_set_position, reg0, pos1),
        (create_check_box_overlay, "$g_presentation_obj_13", "mesh_checkbox_off", "mesh_checkbox_on"),
        (position_set_y, pos2, ":pos_y"),
        (overlay_set_position, "$g_presentation_obj_13", pos2),
        (overlay_set_val, "$g_presentation_obj_13", "$g_show_minimap"),
        (val_add, ":pos_y", 50),
        ## reinforcement waves
        (create_text_overlay, reg0, "@Reinforcement waves:", tf_left_align),
        (position_set_y, pos1, ":pos_y"),
        (overlay_set_position, reg0, pos1),
        (create_number_box_overlay, "$g_presentation_obj_26", 2, 101),
        (position_set_y, pos2, ":pos_y"),
        (overlay_set_position, "$g_presentation_obj_26", pos2),
        (overlay_set_val, "$g_presentation_obj_26", "$g_reinforcement_stage"),
        (val_add, ":pos_y", 50),

        # division line
        (store_add, ":line_pos_y", ":pos_y", -15),
        (call_script, "script_prsnt_lines", 520, 2, 25, ":line_pos_y", 0),

        ## cheat mode
        (create_text_overlay, reg0, "@Enable cheat mode:", tf_left_align),
        (position_set_y, pos1, ":pos_y"),
        (overlay_set_position, reg0, pos1),
        (create_check_box_overlay, "$g_presentation_obj_12", "mesh_checkbox_off", "mesh_checkbox_on"),
        (position_set_y, pos2, ":pos_y"),
        (overlay_set_position, "$g_presentation_obj_12", pos2),
        (overlay_set_val, "$g_presentation_obj_12", "$cheat_mode"),
        (val_add, ":pos_y", 50),
        ## skill penalty
        (create_text_overlay, reg0, "@Skill penalty by encumbrance:", tf_left_align),
        (position_set_y, pos1, ":pos_y"),
        (overlay_set_position, reg0, pos1),
        (create_check_box_overlay, "$g_presentation_obj_9", "mesh_checkbox_off", "mesh_checkbox_on"),
        (position_set_y, pos2, ":pos_y"),
        (overlay_set_position, "$g_presentation_obj_9", pos2),
        (overlay_set_val, "$g_presentation_obj_9", "$g_encumbrance_penalty"),
        (val_add, ":pos_y", 50),
        ## NPCs' complaints
        (create_text_overlay, reg0, "@Disable NPCs' complaints:", tf_left_align),
        (position_set_y, pos1, ":pos_y"),
        (overlay_set_position, reg0, pos1),
        (create_check_box_overlay, "$g_presentation_obj_11", "mesh_checkbox_off", "mesh_checkbox_on"),
        (position_set_y, pos2, ":pos_y"),
        (overlay_set_position, "$g_presentation_obj_11", pos2),
        (overlay_set_val, "$g_presentation_obj_11", "$disable_npc_complaints"),
        (val_add, ":pos_y", 50),
        ## morale threshold
        (create_text_overlay, reg0, "@Morale threshold on consuming food:", tf_left_align),
        (position_set_y, pos1, ":pos_y"),
        (overlay_set_position, reg0, pos1),
        (create_number_box_overlay, "$g_presentation_obj_23", 33, 100),
        (position_set_y, pos2, ":pos_y"),
        (overlay_set_position, "$g_presentation_obj_23", pos2),
        (val_clamp, "$g_morale_threshold", 33, 100),
        (overlay_set_val, "$g_presentation_obj_23", "$g_morale_threshold"),
        (val_add, ":pos_y", 50),
        ## speed of battles
        (create_text_overlay, reg0, "@Speed of battles on the map:", tf_left_align),
        (position_set_y, pos1, ":pos_y"),
        (overlay_set_position, reg0, pos1),
        (create_number_box_overlay, "$g_presentation_obj_15", 1, 4),
        (position_set_y, pos2, ":pos_y"),
        (overlay_set_position, "$g_presentation_obj_15", pos2),
        (val_clamp, "$g_speed_ai_battles", 1, 4),
        (overlay_set_val, "$g_presentation_obj_15", "$g_speed_ai_battles"),
        (val_add, ":pos_y", 50),
        
        ## global parties speed
        (create_text_overlay, reg0, "@Movement speed of all parties (%):", tf_left_align),
        (position_set_y, pos1, ":pos_y"),
        (overlay_set_position, reg0, pos1),
        (create_number_box_overlay, "$g_presentation_obj_17", 100, 501),
        (position_set_y, pos2, ":pos_y"),
        (overlay_set_position, "$g_presentation_obj_17", pos2),
        (store_add, ":global_speed_ratio", "$global_speed_modifier", 100),
        (val_clamp, ":global_speed_ratio", 100, 501),
        (overlay_set_val, "$g_presentation_obj_17", ":global_speed_ratio"),
        (val_add, ":pos_y", 50),
        
        # division line
        (store_add, ":line_pos_y", ":pos_y", -15),
        (call_script, "script_prsnt_lines", 520, 2, 25, ":line_pos_y", 0),
        
        # close_broken_lance
        #(create_text_overlay, reg0, "@close_broken_lance:", tf_left_align),
        #(position_set_y, pos1, ":pos_y"),
        #(overlay_set_position, reg0, pos1),
        #(create_check_box_overlay, "$g_presentation_obj_34", "mesh_checkbox_off", "mesh_checkbox_on"),
        #(position_set_y, pos2, ":pos_y"),
        #(overlay_set_position, "$g_presentation_obj_34", pos2),
        #(overlay_set_val, "$g_presentation_obj_34", "$g_use_broken_lance"),
        #(val_add, ":pos_y", 50),
        
        ## agent_use_shield_bash
        (create_text_overlay, reg0, "@agent_use_shield_bash:", tf_left_align),
        (position_set_y, pos1, ":pos_y"),
        (overlay_set_position, reg0, pos1),
        (create_check_box_overlay, "$g_presentation_obj_31", "mesh_checkbox_off", "mesh_checkbox_on"),
        (position_set_y, pos2, ":pos_y"),
        (overlay_set_position, "$g_presentation_obj_31", pos2),
        (overlay_set_val, "$g_presentation_obj_31", "$g_agent_use_shield_bash"),
        (val_add, ":pos_y", 50),
        ## weapon_fire_particle
        (create_text_overlay, reg0, "@weapon_fire_particle:", tf_left_align),
        (position_set_y, pos1, ":pos_y"),
        (overlay_set_position, reg0, pos1),
        (create_check_box_overlay, "$g_presentation_obj_32", "mesh_checkbox_off", "mesh_checkbox_on"),
        (position_set_y, pos2, ":pos_y"),
        (overlay_set_position, "$g_presentation_obj_32", pos2),
        (overlay_set_val, "$g_presentation_obj_32", "$g_weapon_fire_particle"),
        (val_add, ":pos_y", 50),
        ## cannon_harm_ally
        (create_text_overlay, reg0, "@cannon_harm_ally:", tf_left_align),
        (position_set_y, pos1, ":pos_y"),
        (overlay_set_position, reg0, pos1),
        (create_check_box_overlay, "$g_presentation_obj_33", "mesh_checkbox_off", "mesh_checkbox_on"),
        (position_set_y, pos2, ":pos_y"),
        (overlay_set_position, "$g_presentation_obj_33", pos2),
        (overlay_set_val, "$g_presentation_obj_33", "$g_weapon_harm_ally"),
        (val_add, ":pos_y", 50),
        ## critical_hit
        (create_text_overlay, reg0, "@critical_hit:", tf_left_align),
        (position_set_y, pos1, ":pos_y"),
        (overlay_set_position, reg0, pos1),
        (create_check_box_overlay, "$g_presentation_obj_3", "mesh_checkbox_off", "mesh_checkbox_on"),
        (position_set_y, pos2, ":pos_y"),
        (overlay_set_position, "$g_presentation_obj_3", pos2),
        (overlay_set_val, "$g_presentation_obj_3", "$g_use_critical_hit"),
        (val_add, ":pos_y", 50),
        
        ## horse_not_use_charge
        (create_text_overlay, reg0, "@horse_not_use_charge:", tf_left_align),
        (position_set_y, pos1, ":pos_y"),
        (overlay_set_position, reg0, pos1),
        (create_check_box_overlay, "$g_presentation_obj_29", "mesh_checkbox_off", "mesh_checkbox_on"),
        (position_set_y, pos2, ":pos_y"),
        (overlay_set_position, "$g_presentation_obj_29", pos2),
        (party_get_slot, ":special_item", "p_main_party", slot_party_horse_use_charge),
        (overlay_set_val, "$g_presentation_obj_29", ":special_item"),
        (val_add, ":pos_y", 50),

        ## agent_never_runaway
        (create_text_overlay, reg0, "@agent_never_runaway:", tf_left_align),
        (position_set_y, pos1, ":pos_y"),
        (overlay_set_position, reg0, pos1),
        (create_check_box_overlay, "$g_presentation_obj_30", "mesh_checkbox_off", "mesh_checkbox_on"),
        (position_set_y, pos2, ":pos_y"),
        (overlay_set_position, "$g_presentation_obj_30", pos2),
        (party_get_slot, ":special_item", "p_main_party", slot_party_agent_never_running_away),
        (overlay_set_val, "$g_presentation_obj_30", ":special_item"),
        (val_add, ":pos_y", 50),

        ## special_item_and_broken_item
        (create_text_overlay, reg0, "@special_item_and_broken_item:", tf_left_align),
        (position_set_y, pos1, ":pos_y"),
        (overlay_set_position, reg0, pos1),
        (create_check_box_overlay, "$g_presentation_obj_4", "mesh_checkbox_off", "mesh_checkbox_on"),
        (position_set_y, pos2, ":pos_y"),
        (overlay_set_position, "$g_presentation_obj_4", pos2),
        (party_get_slot, ":special_item", "p_main_party", slot_party_use_special_item),
        (overlay_set_val, "$g_presentation_obj_4", ":special_item"),
        (val_add, ":pos_y", 50),
        ## extra_hp
        (create_text_overlay, reg0, "@extra_hp:", tf_left_align),
        (position_set_y, pos1, ":pos_y"),
        (overlay_set_position, reg0, pos1),
        (create_check_box_overlay, "$g_presentation_obj_27", "mesh_checkbox_off", "mesh_checkbox_on"),
        (position_set_y, pos2, ":pos_y"),
        (overlay_set_position, "$g_presentation_obj_27", pos2),
        (party_get_slot, ":use_extra_hp", "p_main_party", slot_party_use_extra_hp),
        (overlay_set_val, "$g_presentation_obj_27", ":use_extra_hp"),
        (val_add, ":pos_y", 50),
        ## horse_extra_hp
        (create_text_overlay, reg0, "@horse_extra_hp:", tf_left_align),
        (position_set_y, pos1, ":pos_y"),
        (overlay_set_position, reg0, pos1),
        (create_check_box_overlay, "$g_presentation_obj_28", "mesh_checkbox_off", "mesh_checkbox_on"),
        (position_set_y, pos2, ":pos_y"),
        (overlay_set_position, "$g_presentation_obj_28", pos2),
        (party_get_slot, ":use_horse_extra_hp", "p_main_party", slot_party_horse_use_extra_hp),
        (overlay_set_val, "$g_presentation_obj_28", ":use_horse_extra_hp"),
        (val_add, ":pos_y", 50),

        # division line
        (store_add, ":line_pos_y", ":pos_y", -15),
        (call_script, "script_prsnt_lines", 520, 2, 25, ":line_pos_y", 0),
        
        ## HP bars of enemy
        (create_text_overlay, reg0, "@Show HP bars of enemy troops:", tf_left_align),
        (position_set_y, pos1, ":pos_y"),
        (overlay_set_position, reg0, pos1),
        (create_check_box_overlay, "$g_presentation_obj_8", "mesh_checkbox_off", "mesh_checkbox_on"),
        (position_set_y, pos2, ":pos_y"),
        (overlay_set_position, "$g_presentation_obj_8", pos2),
        (overlay_set_val, "$g_presentation_obj_8", "$g_hp_bar_enemy"),
        (val_add, ":pos_y", 50),
        ## HP bars of ally
        (create_text_overlay, reg0, "@Show HP bars of ally troops:", tf_left_align),
        (position_set_y, pos1, ":pos_y"),
        (overlay_set_position, reg0, pos1),
        (create_check_box_overlay, "$g_presentation_obj_7", "mesh_checkbox_off", "mesh_checkbox_on"),
        (position_set_y, pos2, ":pos_y"),
        (overlay_set_position, "$g_presentation_obj_7", pos2),
        (overlay_set_val, "$g_presentation_obj_7", "$g_hp_bar_ally"),
        (val_add, ":pos_y", 50),
        ## distance limit
        (create_text_overlay, reg0, "@Distance limit for showing HP bars:", tf_left_align),
        (position_set_y, pos1, ":pos_y"),
        (overlay_set_position, reg0, pos1),
        (create_number_box_overlay, "$g_presentation_obj_10", 3, 81),
        (position_set_y, pos2, ":pos_y"),
        (overlay_set_position, "$g_presentation_obj_10", pos2),
        (val_max, "$g_hp_bar_dis_limit", 3),
        (overlay_set_val, "$g_presentation_obj_10", "$g_hp_bar_dis_limit"),
        (val_add, ":pos_y", 50),
        
        ## Auto-save every 24 hours
        (create_text_overlay, reg0, "@Auto-save every 24 hours:", tf_left_align),
        (position_set_y, pos1, ":pos_y"),
        (overlay_set_position, reg0, pos1),
        (create_check_box_overlay, "$g_presentation_obj_35", "mesh_checkbox_off", "mesh_checkbox_on"),
        (position_set_y, pos2, ":pos_y"),
        (overlay_set_position, "$g_presentation_obj_35", pos2),
        (overlay_set_val, "$g_presentation_obj_35", "$g_auto_save"),
        (val_add, ":pos_y", 50),
        ## show daily hint
        (create_text_overlay, reg0, "@Show daily hint:", tf_left_align),
        (position_set_y, pos1, ":pos_y"),
        (overlay_set_position, reg0, pos1),
        (create_check_box_overlay, "$g_presentation_obj_34", "mesh_checkbox_off", "mesh_checkbox_on"),
        (position_set_y, pos2, ":pos_y"),
        (overlay_set_position, "$g_presentation_obj_34", pos2),
        (party_get_slot, ":use_extra_hp", "p_main_party", slot_party_use_extra_hp),
        (overlay_set_val, "$g_presentation_obj_34", "$show_daily_hint"),
        (val_add, ":pos_y", 50),
        
        ## Take all captured enemies
        (create_text_overlay, reg1, "@Take all captured enemies automatically:", tf_left_align),
        (position_set_y, pos1, ":pos_y"),
        (overlay_set_position, reg1, pos1),
        (create_check_box_overlay, "$g_presentation_obj_admin_panel_9", "mesh_checkbox_off", "mesh_checkbox_on"),
        (position_set_y, pos2, ":pos_y"),
        (overlay_set_position, "$g_presentation_obj_admin_panel_9", pos2),
        (overlay_set_val, "$g_presentation_obj_admin_panel_9", "$g_auto_take_captured_enemies"),
        (val_add, ":pos_y", 50),
        
        ## Take all rescued prisoners
        (create_text_overlay, reg1, "@Take all rescued prisoners automatically:", tf_left_align),
        (position_set_y, pos1, ":pos_y"),
        (overlay_set_position, reg1, pos1),
        (create_check_box_overlay, "$g_presentation_obj_admin_panel_10", "mesh_checkbox_off", "mesh_checkbox_on"),
        (position_set_y, pos2, ":pos_y"),
        (overlay_set_position, "$g_presentation_obj_admin_panel_10", pos2),
        (overlay_set_val, "$g_presentation_obj_admin_panel_10", "$g_auto_take_rescued_prisoners"),
        (val_add, ":pos_y", 50),
        
        (set_container_overlay, -1),

        (str_store_string, s0, "@About morale threshold: If your party's morale is below this value, the speed of consuming food will be twice as much as normal, and the bonus to party morale of all food will be also doubled"),
        (create_text_overlay, reg1, s0, tf_double_space|tf_scrollable),
        (position_set_x, pos1, 680),
        (position_set_y, pos1, 400),
        (overlay_set_position, reg1, pos1),
        (position_set_x, pos1, 800),
        (position_set_y, pos1, 800),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 300),
        (position_set_y, pos1, 120),
        (overlay_set_area_size, reg1, pos1),

        # done
        (create_game_button_overlay, "$g_presentation_obj_20", "@Done"),
        (position_set_x, pos1, 900),
        (position_set_y, pos1, 25),
        (overlay_set_position, "$g_presentation_obj_20", pos1),
        
        # cheat: change Game difficulty
        (create_combo_button_overlay, "$g_presentation_obj_1"),
        (position_set_x, pos1, 850),
        (position_set_y, pos1, 300),
        (overlay_set_position, "$g_presentation_obj_1", pos1),
        (overlay_add_item, "$g_presentation_obj_1", "@luanshi"),
        (overlay_add_item, "$g_presentation_obj_1", "@Hell"),
        (overlay_add_item, "$g_presentation_obj_1", "@Nightmare"),
        (overlay_add_item, "$g_presentation_obj_1", "@Normal"),
        (store_sub, ":game_difficulty", 4, "$g_game_difficulty"),
        (overlay_set_val, "$g_presentation_obj_1", ":game_difficulty"),

        (create_text_overlay, "$g_presentation_obj_2", "@Game difficulty:", tf_center_justify),
        (position_set_x, pos1, 830),
        (position_set_y, pos1, 340),
        (overlay_set_position, "$g_presentation_obj_2", pos1),

        (position_set_x, pos1, 800),
        (position_set_y, pos1, 800),
        (overlay_set_size, "$g_presentation_obj_1", pos1),
        (overlay_set_size, "$g_presentation_obj_2", pos1),
        #(overlay_set_display, "$g_presentation_obj_1", "$cheat_mode"),
        #(overlay_set_display, "$g_presentation_obj_2", "$cheat_mode"),
        
      ]),

      #(ti_on_presentation_run,
        #[
        ####### mouse fix pos system #######
        #(call_script, "script_mouse_fix_pos_run"),
        ####### mouse fix pos system #######
      #]),

    (ti_on_presentation_event_state_change,
      [
        (store_trigger_param_1, ":object"),
        (store_trigger_param_2, ":value"),

        (try_begin),
          (eq, ":object", "$g_presentation_obj_1"),
          (store_sub, "$g_game_difficulty", 4, ":value"),
        (else_try),
          (eq, ":object", "$g_presentation_obj_3"),
          (assign, "$g_use_critical_hit", ":value"),
        (else_try),
          (eq, ":object", "$g_presentation_obj_4"),
          (party_set_slot, "p_main_party", slot_party_use_special_item, ":value"),
        (else_try),
          (eq, ":object", "$g_presentation_obj_5"),
          (assign, "$g_report_shot_distance", ":value"),
        (else_try),
          (eq, ":object", "$g_presentation_obj_7"),
          (assign, "$g_hp_bar_ally", ":value"),
        (else_try),
          (eq, ":object", "$g_presentation_obj_8"),
          (assign, "$g_hp_bar_enemy", ":value"),
        (else_try),
          (eq, ":object", "$g_presentation_obj_9"),
          (assign, "$g_encumbrance_penalty", ":value"),
        (else_try),
          (eq, ":object", "$g_presentation_obj_10"),
          (assign, "$g_hp_bar_dis_limit", ":value"),
        (else_try),
          (eq, ":object", "$g_presentation_obj_11"),
          (assign, "$disable_npc_complaints", ":value"),
        (else_try),
          (eq, ":object", "$g_presentation_obj_12"),
          (assign, "$cheat_mode", ":value"),
        (else_try),
          (eq, ":object", "$g_presentation_obj_13"),
          (assign, "$g_show_minimap", ":value"),
        (else_try),
          (eq, ":object", "$g_presentation_obj_14"),
          (assign, "$g_minimap_ratio", ":value"),
        (else_try),
          (eq, ":object", "$g_presentation_obj_15"),
          (assign, "$g_speed_ai_battles", ":value"),
        (else_try),
          (eq, ":object", "$g_presentation_obj_16"),
          (assign, "$g_report_extra_xp_and_wpt", ":value"),
        (else_try),
          (eq, ":object", "$g_presentation_obj_17"),
          (store_sub, "$global_speed_modifier", ":value", 100),
        (else_try),
          (eq, ":object", "$g_presentation_obj_18"),
          (assign, "$g_rand_rain_limit", ":value"),
        (else_try),
          (eq, ":object", "$g_presentation_obj_23"),
          (assign, "$g_morale_threshold", ":value"),
        (else_try),
          (eq, ":object", "$g_presentation_obj_24"),
          (set_global_haze_amount, ":value"),
        (else_try),
          (eq, ":object", "$g_presentation_obj_25"),
          (set_global_cloud_amount, ":value"),
        (else_try),
          (eq, ":object", "$g_presentation_obj_26"),
          (assign, "$g_reinforcement_stage", ":value"),
        (else_try),
          (eq, ":object", "$g_presentation_obj_27"),
          (party_set_slot, "p_main_party", slot_party_use_extra_hp, ":value"),
        (else_try),
          (eq, ":object", "$g_presentation_obj_28"),
          (party_set_slot, "p_main_party", slot_party_horse_use_extra_hp, ":value"),
        (else_try),
          (eq, ":object", "$g_presentation_obj_29"),
          (party_set_slot, "p_main_party", slot_party_horse_use_charge, ":value"),
        (else_try),
          (eq, ":object", "$g_presentation_obj_30"),
          (party_set_slot, "p_main_party", slot_party_agent_never_running_away, ":value"),
        (else_try),
          (eq, ":object", "$g_presentation_obj_31"),
          (assign, "$g_agent_use_shield_bash", ":value"),
        (else_try),
          (eq, ":object", "$g_presentation_obj_32"),
          (assign, "$g_weapon_fire_particle", ":value"),
        (else_try),
          (eq, ":object", "$g_presentation_obj_33"),
          (assign, "$g_weapon_harm_ally", ":value"),
        (else_try),
          (eq, ":object", "$g_presentation_obj_35"),
          (assign, "$g_auto_save", ":value"),
        (else_try),
          (eq, ":object", "$g_presentation_obj_34"),
          (assign, "$show_daily_hint", ":value"),
        (else_try),
          (eq, ":object", "$g_presentation_obj_admin_panel_9"),
          (assign, "$g_auto_take_captured_enemies", ":value"),
        (else_try),
          (eq, ":object", "$g_presentation_obj_admin_panel_10"),
          (assign, "$g_auto_take_rescued_prisoners", ":value"),
          
        #(else_try),
          #(eq, ":object", "$g_presentation_obj_34"),
          #(assign, "$g_use_broken_lance", ":value"),
        (else_try),
          (eq, ":object", "$g_presentation_obj_20"),
          (presentation_set_duration, 0),
        (try_end),
      ]),
    ]),

  ("record_password",0,mesh_load_window,[
      (ti_on_presentation_load,
       [(set_fixed_point_multiplier, 1000),
        (str_store_string, s1, "@Record password"),
        (create_text_overlay, reg1, s1, tf_center_justify),
        (position_set_x, pos1, 500),
        (position_set_y, pos1, 500),
        (overlay_set_position, reg1, pos1),
        (overlay_set_text, reg1, s1),
        
        (create_number_box_overlay, "$g_presentation_obj_1", 0, 999999999),
        (position_set_x, pos1, 400),
        (position_set_y, pos1, 400),
        (overlay_set_position, "$g_presentation_obj_1", pos1),
        (overlay_set_val, "$g_presentation_obj_1", 0),
        #(overlay_set_display, "$g_presentation_obj_1", 0),
        
        (create_button_overlay, "$g_presentation_obj_2", "@Continue...", tf_center_justify),
        (position_set_x, pos1, 500),
        (position_set_y, pos1, 300),
        (overlay_set_position, "$g_presentation_obj_2", pos1),
        (presentation_set_duration, 999999),
        ]),
      (ti_on_presentation_event_state_change,
       [(store_trigger_param_1, ":object"),
        (store_trigger_param_2, ":value"),
        (try_begin),
          (eq, ":object", "$g_presentation_obj_1"),
          (gt, ":value", 100),
          (try_begin),
            (eq, ":value", password),
            (presentation_set_duration, 0),
            (jump_to_menu, "mnu_camp_cheat_2"),
          (else_try),
            (presentation_set_duration, 0),
            (jump_to_menu, "mnu_camp"),
          (try_end),
        (else_try),
          (eq, ":object", "$g_presentation_obj_2"),
          (presentation_set_duration, 0),
        (try_end),
        ]),
      ]),

  ("recruit_plan", 0, mesh_load_window, [
    (ti_on_presentation_load,
      [
        (presentation_set_duration, 999999),
        (set_fixed_point_multiplier, 1000),
  
        (call_script, "script_get_town_faction_for_recruiting", "$current_town"),
        (assign, ":party_faction", reg0),
        
        
        (str_store_faction_name, s1, ":party_faction"),
        (party_get_slot, reg1, "$current_town", slot_town_recruit_gold),
        (store_div, reg2, reg1, reinforcement_cost_player),
        (store_sub, reg3, reg2, 1),
        (assign, reg4, reinforcement_cost_player),
        (store_troop_gold, reg5, "trp_player"),
        (party_get_slot, ":party_type", "$current_town", slot_party_type),
        (assign, reg6, 0),
        (try_begin),
          (eq, ":party_type", spt_castle),
          (assign, reg6, 1),
        (try_end),
        
        (create_text_overlay, reg0, "@You can recruit troops of {s1} for this {reg6?castle:town}. Recruiting will costs {reg4} dinaers and needs to spend 1 day every time. You have {reg1} dinaers left here(can recruit for {reg2} {reg3?times:time}) and have {reg5} dinaers in your package.", tf_scrollable),
        (position_set_x, pos1, 200),
        (position_set_y, pos1, 300),
        (overlay_set_position, reg0, pos1),
        (position_set_x, pos1, 500),
        (position_set_y, pos1, 300),
        (overlay_set_area_size, reg0, pos1),
        
        (create_combo_button_overlay, "$g_presentation_obj_1"),
        (position_set_x, pos1, 380),
        (position_set_y, pos1, 280),
        (overlay_set_position, "$g_presentation_obj_1", pos1),
        (position_set_x, pos1, 800),
        (position_set_y, pos1, 800),
        (overlay_set_size, "$g_presentation_obj_1", pos1),
        (overlay_add_item, "$g_presentation_obj_1", "@Decrease times of recruiting"),
        (overlay_add_item, "$g_presentation_obj_1", "@Increase times of recruiting"),
        (overlay_set_val, "$g_presentation_obj_1", 1),
        
        (position_set_x, pos1, 500),
        (position_set_y, pos1, 280),
        # Increase
        (store_troop_gold, ":player_gold", "trp_player"),
        (val_div, ":player_gold", reinforcement_cost_player),
        (val_add, ":player_gold", 1),
        (create_number_box_overlay, "$g_presentation_obj_2", 0, ":player_gold"),
        (overlay_set_position, "$g_presentation_obj_2", pos1),
        (overlay_set_val, "$g_presentation_obj_2", 0),
        (overlay_set_display, "$g_presentation_obj_2", 1),
        # Decrease
        (party_get_slot, ":recruit_gold", "$current_town", slot_town_recruit_gold),
        (val_div, ":recruit_gold", reinforcement_cost_player),
        (val_add, ":recruit_gold", 1),
        (create_number_box_overlay, "$g_presentation_obj_3", 0, ":recruit_gold"),
        (overlay_set_position, "$g_presentation_obj_3", pos1),
        (overlay_set_val, "$g_presentation_obj_3", 0),
        (overlay_set_display, "$g_presentation_obj_3", 0),
        
        (create_game_button_overlay, "$g_presentation_obj_5", "@Done"),
        (position_set_x, pos1, 900),
        (position_set_y, pos1, 25),
        (overlay_set_position, "$g_presentation_obj_5", pos1),
      ]),
  
    (ti_on_presentation_event_state_change,
      [
        (store_trigger_param_1, ":object"),
        (store_trigger_param_2, ":value"),
  
        (try_begin),
          (eq, ":object", "$g_presentation_obj_1"),
          (try_begin),
            (eq, ":value", 1),
            (overlay_set_display, "$g_presentation_obj_2", 1),
            (overlay_set_display, "$g_presentation_obj_3", 0),
          (else_try),
            (overlay_set_display, "$g_presentation_obj_2", 0),
            (overlay_set_display, "$g_presentation_obj_3", 1),
          (try_end),
        (else_try),
          (eq, ":object", "$g_presentation_obj_2"),
          (gt, ":value", 0),
          (store_mul, ":cost_money", ":value", reinforcement_cost_player),
          (troop_remove_gold, "trp_player", ":cost_money"),
          (party_get_slot, ":recruit_gold", "$current_town", slot_town_recruit_gold),
          (val_add, ":recruit_gold", ":cost_money"),
          (party_set_slot, "$current_town", slot_town_recruit_gold, ":recruit_gold"),
          (start_presentation, "prsnt_recruit_plan"),
        (else_try),
          (eq, ":object", "$g_presentation_obj_3"),
          (gt, ":value", 0),
          (store_mul, ":cancle_money", ":value", reinforcement_cost_player),
          (troop_add_gold, "trp_player", ":cancle_money"),
          (party_get_slot, ":recruit_gold", "$current_town", slot_town_recruit_gold),
          (val_sub, ":recruit_gold", ":cancle_money"),
          (party_set_slot, "$current_town", slot_town_recruit_gold, ":recruit_gold"),
          (start_presentation, "prsnt_recruit_plan"),
        (else_try),
          (eq, ":object", "$g_presentation_obj_5"),
          (presentation_set_duration, 0),
        (try_end),
    ]),
  ]),
  
  ("recruit_plan_hoseman", 0, mesh_load_window, [
    (ti_on_presentation_load,
      [
        (presentation_set_duration, 999999),
        (set_fixed_point_multiplier, 1000),
  
        (call_script, "script_get_town_faction_for_recruiting", "$current_town"),
        (assign, ":party_faction", reg0),
        
        
        
        (create_mesh_overlay, reg0, "mesh_cb_ui_icon_horseman"),
        (position_set_x, pos1, 190),
        (position_set_y, pos1, 280),
        (overlay_set_position, reg0, pos1),
        (position_set_x, pos1, 400),
        (position_set_y, pos1, 400),
        (overlay_set_size, reg0, pos1),
        
        (create_mesh_overlay, reg0, "mesh_cb_ui_icon_horseman"),
        (position_set_x, pos1, 610),
        (position_set_y, pos1, 280),
        (overlay_set_position, reg0, pos1),
        (position_set_x, pos1, 400),
        (position_set_y, pos1, 400),
        (overlay_set_size, reg0, pos1),
        
        (str_store_faction_name, s1, ":party_faction"),
        (party_get_slot, reg1, "$current_town", slot_town_recruit_gold_hoseman),
        (store_div, reg2, reg1, reinforcement_cost_player_hoseman),
        (store_sub, reg3, reg2, 1),
        (assign, reg4, reinforcement_cost_player_hoseman),
        (store_troop_gold, reg5, "trp_player"),
        (party_get_slot, ":party_type", "$current_town", slot_party_type),
        (assign, reg6, 0),
        (try_begin),
          (eq, ":party_type", spt_castle),
          (assign, reg6, 1),
        (try_end),
        
        (create_text_overlay, reg0, "@You can recruit horseman of {s1} for this {reg6?castle:town}. Recruiting will costs {reg4} dinaers and needs to spend 1 day every time. You have {reg1} dinaers left here(can recruit for {reg2} {reg3?times:time}) and have {reg5} dinaers in your package.", tf_scrollable),
        (position_set_x, pos1, 200),
        (position_set_y, pos1, 300),
        (overlay_set_position, reg0, pos1),
        (position_set_x, pos1, 500),
        (position_set_y, pos1, 300),
        (overlay_set_area_size, reg0, pos1),
        
        (create_combo_button_overlay, "$g_presentation_obj_1"),
        (position_set_x, pos1, 380),
        (position_set_y, pos1, 280),
        (overlay_set_position, "$g_presentation_obj_1", pos1),
        (position_set_x, pos1, 800),
        (position_set_y, pos1, 800),
        (overlay_set_size, "$g_presentation_obj_1", pos1),
        (overlay_add_item, "$g_presentation_obj_1", "@Decrease times of recruiting"),
        (overlay_add_item, "$g_presentation_obj_1", "@Increase times of recruiting"),
        (overlay_set_val, "$g_presentation_obj_1", 1),
        
        (position_set_x, pos1, 500),
        (position_set_y, pos1, 280),
        # Increase
        (store_troop_gold, ":player_gold", "trp_player"),
        (val_div, ":player_gold", reinforcement_cost_player_hoseman),
        (val_add, ":player_gold", 1),
        (create_number_box_overlay, "$g_presentation_obj_2", 0, ":player_gold"),
        (overlay_set_position, "$g_presentation_obj_2", pos1),
        (overlay_set_val, "$g_presentation_obj_2", 0),
        (overlay_set_display, "$g_presentation_obj_2", 1),
        # Decrease
        (party_get_slot, ":recruit_gold", "$current_town", slot_town_recruit_gold_hoseman),
        (val_div, ":recruit_gold", reinforcement_cost_player_hoseman),
        (val_add, ":recruit_gold", 1),
        (create_number_box_overlay, "$g_presentation_obj_3", 0, ":recruit_gold"),
        (overlay_set_position, "$g_presentation_obj_3", pos1),
        (overlay_set_val, "$g_presentation_obj_3", 0),
        (overlay_set_display, "$g_presentation_obj_3", 0),
        
        (create_game_button_overlay, "$g_presentation_obj_5", "@Done"),
        (position_set_x, pos1, 900),
        (position_set_y, pos1, 25),
        (overlay_set_position, "$g_presentation_obj_5", pos1),
        
#      ####### mouse fix pos system #######
#      (call_script, "script_mouse_fix_pos_ready"),
#      ####### mouse fix pos system #######
      ]),
  

#    (ti_on_presentation_run,      [
      ####### mouse fix pos system #######
#      (call_script, "script_mouse_fix_pos_run"),
      ####### mouse fix pos system #######    ]),
     
    (ti_on_presentation_event_state_change,
      [
        (store_trigger_param_1, ":object"),
        (store_trigger_param_2, ":value"),
  
        (try_begin),
          (eq, ":object", "$g_presentation_obj_1"),
          (try_begin),
            (eq, ":value", 1),
            (overlay_set_display, "$g_presentation_obj_2", 1),
            (overlay_set_display, "$g_presentation_obj_3", 0),
          (else_try),
            (overlay_set_display, "$g_presentation_obj_2", 0),
            (overlay_set_display, "$g_presentation_obj_3", 1),
          (try_end),
        (else_try),
          (eq, ":object", "$g_presentation_obj_2"),
          (gt, ":value", 0),
          (store_mul, ":cost_money", ":value", reinforcement_cost_player_hoseman),
          (troop_remove_gold, "trp_player", ":cost_money"),
          (party_get_slot, ":recruit_gold", "$current_town", slot_town_recruit_gold_hoseman),
          (val_add, ":recruit_gold", ":cost_money"),
          (party_set_slot, "$current_town", slot_town_recruit_gold_hoseman, ":recruit_gold"),
          (start_presentation, "prsnt_recruit_plan_hoseman"),
        (else_try),
          (eq, ":object", "$g_presentation_obj_3"),
          (gt, ":value", 0),
          (store_mul, ":cancle_money", ":value", reinforcement_cost_player_hoseman),
          (troop_add_gold, "trp_player", ":cancle_money"),
          (party_get_slot, ":recruit_gold", "$current_town", slot_town_recruit_gold_hoseman),
          (val_sub, ":recruit_gold", ":cancle_money"),
          (party_set_slot, "$current_town", slot_town_recruit_gold_hoseman, ":recruit_gold"),
          (start_presentation, "prsnt_recruit_plan_hoseman"),
        (else_try),
          (eq, ":object", "$g_presentation_obj_5"),
          (presentation_set_duration, 0),
        (try_end),
    ]),
  ]),

  ("recruit_plan_footman", 0, mesh_load_window, [
    (ti_on_presentation_load,
      [
        (presentation_set_duration, 999999),
        (set_fixed_point_multiplier, 1000),
  
        (call_script, "script_get_town_faction_for_recruiting", "$current_town"),
        (assign, ":party_faction", reg0),
        (str_store_faction_name, s1, ":party_faction"),
        
        
        (create_mesh_overlay, reg0, "mesh_cb_ui_icon_infantry"),
        (position_set_x, pos1, 190),
        (position_set_y, pos1, 280),
        (overlay_set_position, reg0, pos1),
        (position_set_x, pos1, 400),
        (position_set_y, pos1, 400),
        (overlay_set_size, reg0, pos1),
        
        (create_mesh_overlay, reg0, "mesh_cb_ui_icon_infantry"),
        (position_set_x, pos1, 610),
        (position_set_y, pos1, 280),
        (overlay_set_position, reg0, pos1),
        (position_set_x, pos1, 400),
        (position_set_y, pos1, 400),
        (overlay_set_size, reg0, pos1),
        
        (party_get_slot, reg1, "$current_town", slot_town_recruit_gold_footman),
        (store_div, reg2, reg1, reinforcement_cost_player_footman),
        (store_sub, reg3, reg2, 1),
        (assign, reg4, reinforcement_cost_player_footman),
        (store_troop_gold, reg5, "trp_player"),
        (party_get_slot, ":party_type", "$current_town", slot_party_type),
        (assign, reg6, 0),
        (try_begin),
          (eq, ":party_type", spt_castle),
          (assign, reg6, 1),
        (try_end),
        
        (create_text_overlay, reg0, "@You can recruit footman of {s1} for this {reg6?castle:town}. Recruiting will costs {reg4} dinaers and needs to spend 1 day every time. You have {reg1} dinaers left here(can recruit for {reg2} {reg3?times:time}) and have {reg5} dinaers in your package.", tf_scrollable),
        (position_set_x, pos1, 200),
        (position_set_y, pos1, 300),
        (overlay_set_position, reg0, pos1),
        (position_set_x, pos1, 500),
        (position_set_y, pos1, 300),
        (overlay_set_area_size, reg0, pos1),
        
        (create_combo_button_overlay, "$g_presentation_obj_1"),
        (position_set_x, pos1, 380),
        (position_set_y, pos1, 280),
        (overlay_set_position, "$g_presentation_obj_1", pos1),
        (position_set_x, pos1, 800),
        (position_set_y, pos1, 800),
        (overlay_set_size, "$g_presentation_obj_1", pos1),
        (overlay_add_item, "$g_presentation_obj_1", "@Decrease times of recruiting"),
        (overlay_add_item, "$g_presentation_obj_1", "@Increase times of recruiting"),
        (overlay_set_val, "$g_presentation_obj_1", 1),
        
        (position_set_x, pos1, 500),
        (position_set_y, pos1, 280),
        # Increase
        (store_troop_gold, ":player_gold", "trp_player"),
        (val_div, ":player_gold", reinforcement_cost_player_footman),
        (val_add, ":player_gold", 1),
        (create_number_box_overlay, "$g_presentation_obj_2", 0, ":player_gold"),
        (overlay_set_position, "$g_presentation_obj_2", pos1),
        (overlay_set_val, "$g_presentation_obj_2", 0),
        (overlay_set_display, "$g_presentation_obj_2", 1),
        # Decrease
        (party_get_slot, ":recruit_gold", "$current_town", slot_town_recruit_gold_footman),
        (val_div, ":recruit_gold", reinforcement_cost_player_footman),
        (val_add, ":recruit_gold", 1),
        (create_number_box_overlay, "$g_presentation_obj_3", 0, ":recruit_gold"),
        (overlay_set_position, "$g_presentation_obj_3", pos1),
        (overlay_set_val, "$g_presentation_obj_3", 0),
        (overlay_set_display, "$g_presentation_obj_3", 0),
        
        (create_game_button_overlay, "$g_presentation_obj_5", "@Done"),
        (position_set_x, pos1, 900),
        (position_set_y, pos1, 25),
        (overlay_set_position, "$g_presentation_obj_5", pos1),
      ]),
  
    (ti_on_presentation_event_state_change,
      [
        (store_trigger_param_1, ":object"),
        (store_trigger_param_2, ":value"),
  
        (try_begin),
          (eq, ":object", "$g_presentation_obj_1"),
          (try_begin),
            (eq, ":value", 1),
            (overlay_set_display, "$g_presentation_obj_2", 1),
            (overlay_set_display, "$g_presentation_obj_3", 0),
          (else_try),
            (overlay_set_display, "$g_presentation_obj_2", 0),
            (overlay_set_display, "$g_presentation_obj_3", 1),
          (try_end),
        (else_try),
          (eq, ":object", "$g_presentation_obj_2"),
          (gt, ":value", 0),
          (store_mul, ":cost_money", ":value", reinforcement_cost_player_footman),
          (troop_remove_gold, "trp_player", ":cost_money"),
          (party_get_slot, ":recruit_gold", "$current_town", slot_town_recruit_gold_footman),
          (val_add, ":recruit_gold", ":cost_money"),
          (party_set_slot, "$current_town", slot_town_recruit_gold_footman, ":recruit_gold"),
          (start_presentation, "prsnt_recruit_plan_footman"),
        (else_try),
          (eq, ":object", "$g_presentation_obj_3"),
          (gt, ":value", 0),
          (store_mul, ":cancle_money", ":value", reinforcement_cost_player_footman),
          (troop_add_gold, "trp_player", ":cancle_money"),
          (party_get_slot, ":recruit_gold", "$current_town", slot_town_recruit_gold_footman),
          (val_sub, ":recruit_gold", ":cancle_money"),
          (party_set_slot, "$current_town", slot_town_recruit_gold_footman, ":recruit_gold"),
          (start_presentation, "prsnt_recruit_plan_footman"),
        (else_try),
          (eq, ":object", "$g_presentation_obj_5"),
          (presentation_set_duration, 0),
        (try_end),
    ]),
  ]),

  ("recruit_plan_archer", 0, mesh_load_window, [
    (ti_on_presentation_load,
      [
        (presentation_set_duration, 999999),
        (set_fixed_point_multiplier, 1000),
  
        (call_script, "script_get_town_faction_for_recruiting", "$current_town"),
        (assign, ":party_faction", reg0),
        (str_store_faction_name, s1, ":party_faction"),
        
        
        (create_mesh_overlay, reg0, "mesh_cb_ui_icon_infantry"),
        (position_set_x, pos1, 190),
        (position_set_y, pos1, 280),
        (overlay_set_position, reg0, pos1),
        (position_set_x, pos1, 400),
        (position_set_y, pos1, 400),
        (overlay_set_size, reg0, pos1),
        
        (create_mesh_overlay, reg0, "mesh_cb_ui_icon_infantry"),
        (position_set_x, pos1, 610),
        (position_set_y, pos1, 280),
        (overlay_set_position, reg0, pos1),
        (position_set_x, pos1, 400),
        (position_set_y, pos1, 400),
        (overlay_set_size, reg0, pos1),
        
        (party_get_slot, reg1, "$current_town", slot_town_recruit_gold_archer),
        (store_div, reg2, reg1, reinforcement_cost_player_archer),
        (store_sub, reg3, reg2, 1),
        (assign, reg4, reinforcement_cost_player_archer),
        (store_troop_gold, reg5, "trp_player"),
        (party_get_slot, ":party_type", "$current_town", slot_party_type),
        (assign, reg6, 0),
        (try_begin),
          (eq, ":party_type", spt_castle),
          (assign, reg6, 1),
        (try_end),
        
        (create_text_overlay, reg0, "@You can recruit archer of {s1} for this {reg6?castle:town}. Recruiting will costs {reg4} dinaers and needs to spend 1 day every time. You have {reg1} dinaers left here(can recruit for {reg2} {reg3?times:time}) and have {reg5} dinaers in your package.", tf_scrollable),
        (position_set_x, pos1, 200),
        (position_set_y, pos1, 300),
        (overlay_set_position, reg0, pos1),
        (position_set_x, pos1, 500),
        (position_set_y, pos1, 300),
        (overlay_set_area_size, reg0, pos1),
        
        (create_combo_button_overlay, "$g_presentation_obj_1"),
        (position_set_x, pos1, 380),
        (position_set_y, pos1, 280),
        (overlay_set_position, "$g_presentation_obj_1", pos1),
        (position_set_x, pos1, 800),
        (position_set_y, pos1, 800),
        (overlay_set_size, "$g_presentation_obj_1", pos1),
        (overlay_add_item, "$g_presentation_obj_1", "@Decrease times of recruiting"),
        (overlay_add_item, "$g_presentation_obj_1", "@Increase times of recruiting"),
        (overlay_set_val, "$g_presentation_obj_1", 1),
        
        (position_set_x, pos1, 500),
        (position_set_y, pos1, 280),
        # Increase
        (store_troop_gold, ":player_gold", "trp_player"),
        (val_div, ":player_gold", reinforcement_cost_player_archer),
        (val_add, ":player_gold", 1),
        (create_number_box_overlay, "$g_presentation_obj_2", 0, ":player_gold"),
        (overlay_set_position, "$g_presentation_obj_2", pos1),
        (overlay_set_val, "$g_presentation_obj_2", 0),
        (overlay_set_display, "$g_presentation_obj_2", 1),
        # Decrease
        (party_get_slot, ":recruit_gold", "$current_town", slot_town_recruit_gold_archer),
        (val_div, ":recruit_gold", reinforcement_cost_player_archer),
        (val_add, ":recruit_gold", 1),
        (create_number_box_overlay, "$g_presentation_obj_3", 0, ":recruit_gold"),
        (overlay_set_position, "$g_presentation_obj_3", pos1),
        (overlay_set_val, "$g_presentation_obj_3", 0),
        (overlay_set_display, "$g_presentation_obj_3", 0),
        
        (create_game_button_overlay, "$g_presentation_obj_5", "@Done"),
        (position_set_x, pos1, 900),
        (position_set_y, pos1, 25),
        (overlay_set_position, "$g_presentation_obj_5", pos1),
      ]),
  
    (ti_on_presentation_event_state_change,
      [
        (store_trigger_param_1, ":object"),
        (store_trigger_param_2, ":value"),
  
        (try_begin),
          (eq, ":object", "$g_presentation_obj_1"),
          (try_begin),
            (eq, ":value", 1),
            (overlay_set_display, "$g_presentation_obj_2", 1),
            (overlay_set_display, "$g_presentation_obj_3", 0),
          (else_try),
            (overlay_set_display, "$g_presentation_obj_2", 0),
            (overlay_set_display, "$g_presentation_obj_3", 1),
          (try_end),
        (else_try),
          (eq, ":object", "$g_presentation_obj_2"),
          (gt, ":value", 0),
          (store_mul, ":cost_money", ":value", reinforcement_cost_player_archer),
          (troop_remove_gold, "trp_player", ":cost_money"),
          (party_get_slot, ":recruit_gold", "$current_town", slot_town_recruit_gold_archer),
          (val_add, ":recruit_gold", ":cost_money"),
          (party_set_slot, "$current_town", slot_town_recruit_gold_archer, ":recruit_gold"),
          (start_presentation, "prsnt_recruit_plan_archer"),
        (else_try),
          (eq, ":object", "$g_presentation_obj_3"),
          (gt, ":value", 0),
          (store_mul, ":cancle_money", ":value", reinforcement_cost_player_archer),
          (troop_add_gold, "trp_player", ":cancle_money"),
          (party_get_slot, ":recruit_gold", "$current_town", slot_town_recruit_gold_archer),
          (val_sub, ":recruit_gold", ":cancle_money"),
          (party_set_slot, "$current_town", slot_town_recruit_gold_archer, ":recruit_gold"),
          (start_presentation, "prsnt_recruit_plan_archer"),
        (else_try),
          (eq, ":object", "$g_presentation_obj_5"),
          (presentation_set_duration, 0),
        (try_end),
    ]),
  ]),
  
  ("change_all_factions_color", 0, mesh_load_window, [
    (ti_on_presentation_load,
      [
        (presentation_set_duration, 999999),
        (set_fixed_point_multiplier, 1000),
        
        (create_combo_button_overlay, "$g_presentation_obj_1"),
        (position_set_x, pos1, 500),
        (position_set_y, pos1, 680),
        (overlay_set_position, "$g_presentation_obj_1", pos1),
        
        # faction list
        (troop_set_slot, "trp_temp_array_a", 0, "fac_manhunters"),
        (troop_set_slot, "trp_temp_array_a", 1, "fac_deserters"),
        (troop_set_slot, "trp_temp_array_a", 2, "fac_outlaws"),
        (troop_set_slot, "trp_temp_array_a", 3, "fac_player_supporters_faction"),
        (troop_set_slot, "trp_temp_array_a", 4, "fac_kingdom_14"),
        (troop_set_slot, "trp_temp_array_a", 5, "fac_kingdom_13"),
        
        (troop_set_slot, "trp_temp_array_a", 6, "fac_kingdom_12"),
        (troop_set_slot, "trp_temp_array_a", 7, "fac_kingdom_11"),
        (troop_set_slot, "trp_temp_array_a", 8, "fac_kingdom_10"),
        (troop_set_slot, "trp_temp_array_a", 9, "fac_kingdom_9"),
        (troop_set_slot, "trp_temp_array_a", 10, "fac_kingdom_8"),
        (troop_set_slot, "trp_temp_array_a", 11, "fac_kingdom_7"),
        
        (troop_set_slot, "trp_temp_array_a", 12, "fac_kingdom_6"),
        (troop_set_slot, "trp_temp_array_a", 13, "fac_kingdom_5"),
        (troop_set_slot, "trp_temp_array_a", 14, "fac_kingdom_4"),
        (troop_set_slot, "trp_temp_array_a", 15, "fac_kingdom_3"),
        (troop_set_slot, "trp_temp_array_a", 16, "fac_kingdom_2"),
        (troop_set_slot, "trp_temp_array_a", 17, "fac_kingdom_1"),
        # default color list
        (troop_set_slot, "trp_temp_array_b", 0, 0x80ff80),
        (troop_set_slot, "trp_temp_array_b", 1, 0xff8080),
        (troop_set_slot, "trp_temp_array_b", 2, 0xcc66cc),
        (troop_set_slot, "trp_temp_array_b", 3, 0xFF4433),
        
        (troop_set_slot, "trp_temp_array_b", 4, 0xadd451),
        (troop_set_slot, "trp_temp_array_b", 5, 0xE9E9E9),
        
        (troop_set_slot, "trp_temp_array_b", 6, 0xFFFF00),
        (troop_set_slot, "trp_temp_array_b", 7, 0xFF6300),
        (troop_set_slot, "trp_temp_array_b", 8, 0x33DDDD),
        (troop_set_slot, "trp_temp_array_b", 9, 0x6AFF00),
        (troop_set_slot, "trp_temp_array_b", 10, 0x013EED),
        (troop_set_slot, "trp_temp_array_b", 11, 0xFFCC00),
        
        (troop_set_slot, "trp_temp_array_b", 12, 0x0000CD),
        (troop_set_slot, "trp_temp_array_b", 13, 0x33DD33),
        (troop_set_slot, "trp_temp_array_b", 14, 0xFF0000),
        (troop_set_slot, "trp_temp_array_b", 15, 0xFF0090),
        (troop_set_slot, "trp_temp_array_b", 16, 0xFF5A5A),
        (troop_set_slot, "trp_temp_array_b", 17, 0x3264B4),
        
        (try_for_range, ":cur_slot", 0, 18),
          (troop_get_slot, ":cur_faction", "trp_temp_array_a", ":cur_slot"),
          (str_store_faction_name, s0, ":cur_faction"),
          (overlay_add_item, "$g_presentation_obj_1", s0),
        (try_end),
        (overlay_set_val, "$g_presentation_obj_1", "$temp"),
        
        ## name and color
        (troop_get_slot, ":cur_faction", "trp_temp_array_a", "$temp"),
        (str_store_faction_name, s0, ":cur_faction"),
        (create_text_overlay, reg1, "@Faction color of {s0}:", tf_center_justify),
        (position_set_x, pos1, 500),
        (position_set_y, pos1, 600),
        (overlay_set_position, reg1, pos1),
        (create_mesh_overlay, "$g_presentation_obj_2", "mesh_white_plane"),
        (position_set_x, pos1, 450),
        (position_set_y, pos1, 480),
        (overlay_set_position, "$g_presentation_obj_2", pos1),
        (position_set_x, pos1, 5000),
        (position_set_y, pos1, 5000),
        (overlay_set_size, "$g_presentation_obj_2", pos1),
        (faction_get_color, ":faction_color", ":cur_faction"),
        (overlay_set_color, "$g_presentation_obj_2", ":faction_color"),
        
        ## sliders
        (position_set_x, pos1, 500),
        (create_slider_overlay, "$g_presentation_obj_3", 0, 255),
        (position_set_y, pos1, 400),
        (overlay_set_position, "$g_presentation_obj_3", pos1),
        (create_slider_overlay, "$g_presentation_obj_4", 0, 255),
        (position_set_y, pos1, 350),
        (overlay_set_position, "$g_presentation_obj_4", pos1),
        (create_slider_overlay, "$g_presentation_obj_5", 0, 255),
        (position_set_y, pos1, 300),
        (overlay_set_position, "$g_presentation_obj_5", pos1),
        (store_mod, ":blue", ":faction_color", 0x100),
        (val_div, ":faction_color", 0x100),
        (store_mod, ":green", ":faction_color", 0x100),
        (val_div, ":faction_color", 0x100),
        (store_mod, ":red", ":faction_color", 0x100),
        (overlay_set_val, "$g_presentation_obj_3", ":red"),
        (overlay_set_val, "$g_presentation_obj_4", ":green"),
        (overlay_set_val, "$g_presentation_obj_5", ":blue"),
        ## num boxes
        (position_set_x, pos1, 650),
        (create_number_box_overlay, "$g_presentation_obj_6", 0, 256),
        (position_set_y, pos1, 400),
        (overlay_set_position, "$g_presentation_obj_6", pos1),
        (create_number_box_overlay, "$g_presentation_obj_7", 0, 256),
        (position_set_y, pos1, 350),
        (overlay_set_position, "$g_presentation_obj_7", pos1),
        (create_number_box_overlay, "$g_presentation_obj_8", 0, 256),
        (position_set_y, pos1, 300),
        (overlay_set_position, "$g_presentation_obj_8", pos1),
        (overlay_set_val, "$g_presentation_obj_6", ":red"),
        (overlay_set_val, "$g_presentation_obj_7", ":green"),
        (overlay_set_val, "$g_presentation_obj_8", ":blue"),
        (assign, reg2, ":red"),
        (assign, reg3, ":green"),
        (assign, reg4, ":blue"),
        ## text: r g b
        (position_set_x, pos1, 330),
        (create_text_overlay, reg1, "@Red:", tf_center_justify),
        (position_set_y, pos1, 400),
        (overlay_set_position, reg1, pos1),
        (create_text_overlay, reg1, "@Green:", tf_center_justify),
        (position_set_y, pos1, 350),
        (overlay_set_position, reg1, pos1),
        (create_text_overlay, reg1, "@Blue:", tf_center_justify),
        (position_set_y, pos1, 300),
        (overlay_set_position, reg1, pos1),
        
        ## HTML code
        (create_text_overlay, "$g_presentation_obj_9", "@ ", tf_center_justify),
        (position_set_x, pos1, 500),
        (position_set_y, pos1, 450),
        (overlay_set_position, "$g_presentation_obj_9", pos1),
        (call_script, "script_convert_rgb_code_to_html_code", reg2, reg3, reg4),
        (overlay_set_text, "$g_presentation_obj_9", "@HTML code: {s0}"),
        
        ## default and random
        (create_game_button_overlay, "$g_presentation_obj_11", "@Default"),
        (position_set_x, pos1, 420),
        (position_set_y, pos1, 230),
        (overlay_set_position, "$g_presentation_obj_11", pos1),
        (create_game_button_overlay, "$g_presentation_obj_12", "@Randomize"),
        (position_set_x, pos1, 580),
        (position_set_y, pos1, 230),
        (overlay_set_position, "$g_presentation_obj_12", pos1),
        
        ## color picker
        (create_mesh_overlay, reg1, "mesh_white_plane"),
        (position_set_x, pos1, 138),
        (position_set_y, pos1, 78),
        (overlay_set_position, reg1, pos1),
        (position_set_x, pos1, 36100),
        (position_set_y, pos1, 6100),
        (overlay_set_size, reg1, pos1),
        (overlay_set_color, reg1, 0),
        
        (assign, ":pos_x", 140),
        (assign, ":pos_y", 80),
        (try_for_range, ":cur_slot", 0, 216),
          (create_image_button_overlay, reg1, "mesh_white_plane", "mesh_white_plane"),
          (position_set_x, pos1, ":pos_x"),
          (position_set_y, pos1, ":pos_y"),
          (overlay_set_position, reg1, pos1),
          (position_set_x, pos1, 900),
          (position_set_y, pos1, 900),
          (overlay_set_size, reg1, pos1),
          (assign, ":cur_color", ":cur_slot"),
          (call_script, "script_convert_slot_no_to_color", ":cur_color"),
          (assign, ":dest_color", reg0),
          (overlay_set_color, reg1, ":dest_color"),
          (val_add, ":pos_x", 20),
          (try_begin),
            (eq, ":pos_x", 860),
            (assign, ":pos_x", 140),
            (val_add, ":pos_y", 20),
          (try_end),
          (troop_set_slot, "trp_temp_array_c", ":cur_slot", reg1),
        (try_end),
        
        ## done
        (create_game_button_overlay, "$g_presentation_obj_10", "@Done"),
        (position_set_x, pos1, 900),
        (position_set_y, pos1, 25),
        (overlay_set_position, "$g_presentation_obj_10", pos1),
        ####### mouse fix pos system #######
        #(call_script, "script_mouse_fix_pos_ready"),
        ####### mouse fix pos system #######
      ]),

      #(ti_on_presentation_run,
        #[
        ####### mouse fix pos system #######
        #(call_script, "script_mouse_fix_pos_run"),
        ####### mouse fix pos system #######
      #]),
  
    (ti_on_presentation_event_state_change,
      [
        (store_trigger_param_1, ":object"),
        (store_trigger_param_2, ":value"),
        
        (try_for_range, ":cur_slot", 0, 216),
          (troop_slot_eq, "trp_temp_array_c", ":cur_slot", ":object"),
          (assign, ":cur_color", ":cur_slot"),
          (call_script, "script_convert_slot_no_to_color", ":cur_color"),
          (assign, ":dest_color", reg0),
          (troop_get_slot, ":cur_faction", "trp_temp_array_a", "$temp"),
          (faction_set_color, ":cur_faction", ":dest_color"),
          (overlay_set_color, "$g_presentation_obj_2", ":dest_color"),
          (store_mod, ":blue", ":dest_color", 0x100),
          (val_div, ":dest_color", 0x100),
          (store_mod, ":green", ":dest_color", 0x100),
          (val_div, ":dest_color", 0x100),
          (store_mod, ":red", ":dest_color", 0x100),
          (overlay_set_val, "$g_presentation_obj_3", ":red"),
          (overlay_set_val, "$g_presentation_obj_4", ":green"),
          (overlay_set_val, "$g_presentation_obj_5", ":blue"),
          (overlay_set_val, "$g_presentation_obj_6", ":red"),
          (overlay_set_val, "$g_presentation_obj_7", ":green"),
          (overlay_set_val, "$g_presentation_obj_8", ":blue"),
          (assign, reg2, ":red"),
          (assign, reg3, ":green"),
          (assign, reg4, ":blue"),
          (call_script, "script_convert_rgb_code_to_html_code", reg2, reg3, reg4),
          (overlay_set_text, "$g_presentation_obj_9", "@HTML code: {s0}"),
        (try_end),
        
        (try_begin),
          (eq, ":object", "$g_presentation_obj_1"),
          (assign, "$temp", ":value"),
          (start_presentation, "prsnt_change_all_factions_color"),
        (else_try),
          (this_or_next|eq, ":object", "$g_presentation_obj_3"),
          (eq, ":object", "$g_presentation_obj_6"),
          (overlay_set_val, "$g_presentation_obj_3", ":value"),
          (overlay_set_val, "$g_presentation_obj_6", ":value"),
          (assign, reg2, ":value"),
          (call_script, "script_get_dest_color_from_rgb", reg2, reg3, reg4),
          (assign, ":cur_color", reg0),
          (overlay_set_color, "$g_presentation_obj_2", ":cur_color"),
          (troop_get_slot, ":cur_faction", "trp_temp_array_a", "$temp"),
          (faction_set_color, ":cur_faction", ":cur_color"),
          (call_script, "script_convert_rgb_code_to_html_code", reg2, reg3, reg4),
          (overlay_set_text, "$g_presentation_obj_9", "@HTML code: {s0}"),
        (else_try),
          (this_or_next|eq, ":object", "$g_presentation_obj_4"),
          (eq, ":object", "$g_presentation_obj_7"),
          (overlay_set_val, "$g_presentation_obj_4", ":value"),
          (overlay_set_val, "$g_presentation_obj_7", ":value"),
          (assign, reg3, ":value"),
          (call_script, "script_get_dest_color_from_rgb", reg2, reg3, reg4),
          (assign, ":cur_color", reg0),
          (overlay_set_color, "$g_presentation_obj_2", ":cur_color"),
          (troop_get_slot, ":cur_faction", "trp_temp_array_a", "$temp"),
          (faction_set_color, ":cur_faction", ":cur_color"),
          (call_script, "script_convert_rgb_code_to_html_code", reg2, reg3, reg4),
          (overlay_set_text, "$g_presentation_obj_9", "@HTML code: {s0}"),
        (else_try),
          (this_or_next|eq, ":object", "$g_presentation_obj_5"),
          (eq, ":object", "$g_presentation_obj_8"),
          (overlay_set_val, "$g_presentation_obj_5", ":value"),
          (overlay_set_val, "$g_presentation_obj_8", ":value"),
          (assign, reg4, ":value"),
          (call_script, "script_get_dest_color_from_rgb", reg2, reg3, reg4),
          (assign, ":cur_color", reg0),
          (overlay_set_color, "$g_presentation_obj_2", ":cur_color"),
          (troop_get_slot, ":cur_faction", "trp_temp_array_a", "$temp"),
          (faction_set_color, ":cur_faction", ":cur_color"),
          (call_script, "script_convert_rgb_code_to_html_code", reg2, reg3, reg4),
          (overlay_set_text, "$g_presentation_obj_9", "@HTML code: {s0}"),
        (else_try),
          (eq, ":object", "$g_presentation_obj_11"),
          (troop_get_slot, ":cur_faction", "trp_temp_array_a", "$temp"),
          (troop_get_slot, ":default_color", "trp_temp_array_b", "$temp"),
          (faction_set_color, ":cur_faction", ":default_color"),
          (overlay_set_color, "$g_presentation_obj_2", ":default_color"),
          (store_mod, ":blue", ":default_color", 0x100),
          (val_div, ":default_color", 0x100),
          (store_mod, ":green", ":default_color", 0x100),
          (val_div, ":default_color", 0x100),
          (store_mod, ":red", ":default_color", 0x100),
          (overlay_set_val, "$g_presentation_obj_3", ":red"),
          (overlay_set_val, "$g_presentation_obj_4", ":green"),
          (overlay_set_val, "$g_presentation_obj_5", ":blue"),
          (overlay_set_val, "$g_presentation_obj_6", ":red"),
          (overlay_set_val, "$g_presentation_obj_7", ":green"),
          (overlay_set_val, "$g_presentation_obj_8", ":blue"),
          (assign, reg2, ":red"),
          (assign, reg3, ":green"),
          (assign, reg4, ":blue"),
          (call_script, "script_convert_rgb_code_to_html_code", reg2, reg3, reg4),
          (overlay_set_text, "$g_presentation_obj_9", "@HTML code: {s0}"),
        (else_try),
          (eq, ":object", "$g_presentation_obj_12"),
          (store_random_in_range, reg2, 0, 256),
          (store_random_in_range, reg3, 0, 256),
          (store_random_in_range, reg4, 0, 256),
          (overlay_set_val, "$g_presentation_obj_3", reg2),
          (overlay_set_val, "$g_presentation_obj_4", reg3),
          (overlay_set_val, "$g_presentation_obj_5", reg4),
          (overlay_set_val, "$g_presentation_obj_6", reg2),
          (overlay_set_val, "$g_presentation_obj_7", reg3),
          (overlay_set_val, "$g_presentation_obj_8", reg4),
          (call_script, "script_get_dest_color_from_rgb", reg2, reg3, reg4),
          (assign, ":cur_color", reg0),
          (overlay_set_color, "$g_presentation_obj_2", ":cur_color"),
          (troop_get_slot, ":cur_faction", "trp_temp_array_a", "$temp"),
          (faction_set_color, ":cur_faction", ":cur_color"),
          (call_script, "script_convert_rgb_code_to_html_code", reg2, reg3, reg4),
          (overlay_set_text, "$g_presentation_obj_9", "@HTML code: {s0}"),
        (else_try),
          (eq, ":object", "$g_presentation_obj_10"),
          (presentation_set_duration, 0),
        (try_end),
    ]),
  ]),
  
  ("redefine_keys", 0, mesh_load_window, [
    (ti_on_presentation_load,
      [
        (presentation_set_duration, 999999),
        (set_fixed_point_multiplier, 1000),
        
        (call_script, "script_init_keys_array"),
        (try_begin),
          (eq, "$g_camera_up", 0),
          (assign, "$g_camera_up", key_up),
        (try_end),
        (try_begin),
          (eq, "$g_camera_down", 0),
          (assign, "$g_camera_down", key_down),
        (try_end),
        (try_begin),
          (eq, "$g_camera_left", 0),
          (assign, "$g_camera_left", key_left),
        (try_end),
        (try_begin),
          (eq, "$g_camera_right", 0),
          (assign, "$g_camera_right", key_right),
        (try_end),
        
        (try_for_range, ":cur_slot", 0, len(keys)),
          (troop_get_slot, ":key_no", "trp_temp_array_a", ":cur_slot"),
          (try_begin),
            (eq, ":key_no", "$g_camera_up"),
            (store_add, ":dest_string", "str_key_0", ":cur_slot"),
            (str_store_string, s1, ":dest_string"),
          (else_try),
            (eq, ":key_no", "$g_camera_down"),
            (store_add, ":dest_string", "str_key_0", ":cur_slot"),
            (str_store_string, s2, ":dest_string"),
          (else_try),
            (eq, ":key_no", "$g_camera_left"),
            (store_add, ":dest_string", "str_key_0", ":cur_slot"),
            (str_store_string, s3, ":dest_string"),
          (else_try),
            (eq, ":key_no", "$g_camera_right"),
            (store_add, ":dest_string", "str_key_0", ":cur_slot"),
            (str_store_string, s4, ":dest_string"),
          (try_end),
        (try_end),
        
        (assign, "$temp", -1),
        ## buttons
        (create_text_overlay, reg1, "@Raise the camera", tf_center_justify),
        (position_set_x, pos1, 500),
        (position_set_y, pos1, 600),
        (overlay_set_position, reg1, pos1),
        (create_game_button_overlay, "$g_presentation_obj_1", s1),
        (position_set_x, pos1, 500),
        (position_set_y, pos1, 550),
        (overlay_set_position, "$g_presentation_obj_1", pos1),
        
        (create_text_overlay, reg1, "@Lower the camera", tf_center_justify),
        (position_set_x, pos1, 500),
        (position_set_y, pos1, 400),
        (overlay_set_position, reg1, pos1),
        (create_game_button_overlay, "$g_presentation_obj_2", s2),
        (position_set_x, pos1, 500),
        (position_set_y, pos1, 350),
        (overlay_set_position, "$g_presentation_obj_2", pos1),
        
        (create_text_overlay, reg1, "@Zoom in", tf_center_justify),
        (position_set_x, pos1, 400),
        (position_set_y, pos1, 500),
        (overlay_set_position, reg1, pos1),
        (create_game_button_overlay, "$g_presentation_obj_3", s3),
        (position_set_x, pos1, 400),
        (position_set_y, pos1, 450),
        (overlay_set_position, "$g_presentation_obj_3", pos1),
        
        (create_text_overlay, reg1, "@Zoom out", tf_center_justify),
        (position_set_x, pos1, 600),
        (position_set_y, pos1, 500),
        (overlay_set_position, reg1, pos1),
        (create_game_button_overlay, "$g_presentation_obj_4", s4),
        (position_set_x, pos1, 600),
        (position_set_y, pos1, 450),
        (overlay_set_position, "$g_presentation_obj_4", pos1),
        
        (create_text_overlay, "$g_presentation_obj_5", "@Press a key", tf_center_justify),
        (position_set_x, pos1, 500),
        (position_set_y, pos1, 200),
        (overlay_set_position, "$g_presentation_obj_5", pos1),
        (position_set_x, pos1, 2000),
        (position_set_y, pos1, 2000),
        (overlay_set_size, "$g_presentation_obj_5", pos1),
        (overlay_set_color, "$g_presentation_obj_5", 0),
        (overlay_set_display, "$g_presentation_obj_5", 0),
        
        # done
        (create_game_button_overlay, "$g_presentation_obj_10", "@Done"),
        (position_set_x, pos1, 900),
        (position_set_y, pos1, 25),
        (overlay_set_position, "$g_presentation_obj_10", pos1),
        ####### mouse fix pos system #######
        #(call_script, "script_mouse_fix_pos_ready"),
        ####### mouse fix pos system #######
      ]),

    (ti_on_presentation_run,
      [
      ####### mouse fix pos system #######
      #(call_script, "script_mouse_fix_pos_run"),
      ####### mouse fix pos system #######
      
      (try_begin),
        (gt, "$temp", -1),
        (overlay_set_display, "$g_presentation_obj_5", 1),
      (else_try),
        (overlay_set_display, "$g_presentation_obj_5", 0),
      (try_end),
      (try_for_range, ":cur_slot", 0, len(keys)),
        (troop_get_slot, ":key_no", "trp_temp_array_a", ":cur_slot"),
        (key_clicked, ":key_no"),
        (gt, "$temp", -1),
        (try_begin),
          (eq, "$temp", "$g_presentation_obj_1"),
          (assign, "$g_camera_up", ":key_no"),
        (else_try),
          (eq, "$temp", "$g_presentation_obj_2"),
          (assign, "$g_camera_down", ":key_no"),
        (else_try),
          (eq, "$temp", "$g_presentation_obj_3"),
          (assign, "$g_camera_left", ":key_no"),
        (else_try),
          (eq, "$temp", "$g_presentation_obj_4"),
          (assign, "$g_camera_right", ":key_no"),
        (try_end),
        (store_add, ":dest_string", "str_key_0", ":cur_slot"),
        (str_store_string, s1, ":dest_string"),
        (overlay_set_text, "$temp", s1),
        (overlay_set_alpha, "$temp", 0xff),
        (assign, "$temp", -1),
      (try_end),
    ]),
  
    (ti_on_presentation_event_state_change,
      [
        (store_trigger_param_1, ":object"),
        
        (set_fixed_point_multiplier, 1000),
        (try_begin),
          (eq, ":object", "$g_presentation_obj_1"),
          (assign, "$temp", "$g_presentation_obj_1"),
          (overlay_set_alpha, "$g_presentation_obj_1", 0x80),
          (overlay_set_alpha, "$g_presentation_obj_2", 0xff),
          (overlay_set_alpha, "$g_presentation_obj_3", 0xff),
          (overlay_set_alpha, "$g_presentation_obj_4", 0xff),
        (else_try),
          (eq, ":object", "$g_presentation_obj_2"),
          (assign, "$temp", "$g_presentation_obj_2"),
          (overlay_set_alpha, "$g_presentation_obj_1", 0xff),
          (overlay_set_alpha, "$g_presentation_obj_2", 0x80),
          (overlay_set_alpha, "$g_presentation_obj_3", 0xff),
          (overlay_set_alpha, "$g_presentation_obj_4", 0xff),
        (else_try),
          (eq, ":object", "$g_presentation_obj_3"),
          (assign, "$temp", "$g_presentation_obj_3"),
          (overlay_set_alpha, "$g_presentation_obj_1", 0xff),
          (overlay_set_alpha, "$g_presentation_obj_2", 0xff),
          (overlay_set_alpha, "$g_presentation_obj_3", 0x80),
          (overlay_set_alpha, "$g_presentation_obj_4", 0xff),
        (else_try),
          (eq, ":object", "$g_presentation_obj_4"),
          (assign, "$temp", "$g_presentation_obj_4"),
          (overlay_set_alpha, "$g_presentation_obj_1", 0xff),
          (overlay_set_alpha, "$g_presentation_obj_2", 0xff),
          (overlay_set_alpha, "$g_presentation_obj_3", 0xff),
          (overlay_set_alpha, "$g_presentation_obj_4", 0x80),
        (else_try),
          (eq, ":object", "$g_presentation_obj_10"),
          (presentation_set_duration, 0),
        (try_end),
    ]),
  ]),
  
  ("sort_the_defenders", 0, mesh_load_window, [
    (ti_on_presentation_load,
      [
        (presentation_set_duration, 999999),
        (set_fixed_point_multiplier, 1000),
        
        ## next presentation
        (assign, "$g_presentation_next_presentation", -1),
      
        (str_clear, s0),
        (create_text_overlay, "$g_presentation_obj_1", s0, tf_scrollable),
        (position_set_x, pos1, 50),
        (position_set_y, pos1, 50),
        (overlay_set_position, "$g_presentation_obj_1", pos1),
        (position_set_x, pos1, 350),
        (position_set_y, pos1, 600),
        (overlay_set_area_size, "$g_presentation_obj_1", pos1),
        (set_container_overlay, "$g_presentation_obj_1"),
        
        (assign, ":pos_x", 150),
        (party_get_num_companion_stacks, ":num_stacks", "$current_town"),
        (store_mul, ":pos_y", ":num_stacks", 40),
        (val_sub, ":pos_y", 40),
        (val_max, ":pos_y", 560),
        (try_for_range, ":slot_no", 0, ":num_stacks"),
          (party_stack_get_troop_id, ":troop_no", "$current_town", ":slot_no"),
          (party_stack_get_size, ":stack_size", "$current_town", ":slot_no"),
          (party_stack_get_num_wounded, ":num_wounded", "$current_town", ":slot_no"),
          (str_store_troop_name, s1, ":troop_no"),
          (assign, reg2, ":stack_size"),
          (try_begin),
            (gt, ":num_wounded", 0),
            (store_sub, reg3, ":stack_size", ":num_wounded"),
            (str_store_string, s1, "@{s1}({reg3}/{reg2})"),
          (else_try),
            (str_store_string, s1, "@{s1}({reg2})"),
          (try_end),
          (create_game_button_overlay, reg1, "@{s1}"),
          (position_set_x, pos1, ":pos_x"),
          (position_set_y, pos1, ":pos_y"),
          (overlay_set_position, reg1, pos1),
          (position_set_x, pos1, 240),
          (position_set_y, pos1, 32),
          (overlay_set_size, reg1, pos1),
          (troop_set_slot, "trp_temp_array_a", ":slot_no", reg1),
          (val_sub, ":pos_y", 40),
        (try_end),
        (try_begin),
          (gt, "$g_cur_stack", -1),
          (troop_get_slot, ":dest_obj", "trp_temp_array_a", "$g_cur_stack"),
          (overlay_set_alpha, ":dest_obj", 0x80),
        (try_end),
        (set_container_overlay, -1),
        
        # Move up - Move Down
        (position_set_x, pos1, 750),
        (create_button_overlay, "$g_presentation_obj_2", "@Move to Top", tf_center_justify),
        (position_set_y, pos1, 570),
        (overlay_set_position, "$g_presentation_obj_2", pos1),
        (create_button_overlay, "$g_presentation_obj_3", "@Move Up", tf_center_justify),
        (position_set_y, pos1, 515),
        (overlay_set_position, "$g_presentation_obj_3", pos1),
        (create_button_overlay, "$g_presentation_obj_4", "@Move Down", tf_center_justify),
        (position_set_y, pos1, 460),
        (overlay_set_position, "$g_presentation_obj_4", pos1),
        (create_button_overlay, "$g_presentation_obj_5", "@Move to Bottom", tf_center_justify),
        (position_set_y, pos1, 405),
        (overlay_set_position, "$g_presentation_obj_5", pos1),
        
        # cur troop
        (try_begin),
          (gt, "$g_cur_stack", -1),
          (party_stack_get_troop_id, ":troop_no", "$current_town", "$g_cur_stack"),
          (store_mul, ":cur_troop", ":troop_no", 2), #with weapons
          (create_image_button_overlay_with_tableau_material, "$g_presentation_obj_6", -1, "tableau_game_party_window", ":cur_troop"),
          (position_set_x, pos1, 400),
          (position_set_y, pos1, 300),
          (overlay_set_position, "$g_presentation_obj_6", pos1),
          (position_set_x, pos1, 750),
          (position_set_y, pos1, 1000),
          (overlay_set_size, "$g_presentation_obj_6", pos1),
        (else_try),
          (create_mesh_overlay, "$g_presentation_obj_6", "mesh_white_plane"),
          (overlay_set_display, "$g_presentation_obj_6", 0),
        (try_end),
        
        # done
        (create_game_button_overlay, "$g_presentation_obj_10", "@Done"),
        (position_set_x, pos1, 900),
        (position_set_y, pos1, 25),
        (overlay_set_position, "$g_presentation_obj_10", pos1),
        
        ####### mouse fix pos system #######
        #(call_script, "script_mouse_fix_pos_ready"),
        ####### mouse fix pos system #######
      ]),
    #(ti_on_presentation_run,
      #[
      ####### mouse fix pos system #######
      #(call_script, "script_mouse_fix_pos_run"),
      ####### mouse fix pos system #######
    #]),
    
    (ti_on_presentation_event_state_change,
      [
        (store_trigger_param_1, ":object"),

        (party_get_num_companion_stacks, ":num_stacks", "$current_town"),
        (try_for_range, ":slot_no", 0, ":num_stacks"),
          (troop_slot_eq, "trp_temp_array_a", ":slot_no", ":object"),
          (assign, "$g_cur_stack", ":slot_no"),
          (start_presentation, "prsnt_sort_the_defenders"),
        (try_end),
        
        (try_begin),
          (eq, ":object", "$g_presentation_obj_2"), # top
          (try_begin),
            (gt, "$g_cur_stack", 0),
            (store_sub, ":times", ":num_stacks", 1),
            (call_script, "script_move_one_stack_to_the_bottom", "$current_town", "$g_cur_stack", 1),
            (call_script, "script_move_one_stack_to_the_bottom", "$current_town", 0, ":times"),
            (assign, "$g_cur_stack", 0),
            (start_presentation, "prsnt_sort_the_defenders"),
          (try_end),
        (else_try),
          (eq, ":object", "$g_presentation_obj_3"), # up
          (try_begin),
            (gt, "$g_cur_stack", 0),
            (store_sub, ":pre_stack", "$g_cur_stack", 1),
            (store_sub, ":times", ":num_stacks", "$g_cur_stack"),
            (call_script, "script_move_one_stack_to_the_bottom", "$current_town", "$g_cur_stack", 1),
            (call_script, "script_move_one_stack_to_the_bottom", "$current_town", ":pre_stack", ":times"),
            (val_sub, "$g_cur_stack", 1),
            (start_presentation, "prsnt_sort_the_defenders"),
          (try_end),
        (else_try),
          (eq, ":object", "$g_presentation_obj_4"), # down
          (try_begin),
            (store_sub, ":last_stack", ":num_stacks", 1),
            (lt, "$g_cur_stack", ":last_stack"),
            (gt, "$g_cur_stack", -1),
            (store_add, ":next_stack", "$g_cur_stack", 1),
            (store_sub, ":times", ":last_stack", "$g_cur_stack"),
            (call_script, "script_move_one_stack_to_the_bottom", "$current_town", ":next_stack", 1),
            (call_script, "script_move_one_stack_to_the_bottom", "$current_town", "$g_cur_stack", ":times"),
            (val_add, "$g_cur_stack", 1),
            (start_presentation, "prsnt_sort_the_defenders"),
          (try_end),
        (else_try),
          (eq, ":object", "$g_presentation_obj_5"), # bottom
          (try_begin),
            (store_sub, ":last_stack", ":num_stacks", 1),
            (lt, "$g_cur_stack", ":last_stack"),
            (gt, "$g_cur_stack", -1),
            (call_script, "script_move_one_stack_to_the_bottom", "$current_town", "$g_cur_stack", 1),
            (assign, "$g_cur_stack", ":last_stack"),
            (start_presentation, "prsnt_sort_the_defenders"),
          (try_end),
        (else_try),
          (eq, ":object", "$g_presentation_obj_6"), # troop note
          (assign, "$g_presentation_next_presentation", "prsnt_sort_the_defenders"),
          (party_stack_get_troop_id, "$temp", "$current_town", "$g_cur_stack"),
          (start_presentation, "prsnt_troop_note"),
        (else_try),
          (eq, ":object", "$g_presentation_obj_10"),
          (presentation_set_duration, 0),
        (try_end),
    ]),
  ]),
  
  ("shopping_list_of_food", 0, mesh_load_window, [
    (ti_on_presentation_load,
      [
        (presentation_set_duration, 999999),
        (set_fixed_point_multiplier, 1000),
        
        ## back
        (create_game_button_overlay, "$g_presentation_obj_1", "@Done"),
        (position_set_x, pos1, 900),
        (position_set_y, pos1, 25),
        (overlay_set_position, "$g_presentation_obj_1", pos1),

        ## buy foos automaticly when leaving
        (create_text_overlay, reg0, "@Buy foods automaticly when leaving:", tf_vertical_align_center),
        (position_set_x, pos1, 170),
        (position_set_y, pos1, 690),
        (overlay_set_position, reg0, pos1),

        (create_check_box_overlay, "$g_presentation_obj_2", "mesh_checkbox_off", "mesh_checkbox_on"),
        (position_set_x, pos1, 150),
        (position_set_y, pos1, 682),
        (overlay_set_position, "$g_presentation_obj_2", pos1),
        (overlay_set_val, "$g_presentation_obj_2", "$g_buy_foods_when_leaving"),

        ## set the portion...
        (create_text_overlay, reg0, "@Set the portion to:", tf_center_justify),
        (position_set_x, pos1, 830),
        (position_set_y, pos1, 600),
        (overlay_set_position, reg0, pos1),

        (position_set_x, pos1, 830),
        (assign, ":pos_y", 550),
        (try_for_range, ":cur_button", 0, 7),
          (assign, reg0, ":cur_button"),
          (create_in_game_button_overlay, reg1, "@{reg0}"),
          (overlay_set_color, reg1, 0xFFFFFF),
          (position_set_y, pos1, ":pos_y"),
          (overlay_set_position, reg1, pos1),
          (troop_set_slot, "trp_temp_array_d", ":cur_button", reg1),
          (val_sub, ":pos_y", 50),
        (try_end),

        (assign, ":base_x", 60),
        (assign, ":base_y", 550),
        (assign, ":row_adder", -150),
        (assign, ":col_adder", 140),
        (assign, ":num_cols", 5),
        (assign, ":pos_x", ":base_x"),
        (assign, ":pos_y", ":base_y"),
        (try_for_range, ":cur_food", food_begin, food_end),
          # frame
          #(create_mesh_overlay, reg1, "mesh_mp_inventory_choose"),
          #(position_set_x, pos1, 640),
          #(position_set_y, pos1, 640),
          #(overlay_set_size, reg1, pos1),
          #(position_set_x, pos1, ":pos_x"),
          #(position_set_y, pos1, ":pos_y"),
          #(overlay_set_position, reg1, pos1),
          # back ground
          (create_mesh_overlay, reg1, "mesh_inv_slot"),
          (position_set_x, pos1, 800),
          (position_set_y, pos1, 800),
          (overlay_set_size, reg1, pos1),
          (position_set_x, pos1, ":pos_x"),
          (position_set_y, pos1, ":pos_y"),
          (overlay_set_position, reg1, pos1),
          # item overlay
          (create_mesh_overlay_with_item_id, reg1, ":cur_food"),
          (position_set_x, pos1, 800),
          (position_set_y, pos1, 800),
          (overlay_set_size, reg1, pos1),
          (store_add, ":item_x", ":pos_x", 40),
          (store_add, ":item_y", ":pos_y", 40),
          (position_set_x, pos1, ":item_x"),
          (position_set_y, pos1, ":item_y"),
          (overlay_set_position, reg1, pos1),
          (troop_set_slot, "trp_temp_array_a", ":cur_food", reg1),
          # text *
          (item_get_slot, ":food_portion", ":cur_food", slot_item_food_portion),
          (assign, reg0, ":food_portion"),
          (create_text_overlay, reg1, "@{reg0}", tf_center_justify|tf_vertical_align_center),
          (store_add, ":text_x", ":pos_x", 72),
          (store_add, ":text_y", ":pos_y", 10),
          (position_set_x, pos1, ":text_x"),
          (position_set_y, pos1, ":text_y"),
          (overlay_set_position, reg1, pos1),
          (overlay_set_color, reg1, 0xFFFFFFFF),
          # check box
          (create_check_box_overlay, reg1, "mesh_checkbox_off", "mesh_checkbox_on"),
          (store_add, ":check_box_x", ":pos_x", 65),
          (store_add, ":check_box_y", ":pos_y", 65),
          (position_set_x, pos1, ":check_box_x"),
          (position_set_y, pos1, ":check_box_y"),
          (overlay_set_position, reg1, pos1),
          (overlay_set_val, reg1, 0),
          (troop_set_slot, "trp_temp_array_b", ":cur_food", reg1),
          (troop_set_slot, "trp_temp_array_c", ":cur_food", 0),
          # next
          (val_add, ":pos_x", ":col_adder"),
          (try_begin),
            (store_mul, ":max_x", ":col_adder", ":num_cols"),
            (val_add, ":max_x", ":base_x"),
            (eq, ":pos_x", ":max_x"),
            (assign, ":pos_x", ":base_x"),
            (val_add, ":pos_y", ":row_adder"),
          (try_end),
        (try_end),

        ####### mouse fix pos system #######
        #(call_script, "script_mouse_fix_pos_ready"),
        ####### mouse fix pos system #######
      ]),

    #(ti_on_presentation_run,
      #[
        ####### mouse fix pos system #######
        #(call_script, "script_mouse_fix_pos_run"),
        ####### mouse fix pos system #######
    #]),

    (ti_on_presentation_mouse_enter_leave,
      [
      (store_trigger_param_1, ":object"),
      (store_trigger_param_2, ":enter_leave"),

      (try_begin),
        (eq, ":enter_leave", 0),
        (try_for_range, ":cur_food", food_begin, food_end),
          (troop_slot_eq, "trp_temp_array_a", ":cur_food", ":object"),
          (overlay_get_position, pos0, ":object"),
          (show_item_details, ":cur_food", pos0, 100),
          (assign, "$g_current_opened_item_details", ":cur_food"),
        (try_end),
      (else_try),
        (try_for_range, ":cur_food", food_begin, food_end),
          (troop_slot_eq, "trp_temp_array_a", ":cur_food", ":object"),
          (try_begin),
            (eq, "$g_current_opened_item_details", ":cur_food"),
            (close_item_details),
          (try_end),
        (try_end),
      (try_end),
    ]),

    (ti_on_presentation_event_state_change,
      [
        (store_trigger_param_1, ":object"),
        (store_trigger_param_2, ":value"),

        (try_for_range, ":cur_food", food_begin, food_end),
          (troop_slot_eq, "trp_temp_array_b", ":cur_food", ":object"),
          (troop_set_slot, "trp_temp_array_c", ":cur_food", ":value"),
        (try_end),

        (try_for_range, ":cur_button", 0, 7),
          (troop_slot_eq, "trp_temp_array_d", ":cur_button", ":object"),
          (try_for_range, ":cur_food", food_begin, food_end),
            (troop_get_slot, ":checkbox_value", "trp_temp_array_c", ":cur_food"),
            (eq, ":checkbox_value", 1),
            (item_set_slot, ":cur_food", slot_item_food_portion, ":cur_button"),
          (try_end),
          (start_presentation, "prsnt_shopping_list_of_food"),
        (try_end),

        (try_begin),
          (eq, ":object", "$g_presentation_obj_2"),
          (assign, "$g_buy_foods_when_leaving", ":value"),
        (else_try),
          (eq, ":object", "$g_presentation_obj_1"),
          (presentation_set_duration, 0),
        (try_end),
    ]),
  ]),
  
  
  ("character_creation", 0, mesh_load_window, [
    (ti_on_presentation_load,
      [
        (presentation_set_duration, 999999),
        (set_fixed_point_multiplier, 1000),
        
        ## done
        (create_game_button_overlay, "$g_presentation_obj_1", "@Done"),
        (position_set_x, pos1, 900),
        (position_set_y, pos1, 25),
        (overlay_set_position, "$g_presentation_obj_1", pos1),

        (create_game_button_overlay, "$g_presentation_obj_2", "@Default"),
        (position_set_x, pos1, 730),
        (position_set_y, pos1, 25),
        (overlay_set_position, "$g_presentation_obj_2", pos1),

        (create_game_button_overlay, "$g_presentation_obj_3", "@Randomize"),
        (position_set_x, pos1, 560),
        (position_set_y, pos1, 25),
        (overlay_set_position, "$g_presentation_obj_3", pos1),

        (create_text_overlay, reg1, "@Character Background", tf_center_justify),
        (position_set_x, pos1, 500),
        (position_set_y, pos1, 630),
        (overlay_set_position, reg1, pos1),
        (position_set_x, pos1, 2000),
        (position_set_y, pos1, 2000),
        (overlay_set_size, reg1, pos1),
        (create_text_overlay, reg1, "@Your story:", tf_left_align),
        (position_set_x, pos1, 400),
        (position_set_y, pos1, 550),
        (overlay_set_position, reg1, pos1),

        ## options
        (position_set_x, pos1, 200),
        (position_set_y, pos1, 550),
        (create_text_overlay, reg1, "@Your Gender:", tf_center_justify),
        (overlay_set_position, reg1, pos1),
        (position_set_y, pos1, 470),
        (create_text_overlay, reg1, "@Your father was:", tf_center_justify),
        (overlay_set_position, reg1, pos1),
        (position_set_y, pos1, 390),
        (create_text_overlay, reg1, "@You spent your early life as:", tf_center_justify),
        (overlay_set_position, reg1, pos1),
        (position_set_y, pos1, 310),
        (create_text_overlay, reg1, "@Later you became:", tf_center_justify),
        (overlay_set_position, reg1, pos1),
        (position_set_y, pos1, 230),
        (create_text_overlay, reg1, "@The reason for an adventure:", tf_center_justify),
        (overlay_set_position, reg1, pos1),
        ## combo button
        # gender
        (position_set_y, pos1, 510),
        (create_combo_button_overlay, "$g_presentation_obj_11"),
        (overlay_set_position, "$g_presentation_obj_11", pos1),
        (overlay_add_item, "$g_presentation_obj_11", "@female"),
        (overlay_add_item, "$g_presentation_obj_11", "@male"),
        (overlay_add_item, "$g_presentation_obj_11", "@male_elf"),
        (overlay_add_item, "$g_presentation_obj_11", "@female_elf"),
        (overlay_add_item, "$g_presentation_obj_11", "@half_demon"),
        (overlay_add_item, "$g_presentation_obj_11", "@dwarf"),
        (overlay_add_item, "$g_presentation_obj_11", "@vampire"),
        (overlay_add_item, "$g_presentation_obj_11", "@orc"),
        (try_begin),
          (eq, "$character_gender", tf_female),
          (overlay_set_val, "$g_presentation_obj_11", 0),
        (else_try),
          (eq, "$character_gender", tf_male),
          (overlay_set_val, "$g_presentation_obj_11", 1),
        (else_try),
          (eq, "$character_gender", tf_male_elf),
          (overlay_set_val, "$g_presentation_obj_11", 2),
        (else_try),
          (eq, "$character_gender", tf_female_elf),
          (overlay_set_val, "$g_presentation_obj_11", 3),
        (else_try),
          (eq, "$character_gender", tf_demon_human),
          (overlay_set_val, "$g_presentation_obj_11", 4),
        (else_try),
          (eq, "$character_gender", tf_dwarf),
          (overlay_set_val, "$g_presentation_obj_11", 5),
        (else_try),
          (eq, "$character_gender", tf_vampire),
          (overlay_set_val, "$g_presentation_obj_11", 6),
        (else_try),
          (eq, "$character_gender", tf_ogre),
          (overlay_set_val, "$g_presentation_obj_11", 7),
        (try_end),
        
        # father
        (position_set_y, pos1, 430),
        (create_combo_button_overlay, "$g_presentation_obj_12"),
        (overlay_set_position, "$g_presentation_obj_12", pos1),
      (try_begin),
        (this_or_next|eq, "$character_gender", tf_demon_human),
        (this_or_next|eq, "$character_gender", tf_vampire),
        (this_or_next|eq, "$character_gender", tf_male),
        (this_or_next|eq, "$character_gender", tf_female),
        (this_or_next|eq, "$character_gender", tf_male_elf),
        (eq, "$character_gender", tf_female_elf),
        (overlay_add_item, "$g_presentation_obj_12", "@a thief"),
        (overlay_add_item, "$g_presentation_obj_12", "@a steppe nomad"),
        (overlay_add_item, "$g_presentation_obj_12", "@a hunter"),
        (overlay_add_item, "$g_presentation_obj_12", "@a veteran warrior"),
        (overlay_add_item, "$g_presentation_obj_12", "@a travelling merchant"),
        (overlay_add_item, "$g_presentation_obj_12", "@an impoverished noble"),
      (else_try),
        (overlay_add_item, "$g_presentation_obj_12", "@a thief"),
        (overlay_add_item, "$g_presentation_obj_12", "@a steppe nomad"),
        (overlay_add_item, "$g_presentation_obj_12", "@a hunter"),
        (overlay_add_item, "$g_presentation_obj_12", "@a veteran warrior"),
        (overlay_add_item, "$g_presentation_obj_12", "@a travelling merchant"),
      (try_end),
      (try_begin),
        (this_or_next|eq, "$character_gender", tf_demon_human),
        (this_or_next|eq, "$character_gender", tf_vampire),
        (this_or_next|eq, "$character_gender", tf_male),
        (this_or_next|eq, "$character_gender", tf_female),
        (this_or_next|eq, "$character_gender", tf_male_elf),
        (eq, "$character_gender", tf_female_elf),
        (try_begin),
          (eq, "$background_type", cb_thief),
          (overlay_set_val, "$g_presentation_obj_12", 0),
        (else_try),
          (eq, "$background_type", cb_nomad),
          (overlay_set_val, "$g_presentation_obj_12", 1),
        (else_try),
          (eq, "$background_type", cb_forester),
          (overlay_set_val, "$g_presentation_obj_12", 2),
        (else_try),
          (eq, "$background_type", cb_guard),
          (overlay_set_val, "$g_presentation_obj_12", 3),
        (else_try),
          (eq, "$background_type", cb_merchant),
          (overlay_set_val, "$g_presentation_obj_12", 4),
        (else_try),
          (eq, "$background_type", cb_noble),
          (overlay_set_val, "$g_presentation_obj_12", 5),
        (try_end),
      (else_try),
        (try_begin),
          (eq, "$background_type", cb_thief),
          (overlay_set_val, "$g_presentation_obj_12", 0),
        (else_try),
          (eq, "$background_type", cb_nomad),
          (overlay_set_val, "$g_presentation_obj_12", 1),
        (else_try),
          (eq, "$background_type", cb_forester),
          (overlay_set_val, "$g_presentation_obj_12", 2),
        (else_try),
          (eq, "$background_type", cb_guard),
          (overlay_set_val, "$g_presentation_obj_12", 3),
        (else_try),
          (eq, "$background_type", cb_merchant),
          (overlay_set_val, "$g_presentation_obj_12", 4),
        (try_end),
      (try_end),
        # early life
        (position_set_y, pos1, 350),
        (create_combo_button_overlay, "$g_presentation_obj_13"),
        (overlay_set_position, "$g_presentation_obj_13", pos1),
        (overlay_add_item, "$g_presentation_obj_13", "@a steppe child"),
        (overlay_add_item, "$g_presentation_obj_13", "@a street urchin"),
        (overlay_add_item, "$g_presentation_obj_13", "@a shop assistant"),
        (overlay_add_item, "$g_presentation_obj_13", "@a craftsman's apprentice"),
        (overlay_add_item, "$g_presentation_obj_13", "@a page at a nobleman's court"),
        (try_begin),
          (eq, "$background_answer_2", cb2_steppe_child),
          (overlay_set_val, "$g_presentation_obj_13", 0),
        (else_try),
          (eq, "$background_answer_2", cb2_urchin),
          (overlay_set_val, "$g_presentation_obj_13", 1),
        (else_try),
          (eq, "$background_answer_2", cb2_merchants_helper),
          (overlay_set_val, "$g_presentation_obj_13", 2),
        (else_try),
          (eq, "$background_answer_2", cb2_apprentice),
          (overlay_set_val, "$g_presentation_obj_13", 3),
        (else_try),
          (eq, "$background_answer_2", cb2_page),
          (overlay_set_val, "$g_presentation_obj_13", 4),
        (try_end),
        
        # later
        (position_set_y, pos1, 270),
        (create_combo_button_overlay, "$g_presentation_obj_14"),
        (overlay_set_position, "$g_presentation_obj_14", pos1),
        (overlay_add_item, "$g_presentation_obj_14", "@a game poacher"),
        (overlay_add_item, "$g_presentation_obj_14", "@a smith"),
        (overlay_add_item, "$g_presentation_obj_14", "@a goods peddler"),
        (overlay_add_item, "$g_presentation_obj_14", "@a university student"),
        (overlay_add_item, "$g_presentation_obj_14", "@a troubadour"),
        (try_begin),
          (this_or_next|eq,"$character_gender",tf_female_elf),
          (eq,"$character_gender",tf_female),
          (overlay_add_item, "$g_presentation_obj_14", "@a lady-in-waiting"),
        (else_try),
          #(eq,"$character_gender",tf_male),
          (overlay_add_item, "$g_presentation_obj_14", "@a squire"),
        (try_end),
        (try_begin),
          (eq, "$background_answer_3", cb3_poacher),
          (overlay_set_val, "$g_presentation_obj_14", 0),
        (else_try),
          (eq, "$background_answer_3", cb3_craftsman),
          (overlay_set_val, "$g_presentation_obj_14", 1),
        (else_try),
          (eq, "$background_answer_3", cb3_peddler),
          (overlay_set_val, "$g_presentation_obj_14", 2),
        (else_try),
          (eq, "$background_answer_3", cb3_student),
          (overlay_set_val, "$g_presentation_obj_14", 3),
        (else_try),
          (eq, "$background_answer_3", cb3_troubadour),
          (overlay_set_val, "$g_presentation_obj_14", 4),
        (else_try),
          (this_or_next|eq, "$background_answer_3", cb3_squire),
          (eq, "$background_answer_3", cb3_lady_in_waiting),
          (overlay_set_val, "$g_presentation_obj_14", 5),
        (try_end),
        
        # reason
        (position_set_y, pos1, 190),
        (create_combo_button_overlay, "$g_presentation_obj_15"),
        (overlay_set_position, "$g_presentation_obj_15", pos1),
        (overlay_add_item, "$g_presentation_obj_15", "@lust for money and power"),
        (overlay_add_item, "$g_presentation_obj_15", "@being forced out of your home"),
        (overlay_add_item, "$g_presentation_obj_15", "@wanderlust"),
        (overlay_add_item, "$g_presentation_obj_15", "@the loss of a loved one"),
        (overlay_add_item, "$g_presentation_obj_15", "@personal revenge"),
        (try_begin),
          (eq, "$background_answer_4", cb4_greed),
          (overlay_set_val, "$g_presentation_obj_15", 0),
        (else_try),
          (eq, "$background_answer_4", cb4_disown),
          (overlay_set_val, "$g_presentation_obj_15", 1),
        (else_try),
          (eq, "$background_answer_4", cb4_wanderlust),
          (overlay_set_val, "$g_presentation_obj_15", 2),
        (else_try),
          (eq, "$background_answer_4", cb4_loss),
          (overlay_set_val, "$g_presentation_obj_15", 3),
        (else_try),
          (eq, "$background_answer_4", cb4_revenge),
          (overlay_set_val, "$g_presentation_obj_15", 4),
        (try_end),
        
        ## story
        (call_script, "script_get_character_background_text"),
        (create_text_overlay, reg1, "@{s1}", tf_double_space|tf_scrollable),
        (position_set_x, pos1, 400),
        (position_set_y, pos1, 80),
        (overlay_set_position, reg1, pos1),
        (position_set_x, pos1, 500),
        (position_set_y, pos1, 450),
        (overlay_set_area_size, reg1, pos1),
        
        ####### mouse fix pos system #######
        #(call_script, "script_mouse_fix_pos_ready"),
        ####### mouse fix pos system #######
      ]),

    #(ti_on_presentation_run,
      #[
        ####### mouse fix pos system #######
        #(call_script, "script_mouse_fix_pos_run"),
        ####### mouse fix pos system #######
    #]),

    (ti_on_presentation_event_state_change,
      [
        (store_trigger_param_1, ":object"),
        (store_trigger_param_2, ":value"),

        (try_begin),
          (eq, ":object", "$g_presentation_obj_11"),
          (try_begin),
            (eq, ":value", 0),
            (assign, "$character_gender", tf_female),
            (try_begin),
              (eq, "$background_answer_3", cb3_squire),
              (assign, "$background_answer_3", cb3_lady_in_waiting),
            (try_end),
          (else_try),
            (eq, ":value", 1),
            (assign, "$character_gender", tf_male),
            (try_begin),
              (eq, "$background_answer_3", cb3_lady_in_waiting),
              (assign, "$background_answer_3", cb3_squire),
            (try_end),
          (else_try),
            (eq, ":value", 2),
            (assign, "$character_gender", tf_male_elf),
            (try_begin),
              (eq, "$background_answer_3", cb3_lady_in_waiting),
              (assign, "$background_answer_3", cb3_squire),
            (try_end),
          (else_try),
            (eq, ":value", 3),
            (assign, "$character_gender", tf_female_elf),
            (try_begin),
              (eq, "$background_answer_3", cb3_squire),
              (assign, "$background_answer_3", cb3_lady_in_waiting),
            (try_end),
          (else_try),
            (eq, ":value", 4),
            (assign, "$character_gender", tf_demon_human),
            (try_begin),
              (eq, "$background_answer_3", cb3_lady_in_waiting),
              (assign, "$background_answer_3", cb3_squire),
            (try_end),
          (else_try),
            (eq, ":value", 5),
            (assign, "$character_gender", tf_dwarf),
            (try_begin),
              (eq, "$background_answer_3", cb3_lady_in_waiting),
              (assign, "$background_answer_3", cb3_squire),
            (try_end),
          (else_try),
            (eq, ":value", 6),
            (assign, "$character_gender", tf_vampire),
            (try_begin),
              (eq, "$background_answer_3", cb3_lady_in_waiting),
              (assign, "$background_answer_3", cb3_squire),
            (try_end),
          (else_try),
            (eq, ":value", 7),
            (assign, "$character_gender", tf_ogre),
          (try_end),
          (start_presentation, "prsnt_character_creation"),
        (else_try),
          (eq, ":object", "$g_presentation_obj_12"),
        (try_begin),
          (this_or_next|eq, "$character_gender", tf_demon_human),
          (this_or_next|eq, "$character_gender", tf_vampire),
          (this_or_next|eq, "$character_gender", tf_male),
          (this_or_next|eq, "$character_gender", tf_female),
          (this_or_next|eq, "$character_gender", tf_male_elf),
          (eq, "$character_gender", tf_female_elf),
          (try_begin),
            (eq, ":value", 0),
            (assign, "$background_type", cb_thief),
          (else_try),
            (eq, ":value", 1),
            (assign, "$background_type", cb_nomad),
          (else_try),
            (eq, ":value", 2),
            (assign, "$background_type", cb_forester),
          (else_try),
            (eq, ":value", 3),
            (assign, "$background_type", cb_guard),
          (else_try),
            (eq, ":value", 4),
            (assign, "$background_type", cb_merchant),
          (else_try),
            (eq, ":value", 5),
            (assign, "$background_type", cb_noble),
          (try_end),
        (else_try),
          (try_begin),
            (eq, ":value", 0),
            (assign, "$background_type", cb_thief),
          (else_try),
            (eq, ":value", 1),
            (assign, "$background_type", cb_nomad),
          (else_try),
            (eq, ":value", 2),
            (assign, "$background_type", cb_forester),
          (else_try),
            (eq, ":value", 3),
            (assign, "$background_type", cb_guard),
          (else_try),
            (eq, ":value", 4),
            (assign, "$background_type", cb_merchant),
          (try_end),
        (try_end),
          (start_presentation, "prsnt_character_creation"),
        (else_try),
          (eq, ":object", "$g_presentation_obj_13"),
          (try_begin),
            (eq, ":value", 0),
            (assign, "$background_answer_2", cb2_steppe_child),
          (else_try),
            (eq, ":value", 1),
            (assign, "$background_answer_2", cb2_urchin),
          (else_try),
            (eq, ":value", 2),
            (assign, "$background_answer_2", cb2_merchants_helper),
          (else_try),
            (eq, ":value", 3),
            (assign, "$background_answer_2", cb2_apprentice),
          (else_try),
            (eq, ":value", 4),
            (assign, "$background_answer_2", cb2_page),
          (try_end),
          (start_presentation, "prsnt_character_creation"),
        (else_try),
          (eq, ":object", "$g_presentation_obj_14"),
          (try_begin),
            (eq, ":value", 0),
            (assign, "$background_answer_3", cb3_poacher),
          (else_try),
            (eq, ":value", 1),
            (assign, "$background_answer_3", cb3_craftsman),
          (else_try),
            (eq, ":value", 2),
            (assign, "$background_answer_3", cb3_peddler),
          (else_try),
            (eq, ":value", 3),
            (assign, "$background_answer_3", cb3_student),
          (else_try),
            (eq, ":value", 4),
            (assign, "$background_answer_3", cb3_troubadour),
          (else_try),
            (eq, ":value", 5),
            (try_begin),
              (this_or_next|eq, "$character_gender", tf_female_elf),
              (eq, "$character_gender", tf_female),
              (assign, "$background_answer_3", cb3_lady_in_waiting),
            (else_try),
              #(eq, "$character_gender", tf_male),
              (assign, "$background_answer_3", cb3_squire),
            (try_end),
          (try_end),
          (start_presentation, "prsnt_character_creation"),
        (else_try),
          (eq, ":object", "$g_presentation_obj_15"),
          (try_begin),
            (eq, ":value", 0),
            (assign, "$background_answer_4", cb4_greed),
          (else_try),
            (eq, ":value", 1),
            (assign, "$background_answer_4", cb4_disown),
          (else_try),
            (eq, ":value", 2),
            (assign, "$background_answer_4", cb4_wanderlust),
          (else_try),
            (eq, ":value", 3),
            (assign, "$background_answer_4", cb4_loss),
          (else_try),
            (eq, ":value", 4),
            (assign, "$background_answer_4", cb4_revenge),
          (try_end),
          (start_presentation, "prsnt_character_creation"),
        (else_try), ## Randomize
          (eq, ":object", "$g_presentation_obj_3"),
          # gender
          (store_random_in_range, ":player_gender", 0, 2),
          (assign, "$character_gender", ":player_gender"),
          # father
          (store_random_in_range, ":r_value", 0, 6),
          (try_begin),
            (eq, ":r_value", 0),
            (assign, "$background_type", cb_thief),
          (else_try),
            (eq, ":r_value", 1),
            (assign, "$background_type", cb_nomad),
          (else_try),
            (eq, ":r_value", 2),
            (assign, "$background_type", cb_forester),
          (else_try),
            (eq, ":r_value", 3),
            (assign, "$background_type", cb_guard),
          (else_try),
            (eq, ":r_value", 4),
            (assign, "$background_type", cb_merchant),
          (else_try),
            (eq, ":r_value", 5),
            (assign, "$background_type", cb_noble),
          (try_end),
          # early life
          (store_random_in_range, ":r_value", 0, 5),
          (try_begin),
            (eq, ":r_value", 0),
            (assign, "$background_answer_2", cb2_steppe_child),
          (else_try),
            (eq, ":r_value", 1),
            (assign, "$background_answer_2", cb2_urchin),
          (else_try),
            (eq, ":r_value", 2),
            (assign, "$background_answer_2", cb2_merchants_helper),
          (else_try),
            (eq, ":r_value", 3),
            (assign, "$background_answer_2", cb2_apprentice),
          (else_try),
            (eq, ":r_value", 4),
            (assign, "$background_answer_2", cb2_page),
          (try_end),
          # later
          (store_random_in_range, ":r_value", 0, 6),
          (try_begin),
            (eq, ":r_value", 0),
            (assign, "$background_answer_3", cb3_poacher),
          (else_try),
            (eq, ":r_value", 1),
            (assign, "$background_answer_3", cb3_craftsman),
          (else_try),
            (eq, ":r_value", 2),
            (assign, "$background_answer_3", cb3_peddler),
          (else_try),
            (eq, ":r_value", 3),
            (assign, "$background_answer_3", cb3_student),
          (else_try),
            (eq, ":r_value", 4),
            (assign, "$background_answer_3", cb3_troubadour),
          (else_try),
            (eq, ":r_value", 5),
            (try_begin),
              (this_or_next|eq, "$character_gender", tf_female_elf),
              (eq, "$character_gender", tf_female),
              (assign, "$background_answer_3", cb3_lady_in_waiting),
            (else_try),
              (eq, "$character_gender", tf_male),
              (assign, "$background_answer_3", cb3_squire),
            (try_end),
          (try_end),
          # reason
          (store_random_in_range, ":r_value", 0, 5),
          (try_begin),
            (eq, ":r_value", 0),
            (assign, "$background_answer_4", cb4_greed),
          (else_try),
            (eq, ":r_value", 1),
            (assign, "$background_answer_4", cb4_disown),
          (else_try),
            (eq, ":r_value", 2),
            (assign, "$background_answer_4", cb4_wanderlust),
          (else_try),
            (eq, ":r_value", 3),
            (assign, "$background_answer_4", cb4_loss),
          (else_try),
            (eq, ":r_value", 4),
            (assign, "$background_answer_4", cb4_revenge),
          (try_end),
          (start_presentation, "prsnt_character_creation"),
        (else_try), ## Default
          (eq, ":object", "$g_presentation_obj_2"),
          (assign, "$character_gender", tf_male),
          (assign,"$background_type",cb_noble),
          (assign,"$background_answer_2", cb2_page),
          (assign,"$background_answer_3",cb3_squire),
          (assign,"$background_answer_4", cb4_revenge),
          (start_presentation, "prsnt_character_creation"),
        (else_try),
          (eq, ":object", "$g_presentation_obj_1"),
          # gender
          (try_begin),
            (eq,"$character_gender",tf_male),
            (troop_set_type,"trp_player", 0),
          (else_try),
            (eq,"$character_gender",tf_female),
            (troop_set_type,"trp_player", 1),
          (else_try),
            (troop_set_type,"trp_player", "$character_gender"),
          (try_end),
          
          
          
          #(try_begin),
            #(eq, "$background_type", cb_noble),
#normal_banner_begin
            #(start_presentation, "prsnt_banner_selection"),
#custom_banner_begin
            #(jump_to_menu, "mnu_auto_return"),
#             (start_presentation, "prsnt_custom_banner"),
          #(else_try),
            (presentation_set_duration, 0),
            (jump_to_menu, "mnu_banner_selection_for_noble"),
          #(try_end),
        (try_end),
    ]),
  ]),

  ("gambling", 0, 0, [
    (ti_on_presentation_load,
      [
        (presentation_set_duration, 999999),
        (set_fixed_point_multiplier, 1000),

        (create_mesh_overlay, reg1, "mesh_load_window"),
        (position_set_x, pos1, 0),
        (position_set_y, pos1, 0),
        (overlay_set_position, reg1, pos1),
        
        (assign, "$g_current_opened_item_details", -1),

        ## back
        (create_game_button_overlay, "$g_presentation_obj_1", "@Done"),
        (position_set_x, pos1, 500),
        (position_set_y, pos1, 25),
        (overlay_set_position, "$g_presentation_obj_1", pos1),

        (create_text_overlay, reg1, "@This is the gambling screen. Hold down control key while clicking on an item to purchase or sell it.", tf_double_space|tf_scrollable),
        (position_set_x, pos1, 425),
        (position_set_y, pos1, 290),
        (overlay_set_position, reg1, pos1),
        (position_set_x, pos1, 900),
        (position_set_y, pos1, 900),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 150),
        (position_set_y, pos1, 200),
        (overlay_set_area_size, reg1, pos1),

        # character picture
        (try_begin),  
          (party_slot_eq, "$current_town", slot_center_lair_build_type, imp_cache),
          (assign, ":mystic_merchant", "trp_demon_1"),
        (else_try),  
          (party_slot_eq, "$current_town", slot_center_lair_build_type, treant_alcove),
          (assign, ":mystic_merchant", "trp_mystic_merchant_2"),
        (else_try),  
          (party_slot_eq, "$current_town", slot_center_lair_build_type, elf_homestead),
          (assign, ":mystic_merchant", "trp_mystic_merchant_3"),
        (else_try),  
          (party_slot_eq, "$current_town", slot_center_lair_build_type, ogre_fort),
          (assign, ":mystic_merchant", "trp_mystic_merchant_4"),
        (else_try),  
          (party_slot_eq, "$current_town", slot_center_lair_build_type, vampire_estate),
          (assign, ":mystic_merchant", "trp_mystic_merchant_5"),
        (else_try),  
          (this_or_next|party_slot_eq, "$current_town", slot_center_lair_build_type, wolf_pen),
          (party_slot_eq, "$current_town", slot_center_lair_build_type, labyrinth),
          (assign, ":mystic_merchant", "trp_mystic_merchant_6"),
        (else_try),  
          (party_slot_eq, "$current_town", slot_center_lair_build_type, clan_halls),
          (assign, ":mystic_merchant", "trp_mystic_merchant_7"),
        (else_try),  
          (party_slot_eq, "$current_town", slot_center_lair_build_type, magic_guild),
          (assign, ":mystic_merchant", "trp_mystic_merchant_8"),
        (else_try),  
          (party_slot_eq, "$current_town", slot_center_lair_build_type, cathedral),
          (assign, ":mystic_merchant", "trp_mystic_merchant_9"),
        (else_try),  
          (assign, ":mystic_merchant", "trp_salt_mine_merchant"),
        (try_end),
        (create_mesh_overlay_with_tableau_material, reg0, -1, "tableau_troop_note_mesh", ":mystic_merchant"),
        (position_set_x, pos1, 500),
        (position_set_y, pos1, 500),
        (overlay_set_size, reg0, pos1),
        (position_set_x, pos1, 380),
        (position_set_y, pos1, 520),
        (overlay_set_position, reg0, pos1),
        
        (create_mesh_overlay_with_tableau_material, reg0, -1, "tableau_troop_note_mesh", "trp_player"),
        (position_set_x, pos1, 500),
        (position_set_y, pos1, 500),
        (overlay_set_size, reg0, pos1),
        (position_set_x, pos1, 450),
        (position_set_y, pos1, 155),
        (overlay_set_position, reg0, pos1),
        
        # money text
        (store_troop_gold, ":troop_gold", "trp_salt_mine_merchant"),
        (call_script, "script_game_get_money_text", ":troop_gold"),
        (create_text_overlay, reg1, "@Money: {s1}", tf_center_justify),
        (position_set_x, pos1, 210),
        (position_set_y, pos1, 90),
        (overlay_set_position, reg1, pos1),
        
        (store_troop_gold, ":troop_gold", "trp_player"),
        (call_script, "script_game_get_money_text", ":troop_gold"),
        (create_text_overlay, reg1, "@Money: {s1}", tf_center_justify),
        (position_set_x, pos1, 760),
        (position_set_y, pos1, 90),
        (overlay_set_position, reg1, pos1),

        ## mystic_merchant's inventory
        (str_clear, s0),
        (create_text_overlay, reg1, s0, tf_scrollable),
        (position_set_x, pos1, 50),
        (position_set_y, pos1, 130),
        (overlay_set_position, reg1, pos1),
        (position_set_x, pos1, 350),
        (position_set_y, pos1, 560),
        (overlay_set_area_size, reg1, pos1),
        (set_container_overlay, reg1),

        (assign, ":pos_x", 0),
        (assign, ":pos_y", 1840),
        (assign, ":slot_no", 10),
        (try_for_range, ":unused_height", 0, 24),
          (try_for_range, ":unused_width", 0, 4),
            (try_begin),
              (troop_slot_eq, "trp_salt_mine_merchant", ":slot_no", 1), # 0 = not_hidden , 1 = hidden
              (create_image_button_overlay, reg1, "mesh_white_plane", "mesh_white_plane"),
              (position_set_x, pos1, 4000),
              (position_set_y, pos1, 4000),
              (overlay_set_size, reg1, pos1),
              (overlay_set_color, reg1, 0xFF8080), # red background
            (else_try),
              (create_image_button_overlay, reg1, "mesh_mp_inventory_slot_empty", "mesh_mp_inventory_slot_empty"),
              (position_set_x, pos1, 640),
              (position_set_y, pos1, 640),
              (overlay_set_size, reg1, pos1),
            (try_end),
            (position_set_x, pos1, ":pos_x"),
            (position_set_y, pos1, ":pos_y"),
            (overlay_set_position, reg1, pos1),
            (troop_set_slot, "trp_temp_array_a", ":slot_no", reg1),
            (create_mesh_overlay, reg1, "mesh_mp_inventory_choose"),
            (position_set_x, pos1, 640),
            (position_set_y, pos1, 640),
            (overlay_set_size, reg1, pos1),
            (position_set_x, pos1, ":pos_x"),
            (position_set_y, pos1, ":pos_y"),
            (overlay_set_position, reg1, pos1),
            (troop_get_inventory_slot, ":item_no", "trp_salt_mine_merchant", ":slot_no"),
            (try_begin),
              (gt, ":item_no", -1),
              (create_mesh_overlay_with_item_id, reg1, ":item_no"),
              (position_set_x, pos1, 800),
              (position_set_y, pos1, 800),
              (overlay_set_size, reg1, pos1),
              (store_add, ":item_x", ":pos_x", 40),
              (store_add, ":item_y", ":pos_y", 40),
              (position_set_x, pos1, ":item_x"),
              (position_set_y, pos1, ":item_y"),
              (overlay_set_position, reg1, pos1),
              (troop_set_slot, "trp_temp_array_b", ":slot_no", reg1),
            (try_end),
            (val_add, ":pos_x", 80),
            (val_add, ":slot_no", 1),
          (try_end),
          (assign, ":pos_x", 0),
          (val_sub, ":pos_y", 80),
        (try_end),
        (set_container_overlay, -1),

        ## player's inventory
        (str_clear, s0),
        (create_text_overlay, reg1, s0, tf_scrollable),
        (position_set_x, pos1, 600),
        (position_set_y, pos1, 130),
        (overlay_set_position, reg1, pos1),
        (position_set_x, pos1, 350),
        (position_set_y, pos1, 560),
        (overlay_set_area_size, reg1, pos1),
        (set_container_overlay, reg1),

        (troop_get_inventory_capacity, ":capacity", "trp_player"),
        (store_add, ":max_slot_no", ":capacity", 100),
        (assign, ":pos_x", 0),
        (store_sub, ":no_inventory_space", ":capacity", 10),
        (store_div, ":rows", ":no_inventory_space", 4),
        (store_mod, ":rows_mod", ":no_inventory_space", 4),
        (val_min, ":rows_mod", 1),
        (val_add, ":rows", ":rows_mod"),
        (store_mul, ":pos_y", ":rows", 80),
        (val_sub, ":pos_y", 80),
        (assign, ":slot_no", 110),
        (try_for_range, ":unused_height", 0, ":rows"),
          (try_for_range, ":unused_width", 0, 4),
            (lt, ":slot_no", ":max_slot_no"),
            (create_image_button_overlay, reg1, "mesh_mp_inventory_slot_empty", "mesh_mp_inventory_slot_empty"),
            (position_set_x, pos1, 640),
            (position_set_y, pos1, 640),
            (overlay_set_size, reg1, pos1),
            (position_set_x, pos1, ":pos_x"),
            (position_set_y, pos1, ":pos_y"),
            (overlay_set_position, reg1, pos1),
            (troop_set_slot, "trp_temp_array_a", ":slot_no", reg1),
            (create_mesh_overlay, reg1, "mesh_mp_inventory_choose"),
            (position_set_x, pos1, 640),
            (position_set_y, pos1, 640),
            (overlay_set_size, reg1, pos1),
            (position_set_x, pos1, ":pos_x"),
            (position_set_y, pos1, ":pos_y"),
            (overlay_set_position, reg1, pos1),
            (store_sub, ":player_slot_no", ":slot_no", 100),
            (troop_get_inventory_slot, ":item_no", "trp_player", ":player_slot_no"),
            (try_begin),
              (gt, ":item_no", -1),
              (create_mesh_overlay_with_item_id, reg1, ":item_no"),
              (position_set_x, pos1, 800),
              (position_set_y, pos1, 800),
              (overlay_set_size, reg1, pos1),
              (store_add, ":item_x", ":pos_x", 40),
              (store_add, ":item_y", ":pos_y", 40),
              (position_set_x, pos1, ":item_x"),
              (position_set_y, pos1, ":item_y"),
              (overlay_set_position, reg1, pos1),
              (troop_set_slot, "trp_temp_array_b", ":slot_no", reg1),
            (try_end),
            (val_add, ":pos_x", 80),
            (val_add, ":slot_no", 1),
          (try_end),
          (assign, ":pos_x", 0),
          (val_sub, ":pos_y", 80),
        (try_end),
        (set_container_overlay, -1),
        ## items

      ]),

    (ti_on_presentation_mouse_enter_leave,
      [
      (store_trigger_param_1, ":object"),
      (store_trigger_param_2, ":enter_leave"),

      (troop_get_inventory_capacity, ":capacity", "trp_player"),
      (store_add, ":max_slot_no", ":capacity", 100),
      (try_begin),
        (eq, ":enter_leave", 0),
        (try_begin),
          (eq, "$g_current_opened_item_details", -1),
          (close_item_details),
        (try_end),
        (try_for_range, ":slot_no", 10, ":max_slot_no"),
          (troop_slot_eq, "trp_temp_array_a", ":slot_no", ":object"),
          (try_begin),
            (lt, ":slot_no", 110),
            (troop_get_inventory_slot, ":item_no", "trp_salt_mine_merchant", ":slot_no"),
            (troop_get_inventory_slot_modifier, ":imod", "trp_salt_mine_merchant", ":slot_no"),
            (try_begin),
              (gt, ":item_no", -1),
              (troop_get_slot, ":target_obj", "trp_temp_array_b", ":slot_no"),
              (overlay_get_position, pos0, ":target_obj"),
              (call_script, "script_game_get_item_buy_price_factor", ":item_no"),
              (assign, ":buy_price_factor", reg0),
              (try_begin),
                (troop_slot_eq, "trp_salt_mine_merchant", ":slot_no", 1), # 0 = not_hidden , 1 = hidden
                (show_item_details, ":item_no", pos0, ":buy_price_factor"),
              (else_try),
                (show_item_details_with_modifier, ":item_no", ":imod", pos0, ":buy_price_factor"),
              (try_end),
              (assign, "$g_current_opened_item_details", ":slot_no"),
            (try_end),
          (else_try),
            (store_sub, ":player_slot_no", ":slot_no", 100),
            (troop_get_inventory_slot, ":item_no", "trp_player", ":player_slot_no"),
            (try_begin),
              (gt, ":item_no", -1),
              (troop_get_slot, ":target_obj", "trp_temp_array_b", ":slot_no"),
              (overlay_get_position, pos0, ":target_obj"),
              (troop_get_inventory_slot_modifier, ":imod", "trp_player", ":player_slot_no"),
              (call_script, "script_game_get_item_sell_price_factor", ":item_no"),
              (assign, ":sell_price_factor", reg0),
              (try_begin),
                (gt, ":imod", 0),
                (show_item_details_with_modifier, ":item_no", ":imod", pos0, ":sell_price_factor"),
              (else_try),
                (show_item_details, ":item_no", pos0, ":sell_price_factor"),
              (try_end),
              (assign, "$g_current_opened_item_details", ":slot_no"),
            (try_end),
          (try_end),
        (try_end),
      (else_try),
        (try_for_range, ":slot_no", 10, ":max_slot_no"),
          (troop_slot_eq, "trp_temp_array_a", ":slot_no", ":object"),
          (try_begin),
            (this_or_next|eq, "$g_current_opened_item_details", ":slot_no"),
            (eq, "$g_current_opened_item_details", -1),
            (close_item_details),
          (try_end),
        (try_end),
      (try_end),
    ]),

    (ti_on_presentation_event_state_change,
      [
        (store_trigger_param_1, ":object"),

        (try_begin),
          (eq, ":object", "$g_presentation_obj_1"),
          (presentation_set_duration, 0),
          (mission_enable_talk),
        (try_end),
        
        (troop_get_inventory_capacity, ":capacity", "trp_player"),
        (store_add, ":max_slot_no", ":capacity", 100),
        (try_for_range, ":slot_no", 10, ":max_slot_no"),
          (troop_slot_eq, "trp_temp_array_a", ":slot_no", ":object"),
          (try_begin),
            (this_or_next|key_is_down, key_left_control),
            (key_is_down, key_right_control),
            (try_begin),
              (lt, ":slot_no", 110),
              (troop_get_inventory_slot, ":item_no", "trp_salt_mine_merchant", ":slot_no"),
              (troop_get_inventory_slot_modifier, ":imod", "trp_salt_mine_merchant", ":slot_no"),
              (try_begin),
                (gt, ":item_no", -1),
                (call_script, "script_game_get_item_buy_price_factor", ":item_no"),
                (assign, ":buy_price_factor", reg0),
                (try_begin),
                  (troop_slot_eq, "trp_salt_mine_merchant", ":slot_no", 1), # 0 = not_hidden , 1 = hidden
                  (call_script, "script_get_item_value_with_imod", ":item_no", 0),
                  (assign, ":cost", reg0),
                (else_try),
                  (call_script, "script_get_item_value_with_imod", ":item_no", ":imod"),
                  (assign, ":cost", reg0),
                (try_end),
                (val_div, ":cost", 100),
                (val_mul, ":cost", ":buy_price_factor"),
                (val_div, ":cost", 100),
                (val_max, ":cost",1),
                (store_troop_gold, ":troop_gold", "trp_player"),
                (try_begin),
                  (lt, ":troop_gold", ":cost"),
                  (display_message, "@You don't have enough money."),
                (else_try),
                  (store_free_inventory_capacity, ":inv_cap", "trp_player"),
                  (le, ":inv_cap", 0),
                (else_try),
                  (troop_remove_gold, "trp_player", ":cost"),
                  (troop_add_gold, "trp_salt_mine_merchant", ":cost"),
                  (troop_set_inventory_slot, "trp_salt_mine_merchant", ":slot_no", -1),
                  (set_show_messages, 0),
                  (troop_add_item, "trp_player", ":item_no", ":imod"),
                  (set_show_messages, 1),
                  (troop_set_slot, "trp_salt_mine_merchant", ":slot_no", 0), # 0 = not_hidden , 1 = hidden
                  (start_presentation, "prsnt_gambling"),
                (try_end),
              (try_end),
            (else_try),
              (store_sub, ":player_slot_no", ":slot_no", 100),
              (troop_get_inventory_slot, ":item_no", "trp_player", ":player_slot_no"),
              (troop_get_inventory_slot_modifier, ":imod", "trp_player", ":player_slot_no"),
              (try_begin),
                (gt, ":item_no", -1),
                (call_script, "script_game_get_item_sell_price_factor", ":item_no"),
                (assign, ":sell_price_factor", reg0),
                (call_script, "script_get_item_value_with_imod", ":item_no", ":imod"),
                (assign, ":cost", reg0),
                (val_div, ":cost", 100),
                (val_mul, ":cost", ":sell_price_factor"),
                (val_div, ":cost", 100),
                (val_max, ":cost",1),
                (store_troop_gold, ":troop_gold", "trp_salt_mine_merchant"),
                (try_begin),
                  (item_get_type, ":item_type", ":item_no"),
                  (eq, ":item_type", itp_type_goods),
                (else_try),
                  (store_free_inventory_capacity, ":inv_cap", "trp_salt_mine_merchant"),
                  (le, ":inv_cap", 0),
                (else_try),
                  (lt, ":troop_gold", ":cost"),
                  (display_message, "@He don't have enough money."),
                (else_try),
                  (troop_remove_gold, "trp_salt_mine_merchant", ":cost"),
                  (troop_add_gold, "trp_player", ":cost"),
                  (troop_set_inventory_slot, "trp_player", ":player_slot_no", -1),
                  (troop_add_item, "trp_salt_mine_merchant", ":item_no", ":imod"),
                  (start_presentation, "prsnt_gambling"),
                (try_end),
              (try_end),
            (try_end),
          (try_end),
        (try_end),
    ]),
  ]),

  ("relations_with_factions", 0, mesh_load_window, [
    (ti_on_presentation_load,
      [
        (presentation_set_duration, 999999),
        (set_fixed_point_multiplier, 1000),
        
        (create_text_overlay, reg1, "@Relation with the factions", tf_center_justify),
        (position_set_x, pos1, 500),
        (position_set_y, pos1, 670),
        (overlay_set_position, reg1, pos1),
        (position_set_x, pos1, 1500),
        (position_set_y, pos1, 1500),
        (overlay_set_size, reg1, pos1),
        
        (create_text_overlay, reg1, "@Click the banner to view relation with the lords", tf_center_justify),
        (position_set_x, pos1, 500),
        (position_set_y, pos1, 50),
        (overlay_set_position, reg1, pos1),
        (position_set_x, pos1, 800),
        (position_set_y, pos1, 800),
        (overlay_set_size, reg1, pos1),
        
        (str_clear, s0),
        (create_text_overlay, "$g_presentation_obj_6", s0, tf_scrollable),
        (position_set_x, pos1, 15),
        (position_set_y, pos1, 80),
        (overlay_set_position, "$g_presentation_obj_6", pos1),
        (position_set_x, pos1, 950),
        (position_set_y, pos1, 570),
        (overlay_set_area_size, "$g_presentation_obj_6", pos1),
        (set_container_overlay, "$g_presentation_obj_6"),
        
        (assign, ":num_active_factions", 0),
        (try_for_range, ":cur_kingdom", kingdoms_begin, kingdoms_end),
          (faction_slot_eq, ":cur_kingdom", slot_faction_state, sfs_active),
          (val_add, ":num_active_factions", 1),
        (try_end),
        
        (store_mod, ":mod_value", ":num_active_factions", 2),
        (try_begin),
          (eq, ":mod_value", 0),
          (assign, ":cur_x", 470),
        (else_try),
          (assign, ":cur_x", -30),
        (try_end),
        
        (try_begin),
          (is_between, ":num_active_factions", 1, 3),
          (assign, ":cur_y", 400),
        (else_try),
          (is_between, ":num_active_factions", 3, 5),
          (assign, ":cur_y", 200),
        (else_try),
          (is_between, ":num_active_factions", 5, 7),
          (assign, ":cur_y", 0),
        (else_try),
          (assign, ":cur_y", 20),
        (try_end),
        
        (assign, ":x_offset", 500),
        (assign, ":y_offset", 200),
        
        (assign, ":slot_no", 0),
        (try_for_range_backwards, ":cur_kingdom", kingdoms_begin, kingdoms_end),
          (faction_slot_eq, ":cur_kingdom", slot_faction_state, sfs_active), 
          (try_begin),
            #(is_between, ":cur_kingdom", "fac_kingdom_1", kingdoms_end),
            #(create_image_button_overlay_with_tableau_material, reg1, -1, "tableau_faction_note_mesh", ":cur_kingdom"),
            #(assign, ":totem_x", ":cur_x"),
          #(else_try), # use banner instead
            (create_image_button_overlay_with_tableau_material, reg1, -1, "tableau_faction_note_mesh_banner", ":cur_kingdom"),
            (store_add, ":totem_x", ":cur_x", 90),
          (try_end),
          (position_set_x, pos1, 600),
          (position_set_y, pos1, 600),
          (overlay_set_size, reg1, pos1),
          (position_set_x, pos1, ":totem_x"),
          (position_set_y, pos1, ":cur_y"),
          (overlay_set_position, reg1, pos1),
          (troop_set_slot, "trp_temp_array_a", ":slot_no", reg1),
          (troop_set_slot, "trp_temp_array_b", ":slot_no", ":cur_kingdom"),
          (val_add, ":slot_no", 1),
          
          # bar
          (store_add, ":relation_bar_x", ":cur_x", 270),
          (store_add, ":relation_bar_y", ":cur_y", 10),
          (create_mesh_overlay, reg1, "mesh_relation_bar"),
          (position_set_x, pos1, ":relation_bar_x"),
          (position_set_y, pos1, ":relation_bar_y"),
          (overlay_set_position, reg1, pos1),
          # pointer
          (try_begin),
            (eq, ":cur_kingdom", "fac_player_supporters_faction"),
            (assign, ":cur_relation", 100),
          (else_try),
            (store_relation, ":cur_relation", "fac_player_supporters_faction", ":cur_kingdom"),
          (try_end),
          (store_sub, ":pointer_x", ":cur_relation", -100),
          (val_add, ":pointer_x", 270),
          (val_add, ":pointer_x", ":cur_x"),
          (create_mesh_overlay, reg1, "mesh_reln_pointer"),
          (position_set_x, pos1, ":pointer_x"),
          (position_set_y, pos1, ":relation_bar_y"),
          (overlay_set_position, reg1, pos1),
          # text
          (store_add, ":text_x", ":cur_x", 370),
          (store_add, ":text_y", ":relation_bar_y", 45),
          (assign, reg0, ":cur_relation"),
          (str_store_faction_name, s1, ":cur_kingdom"),
          
          (try_begin),
            (ge, ":cur_relation", 90),
            (str_store_string, s3, "@Loyal"),
          (else_try),
            (ge, ":cur_relation", 80),
            (str_store_string, s3, "@Devoted"),
          (else_try),
            (ge, ":cur_relation", 70),
            (str_store_string, s3, "@Fond"),
          (else_try),
            (ge, ":cur_relation", 60),
            (str_store_string, s3, "@Gracious"),
          (else_try),
            (ge, ":cur_relation", 50),
            (str_store_string, s3, "@Friendly"),
          (else_try),
            (ge, ":cur_relation", 40),
            (str_store_string, s3, "@Supportive"),
          (else_try),
            (ge, ":cur_relation", 30),
            (str_store_string, s3, "@Favorable"),
          (else_try),
            (ge, ":cur_relation", 20),
            (str_store_string, s3, "@Cooperative"),
          (else_try),
            (ge, ":cur_relation", 10),
            (str_store_string, s3, "@Accepting"),
          (else_try),
            (ge, ":cur_relation", 0),
            (str_store_string, s3, "@Indifferent"),
          (else_try),
            (ge, ":cur_relation", -10),
            (str_store_string, s3, "@Suspicious"),
          (else_try),
            (ge, ":cur_relation", -20),
            (str_store_string, s3, "@Grumbling"),
          (else_try),
            (ge, ":cur_relation", -30),
            (str_store_string, s3, "@Hostile"),
          (else_try),
            (ge, ":cur_relation", -40),
            (str_store_string, s3, "@Resentful"),
          (else_try),
            (ge, ":cur_relation", -50),
            (str_store_string, s3, "@Angry"),
          (else_try),
            (ge, ":cur_relation", -60),
            (str_store_string, s3, "@Hateful"),
          (else_try),
            (ge, ":cur_relation", -70),
            (str_store_string, s3, "@Revengeful"),
          (else_try),
            (str_store_string, s3, "@Vengeful"),
          (try_end),
          
            # for current line_faction count lords and centers
            (assign, ":num_lords", 0),
            #(assign, ":num_caravans", 0),
            (assign, ":num_centers", 0),
            (assign, ":unassigned_centers", 0),
            (try_for_parties, ":cur_party"),
                (store_faction_of_party, ":cur_faction", ":cur_party"),
                (eq, ":cur_faction", ":cur_kingdom"),

                (try_begin),
                    (party_slot_eq, ":cur_party", slot_party_type, spt_kingdom_hero_party),
                    (val_add, ":num_lords", 1),
                #(else_try),
                    #(party_slot_eq, ":cur_party", slot_party_type, spt_kingdom_caravan),
                    #(val_add, ":num_caravans", 1),
                (else_try),
                    (this_or_next|party_slot_eq, ":cur_party", slot_party_type, spt_town),
                    (this_or_next|party_slot_eq, ":cur_party", slot_party_type, spt_castle),
                    (party_slot_eq, ":cur_party", slot_party_type, spt_village),
                    (val_add, ":num_centers", 1),

                    (try_begin),
                        (party_slot_eq, ":cur_party", slot_town_lord, stl_unassigned),
                        (val_add, ":unassigned_centers", 1),
                    (try_end),
                (try_end),
            (try_end), # end of parties loop

            # Count prisoners
            (assign, ":prisoners", 0),
            (try_for_range, ":lord_id", active_npcs_begin, active_npcs_end),
                (troop_slot_eq, ":lord_id", slot_troop_occupation, slto_kingdom_hero),
                (troop_slot_ge, ":lord_id", slot_troop_prisoner_of_party, 0),
                (store_troop_faction, ":lord_faction", ":lord_id"),
                (eq, ":lord_faction", ":cur_kingdom"),
                (val_add, ":prisoners", 1),
            (try_end),
          
            (assign, reg61, ":num_centers"),
            (assign, reg58, ":unassigned_centers"),
            #(assign, reg62, ":num_caravans"),
            (assign, reg60, ":num_lords"),
            (assign, reg59, ":prisoners"),
            
            (str_store_string, s4, "@{reg61} {reg58?({reg58} U) :}Centers"),
            #(str_store_string, s5, "@{reg62} Caravans"),
            (str_store_string, s6, "@{reg60} {reg59?({reg59} P) :}Lords"),
          
          (create_text_overlay, reg1, "@{s1}^{s4}^{s6}^{reg0} ({s3})", tf_center_justify),
          (position_set_x, pos1, ":text_x"),
          (position_set_y, pos1, ":text_y"),
          (overlay_set_position, reg1, pos1),
          
          (val_sub, ":cur_x", ":x_offset"),
          (try_begin),
            (eq, ":cur_x", -530),
            (assign, ":cur_x", 470),
            (val_add, ":cur_y", ":y_offset"),
          (try_end),
        (try_end),
        (set_container_overlay, -1),

        ####### mouse fix pos system #######
        #(call_script, "script_mouse_fix_pos_ready"),
        ####### mouse fix pos system #######

        # Done
        (create_game_button_overlay, "$g_presentation_obj_5", "@Done"),
        (position_set_x, pos1, 900),
        (position_set_y, pos1, 25),
        (overlay_set_position, "$g_presentation_obj_5", pos1),
        
        (create_game_button_overlay, "$g_presentation_obj_7", "@relations_with_factions"),
        (position_set_x, pos1, 730),
        (position_set_y, pos1, 25),
        (overlay_set_position, "$g_presentation_obj_7", pos1),
        
      ]),
  
    #(ti_on_presentation_run,
      #[
        ####### mouse fix pos system #######
        #(call_script, "script_mouse_fix_pos_run"),
        ####### mouse fix pos system #######
    #]),
  
    (ti_on_presentation_event_state_change,
      [
        (store_trigger_param_1, ":object"),

        (assign, ":num_active_factions", 0),
        (try_for_range, ":cur_kingdom", kingdoms_begin, kingdoms_end),
          (faction_slot_eq, ":cur_kingdom", slot_faction_state, sfs_active),
          (val_add, ":num_active_factions", 1),
        (try_end),
        (try_for_range, ":slot_no", 0, ":num_active_factions"),
          (troop_slot_eq, "trp_temp_array_a", ":slot_no", ":object"),
          (troop_get_slot, "$temp", "trp_temp_array_b", ":slot_no"),
          (start_presentation, "prsnt_relations_with_lords_by_faction"),
        (try_end),
        
        (try_begin),
          (eq, ":object", "$g_presentation_obj_5"),
          (presentation_set_duration, 0),
        (else_try),
          (eq, ":object", "$g_presentation_obj_7"),
          (start_presentation, "prsnt_faction_relations_report"),
        (try_end),
    ]),
  ]),
  
  
  ("relations_with_lords_by_faction", 0, mesh_load_window, [
    (ti_on_presentation_load,
      [
        (presentation_set_duration, 999999),
        (set_fixed_point_multiplier, 1000),
        
        (assign, ":cur_faction", "$temp"),
        (str_store_faction_name, s1, ":cur_faction"),
        
        (create_text_overlay, reg1, "@Relation with the lords of {s1}", tf_center_justify),
        (position_set_x, pos1, 500),
        (position_set_y, pos1, 670),
        (overlay_set_position, reg1, pos1),
        (position_set_x, pos1, 1500),
        (position_set_y, pos1, 1500),
        (overlay_set_size, reg1, pos1),

        (str_clear, s0),
        (create_text_overlay, "$g_presentation_obj_6", s0, tf_scrollable),
        (position_set_x, pos1, 15),
        (position_set_y, pos1, 80),
        (overlay_set_position, "$g_presentation_obj_6", pos1),
        (position_set_x, pos1, 950),
        (position_set_y, pos1, 570),
        (overlay_set_area_size, "$g_presentation_obj_6", pos1),
        (set_container_overlay, "$g_presentation_obj_6"),

        (assign, ":num_fit_lords", 0),
        (try_for_range, ":active_npc", active_npcs_begin, active_npcs_end),
          (troop_slot_eq, ":active_npc", slot_troop_occupation, slto_kingdom_hero),
          (store_faction_of_troop, ":troop_faction", ":active_npc"),
          (eq, ":troop_faction", ":cur_faction"),
          (val_add, ":num_fit_lords", 1),
        (try_end),
        
        (assign, ":x_offset", 180),
        (assign, ":y_offset", 180),
        (store_mod, ":mod_value", ":num_fit_lords", 5),
        (try_begin),
          (eq, ":mod_value", 0),
          (assign, ":mod_value", 5),
        (try_end),
        (store_mul, ":cur_x", ":mod_value", ":x_offset"),
        (val_sub, ":cur_x", ":x_offset"),
        (val_add, ":cur_x", 35),
        (try_begin),
          (is_between, ":num_fit_lords", 1, 6),
          (assign, ":cur_y", 455),
        (else_try),
          (is_between, ":num_fit_lords", 6, 11),
          (assign, ":cur_y", 275),
        (else_try),
          (assign, ":cur_y", 95),
        (try_end),
        
        
        (try_for_range_backwards, ":active_npc", "trp_kingdom_heroes_including_player_begin", active_npcs_end),
          (assign, ":continue", 0),
          (try_begin),
            (eq, ":active_npc", "trp_kingdom_heroes_including_player_begin"), # add the king back
            (faction_get_slot,  ":cur_faction_leader", ":cur_faction", slot_faction_leader),
            (assign, ":active_npc", ":cur_faction_leader"),
            (assign, ":continue", 1),
          (else_try),
            (troop_slot_eq, ":active_npc", slot_troop_occupation, slto_kingdom_hero),
            (store_faction_of_troop, ":troop_faction", ":active_npc"),
            (eq, ":troop_faction", ":cur_faction"),
            (neg|faction_slot_eq, ":cur_faction", slot_faction_leader,  ":active_npc"), # exclude the king first
            (assign, ":continue", 1),
          (try_end),
          (eq, ":continue", 1),
          (call_script, "script_troop_get_player_relation", ":active_npc"),
          (assign, ":cur_relation", reg0),
          
          # bar
          (create_mesh_overlay, reg1, "mesh_relation_bar_vertical"),
          (store_add, ":bar_x", ":cur_x", 20),
          (store_add, ":bar_y", ":cur_y", 45),
          (position_set_x, pos1, ":bar_x"),
          (position_set_y, pos1, ":bar_y"),
          (overlay_set_position, reg1, pos1),
          # pointer
          (create_mesh_overlay, reg1, "mesh_reln_pointer_vertical"),
          (store_sub, ":pointer_y", ":cur_relation", -100),
          (val_div, ":pointer_y", 2),
          (val_add, ":pointer_y", ":cur_y"),
          (val_add, ":pointer_y", 45),
          (store_add, ":pointer_x", ":cur_x", 20),
          (position_set_x, pos1, ":pointer_x"),
          (position_set_y, pos1, ":pointer_y"),
          (overlay_set_position, reg1, pos1),
          # name
          (store_add, ":name_x", ":cur_x", 80),
          (assign, ":name_y", ":cur_y"),
          (str_store_troop_name, s1, ":active_npc"),
          (create_text_overlay, reg1, "@{s1}", tf_center_justify),
          (position_set_x, pos1, ":name_x"),
          (position_set_y, pos1, ":name_y"),
          (overlay_set_position, reg1, pos1),
          # relation
          (store_add, ":text_x", ":cur_x", 35),
          (store_add, ":text_y", ":cur_y", 100),
          (assign, reg0, ":cur_relation"),
          (create_text_overlay, reg1, "@{reg0}", tf_center_justify),
          (position_set_x, pos1, ":text_x"),
          (position_set_y, pos1, ":text_y"),
          (overlay_set_position, reg1, pos1),
          (position_set_x, pos1, 750),
          (position_set_y, pos1, 750),
          (overlay_set_size, reg1, pos1),
          
          # troop
          (store_add, ":troop_x", ":cur_x", 20),
          (store_add, ":troop_y", ":cur_y", 35),
          (create_mesh_overlay_with_tableau_material, reg1, -1, "tableau_troop_note_mesh", ":active_npc"),
          (position_set_x, pos1, 320),
          (position_set_y, pos1, 320),
          (overlay_set_size, reg1, pos1),
          (position_set_x, pos1, ":troop_x"),
          (position_set_y, pos1, ":troop_y"),
          (overlay_set_position, reg1, pos1),

          (val_sub, ":cur_x", ":x_offset"),
          (try_begin),
            (eq, ":cur_x", -145),
            (assign, ":cur_x", 755),
            (val_add, ":cur_y", ":y_offset"),
          (try_end),
        (try_end),
        (set_container_overlay, -1),
        
        ##### mouse fix pos system #######
        # (call_script, "script_mouse_fix_pos_ready"),
        ##### mouse fix pos system #######

        # Done
        (create_game_button_overlay, "$g_presentation_obj_5", "@Done"),
        (position_set_x, pos1, 900),
        (position_set_y, pos1, 25),
        (overlay_set_position, "$g_presentation_obj_5", pos1),
        (create_game_button_overlay, "$g_presentation_obj_7", "@relations_with_factions"),
        (position_set_x, pos1, 730),
        (position_set_y, pos1, 25),
        (overlay_set_position, "$g_presentation_obj_7", pos1),
      ]),
  
    # (ti_on_presentation_run,
      # [
        ##### mouse fix pos system #######
        # (call_script, "script_mouse_fix_pos_run"),
        ##### mouse fix pos system #######
    # ]),

    (ti_on_presentation_event_state_change,
      [
        (store_trigger_param_1, ":object"),
        
        (try_begin),
          (eq, ":object", "$g_presentation_obj_5"),
          (start_presentation, "prsnt_relations_with_factions"),
        (else_try),
          (eq, ":object", "$g_presentation_obj_7"),
          (start_presentation, "prsnt_relations_with_factions_by_faction"),
        (try_end),
    ]),
  ]),
  
## CC

  ("faction_relations_report", 0, mesh_load_window, [
    (ti_on_presentation_load,
      [
        (presentation_set_duration, 999999),
        (set_fixed_point_multiplier, 1000),
        
        (create_text_overlay, reg1, "@Relation with the factions", tf_center_justify),
        (position_set_x, pos1, 500),
        (position_set_y, pos1, 670),
        (overlay_set_position, reg1, pos1),
        (position_set_x, pos1, 1500),
        (position_set_y, pos1, 1500),
        (overlay_set_size, reg1, pos1),
        
        (create_text_overlay, reg1, "@Click the banner to view the faction relations", tf_center_justify),
        (position_set_x, pos1, 500),
        (position_set_y, pos1, 50),
        (overlay_set_position, reg1, pos1),
        (position_set_x, pos1, 800),
        (position_set_y, pos1, 800),
        (overlay_set_size, reg1, pos1),
        
        (str_clear, s0),
        (create_text_overlay, "$g_presentation_obj_6", s0, tf_scrollable),
        (position_set_x, pos1, 15),
        (position_set_y, pos1, 80),
        (overlay_set_position, "$g_presentation_obj_6", pos1),
        (position_set_x, pos1, 950),
        (position_set_y, pos1, 570),
        (overlay_set_area_size, "$g_presentation_obj_6", pos1),
        (set_container_overlay, "$g_presentation_obj_6"),
        
        (assign, ":num_active_factions", 0),
        (try_for_range, ":cur_kingdom", kingdoms_begin, kingdoms_end),
          (faction_slot_eq, ":cur_kingdom", slot_faction_state, sfs_active),
          (val_add, ":num_active_factions", 1),
        (try_end),
        
        (store_mod, ":mod_value", ":num_active_factions", 2),
        (try_begin),
          (eq, ":mod_value", 0),
          (assign, ":cur_x", 470),
        (else_try),
          (assign, ":cur_x", -30),
        (try_end),
        
        (try_begin),
          (is_between, ":num_active_factions", 1, 3),
          (assign, ":cur_y", 400),
        (else_try),
          (is_between, ":num_active_factions", 3, 5),
          (assign, ":cur_y", 200),
        (else_try),
          (is_between, ":num_active_factions", 5, 7),
          (assign, ":cur_y", 0),
        (else_try),
          (assign, ":cur_y", 20),
        (try_end),
        
        (assign, ":x_offset", 500),
        (assign, ":y_offset", 200),
        
        (assign, ":slot_no", 0),
        (try_for_range_backwards, ":cur_kingdom", kingdoms_begin, kingdoms_end),
          (faction_slot_eq, ":cur_kingdom", slot_faction_state, sfs_active), 
          (try_begin),
            (create_image_button_overlay_with_tableau_material, reg1, -1, "tableau_faction_note_mesh_banner", ":cur_kingdom"),
            (store_add, ":totem_x", ":cur_x", 90),
          (try_end),
          (position_set_x, pos1, 600),
          (position_set_y, pos1, 600),
          (overlay_set_size, reg1, pos1),
          (position_set_x, pos1, ":totem_x"),
          (position_set_y, pos1, ":cur_y"),
          (overlay_set_position, reg1, pos1),
          (troop_set_slot, "trp_temp_array_a", ":slot_no", reg1),
          (troop_set_slot, "trp_temp_array_b", ":slot_no", ":cur_kingdom"),
          (val_add, ":slot_no", 1),
          
          # bar
          (store_add, ":relation_bar_x", ":cur_x", 270),
          (store_add, ":relation_bar_y", ":cur_y", 10),
          (create_mesh_overlay, reg1, "mesh_relation_bar"),
          (position_set_x, pos1, ":relation_bar_x"),
          (position_set_y, pos1, ":relation_bar_y"),
          (overlay_set_position, reg1, pos1),
          # pointer
          (try_begin),
            (eq, ":cur_kingdom", "fac_player_supporters_faction"),
            (assign, ":cur_relation", 100),
          (else_try),
            (store_relation, ":cur_relation", "fac_player_supporters_faction", ":cur_kingdom"),
          (try_end),
          (store_sub, ":pointer_x", ":cur_relation", -100),
          (val_add, ":pointer_x", 270),
          (val_add, ":pointer_x", ":cur_x"),
          (create_mesh_overlay, reg1, "mesh_reln_pointer"),
          (position_set_x, pos1, ":pointer_x"),
          (position_set_y, pos1, ":relation_bar_y"),
          (overlay_set_position, reg1, pos1),
          # text
          (store_add, ":text_x", ":cur_x", 370),
          (store_add, ":text_y", ":relation_bar_y", 45),
          (assign, reg0, ":cur_relation"),
          (str_store_faction_name, s1, ":cur_kingdom"),
          
          (try_begin),
            (ge, ":cur_relation", 90),
            (str_store_string, s3, "@Loyal"),
          (else_try),
            (ge, ":cur_relation", 80),
            (str_store_string, s3, "@Devoted"),
          (else_try),
            (ge, ":cur_relation", 70),
            (str_store_string, s3, "@Fond"),
          (else_try),
            (ge, ":cur_relation", 60),
            (str_store_string, s3, "@Gracious"),
          (else_try),
            (ge, ":cur_relation", 50),
            (str_store_string, s3, "@Friendly"),
          (else_try),
            (ge, ":cur_relation", 40),
            (str_store_string, s3, "@Supportive"),
          (else_try),
            (ge, ":cur_relation", 30),
            (str_store_string, s3, "@Favorable"),
          (else_try),
            (ge, ":cur_relation", 20),
            (str_store_string, s3, "@Cooperative"),
          (else_try),
            (ge, ":cur_relation", 10),
            (str_store_string, s3, "@Accepting"),
          (else_try),
            (ge, ":cur_relation", 0),
            (str_store_string, s3, "@Indifferent"),
          (else_try),
            (ge, ":cur_relation", -10),
            (str_store_string, s3, "@Suspicious"),
          (else_try),
            (ge, ":cur_relation", -20),
            (str_store_string, s3, "@Grumbling"),
          (else_try),
            (ge, ":cur_relation", -30),
            (str_store_string, s3, "@Hostile"),
          (else_try),
            (ge, ":cur_relation", -40),
            (str_store_string, s3, "@Resentful"),
          (else_try),
            (ge, ":cur_relation", -50),
            (str_store_string, s3, "@Angry"),
          (else_try),
            (ge, ":cur_relation", -60),
            (str_store_string, s3, "@Hateful"),
          (else_try),
            (ge, ":cur_relation", -70),
            (str_store_string, s3, "@Revengeful"),
          (else_try),
            (str_store_string, s3, "@Vengeful"),
          (try_end),
          
            # for current line_faction count lords and centers
            (assign, ":num_lords", 0),
            #(assign, ":num_caravans", 0),
            (assign, ":num_centers", 0),
            (assign, ":unassigned_centers", 0),
            (try_for_parties, ":cur_party"),
                (store_faction_of_party, ":cur_faction", ":cur_party"),
                (eq, ":cur_faction", ":cur_kingdom"),

                (try_begin),
                    (party_slot_eq, ":cur_party", slot_party_type, spt_kingdom_hero_party),
                    (val_add, ":num_lords", 1),
                #(else_try),
                    #(party_slot_eq, ":cur_party", slot_party_type, spt_kingdom_caravan),
                    #(val_add, ":num_caravans", 1),
                (else_try),
                    (this_or_next|party_slot_eq, ":cur_party", slot_party_type, spt_town),
                    (this_or_next|party_slot_eq, ":cur_party", slot_party_type, spt_castle),
                    (party_slot_eq, ":cur_party", slot_party_type, spt_village),
                    (val_add, ":num_centers", 1),

                    (try_begin),
                        (party_slot_eq, ":cur_party", slot_town_lord, stl_unassigned),
                        (val_add, ":unassigned_centers", 1),
                    (try_end),
                (try_end),
            (try_end), # end of parties loop

            # Count prisoners
            (assign, ":prisoners", 0),
            (try_for_range, ":lord_id", active_npcs_begin, active_npcs_end),
                (troop_slot_eq, ":lord_id", slot_troop_occupation, slto_kingdom_hero),
                (troop_slot_ge, ":lord_id", slot_troop_prisoner_of_party, 0),
                (store_troop_faction, ":lord_faction", ":lord_id"),
                (eq, ":lord_faction", ":cur_kingdom"),
                (val_add, ":prisoners", 1),
            (try_end),
          
            (assign, reg61, ":num_centers"),
            (assign, reg58, ":unassigned_centers"),
            #(assign, reg62, ":num_caravans"),
            (assign, reg60, ":num_lords"),
            (assign, reg59, ":prisoners"),
            
            (str_store_string, s4, "@{reg61} {reg58?({reg58} U) :}Centers"),
            #(str_store_string, s5, "@{reg62} Caravans"),
            (str_store_string, s6, "@{reg60} {reg59?({reg59} P) :}Lords"),
          
          (create_text_overlay, reg1, "@{s1}^{s4}^{s6}^{reg0} ({s3})", tf_center_justify),
          (position_set_x, pos1, ":text_x"),
          (position_set_y, pos1, ":text_y"),
          (overlay_set_position, reg1, pos1),
          
          (val_sub, ":cur_x", ":x_offset"),
          (try_begin),
            (eq, ":cur_x", -530),
            (assign, ":cur_x", 470),
            (val_add, ":cur_y", ":y_offset"),
          (try_end),
        (try_end),
        (set_container_overlay, -1),

        ####### mouse fix pos system #######
        #(call_script, "script_mouse_fix_pos_ready"),
        ####### mouse fix pos system #######

        # Done
        (create_game_button_overlay, "$g_presentation_obj_5", "@Done"),
        (position_set_x, pos1, 900),
        (position_set_y, pos1, 25),
        (overlay_set_position, "$g_presentation_obj_5", pos1),
        
        (create_game_button_overlay, "$g_presentation_obj_7", "@relations_with_lords"),
        (position_set_x, pos1, 730),
        (position_set_y, pos1, 25),
        (overlay_set_position, "$g_presentation_obj_7", pos1),
        
      ]),
  
    #(ti_on_presentation_run,
      #[
        ####### mouse fix pos system #######
        #(call_script, "script_mouse_fix_pos_run"),
        ####### mouse fix pos system #######
    #]),
  
    (ti_on_presentation_event_state_change,
      [
        (store_trigger_param_1, ":object"),

        (assign, ":num_active_factions", 0),
        (try_for_range, ":cur_kingdom", kingdoms_begin, kingdoms_end),
          (faction_slot_eq, ":cur_kingdom", slot_faction_state, sfs_active),
          (val_add, ":num_active_factions", 1),
        (try_end),
        (try_for_range, ":slot_no", 0, ":num_active_factions"),
          (troop_slot_eq, "trp_temp_array_a", ":slot_no", ":object"),
          (troop_get_slot, "$temp", "trp_temp_array_b", ":slot_no"),
          (start_presentation, "prsnt_relations_with_factions_by_faction"),
        (try_end),
        
        (try_begin),
          (eq, ":object", "$g_presentation_obj_5"),
          (presentation_set_duration, 0),
        (else_try),
          (eq, ":object", "$g_presentation_obj_7"),
          (start_presentation, "prsnt_relations_with_factions"),
        (try_end),
    ]),
  ]),

  ("relations_with_factions_by_faction", 0, mesh_load_window, [
    (ti_on_presentation_load,
      [
        (presentation_set_duration, 999999),
        (set_fixed_point_multiplier, 1000),
        
        (assign, ":cur_faction", "$temp"),
        (str_store_faction_name, s1, ":cur_faction"),
        
        (create_text_overlay, reg1, "@Relation with the factions of {s1}", tf_center_justify),
        (position_set_x, pos1, 500),
        (position_set_y, pos1, 670),
        (overlay_set_position, reg1, pos1),
        (position_set_x, pos1, 1500),
        (position_set_y, pos1, 1500),
        (overlay_set_size, reg1, pos1),

        (str_clear, s0),
        (create_text_overlay, "$g_presentation_obj_6", s0, tf_scrollable),
        (position_set_x, pos1, 15),
        (position_set_y, pos1, 80),
        (overlay_set_position, "$g_presentation_obj_6", pos1),
        (position_set_x, pos1, 950),
        (position_set_y, pos1, 570),
        (overlay_set_area_size, "$g_presentation_obj_6", pos1),
        (set_container_overlay, "$g_presentation_obj_6"),

        (assign, ":num_fit_factions", 0),
        (try_for_range, ":active_factions", kingdoms_begin, kingdoms_end),
          (faction_slot_eq, ":active_factions", slot_faction_state, sfs_active),
          (neq, ":active_factions", ":cur_faction"),
          (val_add, ":num_fit_factions", 1),
        (try_end),
                
        (store_mod, ":mod_value", ":num_fit_factions", 2),
        (try_begin),
          (eq, ":mod_value", 0),
          (assign, ":cur_x", 470),
        (else_try),
          (assign, ":cur_x", -30),
        (try_end),
        
        (try_begin),
          (is_between, ":num_fit_factions", 1, 3),
          (assign, ":cur_y", 400),
        (else_try),
          (is_between, ":num_fit_factions", 3, 5),
          (assign, ":cur_y", 200),
        (else_try),
          (is_between, ":num_fit_factions", 5, 7),
          (assign, ":cur_y", 0),
        (else_try),
          (assign, ":cur_y", 20),
        (try_end),
        
        (assign, ":x_offset", 500),
        (assign, ":y_offset", 200),
        
        (try_for_range_backwards, ":active_factions", kingdoms_begin, kingdoms_end),
          (faction_slot_eq, ":active_factions", slot_faction_state, sfs_active), 
          (neq, ":active_factions", ":cur_faction"),
          (create_mesh_overlay_with_tableau_material, reg1, -1, "tableau_faction_note_mesh_banner", ":active_factions"),
          (store_add, ":totem_x", ":cur_x", 90),
          (position_set_x, pos1, 600),
          (position_set_y, pos1, 600),
          (overlay_set_size, reg1, pos1),
          (position_set_x, pos1, ":totem_x"),
          (position_set_y, pos1, ":cur_y"),
          (overlay_set_position, reg1, pos1),
          
          # bar
          (store_add, ":relation_bar_x", ":cur_x", 270),
          (store_add, ":relation_bar_y", ":cur_y", 10),
          (create_mesh_overlay, reg1, "mesh_relation_bar"),
          (position_set_x, pos1, ":relation_bar_x"),
          (position_set_y, pos1, ":relation_bar_y"),
          (overlay_set_position, reg1, pos1),
          # pointer
          (store_relation, ":cur_relation", ":cur_faction", ":active_factions"),
          (store_sub, ":pointer_x", ":cur_relation", -100),
          (val_add, ":pointer_x", 270),
          (val_add, ":pointer_x", ":cur_x"),
          (create_mesh_overlay, reg1, "mesh_reln_pointer"),
          (position_set_x, pos1, ":pointer_x"),
          (position_set_y, pos1, ":relation_bar_y"),
          (overlay_set_position, reg1, pos1),
          # name
          (store_add, ":text_x", ":cur_x", 370),
          (store_add, ":text_y", ":relation_bar_y", 45),
          
          (call_script, "script_diplomacy_faction_get_diplomatic_status_with_faction", ":cur_faction", ":active_factions"),
          (assign, ":global_diplomatic_status", reg0),
          (assign, ":extended_diplomatic_status", reg1),
                    
          (try_begin), # War
              (eq, ":global_diplomatic_status", -2),
              (str_store_string, s3, "@War"),
              # (assign, reg60, 0xDD0000),
              (assign, reg59, 0),
          (else_try), # Border incident
              (eq, ":global_diplomatic_status", -1),
              (str_store_string, s3, "@Casus Belli"),
              # (assign, reg60, 0xDD8000),
              (assign, reg59, ":extended_diplomatic_status"),
          (else_try), # Peace
              (eq, ":global_diplomatic_status", 0),
              (str_store_string, s3, "@Peace"),
              # (assign, reg60, 0xFFFFFF),
              (assign, reg59, 0),
          (else_try), # Truce (non aggression)
              (eq, ":global_diplomatic_status", 1),
              (str_store_string, s3, "@Truce"),
              # (assign, reg60, 0xDDDDDD),
              (assign, reg59, ":extended_diplomatic_status"),
  
              # for Diplomacy, comment if not using
              (try_begin),
                  (ge, ":extended_diplomatic_status", 61),
                  (str_store_string, s3, "@Alliance"),
                  # (assign, reg60, 0x00FF00),
                  (store_sub, reg59, ":extended_diplomatic_status", 60),
              (else_try),
                  (ge, ":extended_diplomatic_status", 41),
                  (str_store_string, s3, "@Defense"),
                  # (assign, reg60, 0x00FFAA),
                  (store_sub, reg59, ":extended_diplomatic_status", 40),
              (else_try),
                  (ge, ":extended_diplomatic_status", 21),
                  (str_store_string, s3, "@Trade"),
                  # (assign, reg60, 0x00FFCC),
                  (store_sub, reg59, ":extended_diplomatic_status", 20),
              (try_end),
          (try_end),

          (str_store_faction_name, s1, ":active_factions"),
          (assign, reg0, ":cur_relation"),
          (str_store_string, s4, "@{s1}^Relation: {reg0}"),
          
          (create_text_overlay, reg1, "@{s4}^{s3}{reg59?, {reg59} days:}", tf_center_justify),
          (position_set_x, pos1, ":text_x"),
          (position_set_y, pos1, ":text_y"),
          (overlay_set_position, reg1, pos1),
          
          (val_sub, ":cur_x", ":x_offset"),
          (try_begin),
            (eq, ":cur_x", -530),
            (assign, ":cur_x", 470),
            (val_add, ":cur_y", ":y_offset"),
          (try_end),
        (try_end),
        (set_container_overlay, -1),
                
        ####### mouse fix pos system #######
        #(call_script, "script_mouse_fix_pos_ready"),
        ####### mouse fix pos system #######

        # Done
        (create_game_button_overlay, "$g_presentation_obj_5", "@Done"),
        (position_set_x, pos1, 900),
        (position_set_y, pos1, 25),
        (overlay_set_position, "$g_presentation_obj_5", pos1),
        
        (create_game_button_overlay, "$g_presentation_obj_7", "@relations_with_lords"),
        (position_set_x, pos1, 730),
        (position_set_y, pos1, 25),
        (overlay_set_position, "$g_presentation_obj_7", pos1),
        
      ]),
  
    #(ti_on_presentation_run,
      #[
        ####### mouse fix pos system #######
        #(call_script, "script_mouse_fix_pos_run"),
        ####### mouse fix pos system #######
    #]),

    (ti_on_presentation_event_state_change,
      [
        (store_trigger_param_1, ":object"),
        
        (try_begin),
          (eq, ":object", "$g_presentation_obj_5"),
          (start_presentation, "prsnt_faction_relations_report"),
        (else_try),
          (eq, ":object", "$g_presentation_obj_7"),
          (start_presentation, "prsnt_relations_with_lords_by_faction"),
        (try_end),
    ]),
  ]),
  
## CC

    ("dplmc_policy_management",0,mesh_name_kingdom,[
      (ti_on_presentation_load,
       [
        (set_fixed_point_multiplier, 1000),
        (presentation_set_duration, 999999),
       
        # done
        (create_game_button_overlay, "$g_presentation_obj_10", "@Done"),
        (position_set_x, pos1, 900),
        (position_set_y, pos1, 25),
        (overlay_set_position, "$g_presentation_obj_10", pos1),
        
        # title
        (create_text_overlay, reg1, "@Select your domestic policy", tf_center_justify|tf_vertical_align_center),
        (position_set_x, pos1, 445),
        (position_set_y, pos1, 700),
        (overlay_set_position, reg1, pos1),

        (create_slider_overlay, "$g_presentation_obj_sliders_1", -3, 3),
        (create_slider_overlay, "$g_presentation_obj_sliders_2", -3, 3),
        (create_slider_overlay, "$g_presentation_obj_sliders_3", -3, 3),
        (create_slider_overlay, "$g_presentation_obj_sliders_4", -3, 3),
        (assign, reg1, 25),
        (create_text_overlay, "$g_presentation_obj_sliders_5", "str_dplmc_neither_centralize_nor_decentralized"),
        (create_text_overlay, "$g_presentation_obj_sliders_6", "str_dplmc_neither_aristocratic_nor_plutocratic"),
        (create_text_overlay, "$g_presentation_obj_sliders_7", "str_dplmc_mixture_serfs"),
        (create_text_overlay, "$g_presentation_obj_sliders_8", "str_dplmc_mediocre_quality"),
        
        (create_text_overlay, "$g_presentation_obj_1", "@Centralization:"),
        (create_text_overlay, "$g_presentation_obj_2", "@Aristocracy:"),
        (create_text_overlay, "$g_presentation_obj_3", "@Serfdom:"),
        (create_text_overlay, "$g_presentation_obj_4", "@Troop quality:"),  
        (create_text_overlay, "$g_presentation_obj_5", "@High centralization reduces tax inefficiency for the king and raises it for vassals. This will interfere  the relations between ruler and vassals."),
        (create_text_overlay, "$g_presentation_obj_6", "@High aristocracy will improve the relations between the king and his vassals who will be able to raise bigger armies but it will decreased trade."),
        (create_text_overlay, "$g_presentation_obj_7", "@High serfdom reduces tax inefficiency for the king and his vassals and vassals can maintain bigger armies but troops loose moral."),
        (create_text_overlay, "$g_presentation_obj_8", "@High troop quality increases the strength of troops but decreases army size."),    
        
        (faction_get_slot, ":centralization", "fac_player_supporters_faction", dplmc_slot_faction_centralization),
        (faction_get_slot, ":aristocratcy", "fac_player_supporters_faction", dplmc_slot_faction_aristocracy),
        (faction_get_slot, ":serfdom", "fac_player_supporters_faction", dplmc_slot_faction_serfdom),
        (faction_get_slot, ":quality", "fac_player_supporters_faction", dplmc_slot_faction_quality),

        (overlay_set_val, "$g_presentation_obj_sliders_1", ":centralization"),
        (overlay_set_val, "$g_presentation_obj_sliders_2", ":aristocratcy"),
        (overlay_set_val, "$g_presentation_obj_sliders_3", ":serfdom"),
        (overlay_set_val, "$g_presentation_obj_sliders_4", ":quality"),
        (position_set_x, pos1, 200),
        (position_set_y, pos1, 600),
        (overlay_set_position, "$g_presentation_obj_sliders_1", pos1),
        (position_set_y, pos1, 450),
        (overlay_set_position, "$g_presentation_obj_sliders_2", pos1),
        (position_set_y, pos1, 300),
        (overlay_set_position, "$g_presentation_obj_sliders_3", pos1),
        (position_set_y, pos1, 150),
        (overlay_set_position, "$g_presentation_obj_sliders_4", pos1),
        
        (position_set_x, pos1, 100),
        (position_set_y, pos1, 650),
        (overlay_set_position, "$g_presentation_obj_1", pos1),
        (position_set_y, pos1, 500),
        (overlay_set_position, "$g_presentation_obj_2", pos1),
        (position_set_y, pos1, 350),
        (overlay_set_position, "$g_presentation_obj_3", pos1),
        (position_set_y, pos1, 200),
        (overlay_set_position, "$g_presentation_obj_4", pos1),
        
        (position_set_x, pos1, 50),
        (position_set_y, pos1, 550),
        (overlay_set_position, "$g_presentation_obj_5", pos1),
        (position_set_y, pos1, 400),
        (overlay_set_position, "$g_presentation_obj_6", pos1),
        (position_set_y, pos1, 250),
        (overlay_set_position, "$g_presentation_obj_7", pos1),
        (position_set_y, pos1, 100),
        (overlay_set_position, "$g_presentation_obj_8", pos1),
        
        (position_set_x, pos1, 775),
        (position_set_y, pos1, 775),
        (overlay_set_size, "$g_presentation_obj_5", pos1),
        (overlay_set_size, "$g_presentation_obj_6", pos1),
        (overlay_set_size, "$g_presentation_obj_7", pos1),
        (overlay_set_size, "$g_presentation_obj_8", pos1),

        (position_set_x, pos1, 400),
        (position_set_y, pos1, 600),
        (overlay_set_position, "$g_presentation_obj_sliders_5", pos1),
        (position_set_y, pos1, 450),
        (overlay_set_position, "$g_presentation_obj_sliders_6", pos1),
        (position_set_y, pos1, 300),
        (overlay_set_position, "$g_presentation_obj_sliders_7", pos1),
        (position_set_y, pos1, 150),
        (overlay_set_position, "$g_presentation_obj_sliders_8", pos1),
        
        (position_set_x, pos1, 925),
        (position_set_y, pos1, 925),
        (overlay_set_size, "$g_presentation_obj_sliders_5", pos1),
        (overlay_set_size, "$g_presentation_obj_sliders_6", pos1),
        (overlay_set_size, "$g_presentation_obj_sliders_7", pos1),
        (overlay_set_size, "$g_presentation_obj_sliders_8", pos1),
        ]),
      (ti_on_presentation_run,
       [
        ]),
      (ti_on_presentation_event_state_change,
       [(store_trigger_param_1, ":object"),
        (store_trigger_param_2, ":value"),
        
        (try_begin),
          (eq, ":object", "$g_presentation_obj_sliders_1"),
          (faction_set_slot,  "fac_player_supporters_faction", dplmc_slot_faction_centralization, ":value"),
          (val_add, ":value", "str_dplmc_neither_centralize_nor_decentralized"),
          (overlay_set_text, "$g_presentation_obj_sliders_5", ":value"),
        (else_try),          
          (eq, ":object", "$g_presentation_obj_sliders_2"),
          (faction_set_slot,  "fac_player_supporters_faction", dplmc_slot_faction_aristocracy, ":value"),
          (val_add, ":value", "str_dplmc_neither_aristocratic_nor_plutocratic"),
          (overlay_set_text, "$g_presentation_obj_sliders_6", ":value"),
        (else_try),          
          (eq, ":object", "$g_presentation_obj_sliders_3"),
          (faction_set_slot,  "fac_player_supporters_faction", dplmc_slot_faction_serfdom, ":value"),
          (val_add, ":value", "str_dplmc_mixture_serfs"),
          (overlay_set_text, "$g_presentation_obj_sliders_7", ":value"),
        (else_try),          
          (eq, ":object", "$g_presentation_obj_sliders_4"),
          (faction_set_slot,  "fac_player_supporters_faction", dplmc_slot_faction_quality, ":value"),
          (val_add, ":value", "str_dplmc_mediocre_quality"),
          (overlay_set_text, "$g_presentation_obj_sliders_8", ":value"),
        (else_try),
          (eq, ":object", "$g_presentation_obj_10"),
          (assign, "$g_players_policy_set", 1),
          (presentation_set_duration, 0),
        (try_end),
    ]),
  ]),
  
    ("dplmc_peace_terms",0,mesh_name_kingdom,[
      (ti_on_presentation_load,
       [
        (set_fixed_point_multiplier, 1000),
        (presentation_set_duration, 999999),
       
        # done
        (create_game_button_overlay, "$g_presentation_obj_10", "@Done"),
        (position_set_x, pos1, 900),
        (position_set_y, pos1, 25),
        (overlay_set_position, "$g_presentation_obj_10", pos1),
  
        #cancel
        (create_game_button_overlay, "$g_presentation_obj_9", "@Cancel"),
        (position_set_x, pos1, 100),
        (overlay_set_position, "$g_presentation_obj_9", pos1),
        
        # title
        (create_text_overlay, reg1, "@Dictate the peace terms", tf_center_justify|tf_vertical_align_center),
        (position_set_x, pos1, 445),
        (position_set_y, pos1, 700),
        (overlay_set_position, reg1, pos1),

        (position_set_y, pos1, 550),
        (create_text_overlay, "$g_presentation_obj_2", "@Select the castle and the amount of money and check the boxes to activate the demand. The demands are combined if both boxes are checked."),
        (position_set_x, pos1, 50),
        (overlay_set_position, "$g_presentation_obj_2", pos1),
        
        (create_slider_overlay, "$g_presentation_obj_sliders_1", 1, 10),
        (overlay_set_val, "$g_presentation_obj_sliders_1", 1),
        (position_set_x, pos1, 300),
        (position_set_y, pos1, 350),
        (overlay_set_position, "$g_presentation_obj_sliders_1", pos1),
        (assign, "$demanded_money", 1000),
        (assign, "$diplomacy_var", 1),

        (create_text_overlay, "$g_presentation_obj_sliders_2", "@1000 denars"),
        (position_set_x, pos1, 500),
        (overlay_set_position, "$g_presentation_obj_sliders_2", pos1),
        
        (create_check_box_overlay, "$g_presentation_obj_battle_check0", "mesh_checkbox_off", "mesh_checkbox_on"),
        (position_set_x, pos1, 700),
        (overlay_set_position, "$g_presentation_obj_battle_check0", pos1),
        (overlay_set_val, "$g_presentation_obj_battle_check0", 1),  

        (assign, "$demanded_castle", 0), 
        (assign, ":castle_count", 0),
        (create_combo_button_overlay, "$g_presentation_obj_1"),     
        (try_for_range, ":castle", castles_begin, castles_end),
          (store_faction_of_party, ":castle_faction", ":castle"),
          (eq, ":castle_faction", "$g_notification_menu_var1"),
          (str_store_party_name, s2, ":castle"),
          (overlay_add_item, "$g_presentation_obj_1", s2),   
          (assign, "$demanded_castle", ":castle"),   
          (val_add, ":castle_count", 1),         
        (end_try),       
        (assign, "$diplomacy_var2", 0),                 
        (position_set_x, pos1, 300),
        (position_set_y, pos1, 250),
        (overlay_set_position, "$g_presentation_obj_1", pos1), 
        (overlay_set_val, "$g_presentation_obj_1", ":castle_count"), 
              
        (create_check_box_overlay, "$g_presentation_obj_battle_check1", "mesh_checkbox_off", "mesh_checkbox_on"),
        (position_set_x, pos1, 700),
        (overlay_set_position, "$g_presentation_obj_battle_check1", pos1),  

        ]),
      (ti_on_presentation_run,
       [
        ]),
      (ti_on_presentation_event_state_change,
       [(store_trigger_param_1, ":object"),
        (store_trigger_param_2, ":value"),
        
        (try_begin),
          (eq, ":object", "$g_presentation_obj_1"),
   
          (assign, ":cur", 0),
          (try_for_range, ":castle", castles_begin, castles_end),
            (store_faction_of_party, ":castle_faction", ":castle"),
            (eq, ":castle_faction", "$g_notification_menu_var1"),
            (try_begin),
              (eq, ":cur", ":value"),
              (assign, "$demanded_castle", ":castle"),
            (try_end),
            (val_add, ":cur", 1),              
          (try_end),       
          
        (else_try),
          (eq, ":object", "$g_presentation_obj_battle_check0"), 
          (assign, "$diplomacy_var", ":value"),
          
        (else_try),
          (eq, ":object", "$g_presentation_obj_battle_check1"),
          (assign, "$diplomacy_var2", ":value"),
          
        (else_try),
          (eq, ":object", "$g_presentation_obj_sliders_1"),
          (store_mul, "$demanded_money",":value", 1000),
          (assign, reg0, "$demanded_money"),
          (overlay_set_text, "$g_presentation_obj_sliders_2", "@{reg0} denars"),
                   
        (else_try),    
          (eq, ":object", "$g_presentation_obj_9"),
          (presentation_set_duration, 0),
        (else_try),      
          (eq, ":object", "$g_presentation_obj_10"),
          (presentation_set_duration, 0),

          (try_begin),
            (eq, "$diplomacy_var", 0),
            (assign, "$demanded_money", 0),                 
          (try_end),

          (try_begin),
            (eq, "$diplomacy_var2", 0),
            (assign, "$demanded_castle", 0),                 
          (try_end),
          
          (assign, ":demand", 0),
          (try_begin),
            (gt, "$demanded_money", 0),
            (store_div, ":demand", "$demanded_money", 1000),
          (try_end),
          (try_begin),
            (is_between, "$demanded_castle", castles_begin, castles_end),
            (val_add, ":demand", 12),
          (try_end),
  
          (call_script, "script_npc_decision_checklist_peace_or_war", "$g_notification_menu_var1", "fac_player_supporters_faction", -1),
          (assign, ":goodwill", reg0), 
          (val_mul, ":goodwill", 2),     
          (store_random_in_range, ":random", 0, ":demand"),
          
          (val_div, ":demand", -2),        
    
          (call_script, "script_change_player_relation_with_faction", "$g_notification_menu_var1", ":demand"),
          (try_begin),
            (le, ":random", ":goodwill"),
            (try_begin),
              (is_between, "$demanded_castle", castles_begin, castles_end),
              (call_script, "script_give_center_to_faction", "$demanded_castle", "fac_player_supporters_faction"),
            (try_end),
            (try_begin),
              (gt, "$demanded_money", 0),
              (call_script, "script_dplmc_pay_into_treasury", "$demanded_money"),
            (try_end),
            (call_script, "script_diplomacy_start_peace_between_kingdoms", "$g_notification_menu_var1", "fac_player_supporters_faction", 1),    
            (presentation_set_duration, 0),
            (change_screen_return),
          (else_try),       
            (jump_to_menu,"mnu_dplmc_deny_terms"),
          (try_end),  
         
        (try_end),
    ]),
  ]),

  # Jrider +
  # REPORTS PRESENTATIONS 1.2 :
  # Factions relations presentation report
  ("jrider_faction_relations_report", 0,
   mesh_message_window,
   [
     (ti_on_presentation_load,
      [
    (presentation_set_duration, 999999),
        (set_fixed_point_multiplier, 1000),

        # Embed picture upper right
        (create_mesh_overlay, reg1, "mesh_pic_castledes"),
        (position_set_x, pos1, 180),
        (position_set_y, pos1, 180),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 795),
        (position_set_y, pos1, 600),
        (overlay_set_position, reg1, pos1),

        # Embed picture upper left
        (create_mesh_overlay, reg1, "mesh_pic_looted_village"),
        (position_set_x, pos1, 170),
        (position_set_y, pos1, 170),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, -15),
        (position_set_y, pos1, 600),
        (overlay_set_position, reg1, pos1),

    # Presentation title, centered at the top
        (create_text_overlay, reg1, "@_Faction Relations Report_", tf_center_justify),
    (position_set_x, pos1, 500), # Higher, means more toward the right
        (position_set_y, pos1, 670), # Higher, means more toward the top
        (overlay_set_position, reg1, pos1),
    (position_set_x, pos1, 1500),
        (position_set_y, pos1, 1500),
    (overlay_set_size, reg1, pos1),

    # Back to menu - graphical button
    (create_game_button_overlay, reg1, "@_Return to menu_"),
    (position_set_x, pos1, 500),
        (position_set_y, pos1, 23),
        (overlay_set_position, reg1, pos1),
        (assign, "$g_jrider_faction_report_Return_to_menu", reg1),

    # Set Headlines
#set column title
          (assign, ":x_poshl", 250),  
          (assign, ":y_pos", 620),
          (position_set_y, pos1, ":y_pos"),
    (try_for_range, ":faction", kingdoms_begin, kingdoms_end),
            (faction_slot_eq, ":faction", slot_faction_state, sfs_active), # continue if active
            (try_begin),
              (is_between, ":faction", npc_kingdoms_begin, npc_kingdoms_end),
              (store_sub, ":offset", ":faction", "fac_kingdom_1"),
              (val_add, ":offset", "str_swadians"),
              (str_store_string, s1, ":offset"),    
            (else_try),
              (str_store_string, s1, "@Your kingdom"),    
            (try_end),
            
            (str_store_string, s11, ":offset"),  
            (create_text_overlay, reg10, s1, tf_left_align|tf_with_outline),
            (faction_get_color, ":faction_color", ":faction"),
            (overlay_set_color, reg10, ":faction_color"),
      
            (position_set_x, pos3, 650),
            (position_set_y, pos3, 800),
            (overlay_set_size, reg10, pos3),

            (position_set_x, pos1, ":x_poshl"),
            (overlay_set_position, reg10, pos1),
            (val_add, ":x_poshl", 90),
    (try_end),


    (assign, ":x_poshl", 215),
     (assign, ":y_pos", 597),
     (assign, ":headline_size", 0),
    (position_set_x, ":headline_size", 720),
        (position_set_y, ":headline_size", 775),
       
        (assign, ":hl_columnsep_size", 50),
        (position_set_x, ":hl_columnsep_size", 60),
        (position_set_y, ":hl_columnsep_size", 28000),

        (create_text_overlay, reg2, "@Player^Relation", tf_center_justify),
        (overlay_set_size, reg2, ":headline_size"),
        (position_set_x, pos1, ":x_poshl"),
        (position_set_y, pos1, ":y_pos"),
        (overlay_set_position, reg2, pos1),

        (val_add, ":x_poshl", 45),
        (try_for_range, ":count", 0, 7),
          # create a separator column
          (create_mesh_overlay, reg1, "mesh_white_plane"),
          (overlay_set_color, reg1, 0x000000),
          (overlay_set_size, reg1, ":hl_columnsep_size"),      
          (store_sub, ":line_x", ":x_poshl", 15), # set it 21 pix left of current column start
          (store_sub, ":y_pos2", ":y_pos", 500), # set it 21 pix left of current column start
          (position_set_x, pos2, ":line_x"),
          (position_set_y, pos2, ":y_pos2"),
          (overlay_set_position, reg1, pos2),
          (val_add, ":x_poshl", 90),
          
          (try_begin),
            (eq, "$cheat_mode", 1),
            (assign, reg20, ":count"),
            (display_message, "@{!}DEBUG - Drawing line {reg20}"),
          (try_end),
        (try_end),

        # clear the string globals that we'll use
         (str_clear, s9),
    (str_clear, s8),
    (str_clear, s3),
    (str_clear, s60),
    (str_clear, s61),
    (str_clear, s0),

        # Scrollable area (all the next overlay will be contained in this, s0 sets the scrollbar)
        (create_text_overlay, reg1, s0, tf_scrollable_style_2),
        (position_set_x, pos1, 50),
        (position_set_y, pos1, 70),
        (overlay_set_position, reg1, pos1),
        (position_set_x, pos1, 860),
        (position_set_y, pos1, 527),
        (overlay_set_area_size, reg1, pos1),
        (set_container_overlay, reg1),

        # set base position and size for lines
        (assign, ":line_size", 0),
        (assign, ":y_pos", 0),

        # set base color for line
    (assign, ":line_color", 0x000000),

        # Line faction loop begins here - fetching corresponding informations and printing the line title
        (try_for_range_backwards, ":faction_line", kingdoms_begin, kingdoms_end),
            (faction_slot_eq, ":faction_line", slot_faction_state, sfs_active), # continue if active

            # Base position for subheaders
            (assign, ":x_posfhl", 220),

            # Loop other factions (columns)
            (try_for_range, ":faction_column", kingdoms_begin, kingdoms_end),
                (faction_slot_eq, ":faction_column", slot_faction_state, sfs_active), # continue if active

                (try_begin), # not same faction
                  (neq, ":faction_column", ":faction_line"),
                 
                  (str_store_faction_name, s8, ":faction_column"),
  
                  # sub-faction excluding current faction line
                  (try_begin),
                      # different from faction line, display status and relation with faction line
                      (neq, ":faction_column", ":faction_line"),
                      (call_script, "script_diplomacy_faction_get_diplomatic_status_with_faction", ":faction_line", ":faction_column"),
                      (assign, ":global_diplomatic_status", reg0),
                      (assign, ":extended_diplomatic_status", reg1),
  
                      (try_begin), # War
                          (eq, ":global_diplomatic_status", -2),
                          (str_store_string, s60, "@War"),
                          (assign, reg60, 0xDD0000),
                          (assign, reg59, 0),
                      (else_try), # Border incident
                          (eq, ":global_diplomatic_status", -1),
                          (str_store_string, s60, "@Casus Belli"),
                          (assign, reg60, 0xDD8000),
                          (assign, reg59, ":extended_diplomatic_status"),
                      (else_try), # Peace
                          (eq, ":global_diplomatic_status", 0),
                          (str_store_string, s60, "@Peace"),
                          (assign, reg60, 0xFFFFFF),
                          (assign, reg59, 0),
                      (else_try), # Truce (non aggression)
                          (eq, ":global_diplomatic_status", 1),
                          (str_store_string, s60, "@Truce"),
                          (assign, reg60, 0xDDDDDD),
                          (assign, reg59, ":extended_diplomatic_status"),
  
                          # for Diplomacy, comment if not using
                          (try_begin),
                              (ge, ":extended_diplomatic_status", 61),
                              (str_store_string, s60, "@Alliance"),
                              (assign, reg60, 0x00FF00),
                              (store_sub, reg59, ":extended_diplomatic_status", 60),
                          (else_try),
                              (ge, ":extended_diplomatic_status", 41),
                              (str_store_string, s60, "@Defense"),
                              (assign, reg60, 0x00FFAA),
                              (store_sub, reg59, ":extended_diplomatic_status", 40),
                          (else_try),
                              (ge, ":extended_diplomatic_status", 21),
                              (str_store_string, s60, "@Trade"),
                              (assign, reg60, 0x00FFCC),
                              (store_sub, reg59, ":extended_diplomatic_status", 20),
                          (try_end),
                      (try_end),
  
                      (val_add, ":x_poshl", 50),
  
                      # diplomatic status and duration block (set at current line)
                      (create_text_overlay, reg10, s60, tf_left_align|tf_with_outline),
                      (overlay_set_size, reg10, ":line_size"),
                      (overlay_set_color, reg10, reg60),
                      (store_sub, ":line_x", ":x_posfhl", 20),
                      (store_add, ":line_y", ":y_pos", 54),
                      (position_set_x, pos3, ":line_x"),
                      (position_set_y, pos3, ":line_y"),
                      (overlay_set_position, reg10, pos3),
                      
                      (create_text_overlay, reg10, "@{reg59?{reg59} days:}", tf_center_justify),
                      (overlay_set_size, reg10, ":line_size"),                      
                      (store_add, ":line_y", ":y_pos", 36),
                      (store_add, ":line_x", ":x_posfhl", 10),
                      (position_set_x, pos3, ":line_x"),
                      (position_set_y, pos3, ":line_y"),                      
                      (overlay_set_position, reg10, pos3),
                      
  
                      # add diplomatic status
                      (store_relation, ":kingdom_relation", ":faction_line", ":faction_column"),

                      # kingdom relation (same line as faction name)
                      (assign, reg61, ":kingdom_relation"),
                      (create_text_overlay, reg10, "@{reg61}", tf_center_justify),
                      (overlay_set_size, reg10, ":line_size"),
  
                      (store_add, ":line_y", ":y_pos", 18),
                      (store_add, ":line_x", ":x_posfhl", 10),
                      (position_set_x, pos3, ":line_x"),
                      (position_set_y, pos3, ":line_y"),
                      (overlay_set_position, reg10, pos3),
                  (try_end), # end select alternate display
                (try_end),

                # increase column x position
                (val_add, ":x_posfhl", 90), # valid values 220, 385, 550, 715
            (try_end), # end of column faction loop

            # Faction line information, this is a 4 line block
            # reset x postion for next beginning column and decrease y position according to line count
            (assign, ":x_poshl", 165),

            (val_add, ":y_pos", 54), # linebreak

            # create a separator for faction line
            (create_mesh_overlay, reg1, "mesh_white_plane"),
            (overlay_set_color, reg1, 0x000000),
            (position_set_x, pos1, 42000),
            (position_set_y, pos1, 60),
            (overlay_set_size, reg1, pos1),
            (position_set_x, pos1, 17),
            (store_add, ":line_y", ":y_pos", 20), # set it 20 pix above current line
            (position_set_y, pos1, ":line_y"),
            (overlay_set_position, reg1, pos1),

            # Set line title
            (str_store_faction_name, s9, ":faction_line"),
            (str_store_string, s1, "@{s9}"),
            (create_text_overlay, reg10, s1, tf_left_align|tf_with_outline),
            (faction_get_color, ":faction_color", ":faction_line"),
            (overlay_set_color, reg10, ":faction_color"),

            (position_set_x, pos3, 750),
            (position_set_y, pos3, 850),
            (overlay_set_size, reg10, pos3),

            (position_set_x, pos3, 10),
            (position_set_y, pos3, ":y_pos"),
            (overlay_set_position, reg10, pos3),

            # set position for columns
            (assign, ":x_poshl", 165),
            (assign, ":line_size", 0),
            (position_set_x, ":line_size", 700),
            (position_set_y, ":line_size", 800),

            ## Player relation (first column)
            (store_relation, reg1, "fac_player_supporters_faction", ":faction_line"),

            # no clean strings existing, doing it the same way it's done in game_menu
            (try_begin),
                (ge, reg1, 90),
                (str_store_string, s3, "@Loyal"),
            (else_try),
                (ge, reg1, 80),
                (str_store_string, s3, "@Devoted"),
            (else_try),
                (ge, reg1, 70),
                (str_store_string, s3, "@Fond"),
            (else_try),
                (ge, reg1, 60),
                (str_store_string, s3, "@Gracious"),
            (else_try),
                (ge, reg1, 50),
                (str_store_string, s3, "@Friendly"),
            (else_try),
                (ge, reg1, 40),
                (str_store_string, s3, "@Supportive"),
            (else_try),
                (ge, reg1, 30),
                (str_store_string, s3, "@Favorable"),
            (else_try),
                (ge, reg1, 20),
                (str_store_string, s3, "@Cooperative"),
            (else_try),
                (ge, reg1, 10),
                (str_store_string, s3, "@Accepting"),
            (else_try),
                (ge, reg1, 0),
                (str_store_string, s3, "@Indifferent"),
            (else_try),
                (ge, reg1, -10),
                (str_store_string, s3, "@Suspicious"),
            (else_try),
                (ge, reg1, -20),
                (str_store_string, s3, "@Grumbling"),
            (else_try),
                (ge, reg1, -30),
                (str_store_string, s3, "@Hostile"),
            (else_try),
                (ge, reg1, -40),
                (str_store_string, s3, "@Resentful"),
            (else_try),
                (ge, reg1, -50),
                (str_store_string, s3, "@Angry"),
            (else_try),
                (ge, reg1, -60),
                (str_store_string, s3, "@Hateful"),
            (else_try),
                (ge, reg1, -70),
                (str_store_string, s3, "@Revengeful"),
            (else_try),
                (str_store_string, s3, "@Vengeful"),
            (try_end),

            # Set relation to player numerical value (same line)
            (create_text_overlay, reg10, "@{reg1}", tf_right_align),
            (overlay_set_size, reg10, ":line_size"),
            (store_add, ":line_x", ":x_poshl", 20),
            (position_set_x, pos1, ":line_x"),
            (position_set_y, pos1, ":y_pos"),
            (overlay_set_position, reg10, pos1),
            (overlay_set_color, reg10, ":line_color"),

            # Set relation to player string value (second line)
            (create_text_overlay, reg10, "@{s3}", tf_right_align),
            (overlay_set_size, reg10, ":line_size"),
            (position_set_x, pos1, ":line_x"),
            (store_sub, ":line_y", ":y_pos", 20),
            (position_set_y, pos1, ":line_y"),
            (overlay_set_position, reg10, pos1),
            (overlay_set_color, reg10, ":line_color"),

            # Set Faction Coat of Arm for standard faction (left of relation string)
            (try_begin),
                (neq, ":faction_line", "fac_player_supporters_faction"),
                (store_sub, ":mesh_index", ":faction_line", kingdoms_begin),
                (val_add, ":mesh_index", "mesh_pic_recruits"),
                (create_mesh_overlay, reg10, ":mesh_index"),
                (position_set_x, pos1, 75),
                (position_set_y, pos1, 75),
                (overlay_set_size, reg10, pos1),
                (position_set_x, pos1, 165),
                (store_sub, ":line_y", ":y_pos", 37),
                (position_set_y, pos1, ":line_y"),
                (overlay_set_position, reg10, pos1),
            (try_end),

            # for current line_faction count lords and centers
            (assign, ":num_lords", 0),
            (assign, ":num_caravans", 0),
            (assign, ":num_centers", 0),
            (assign, ":unassigned_centers", 0),
            (try_for_parties, ":cur_party"),
                (store_faction_of_party, ":cur_faction", ":cur_party"),
                (eq, ":cur_faction", ":faction_line"),

                (try_begin),
                    (party_slot_eq, ":cur_party", slot_party_type, spt_kingdom_hero_party),
                    (val_add, ":num_lords", 1),
                (else_try),
                    (party_slot_eq, ":cur_party", slot_party_type, spt_kingdom_caravan),
                    (val_add, ":num_caravans", 1),
                (else_try),
                    (this_or_next|party_slot_eq, ":cur_party", slot_party_type, spt_town),
                    (this_or_next|party_slot_eq, ":cur_party", slot_party_type, spt_castle),
                    (party_slot_eq, ":cur_party", slot_party_type, spt_village),
                    (val_add, ":num_centers", 1),

                    (try_begin),
                        (party_slot_eq, ":cur_party", slot_town_lord, stl_unassigned),
                        (val_add, ":unassigned_centers", 1),
                    (try_end),
                (try_end),
            (try_end), # end of parties loop

            # Count prisoners
            (assign, ":prisoners", 0),
            (try_for_range, ":lord_id", active_npcs_begin, active_npcs_end),
                (troop_slot_eq, ":lord_id", slot_troop_occupation, slto_kingdom_hero),
                (troop_slot_ge, ":lord_id", slot_troop_prisoner_of_party, 0),
                (store_troop_faction, ":lord_faction", ":lord_id"),
                (eq, ":lord_faction", ":faction_line"),
                (val_add, ":prisoners", 1),
            (try_end),

            # add count to last line for faction line report (second, third and fourth line)
            (assign, reg61, ":num_centers"),
            (assign, reg58, ":unassigned_centers"),
            (create_text_overlay, reg10, "@{reg61} {reg58?({reg58} U) :}Centers", tf_left_align),
            (overlay_set_size, reg10, ":line_size"),
            (position_set_x, pos1, 15),
            (store_sub, ":line_y", ":y_pos", 17),
            (position_set_y, pos1, ":line_y"),
            (overlay_set_position, reg10, pos1),
            (overlay_set_color, reg10, 0x000000),

            (assign, reg62, ":num_caravans"),
            (create_text_overlay, reg10, "@{reg62} Caravans", tf_left_align),
            (overlay_set_size, reg10, ":line_size"),
            (position_set_x, pos1, 15),
            (val_sub, ":line_y", 17),
            (position_set_y, pos1, ":line_y"),
            (overlay_set_position, reg10, pos1),
            (overlay_set_color, reg10, 0x000000),

            (assign, reg60, ":num_lords"),
            (assign, reg59, ":prisoners"),
            (create_text_overlay, reg10, "@{reg60} {reg59?({reg59} P) :}Lords", tf_left_align),
            (overlay_set_size, reg10, ":line_size"),
            (position_set_x, pos1, 15),
            (val_sub, ":line_y", 17),
            (position_set_y, pos1, ":line_y"),
            (overlay_set_position, reg10, pos1),
            (overlay_set_color, reg10, 0x000000),

            # increase line for next faction block
            (val_add, ":y_pos", 18),#linebreak

        (try_end), # end of faction loop
        (set_container_overlay, -1),
   ]),
   ## END on load trigger

   ## Check for buttonpress
   (ti_on_presentation_event_state_change,
    [
        (store_trigger_param_1, ":button_pressed_id"),
        (try_begin),
             (eq, ":button_pressed_id", "$g_jrider_faction_report_Return_to_menu"), # pressed  (Return to menu)
        (presentation_set_duration, 0),
    (try_end),
    ]),
   ## END presentation event state change trigger

   ## Event to process when running the presentation
   (ti_on_presentation_run,
    [
        (try_begin),
      (this_or_next|key_clicked, key_escape),
      (key_clicked, key_right_mouse_button),
      (presentation_set_duration, 0),
      (jump_to_menu, "mnu_reports"),
        (try_end),

        ]),
   ]),
  # END presentation run trigger
  # END Faction relation presentation
  # Jrider -

##diplomacy end
## CC

## Prebattle Orders & Deployment Begin   
 ("prebattle_custom_deployment", 0, mesh_message_window, [
    (ti_on_presentation_load,
     [(set_fixed_point_multiplier, 1000),
      (assign, "$g_presentation_credits_obj_1", 0),
      
        (party_get_slot, ":battle_size", "p_main_party", slot_party_prebattle_battle_size),    
        (set_show_messages, 0),
          (call_script, "script_calculate_battle_advantage"),
        (assign, ":battle_advantage", reg0),
        (set_show_messages, 1),
        (call_script, "script_party_count_members_with_full_health", "p_collective_friends"),
        (assign, ":friend_count", reg0),      
        (call_script, "script_party_count_members_with_full_health", "p_main_party"),
        (assign, ":num_our_regulars_remaining", reg0),        
        
        (store_mul, ":players_share", ":num_our_regulars_remaining", 100),
        (val_div, ":players_share", ":friend_count"), #This likely needs more work...it doesn't appear to be a flat %
        
        #Results below this point are x100 for 2 decimal point accuracy
        (store_sub, ":battle_size_scaled", ":battle_size", 30), #Scale battle_size to the engine used 30-150 = 0-1 scale
        (val_mul, ":battle_size_scaled", 100),
        (val_div, ":battle_size_scaled", 120),
        
        (assign, ":spawn_point_count", 12),
        (try_begin),
            (this_or_next|party_slot_eq, "$g_encountered_party", slot_party_type, spt_castle),
            (party_slot_eq, "$g_encountered_party", slot_party_type, spt_town),
            (val_mul, ":battle_advantage", 2),
            (val_div, ":battle_advantage", 3), #scale down the advantage a bit for sieges.
            (val_add, ":spawn_point_count", 6), #For all sieges
            (eq, "$g_next_menu", "mnu_siege_started_defender"), #Siege Defense?
            (party_slot_eq, "$g_encountered_party", slot_center_siege_with_belfry, 1),
            #(display_message, "@Siege Defense - Belfry"), #Debug
            (val_add, ":spawn_point_count", 2), #For tower defense only
        (try_end),
        (val_mul, ":spawn_point_count", 100),
        
        (store_mul, ":num_ally_in_battle", ":battle_size_scaled", 4),
        (val_add, ":num_ally_in_battle", 125),
        
        (val_add, ":battle_advantage", 15),
        (val_mul, ":battle_advantage", 100),
        (val_div, ":battle_advantage", 15),
        (val_clamp, ":battle_advantage", 20, 250),
        
        (val_mul, ":num_ally_in_battle", ":battle_advantage"),
        (val_mul, ":num_ally_in_battle", ":spawn_point_count"),
        (val_div, ":num_ally_in_battle", 1000000), #For 3 values that were multiplied by 100
        (val_add, ":num_ally_in_battle", 1), #To account for rounding
        
        (store_mul, ":num_player_troops_in_battle", ":num_ally_in_battle", ":players_share"),
        (val_div, ":num_player_troops_in_battle", 100),
        
        # (store_mul, ":batt_adv_multiplier", ":battle_size", 26),
        # (val_add, ":batt_adv_multiplier", 220),
        # (val_mul, ":batt_adv_multiplier", ":battle_advantage"),
        
        # (store_mul, ":batt_adv_multiplier", ":battle_size", 26),
        # (val_add, ":batt_adv_multiplier", 220),
        # (val_mul, ":batt_adv_multiplier", ":battle_advantage"),
        # (store_mul, ":size_offset", ":battle_size", 396),
        # (val_add, ":size_offset", 3300),
        # (store_add, ":num_ally_in_battle", ":batt_adv_multiplier", ":size_offset"),
        # (val_div, ":num_ally_in_battle", 1000),
        # (store_mul, ":num_player_troops_in_battle", ":num_ally_in_battle", ":players_share"),
        # (val_div, ":num_player_troops_in_battle", 100),
        
        # (store_mul, ":minimum_in_battle", ":battle_size", 8),
        # (val_div, ":minimum_in_battle", 100),
        # (val_add, ":minimum_in_battle", 1),
        # (store_sub, ":maximum_in_battle", ":battle_size", ":minimum_in_battle"),
        # (val_add, ":maximum_in_battle", 1),
        # (val_clamp, ":num_player_troops_in_battle", ":minimum_in_battle", ":maximum_in_battle"),
        
        (val_min, ":num_player_troops_in_battle", ":num_our_regulars_remaining"), #Make sure it doesn't say the player can spawn more than they have
        (party_set_slot, "p_main_party", slot_party_prebattle_size_in_battle, ":num_player_troops_in_battle"),

      (create_text_overlay, reg0, "@Plan Deployment", tf_center_justify|tf_single_line|tf_with_outline),
      (overlay_set_color, reg0, 0xFFFFFFFF),
      (position_set_x, pos1, 1500),
      (position_set_y, pos1, 1500),
      (overlay_set_size, reg0, pos1),
      (position_set_x, pos1, 500),
      (position_set_y, pos1, 680),
      (overlay_set_position, reg0, pos1),

      (party_get_slot, ":round_size", "p_main_party", slot_party_prebattle_size_in_battle),
      (assign, reg1, ":round_size"),
      (create_text_overlay, reg0, "@You will have {reg1} troops available at the battle's start", tf_center_justify|tf_single_line),
      (position_set_x, pos1, 500),
      (position_set_y, pos1, 650),
      (overlay_set_position, reg0, pos1),
      
      (create_text_overlay, reg0, "@Troop",  tf_center_justify),
      (position_set_x, pos1, 105),
      (position_set_y, pos1, 600),
      (overlay_set_position, reg0, pos1),

      (create_text_overlay, reg0, "@# at start  / # in party", tf_center_justify),
      (position_set_x, pos1, 385),
      (position_set_y, pos1, 600),
      (overlay_set_position, reg0, pos1),
   
      (str_clear, s0),
      (create_text_overlay, "$g_presentation_obj_bugdet_report_container", s0, tf_scrollable_style_2),
      (position_set_x, pos1, 50),
      (position_set_y, pos1, 100),
      (overlay_set_position, "$g_presentation_obj_bugdet_report_container", pos1),
      (position_set_x, pos1, 385),#was 360
      (position_set_y, pos1, 500), 
      (overlay_set_area_size, "$g_presentation_obj_bugdet_report_container", pos1),
      (set_container_overlay, "$g_presentation_obj_bugdet_report_container"),
   
         (assign, ":in_count", 0),
      (assign, ":cur_y_adder", 40),  
      (party_get_num_companion_stacks, ":num_of_stacks", "p_main_party"),
      (store_mul, ":cur_y", ":num_of_stacks", ":cur_y_adder"),
      
        (try_for_range, ":i", 0, ":num_of_stacks"),
            (party_stack_get_troop_id, ":troop_id", "p_main_party", ":i"),
            (neq, ":troop_id", "trp_player"),
            (party_stack_get_size, ":stack_size", "p_main_party", ":i"),
            (party_stack_get_num_wounded, ":stack_wounded", "p_main_party", ":i"),
            (val_sub, ":stack_size", ":stack_wounded"),
            (troop_get_slot, ":num_of_agents", ":troop_id", slot_troop_prebattle_first_round),
            (val_min, ":num_of_agents", ":stack_size"),
            (troop_set_slot, ":troop_id", slot_troop_prebattle_first_round, ":num_of_agents"),
            
            (val_add, ":in_count", ":num_of_agents"),
            
            (str_store_troop_name, s1, ":troop_id"),
            (create_text_overlay, reg0, s1),
            (position_set_x, pos1, 800),
            (position_set_y, pos1, 800),
            (overlay_set_size, reg0, pos1),
            (position_set_x, pos1, 25),
            (position_set_y, pos1, ":cur_y"),
            (overlay_set_position, reg0, pos1),
            
            (assign, reg0, ":stack_size"),
            (str_store_string, s1, "@/ {reg0}"),
            (create_text_overlay, reg0, s1),
            (position_set_x, pos1, 325),
            (position_set_y, pos1, ":cur_y"),
            (overlay_set_position, reg0, pos1),
                        
            (val_add, ":stack_size", 1), #for upper limit of number box
            
            (create_number_box_overlay, reg0, 0, ":stack_size"),
            (overlay_set_val, reg0, ":num_of_agents"),
            (position_set_x, pos1, 250),
            (position_set_y, pos1, ":cur_y"),
            (overlay_set_position, reg0, pos1),
                
            (troop_set_slot, "trp_temp_array_a", ":troop_id", reg0),

            (val_sub, ":cur_y", ":cur_y_adder"),
        (try_end), #End Stack/Troop Loop

        (set_container_overlay, -1),

        (party_set_slot, "p_main_party", slot_party_prebattle_in_battle_count, ":in_count"),
        (assign, reg0, ":in_count"),
        (create_text_overlay, reg60, "@{reg0}", tf_with_outline),
        (try_begin),         
            (gt, ":in_count", ":round_size"),
            (overlay_set_color, reg60, 0xFF1100),
        (else_try),
            (overlay_set_color, reg60, 0xFFFFFF),
        (try_end),
        (position_set_x, pos1, 290),
        (position_set_y, pos1, 50),
        (overlay_set_position, reg60, pos1),
        
        (assign, reg0, ":round_size"),
        (create_text_overlay, reg0, "@of {reg0} troops", 0),
        (position_set_x, pos1, 330),
        (position_set_y, pos1, 50),
        (overlay_set_position, reg0, pos1),
        
        (create_mesh_overlay, reg0, "mesh_pic_charge"),
        (position_set_x, pos1, 700),
        (position_set_y, pos1, 700),
        (overlay_set_size, reg0, pos1),
        (position_set_x, pos1, 225), 
        (position_set_y, pos1, 50),
        (overlay_set_position, reg0, pos1),
        
      (create_game_button_overlay, "$g_presentation_obj_custom_battle_designer_19", "@Ready Troops", 0),
      (position_set_x, pos1, 880),
      (position_set_y, pos1, 15),
      (overlay_set_position, "$g_presentation_obj_custom_battle_designer_19", pos1),

      (create_game_button_overlay, "$g_presentation_obj_custom_battle_designer_20", "@Reassess", 0),
      (position_set_x, pos1, 722),
      (position_set_y, pos1, 15),
      (overlay_set_position, "$g_presentation_obj_custom_battle_designer_20", pos1),
      
      (create_game_button_overlay, "$g_presentation_obj_custom_battle_designer_18", "@Scrap All", 0),
      (position_set_x, pos1, 565),
      (position_set_y, pos1, 15),
      (overlay_set_position, "$g_presentation_obj_custom_battle_designer_18", pos1),

        #Preview button?
    
      (presentation_set_duration, 999999),
      ]),
    (ti_on_presentation_run,
      [    
        (try_begin),
            (key_clicked, key_escape),
            (presentation_set_duration, 0),
        (try_end),
        (party_get_slot, ":battle_size", "p_main_party", slot_party_prebattle_battle_size),    
        (this_or_next|lt, ":battle_size", 30),
        (gt, ":battle_size", max_battle_size),
        #(assign, "$g_presentation_credits_obj_1", 1),
        #(start_presentation, "prsnt_prebattle_record_battle_size"),
        (options_get_battle_size, ":battle_size"), 
        (party_set_slot, "p_main_party", slot_party_prebattle_battle_size, ":battle_size"),

      ]),
    (ti_on_presentation_event_state_change,
     [
       (store_trigger_param_1, ":object"),
       (store_trigger_param_2, ":value"),
       
           (try_begin), #Buttons
            (eq, ":object", "$g_presentation_obj_custom_battle_designer_20"),
            (jump_to_menu, "$g_next_menu"),
            (presentation_set_duration, 0),
        (else_try),
            (eq, ":object", "$g_presentation_obj_custom_battle_designer_18"),
            (party_get_num_companion_stacks, ":num_of_stacks", "p_main_party"),
            (try_for_range, ":i", 0, ":num_of_stacks"),
                (party_stack_get_troop_id, ":troop_id", "p_main_party", ":i"),
                (neq, ":troop_id", "trp_player"),
                (troop_get_slot, ":overlay_id", "trp_temp_array_a", ":troop_id"),
                (troop_set_slot, ":troop_id", slot_troop_prebattle_first_round, 0),
                (overlay_set_val, ":overlay_id", 0),
            (try_end),
            (party_set_slot, "p_main_party", slot_party_prebattle_in_battle_count, 0),
            (overlay_set_text, reg60, "@0"),
            (overlay_set_color, reg60, 0xFFFFFF),
        (else_try),
            (eq, ":object", "$g_presentation_obj_custom_battle_designer_19"),
            (party_get_slot, ":cur_count", "p_main_party", slot_party_prebattle_in_battle_count),
            (party_get_slot, ":round_size", "p_main_party", slot_party_prebattle_size_in_battle),
            (try_begin),
                (gt, ":cur_count", ":round_size"),
                (create_text_overlay, reg0, "@Too many troops^Check number available", tf_center_justify|tf_with_outline),
                (overlay_set_color, reg0, 0xFF1100),
                (position_set_x, pos1, 600),
                (position_set_y, pos1, 500),
                (overlay_set_position, reg0, pos1),
                (position_set_x, pos1, 0),
                (position_set_y, pos1, 0),
                (overlay_animate_to_size, reg0, 3000, pos1),
            (else_try),
                (party_set_slot, "p_main_party", slot_party_prebattle_customized_deployment, 1),
                (jump_to_menu, "$g_next_menu"),
                (presentation_set_duration, 0),
            (try_end),
        (else_try), #Number Boxes

         (party_get_num_companion_stacks, ":num_of_stacks", "p_main_party"),
         (try_for_range, ":i", 0, ":num_of_stacks"),
            (party_stack_get_troop_id, ":troop_id", "p_main_party", ":i"),
            (neq, ":troop_id", "trp_player"),
            (troop_slot_eq, "trp_temp_array_a", ":troop_id", ":object"),
            (troop_get_slot, ":num_agents", ":troop_id", slot_troop_prebattle_first_round),
            (assign, ":num_of_stacks", 0), #loop breaker
         (try_end),
         
         (party_get_slot, ":cur_count", "p_main_party", slot_party_prebattle_in_battle_count),
         (party_get_slot, ":round_size", "p_main_party", slot_party_prebattle_size_in_battle),
         (store_sub, ":dif", ":value", ":num_agents"),
         (store_add, ":new_total", ":cur_count", ":dif"),
         
         (try_begin),
            (gt, ":new_total", ":round_size"),
            (ge, ":new_total", ":cur_count"),
            (try_begin),
                (ge, ":cur_count", ":round_size"), #if it was too big to begin with, reset value
                (assign, ":modified_value", ":num_agents"), #revert to pre-change number
                (assign, ":new_total", ":cur_count"), #revert to pre-change number
            (else_try),
                (store_sub, ":dif2", ":new_total", ":round_size"),
                (val_sub, ":dif", ":dif2"),
                (val_max, ":dif", 0),
                (store_add, ":modified_value", ":value", ":dif"),
                (store_add, ":new_total", ":cur_count", ":dif"),
            (try_end),
            (overlay_set_val, ":object", ":modified_value"),
            (troop_set_slot, ":troop_id", slot_troop_prebattle_first_round, ":modified_value"),
         (else_try),
            (troop_set_slot, ":troop_id", slot_troop_prebattle_first_round, ":value"),
         (try_end),
         
         (assign, reg0, ":new_total"),
         (overlay_set_text, reg60, "@{reg0}"),
         (try_begin),
            (gt, ":new_total", ":round_size"),
            (overlay_set_color, reg60, 0xFF1100),
         (else_try),
            (overlay_set_color, reg60, 0xFFFFFF),
         (try_end),
         (party_set_slot, "p_main_party", slot_party_prebattle_in_battle_count, ":new_total"),
       (try_end),     
         
       ]),
    ]),
    
 ("prebattle_orders",0, mesh_message_window,[
     (ti_on_presentation_load,
       [(set_fixed_point_multiplier, 1000),
        (assign, "$g_formation_group0_selected", 0),
        (assign, "$g_formation_group1_selected", 0),
        (assign, "$g_formation_group2_selected", 0),
        (assign, "$g_formation_group3_selected", 0),
        (assign, "$g_formation_group4_selected", 0),
        (assign, "$g_formation_group5_selected", 0),
        (assign, "$g_formation_group6_selected", 0),
        (assign, "$g_formation_group7_selected", 0),
        (assign, "$g_formation_group8_selected", 0),
        (assign, "$g_presentation_obj_battle_but0", -1),
        (assign, "$g_presentation_obj_battle_but1", -1),
        (assign, "$g_presentation_obj_battle_but2", -1),
        (assign, "$g_presentation_obj_battle_but3", -1),
        (assign, "$g_presentation_obj_battle_but4", -1),
        (assign, "$g_presentation_obj_battle_but5", -1),
        (assign, "$g_presentation_obj_battle_but6", -1),
        (assign, "$g_presentation_obj_battle_but7", -1),
        (assign, "$g_presentation_obj_battle_but8", -1),
        (str_clear, s7),   
    
        (position_set_y, pos1, 700),
                
        (create_text_overlay, "$g_presentation_credits_obj_2", "@Initial", tf_center_justify|tf_single_line|tf_with_outline),
        (overlay_set_color, "$g_presentation_credits_obj_2", 0xFFAAAAAA),
        (position_set_x, pos1, 225),
        (overlay_set_position, "$g_presentation_credits_obj_2", pos1),
        (create_text_overlay, "$g_presentation_credits_obj_3", "@Movement 1", tf_center_justify|tf_single_line|tf_with_outline),
        (overlay_set_color, "$g_presentation_credits_obj_3", 0xFFAAAAAA),
        (position_set_x, pos1, 357), #415; 400
        (overlay_set_position, "$g_presentation_credits_obj_3", pos1),
        (create_text_overlay, "$g_presentation_credits_obj_4", "@Movement 2", tf_center_justify|tf_single_line|tf_with_outline),
        (overlay_set_color, "$g_presentation_credits_obj_4", 0xFFAAAAAA),
        (position_set_x, pos1, 487), #590 ; 575
        (overlay_set_position, "$g_presentation_credits_obj_4", pos1),
        (create_text_overlay, "$g_presentation_credits_obj_5", "@Formation", tf_center_justify|tf_single_line|tf_with_outline),
        (overlay_set_color, "$g_presentation_credits_obj_5", 0xFFAAAAAA),
        (position_set_x, pos1, 610),
        (overlay_set_position, "$g_presentation_credits_obj_5", pos1),
        
        (create_text_overlay, "$g_presentation_credits_obj_6", "@Attack", tf_center_justify|tf_single_line|tf_with_outline),
        (overlay_set_color, "$g_presentation_credits_obj_6", 0xFFAAAAAA),
        (position_set_x, pos1, 225),
        (overlay_set_position, "$g_presentation_credits_obj_6", pos1),
        (overlay_set_display, "$g_presentation_credits_obj_6", 0),
        (create_text_overlay, "$g_presentation_credits_obj_7", "@Weapon Type", tf_center_justify|tf_single_line|tf_with_outline),
        (overlay_set_color, "$g_presentation_credits_obj_7", 0xFFAAAAAA),
        (position_set_x, pos1, 360), #390
        (overlay_set_position, "$g_presentation_credits_obj_7", pos1),
        (overlay_set_display, "$g_presentation_credits_obj_7", 0),
        (create_text_overlay, "$g_presentation_credits_obj_8", "@Shield", tf_center_justify|tf_single_line|tf_with_outline),
        (overlay_set_color, "$g_presentation_credits_obj_8", 0xFFAAAAAA),
        (position_set_x, pos1, 485), #490
        (overlay_set_position, "$g_presentation_credits_obj_8", pos1),
        (overlay_set_display, "$g_presentation_credits_obj_8", 0),
        (create_text_overlay, "$g_presentation_credits_obj_9", "@Skirmish", tf_center_justify|tf_single_line|tf_with_outline),
        (overlay_set_color, "$g_presentation_credits_obj_9", 0xFFAAAAAA),
        (position_set_x, pos1, 600), #590
        (overlay_set_position, "$g_presentation_credits_obj_9", pos1),
        (overlay_set_display, "$g_presentation_credits_obj_9", 0),

        (assign, "$group0_has_troops", 0),
        (assign, "$group1_has_troops", 0),
        (assign, "$group2_has_troops", 0),
        (assign, "$group3_has_troops", 0),
        (assign, "$group4_has_troops", 0),
        (assign, "$group5_has_troops", 0),
        (assign, "$group6_has_troops", 0),
        (assign, "$group7_has_troops", 0),
        (assign, "$group8_has_troops", 0),
        (party_get_num_companion_stacks, ":num_stacks", "p_main_party"),
        (assign, "$num_classes", 0),
        (try_for_range, ":troop_iterator", 0, ":num_stacks"),
          (party_stack_get_troop_id, ":cur_troop_id", "p_main_party", ":troop_iterator"),
          (troop_get_class, ":troop_class", ":cur_troop_id"),
          (neq, "trp_player", ":cur_troop_id"),
          (try_begin),
            (eq, ":troop_class", 0),
            (try_begin),
              (neq, "$group0_has_troops", 1),
              (val_add, "$num_classes", 1),
            (try_end),
            (assign, "$group0_has_troops", 1),
          (else_try),
            (eq, ":troop_class", 1),
            (try_begin),
              (neq, "$group1_has_troops", 1),
              (val_add, "$num_classes", 1),
            (try_end),
            (assign, "$group1_has_troops", 1),
          (else_try),
            (eq, ":troop_class", 2),
            (try_begin),
              (neq, "$group2_has_troops", 1),
              (val_add, "$num_classes", 1),
            (try_end),
            (assign, "$group2_has_troops", 1),
          (else_try),
            (eq, ":troop_class", 3),
            (try_begin),
              (neq, "$group3_has_troops", 1),
              (val_add, "$num_classes", 1),
            (try_end),
            (assign, "$group3_has_troops", 1),
          (else_try),
            (eq, ":troop_class", 4),
            (try_begin),
              (neq, "$group4_has_troops", 1),
              (val_add, "$num_classes", 1),
            (try_end),
            (assign, "$group4_has_troops", 1),
          (else_try),
            (eq, ":troop_class", 5),
            (try_begin),
              (neq, "$group5_has_troops", 1),
              (val_add, "$num_classes", 1),
            (try_end),
            (assign, "$group5_has_troops", 1),
          (else_try),
            (eq, ":troop_class", 6),
            (try_begin),
              (neq, "$group6_has_troops", 1),
              (val_add, "$num_classes", 1),
            (try_end),
            (assign, "$group6_has_troops", 1),
          (else_try),
            (eq, ":troop_class", 7),
            (try_begin),
              (neq, "$group7_has_troops", 1),
              (val_add, "$num_classes", 1),
            (try_end),
            (assign, "$group7_has_troops", 1),
          (else_try),
            (eq, ":troop_class", 8),
            (try_begin),
              (neq, "$group8_has_troops", 1),
              (val_add, "$num_classes", 1),
            (try_end),
            (assign, "$group8_has_troops", 1),
          (try_end),
        (try_end),

        (assign, ":stat_position_x", 0),
        (assign, ":stat_position_y", 653),
        (assign, ":stat_position_check_x", 20),
        (assign, ":stat_position_check_y", 662),
        (assign, ":stat_position_name_x", 50),
        (assign, ":stat_position_name_y", 660),
        (assign, ":stat_position_order_y", 660),
        (try_begin),
          (eq, "$group0_has_troops", 1),
          (create_image_button_overlay, "$g_presentation_obj_battle_but0", "mesh_white_plane", "mesh_white_plane"),
          (val_add, ":stat_position_x", 15),
          (position_set_x, pos1, ":stat_position_x"),
          (position_set_y, pos1, ":stat_position_y"),
          (overlay_set_position, "$g_presentation_obj_battle_but0", pos1),
          (val_add, ":stat_position_x", -15),
          (val_add, ":stat_position_y", -40),

          (position_set_x, pos1, 32650),
          (position_set_y, pos1, 2000),
          (overlay_set_size, "$g_presentation_obj_battle_but0", pos1),
          (overlay_set_alpha, "$g_presentation_obj_battle_but0", 0),
          (overlay_set_color, "$g_presentation_obj_battle_but0", 0xFFFF00),

          (create_check_box_overlay, "$g_presentation_obj_battle_check0", "mesh_checkbox_off", "mesh_checkbox_on"),
          (position_set_x, pos2, ":stat_position_check_x"),
          (position_set_y, pos2, ":stat_position_check_y"),
          (overlay_set_position, "$g_presentation_obj_battle_check0", pos2),
          (val_add, ":stat_position_check_y", -40),

          (str_store_class_name, s7, 0),
          (create_text_overlay, "$g_presentation_obj_battle_name0", s7, 0),
          (position_set_x, pos3, ":stat_position_name_x"),
          (position_set_y, pos3, ":stat_position_name_y"),
          (overlay_set_position, "$g_presentation_obj_battle_name0", pos3),
        
          (val_add, ":stat_position_name_y", -40),

          (create_text_overlay, "$g_presentation_but0_movement", "str_space", tf_center_justify), #Initial
          (create_text_overlay, "$g_presentation_but0_riding", "str_space", tf_center_justify), #Position 1
          (create_text_overlay, "$g_presentation_but0_weapon_usage", "str_space", tf_center_justify), #Position 2
          (create_text_overlay, reg(6), "str_space", tf_center_justify), #Formations
          
          (create_text_overlay, reg(15), "str_space", tf_center_justify), #Native Weapon
          (create_text_overlay, reg(24), "str_space", tf_center_justify), #Caba'drin Weapon
          (create_text_overlay, reg(33), "str_space", tf_center_justify), #Caba'drin Shield     
          (create_text_overlay, reg(42), "str_space", tf_center_justify), #Caba'drin Skirmish              
          
          (position_set_x, pos1, 950),
          (position_set_y, pos1, 950),
          (overlay_set_size, "$g_presentation_but0_movement", pos1),
          (overlay_set_size, "$g_presentation_but0_riding", pos1),
          (overlay_set_size, "$g_presentation_but0_weapon_usage", pos1),
          (overlay_set_size, reg(6), pos1),
          (overlay_set_size, reg(15), pos1),
          (overlay_set_size, reg(24), pos1),
          (overlay_set_size, reg(33), pos1),
          (overlay_set_size, reg(42), pos1),
          
          (overlay_set_display, reg(15), 0),
          (overlay_set_display, reg(24), 0),
          (overlay_set_display, reg(33), 0),
          (overlay_set_display, reg(42), 0),          

          (position_set_y, pos1, ":stat_position_order_y"),
          (position_set_x, pos1, 225), 
          (overlay_set_position, "$g_presentation_but0_movement", pos1),
          (position_set_x, pos1, 355), #350 ; 380 ; 400
          (overlay_set_position, "$g_presentation_but0_riding", pos1),
          (position_set_x, pos1, 485), #475 ; 500; 570
          (overlay_set_position, "$g_presentation_but0_weapon_usage", pos1),
          (position_set_x, pos1, 605), #
          (overlay_set_position, reg(6), pos1),
          
          (position_set_x, pos1, 225),
          (overlay_set_position, reg(15), pos1),
          (position_set_x, pos1, 355), #350
          (overlay_set_position, reg(24), pos1),
          (position_set_x, pos1, 485), #475
          (overlay_set_position, reg(33), pos1),
          (position_set_x, pos1, 605), #600  
          (overlay_set_position, reg(42), pos1),
          (val_add, ":stat_position_order_y", -40),
          
          (create_text_overlay, "$g_presentation_obj_custom_battle_designer_1", "str_space"),
          #(overlay_set_color, "$g_presentation_credits_obj_1", 0xAAAAAA),
          (position_set_x, pos1, 600),
          (position_set_y, pos1, 600),
          (overlay_set_size, "$g_presentation_obj_custom_battle_designer_1", pos1),
          
          (create_text_overlay, "$g_presentation_obj_custom_battle_designer_11", "str_space"),
          #(overlay_set_color, "$g_presentation_credits_obj_1", 0xAAAAAA),
          (position_set_x, pos1, 600),
          (position_set_y, pos1, 600),
          (overlay_set_size, "$g_presentation_obj_custom_battle_designer_11", pos1),
        (try_end),
        (try_begin),
          (eq, "$group1_has_troops", 1),
          (create_image_button_overlay, "$g_presentation_obj_battle_but1", "mesh_white_plane", "mesh_white_plane"),
          (val_add, ":stat_position_x", 15),
          (position_set_x, pos1, ":stat_position_x"),
          (position_set_y, pos1, ":stat_position_y"),
          (overlay_set_position, "$g_presentation_obj_battle_but1", pos1),
          (val_add, ":stat_position_y", -40),
          (val_add, ":stat_position_x", -15),

          (position_set_x, pos1, 32650),
          (position_set_y, pos1, 2000),
          (overlay_set_size, "$g_presentation_obj_battle_but1", pos1),
          (overlay_set_alpha, "$g_presentation_obj_battle_but1", 0),
          (overlay_set_color, "$g_presentation_obj_battle_but1", 0xFFFF00),

          (create_check_box_overlay, "$g_presentation_obj_battle_check1", "mesh_checkbox_off", "mesh_checkbox_on"),
          (position_set_x, pos2, ":stat_position_check_x"),
          (position_set_y, pos2, ":stat_position_check_y"),
          (overlay_set_position, "$g_presentation_obj_battle_check1", pos2),
          (val_add, ":stat_position_check_y", -40),        

          (str_store_class_name, s7, 1),
          (create_text_overlay, "$g_presentation_obj_battle_name1", s7, 0),
          (position_set_x, pos3, ":stat_position_name_x"),
          (position_set_y, pos3, ":stat_position_name_y"),
          (overlay_set_position, "$g_presentation_obj_battle_name1", pos3),
          (val_add, ":stat_position_name_y", -40),

          (create_text_overlay, "$g_presentation_but1_movement", "str_space", tf_center_justify),
          (create_text_overlay, "$g_presentation_but1_riding", "str_space", tf_center_justify),
          (create_text_overlay, "$g_presentation_but1_weapon_usage", "str_space", tf_center_justify),
          (create_text_overlay, reg(7), "str_space", tf_center_justify), #Formations
          
          (create_text_overlay, reg(16), "str_space", tf_center_justify), #Native Weapon
          (create_text_overlay, reg(25), "str_space", tf_center_justify), #Caba'drin Weapon
          (create_text_overlay, reg(34), "str_space", tf_center_justify), #Caba'drin Shield     
          (create_text_overlay, reg(43), "str_space", tf_center_justify), #Caba'drin Skirmish    
          
          (position_set_x, pos1, 950),
          (position_set_y, pos1, 950),
          (overlay_set_size, "$g_presentation_but1_movement", pos1),
          (overlay_set_size, "$g_presentation_but1_riding", pos1),
          (overlay_set_size, "$g_presentation_but1_weapon_usage", pos1),
          (overlay_set_size, reg(7), pos1),
          (overlay_set_size, reg(16), pos1),
          (overlay_set_size, reg(25), pos1),
          (overlay_set_size, reg(34), pos1),
          (overlay_set_size, reg(43), pos1),
          
          (overlay_set_display, reg(16), 0),
          (overlay_set_display, reg(25), 0),
          (overlay_set_display, reg(34), 0),
          (overlay_set_display, reg(43), 0),

          (position_set_y, pos1, ":stat_position_order_y"),
          (position_set_x, pos1, 225),
          (overlay_set_position, "$g_presentation_but1_movement", pos1),
          (position_set_x, pos1, 355), #350 ; 380 ; 400
          (overlay_set_position, "$g_presentation_but1_riding", pos1),
          (position_set_x, pos1, 485), #475 ; 500 ; 570
          (overlay_set_position, "$g_presentation_but1_weapon_usage", pos1),
          (position_set_x, pos1, 605),
          (overlay_set_position, reg(7), pos1),
          
          (position_set_x, pos1, 225),
          (overlay_set_position, reg(16), pos1),
          (position_set_x, pos1, 355), #350
          (overlay_set_position, reg(25), pos1),
          (position_set_x, pos1, 485), #475
          (overlay_set_position, reg(34), pos1),
          (position_set_x, pos1, 605), #600  
          (overlay_set_position, reg(43), pos1),
          (val_add, ":stat_position_order_y", -40),
          
          (create_text_overlay, "$g_presentation_obj_custom_battle_designer_2", "str_space"),
          #(overlay_set_color, "$g_presentation_credits_obj_1", 0xAAAAAA),
          (position_set_x, pos1, 600),
          (position_set_y, pos1, 600),
          (overlay_set_size, "$g_presentation_obj_custom_battle_designer_2", pos1),
          
          (create_text_overlay, "$g_presentation_obj_custom_battle_designer_12", "str_space"),
          #(overlay_set_color, "$g_presentation_credits_obj_1", 0xAAAAAA),
          (position_set_x, pos1, 600),
          (position_set_y, pos1, 600),
          (overlay_set_size, "$g_presentation_obj_custom_battle_designer_12", pos1),
        (try_end),
        (try_begin),
          (eq, "$group2_has_troops", 1),
          (create_image_button_overlay, "$g_presentation_obj_battle_but2", "mesh_white_plane", "mesh_white_plane"),
          (val_add, ":stat_position_x", 15),
          (position_set_x, pos1, ":stat_position_x"),
          (position_set_y, pos1, ":stat_position_y"),
          (overlay_set_position, "$g_presentation_obj_battle_but2", pos1),
          (val_add, ":stat_position_y", -40),
          (val_add, ":stat_position_x", -15),

          (position_set_x, pos1, 32650),
          (position_set_y, pos1, 2000),
          (overlay_set_size, "$g_presentation_obj_battle_but2", pos1),
          (overlay_set_alpha, "$g_presentation_obj_battle_but2", 0),
          (overlay_set_color, "$g_presentation_obj_battle_but2", 0xFFFF00),

          (create_check_box_overlay, "$g_presentation_obj_battle_check2", "mesh_checkbox_off", "mesh_checkbox_on"),          
          (position_set_x, pos2, ":stat_position_check_x"),
          (position_set_y, pos2, ":stat_position_check_y"),
          (overlay_set_position, "$g_presentation_obj_battle_check2", pos2),
          (val_add, ":stat_position_check_y", -40),        

          (str_store_class_name, s7, 2),
          (create_text_overlay, "$g_presentation_obj_battle_name2", s7, 0),
          (position_set_x, pos3, ":stat_position_name_x"),
          (position_set_y, pos3, ":stat_position_name_y"),
          (overlay_set_position, "$g_presentation_obj_battle_name2", pos3),
          (val_add, ":stat_position_name_y", -40),

          (create_text_overlay, "$g_presentation_but2_movement", "str_space", tf_center_justify),
          (create_text_overlay, "$g_presentation_but2_riding", "str_space", tf_center_justify),
          (create_text_overlay, "$g_presentation_but2_weapon_usage", "str_space", tf_center_justify),
          (create_text_overlay, reg(8), "str_space", tf_center_justify), #Formations
          
          (create_text_overlay, reg(17), "str_space", tf_center_justify), #Native Weapon
          (create_text_overlay, reg(26), "str_space", tf_center_justify), #Caba'drin Weapon
          (create_text_overlay, reg(35), "str_space", tf_center_justify), #Caba'drin Shield     
          (create_text_overlay, reg(44), "str_space", tf_center_justify), #Caba'drin Skirmish    
          
          (position_set_x, pos1, 950),
          (position_set_y, pos1, 950),
          (overlay_set_size, "$g_presentation_but2_movement", pos1),
          (overlay_set_size, "$g_presentation_but2_riding", pos1),
          (overlay_set_size, "$g_presentation_but2_weapon_usage", pos1),
          (overlay_set_size, reg(8), pos1),
          (overlay_set_size, reg(17), pos1),
          (overlay_set_size, reg(26), pos1),
          (overlay_set_size, reg(35), pos1),
          (overlay_set_size, reg(44), pos1),
          
          (overlay_set_display, reg(17), 0),
          (overlay_set_display, reg(26), 0),
          (overlay_set_display, reg(35), 0),
          (overlay_set_display, reg(44), 0),
          
          (position_set_y, pos1, ":stat_position_order_y"),
          (position_set_x, pos1, 225),
          (overlay_set_position, "$g_presentation_but2_movement", pos1),
          (position_set_x, pos1, 355), #350 ; 380
          (overlay_set_position, "$g_presentation_but2_riding", pos1),
          (position_set_x, pos1, 485), #475 ; 500
          (overlay_set_position, "$g_presentation_but2_weapon_usage", pos1),
          (position_set_x, pos1, 605),
          (overlay_set_position, reg(8), pos1),
          
          (position_set_x, pos1, 225),
          (overlay_set_position, reg(17), pos1),
          (position_set_x, pos1, 355), #350
          (overlay_set_position, reg(26), pos1),
          (position_set_x, pos1, 485), #475
          (overlay_set_position, reg(35), pos1),
          (position_set_x, pos1, 605), #600 
          (overlay_set_position, reg(44), pos1),
          (val_add, ":stat_position_order_y", -40),
          
          (create_text_overlay, "$g_presentation_obj_custom_battle_designer_3", "str_space"),
          #(overlay_set_color, "$g_presentation_credits_obj_1", 0xAAAAAA),
          (position_set_x, pos1, 600),
          (position_set_y, pos1, 600),
          (overlay_set_size, "$g_presentation_obj_custom_battle_designer_3", pos1),
          
          (create_text_overlay, "$g_presentation_obj_custom_battle_designer_13", "str_space"),
          #(overlay_set_color, "$g_presentation_credits_obj_1", 0xAAAAAA),
          (position_set_x, pos1, 600),
          (position_set_y, pos1, 600),
          (overlay_set_size, "$g_presentation_obj_custom_battle_designer_13", pos1),
        (try_end),
        (try_begin),
          (eq, "$group3_has_troops", 1),
          (create_image_button_overlay, "$g_presentation_obj_battle_but3", "mesh_white_plane", "mesh_white_plane"),
          (val_add, ":stat_position_x", 15),
          (position_set_x, pos1, ":stat_position_x"),
          (position_set_y, pos1, ":stat_position_y"),
          (overlay_set_position, "$g_presentation_obj_battle_but3", pos1),
          (val_add, ":stat_position_y", -40),
          (val_add, ":stat_position_x", -15),

          (position_set_x, pos1, 32650),
          (position_set_y, pos1, 2000),
          (overlay_set_size, "$g_presentation_obj_battle_but3", pos1),
          (overlay_set_alpha, "$g_presentation_obj_battle_but3", 0),
          (overlay_set_color, "$g_presentation_obj_battle_but3", 0xFFFF00),

          (create_check_box_overlay, "$g_presentation_obj_battle_check3", "mesh_checkbox_off", "mesh_checkbox_on"),          
          (position_set_x, pos2, ":stat_position_check_x"),
          (position_set_y, pos2, ":stat_position_check_y"),
          (overlay_set_position, "$g_presentation_obj_battle_check3", pos2),
          (val_add, ":stat_position_check_y", -40),        

          (str_store_class_name, s7, 3),
          (create_text_overlay, "$g_presentation_obj_battle_name3", s7, 0),
          (position_set_x, pos3, ":stat_position_name_x"),
          (position_set_y, pos3, ":stat_position_name_y"),
          (overlay_set_position, "$g_presentation_obj_battle_name3", pos3),
          (val_add, ":stat_position_name_y", -40),

          (create_text_overlay, "$g_presentation_but3_movement", "str_space", tf_center_justify),
          (create_text_overlay, "$g_presentation_but3_riding", "str_space", tf_center_justify),
          (create_text_overlay, "$g_presentation_but3_weapon_usage", "str_space", tf_center_justify),
          (create_text_overlay, reg(9), "str_space", tf_center_justify), #Formations
          
          (create_text_overlay, reg(18), "str_space", tf_center_justify), #Native Weapon
          (create_text_overlay, reg(27), "str_space", tf_center_justify), #Caba'drin Weapon
          (create_text_overlay, reg(36), "str_space", tf_center_justify), #Caba'drin Shield     
          (create_text_overlay, reg(45), "str_space", tf_center_justify), #Caba'drin Skirmish              

          (position_set_x, pos1, 950),
          (position_set_y, pos1, 950),
          (overlay_set_size, "$g_presentation_but3_movement", pos1),
          (overlay_set_size, "$g_presentation_but3_riding", pos1),
          (overlay_set_size, "$g_presentation_but3_weapon_usage", pos1),
          (overlay_set_size, reg(9), pos1),
          (overlay_set_size, reg(18), pos1),
          (overlay_set_size, reg(27), pos1),
          (overlay_set_size, reg(36), pos1),
          (overlay_set_size, reg(45), pos1),
          
          (overlay_set_display, reg(18), 0),
          (overlay_set_display, reg(27), 0),
          (overlay_set_display, reg(36), 0),
          (overlay_set_display, reg(45), 0),          
          
          (position_set_y, pos1, ":stat_position_order_y"),
          (position_set_x, pos1, 225),
          (overlay_set_position, "$g_presentation_but3_movement", pos1),
          (position_set_x, pos1, 355), #350 ; 380
          (overlay_set_position, "$g_presentation_but3_riding", pos1),
          (position_set_x, pos1, 485), #475 ; 500
          (overlay_set_position, "$g_presentation_but3_weapon_usage", pos1),
          (position_set_x, pos1, 605),
          (overlay_set_position, reg(9), pos1),
          
          (position_set_x, pos1, 225),
          (overlay_set_position, reg(18), pos1),
          (position_set_x, pos1, 355), #350
          (overlay_set_position, reg(27), pos1),
          (position_set_x, pos1, 485), #475
          (overlay_set_position, reg(36), pos1),
          (position_set_x, pos1, 605), #600 
          (overlay_set_position, reg(45), pos1),
          (val_add, ":stat_position_order_y", -40),
          
          (create_text_overlay, "$g_presentation_obj_custom_battle_designer_4", "str_space"),
          #(overlay_set_color, "$g_presentation_credits_obj_1", 0xAAAAAA),
          (position_set_x, pos1, 600),
          (position_set_y, pos1, 600),
          (overlay_set_size, "$g_presentation_obj_custom_battle_designer_4", pos1),
          
          (create_text_overlay, "$g_presentation_obj_custom_battle_designer_14", "str_space"),
          #(overlay_set_color, "$g_presentation_credits_obj_1", 0xAAAAAA),
          (position_set_x, pos1, 600),
          (position_set_y, pos1, 600),
          (overlay_set_size, "$g_presentation_obj_custom_battle_designer_14", pos1),
        (try_end),
        (try_begin),
          (eq, "$group4_has_troops", 1),
          (create_image_button_overlay, "$g_presentation_obj_battle_but4", "mesh_white_plane", "mesh_white_plane"),
          (val_add, ":stat_position_x", 15),
          (position_set_x, pos1, ":stat_position_x"),
          (position_set_y, pos1, ":stat_position_y"),
          (overlay_set_position, "$g_presentation_obj_battle_but4", pos1),
          (val_add, ":stat_position_y", -40),
          (val_add, ":stat_position_x", -15),

          (position_set_x, pos1, 32650),
          (position_set_y, pos1, 2000),
          (overlay_set_size, "$g_presentation_obj_battle_but4", pos1),
          (overlay_set_alpha, "$g_presentation_obj_battle_but4", 0),
          (overlay_set_color, "$g_presentation_obj_battle_but4", 0xFFFF00),

          (create_check_box_overlay, "$g_presentation_obj_battle_check4", "mesh_checkbox_off", "mesh_checkbox_on"),          
          (position_set_x, pos2, ":stat_position_check_x"),
          (position_set_y, pos2, ":stat_position_check_y"),
          (overlay_set_position, "$g_presentation_obj_battle_check4", pos2),
          (val_add, ":stat_position_check_y", -40),        

          (str_store_class_name, s7, 4), 
          (create_text_overlay, "$g_presentation_obj_battle_name4", s7, 0),
          (position_set_x, pos3, ":stat_position_name_x"),
          (position_set_y, pos3, ":stat_position_name_y"),
          (overlay_set_position, "$g_presentation_obj_battle_name4", pos3),
          (val_add, ":stat_position_name_y", -40),
        
          (create_text_overlay, "$g_presentation_but4_movement", "str_space", tf_center_justify),
          (create_text_overlay, "$g_presentation_but4_riding", "str_space", tf_center_justify),
          (create_text_overlay, "$g_presentation_but4_weapon_usage", "str_space", tf_center_justify),
          (create_text_overlay, reg(10), "str_space", tf_center_justify), #Formations
          
          (create_text_overlay, reg(19), "str_space", tf_center_justify), #Native Weapon
          (create_text_overlay, reg(28), "str_space", tf_center_justify), #Caba'drin Weapon
          (create_text_overlay, reg(37), "str_space", tf_center_justify), #Caba'drin Shield     
          (create_text_overlay, reg(46), "str_space", tf_center_justify), #Caba'drin Skirmish    
          
          (position_set_x, pos1, 950),
          (position_set_y, pos1, 950),
          (overlay_set_size, "$g_presentation_but4_movement", pos1),
          (overlay_set_size, "$g_presentation_but4_riding", pos1),
          (overlay_set_size, "$g_presentation_but4_weapon_usage", pos1),
          (overlay_set_size, reg(10), pos1),
          (overlay_set_size, reg(19), pos1),
          (overlay_set_size, reg(28), pos1),
          (overlay_set_size, reg(37), pos1),
          (overlay_set_size, reg(46), pos1),
          
          (overlay_set_display, reg(19), 0),
          (overlay_set_display, reg(28), 0),
          (overlay_set_display, reg(37), 0),
          (overlay_set_display, reg(46), 0),
          
          (position_set_y, pos1, ":stat_position_order_y"),
          (position_set_x, pos1, 225),
          (overlay_set_position, "$g_presentation_but4_movement", pos1),
          (position_set_x, pos1, 355), #350 ; 380
          (overlay_set_position, "$g_presentation_but4_riding", pos1),
          (position_set_x, pos1, 485), #475 ; 500
          (overlay_set_position, "$g_presentation_but4_weapon_usage", pos1),
          (position_set_x, pos1, 605),
          (overlay_set_position, reg(10), pos1),
          
          (position_set_x, pos1, 225),
          (overlay_set_position, reg(19), pos1),
          (position_set_x, pos1, 355), #350
          (overlay_set_position, reg(28), pos1),
          (position_set_x, pos1, 485), #475
          (overlay_set_position, reg(37), pos1),
          (position_set_x, pos1, 605), #600 
          (overlay_set_position, reg(46), pos1),
          (val_add, ":stat_position_order_y", -40),
          
          (create_text_overlay, "$g_presentation_obj_custom_battle_designer_5", "str_space"),
          #(overlay_set_color, "$g_presentation_credits_obj_1", 0xAAAAAA),
          (position_set_x, pos1, 600),
          (position_set_y, pos1, 600),
          (overlay_set_size, "$g_presentation_obj_custom_battle_designer_5", pos1),
          
          (create_text_overlay, "$g_presentation_obj_custom_battle_designer_15", "str_space"),
          #(overlay_set_color, "$g_presentation_credits_obj_1", 0xAAAAAA),
          (position_set_x, pos1, 600),
          (position_set_y, pos1, 600),
          (overlay_set_size, "$g_presentation_obj_custom_battle_designer_15", pos1),
        (try_end),
        (try_begin),
          (eq, "$group5_has_troops", 1),
          (create_image_button_overlay, "$g_presentation_obj_battle_but5", "mesh_white_plane", "mesh_white_plane"),
          (val_add, ":stat_position_x", 15),
          (position_set_x, pos1, ":stat_position_x"),
          (position_set_y, pos1, ":stat_position_y"),
          (overlay_set_position, "$g_presentation_obj_battle_but5", pos1),
          (val_add, ":stat_position_y", -40),
          (val_add, ":stat_position_x", -15),

          (position_set_x, pos1, 32650),
          (position_set_y, pos1, 2000),
          (overlay_set_size, "$g_presentation_obj_battle_but5", pos1),
          (overlay_set_alpha, "$g_presentation_obj_battle_but5", 0),
          (overlay_set_color, "$g_presentation_obj_battle_but5", 0xFFFF00),

          (create_check_box_overlay, "$g_presentation_obj_battle_check5", "mesh_checkbox_off", "mesh_checkbox_on"),          
          (position_set_x, pos2, ":stat_position_check_x"),
          (position_set_y, pos2, ":stat_position_check_y"),
          (overlay_set_position, "$g_presentation_obj_battle_check5", pos2),
          (val_add, ":stat_position_check_y", -40),        

          (str_store_class_name, s7, 5),
          (create_text_overlay, "$g_presentation_obj_battle_name5", s7, 0),
          (position_set_x, pos3, ":stat_position_name_x"),
          (position_set_y, pos3, ":stat_position_name_y"),
          (overlay_set_position, "$g_presentation_obj_battle_name5", pos3),
          (val_add, ":stat_position_name_y", -40),

          (create_text_overlay, "$g_presentation_but5_movement", "str_space", tf_center_justify),
          (create_text_overlay, "$g_presentation_but5_riding", "str_space", tf_center_justify),
          (create_text_overlay, "$g_presentation_but5_weapon_usage", "str_space", tf_center_justify),
          (create_text_overlay, reg(11), "str_space", tf_center_justify), #Formations
          
          (create_text_overlay, reg(20), "str_space", tf_center_justify), #Native Weapon
          (create_text_overlay, reg(29), "str_space", tf_center_justify), #Caba'drin Weapon
          (create_text_overlay, reg(38), "str_space", tf_center_justify), #Caba'drin Shield     
          (create_text_overlay, reg(47), "str_space", tf_center_justify), #Caba'drin Skirmish    
          
          (position_set_x, pos1, 950),
          (position_set_y, pos1, 950),
          (overlay_set_size, "$g_presentation_but5_movement", pos1),
          (overlay_set_size, "$g_presentation_but5_riding", pos1),
          (overlay_set_size, "$g_presentation_but5_weapon_usage", pos1),
          (overlay_set_size, reg(11), pos1),         
          (overlay_set_size, reg(20), pos1),
          (overlay_set_size, reg(29), pos1),
          (overlay_set_size, reg(38), pos1),
          (overlay_set_size, reg(47), pos1),
          
          (overlay_set_display, reg(20), 0),
          (overlay_set_display, reg(29), 0),
          (overlay_set_display, reg(38), 0),
          (overlay_set_display, reg(47), 0),
          
          (position_set_y, pos1, ":stat_position_order_y"),
          (position_set_x, pos1, 225),
          (overlay_set_position, "$g_presentation_but5_movement", pos1),
          (position_set_x, pos1, 355), #350 ; 380
          (overlay_set_position, "$g_presentation_but5_riding", pos1),
          (position_set_x, pos1, 485), #475 ; 500
          (overlay_set_position, "$g_presentation_but5_weapon_usage", pos1),
          (position_set_x, pos1, 605),
          (overlay_set_position, reg(11), pos1),
          
          (position_set_x, pos1, 225),
          (overlay_set_position, reg(20), pos1),
          (position_set_x, pos1, 355), #350
          (overlay_set_position, reg(29), pos1),
          (position_set_x, pos1, 485), #475
          (overlay_set_position, reg(38), pos1),
          (position_set_x, pos1, 605), #600 
          (overlay_set_position, reg(47), pos1),
          (val_add, ":stat_position_order_y", -40),
          
          (create_text_overlay, "$g_presentation_obj_custom_battle_designer_6", "str_space"),
          #(overlay_set_color, "$g_presentation_credits_obj_1", 0xAAAAAA),
          (position_set_x, pos1, 600),
          (position_set_y, pos1, 600),
          (overlay_set_size, "$g_presentation_obj_custom_battle_designer_6", pos1),
          
          (create_text_overlay, "$g_presentation_obj_custom_battle_designer_16", "str_space"),
          #(overlay_set_color, "$g_presentation_credits_obj_1", 0xAAAAAA),
          (position_set_x, pos1, 600),
          (position_set_y, pos1, 600),
          (overlay_set_size, "$g_presentation_obj_custom_battle_designer_16", pos1),
        (try_end),
        (try_begin),
          (eq, "$group6_has_troops", 1),
          (create_image_button_overlay, "$g_presentation_obj_battle_but6", "mesh_white_plane", "mesh_white_plane"),
          (val_add, ":stat_position_x", 15),
          (position_set_x, pos1, ":stat_position_x"),
          (position_set_y, pos1, ":stat_position_y"),
          (overlay_set_position, "$g_presentation_obj_battle_but6", pos1),
          (val_add, ":stat_position_y", -40),
          (val_add, ":stat_position_x", -15),

          (position_set_x, pos1, 32650),
          (position_set_y, pos1, 2000),
          (overlay_set_size, "$g_presentation_obj_battle_but6", pos1),
          (overlay_set_alpha, "$g_presentation_obj_battle_but6", 0),
          (overlay_set_color, "$g_presentation_obj_battle_but6", 0xFFFF00),

          (create_check_box_overlay, "$g_presentation_obj_battle_check6", "mesh_checkbox_off", "mesh_checkbox_on"),          
          (position_set_x, pos2, ":stat_position_check_x"),
          (position_set_y, pos2, ":stat_position_check_y"),
          (overlay_set_position, "$g_presentation_obj_battle_check6", pos2),
          (val_add, ":stat_position_check_y", -40),        

          (str_store_class_name, s7, 6), 
          (create_text_overlay, "$g_presentation_obj_battle_name6", s7, 0),
          (position_set_x, pos3, ":stat_position_name_x"),
          (position_set_y, pos3, ":stat_position_name_y"),
          (overlay_set_position, "$g_presentation_obj_battle_name6", pos3),
          (val_add, ":stat_position_name_y", -40),

          (create_text_overlay, "$g_presentation_but6_movement", "str_space", tf_center_justify),
          (create_text_overlay, "$g_presentation_but6_riding", "str_space", tf_center_justify),
          (create_text_overlay, "$g_presentation_but6_weapon_usage", "str_space", tf_center_justify),
          (create_text_overlay, reg(12), "str_space", tf_center_justify), #Formations
          
          (create_text_overlay, reg(21), "str_space", tf_center_justify), #Native Weapon
          (create_text_overlay, reg(30), "str_space", tf_center_justify), #Caba'drin Weapon
          (create_text_overlay, reg(39), "str_space", tf_center_justify), #Caba'drin Shield     
          (create_text_overlay, reg(48), "str_space", tf_center_justify), #Caba'drin Skirmish    

          (position_set_x, pos1, 950),
          (position_set_y, pos1, 950),
          (overlay_set_size, "$g_presentation_but6_movement", pos1),
          (overlay_set_size, "$g_presentation_but6_riding", pos1),
          (overlay_set_size, "$g_presentation_but6_weapon_usage", pos1),
          (overlay_set_size, reg(12), pos1),
          (overlay_set_size, reg(21), pos1),
          (overlay_set_size, reg(30), pos1),
          (overlay_set_size, reg(39), pos1),
          (overlay_set_size, reg(48), pos1),
          
          (overlay_set_display, reg(21), 0),
          (overlay_set_display, reg(30), 0),
          (overlay_set_display, reg(39), 0),
          (overlay_set_display, reg(48), 0),
          
          (position_set_y, pos1, ":stat_position_order_y"),
          (position_set_x, pos1, 225),
          (overlay_set_position, "$g_presentation_but6_movement", pos1),
          (position_set_x, pos1, 355), #350 ; 380
          (overlay_set_position, "$g_presentation_but6_riding", pos1),
          (position_set_x, pos1, 485), #475 ; 500
          (overlay_set_position, "$g_presentation_but6_weapon_usage", pos1),
          (position_set_x, pos1, 605),
          (overlay_set_position, reg(12), pos1),
          
          (position_set_x, pos1, 225),
          (overlay_set_position, reg(21), pos1),
          (position_set_x, pos1, 355), #350
          (overlay_set_position, reg(30), pos1),
          (position_set_x, pos1, 485), #475
          (overlay_set_position, reg(39), pos1),
          (position_set_x, pos1, 605), #600 
          (overlay_set_position, reg(48), pos1),
          (val_add, ":stat_position_order_y", -40),
          
          (create_text_overlay, "$g_presentation_obj_custom_battle_designer_7", "str_space"),
          #(overlay_set_color, "$g_presentation_credits_obj_1", 0xAAAAAA),
          (position_set_x, pos1, 600),
          (position_set_y, pos1, 600),
          (overlay_set_size, "$g_presentation_obj_custom_battle_designer_7", pos1),
          
          (create_text_overlay, "$g_presentation_obj_custom_battle_designer_17", "str_space"),
          #(overlay_set_color, "$g_presentation_credits_obj_1", 0xAAAAAA),
          (position_set_x, pos1, 600),
          (position_set_y, pos1, 600),
          (overlay_set_size, "$g_presentation_obj_custom_battle_designer_17", pos1),
        (try_end),
        (try_begin),
          (eq, "$group7_has_troops", 1),
          (create_image_button_overlay, "$g_presentation_obj_battle_but7", "mesh_white_plane", "mesh_white_plane"),
          (val_add, ":stat_position_x", 15),
          (position_set_x, pos1, ":stat_position_x"),
          (position_set_y, pos1, ":stat_position_y"),
          (overlay_set_position, "$g_presentation_obj_battle_but7", pos1),
          (val_add, ":stat_position_y", -40),
          (val_add, ":stat_position_x", -15),

          (position_set_x, pos1, 32650),
          (position_set_y, pos1, 2000),
          (overlay_set_size, "$g_presentation_obj_battle_but7", pos1),
          (overlay_set_alpha, "$g_presentation_obj_battle_but7", 0),
          (overlay_set_color, "$g_presentation_obj_battle_but7", 0xFFFF00),

          (create_check_box_overlay, "$g_presentation_obj_battle_check7", "mesh_checkbox_off", "mesh_checkbox_on"),          
          (position_set_x, pos2, ":stat_position_check_x"),
          (position_set_y, pos2, ":stat_position_check_y"),
          (overlay_set_position, "$g_presentation_obj_battle_check7", pos2),
          (val_add, ":stat_position_check_y", -40),        

          (str_store_class_name, s7, 7),
          (create_text_overlay, "$g_presentation_obj_battle_name7", s7, 0),
          (position_set_x, pos3, ":stat_position_name_x"),
          (position_set_y, pos3, ":stat_position_name_y"),
          (overlay_set_position, "$g_presentation_obj_battle_name7", pos3),
          (val_add, ":stat_position_name_y", -40),

          (create_text_overlay, "$g_presentation_but7_movement", "str_space", tf_center_justify),
          (create_text_overlay, "$g_presentation_but7_riding", "str_space", tf_center_justify),
          (create_text_overlay, "$g_presentation_but7_weapon_usage", "str_space", tf_center_justify),
          (create_text_overlay, reg(13), "str_space", tf_center_justify), #Formations
          
          (create_text_overlay, reg(22), "str_space", tf_center_justify), #Native Weapon
          (create_text_overlay, reg(31), "str_space", tf_center_justify), #Caba'drin Weapon
          (create_text_overlay, reg(40), "str_space", tf_center_justify), #Caba'drin Shield     
          (create_text_overlay, reg(49), "str_space", tf_center_justify), #Caba'drin Skirmish    
          
          (position_set_x, pos1, 950),
          (position_set_y, pos1, 950),
          (overlay_set_size, "$g_presentation_but7_movement", pos1),
          (overlay_set_size, "$g_presentation_but7_riding", pos1),
          (overlay_set_size, "$g_presentation_but7_weapon_usage", pos1),
          (overlay_set_size, reg(13), pos1),
          (overlay_set_size, reg(22), pos1),
          (overlay_set_size, reg(31), pos1),
          (overlay_set_size, reg(40), pos1),
          (overlay_set_size, reg(49), pos1),
          
          (overlay_set_display, reg(22), 0),
          (overlay_set_display, reg(31), 0),
          (overlay_set_display, reg(40), 0),
          (overlay_set_display, reg(49), 0),          
          
          (position_set_y, pos1, ":stat_position_order_y"),
          (position_set_x, pos1, 225),
          (overlay_set_position, "$g_presentation_but7_movement", pos1),
          (position_set_x, pos1, 355), #350 ; 380
          (overlay_set_position, "$g_presentation_but7_riding", pos1),
          (position_set_x, pos1, 485), #475 ; 500
          (overlay_set_position, "$g_presentation_but7_weapon_usage", pos1),
          (position_set_x, pos1, 605), #475 ; 500
          (overlay_set_position, reg(13), pos1),
          
          (position_set_x, pos1, 225),
          (overlay_set_position, reg(22), pos1),
          (position_set_x, pos1, 355), #350
          (overlay_set_position, reg(31), pos1),
          (position_set_x, pos1, 485), #475
          (overlay_set_position, reg(40), pos1),
          (position_set_x, pos1, 605), #600 
          (overlay_set_position, reg(49), pos1),
          (val_add, ":stat_position_order_y", -40),
          
          (create_text_overlay, "$g_presentation_obj_custom_battle_designer_8", "str_space"),
          #(overlay_set_color, "$g_presentation_credits_obj_1", 0xAAAAAA),
          (position_set_x, pos1, 600),
          (position_set_y, pos1, 600),
          (overlay_set_size, "$g_presentation_obj_custom_battle_designer_8", pos1),
          
          (create_text_overlay, "$g_presentation_obj_custom_battle_designer_18", "str_space"),
          #(overlay_set_color, "$g_presentation_credits_obj_1", 0xAAAAAA),
          (position_set_x, pos1, 600),
          (position_set_y, pos1, 600),
          (overlay_set_size, "$g_presentation_obj_custom_battle_designer_18", pos1),
        (try_end),
        (try_begin),
          (eq, "$group8_has_troops", 1),
          (create_image_button_overlay, "$g_presentation_obj_battle_but8", "mesh_white_plane", "mesh_white_plane"),
          (val_add, ":stat_position_x", 15),
          (position_set_x, pos1, ":stat_position_x"),
          (position_set_y, pos1, ":stat_position_y"),
          (overlay_set_position, "$g_presentation_obj_battle_but8", pos1),
          (val_add, ":stat_position_y", -40),
          (val_add, ":stat_position_x", -15),

          (position_set_x, pos1, 32650),
          (position_set_y, pos1, 2000),
          (overlay_set_size, "$g_presentation_obj_battle_but8", pos1),
          (overlay_set_alpha, "$g_presentation_obj_battle_but8", 0),
          (overlay_set_color, "$g_presentation_obj_battle_but8", 0xFFFF00),

          (create_check_box_overlay, "$g_presentation_obj_battle_check8", "mesh_checkbox_off", "mesh_checkbox_on"),          
          (position_set_x, pos2, ":stat_position_check_x"),
          (position_set_y, pos2, ":stat_position_check_y"),
          (overlay_set_position, "$g_presentation_obj_battle_check8", pos2),
          (val_add, ":stat_position_check_y", -40),        

          (str_store_class_name, s7, 8),
          (create_text_overlay, "$g_presentation_obj_battle_name8", s7, 0),
          (position_set_x, pos3, ":stat_position_name_x"),
          (position_set_y, pos3, ":stat_position_name_y"),
          (overlay_set_position, "$g_presentation_obj_battle_name8", pos3),
          (val_add, ":stat_position_name_y", -40),

          (create_text_overlay, "$g_presentation_but8_movement", "str_space", tf_center_justify),
          (create_text_overlay, "$g_presentation_but8_riding", "str_space", tf_center_justify),
          (create_text_overlay, "$g_presentation_but8_weapon_usage", "str_space", tf_center_justify),
          (create_text_overlay, reg(14), "str_space", tf_center_justify), #Formations
          
          (create_text_overlay, reg(23), "str_space", tf_center_justify), #Native Weapon
          (create_text_overlay, reg(32), "str_space", tf_center_justify), #Caba'drin Weapon
          (create_text_overlay, reg(41), "str_space", tf_center_justify), #Caba'drin Shield     
          (create_text_overlay, reg(50), "str_space", tf_center_justify), #Caba'drin Skirmish    
          
          (position_set_x, pos1, 950),
          (position_set_y, pos1, 950),
          (overlay_set_size, "$g_presentation_but8_movement", pos1),
          (overlay_set_size, "$g_presentation_but8_riding", pos1),
          (overlay_set_size, "$g_presentation_but8_weapon_usage", pos1),
          (overlay_set_size, reg(14), pos1),
          (overlay_set_size, reg(23), pos1),
          (overlay_set_size, reg(32), pos1),
          (overlay_set_size, reg(41), pos1),
          (overlay_set_size, reg(50), pos1),
          
          (overlay_set_display, reg(23), 0),
          (overlay_set_display, reg(32), 0),
          (overlay_set_display, reg(41), 0),
          (overlay_set_display, reg(50), 0),          
          
          (position_set_y, pos1, ":stat_position_order_y"),
          (position_set_x, pos1, 225),
          (overlay_set_position, "$g_presentation_but8_movement", pos1),
          (position_set_x, pos1, 355), #350 ; 380
          (overlay_set_position, "$g_presentation_but8_riding", pos1),
          (position_set_x, pos1, 485), #475 ; 500
          (overlay_set_position, "$g_presentation_but8_weapon_usage", pos1),
          (position_set_x, pos1, 605),
          (overlay_set_position, reg(14), pos1),
          
          (position_set_x, pos1, 225),
          (overlay_set_position, reg(23), pos1),
          (position_set_x, pos1, 355), #350
          (overlay_set_position, reg(32), pos1),
          (position_set_x, pos1, 485), #475
          (overlay_set_position, reg(41), pos1),
          (position_set_x, pos1, 605), #600 
          (overlay_set_position, reg(50), pos1),
          (val_add, ":stat_position_order_y", -40),
          
          (create_text_overlay, "$g_presentation_obj_custom_battle_designer_9", "str_space"),
          #(overlay_set_color, "$g_presentation_credits_obj_1", 0xAAAAAA),
          (position_set_x, pos1, 600),
          (position_set_y, pos1, 600),
          (overlay_set_size, "$g_presentation_obj_custom_battle_designer_9", pos1),
          
          (create_text_overlay, "$g_presentation_obj_custom_battle_designer_19", "str_space"),
          #(overlay_set_color, "$g_presentation_credits_obj_1", 0xAAAAAA),
          (position_set_x, pos1, 600),
          (position_set_y, pos1, 600),
          (overlay_set_size, "$g_presentation_obj_custom_battle_designer_19", pos1),
        (try_end),
        
        (assign, ":y_position_for_order_buttons", 640),
        (assign, ":addition_y_position", "$num_classes"),
        (val_mul, ":addition_y_position", -40),
        (val_add, ":y_position_for_order_buttons", ":addition_y_position"),
        (val_sub, ":y_position_for_order_buttons", 50),

        (create_listbox_overlay, "$g_presentation_obj_battle_10", "str_space", 0), #Positioning
        (create_listbox_overlay, "$g_presentation_obj_battle_11", "str_space", 0), #Movement
        (create_listbox_overlay, "$g_presentation_obj_battle_12", "str_space", 0), #Duplicate movement
        (create_listbox_overlay, "$g_presentation_obj_battle_17", "str_space", 0), #Formations
        (create_listbox_overlay, "$g_presentation_obj_battle_13", "str_space", 0), #Native Weapon
        (create_listbox_overlay, "$g_presentation_obj_battle_14", "str_space", 0), #Caba'drin Weapon Type
        (create_listbox_overlay, "$g_presentation_obj_battle_15", "str_space", 0), #Caba'drin Shield
        (create_listbox_overlay, "$g_presentation_obj_battle_16", "str_space", 0), #Caba'drin Skirmish
        
        (overlay_add_item, "$g_presentation_obj_battle_10", "@Stand Ground"),
        (overlay_add_item, "$g_presentation_obj_battle_10", "@Charge"),
        (overlay_add_item, "$g_presentation_obj_battle_10", "@Follow Me"),
        (overlay_add_item, "$g_presentation_obj_battle_10", "@Hold Position"),
        (overlay_add_item, "$g_presentation_obj_battle_10", "@None"),
       
        (position_set_x, pos1, 500),
        (position_set_y, pos1, 600),
        (overlay_set_size, "$g_presentation_obj_battle_10", pos1),

        (position_set_x, pos1, 170),
        (position_set_y, pos1, ":y_position_for_order_buttons"),
        (overlay_set_position, "$g_presentation_obj_battle_10", pos1),
        (overlay_set_color, "$g_presentation_obj_battle_10", 0xFF0000),
        (overlay_set_alpha, "$g_presentation_obj_battle_10", 0x60),
        (overlay_set_val, "$g_presentation_obj_battle_10", 4),
        

        (overlay_add_item, "$g_presentation_obj_battle_11", "@Dismount"),
        (overlay_add_item, "$g_presentation_obj_battle_11", "@Mount"),
        (overlay_add_item, "$g_presentation_obj_battle_11", "@Spread Out"),
        (overlay_add_item, "$g_presentation_obj_battle_11", "@Stand Closer"),
        (overlay_add_item, "$g_presentation_obj_battle_11", "@Back 10"),
        (overlay_add_item, "$g_presentation_obj_battle_11", "@Forward 10"),
        (overlay_add_item, "$g_presentation_obj_battle_11", "@None"),
        
        (position_set_x, pos1, 500), #500
        (position_set_y, pos1, 600),
        (overlay_set_size, "$g_presentation_obj_battle_11", pos1),

        (position_set_x, pos1, 305), #290 ; 320 ; 340
        (val_add, ":y_position_for_order_buttons", -35),
        (position_set_y, pos1, ":y_position_for_order_buttons"),
        (overlay_set_position, "$g_presentation_obj_battle_11", pos1),
        (overlay_set_color, "$g_presentation_obj_battle_11", 0xFF6600),
        (overlay_set_alpha, "$g_presentation_obj_battle_11", 0x60),
        (overlay_set_val, "$g_presentation_obj_battle_11", 6),

        (val_add, ":y_position_for_order_buttons", -50),        
        (create_number_box_overlay, reg(51), 1, 5), #Repeat 1
        (create_number_box_overlay, reg(52), 1, 5), #Repeat 1
        (overlay_set_val, reg(51), 1),
        (overlay_set_val, reg(52), 1),
        (position_set_x, pos1, 320), #315 ; 355
        (position_set_y, pos1, ":y_position_for_order_buttons"),
        (overlay_set_position, reg(51), pos1),        
        (position_set_x, pos1, 452), #437 ; 520
        (overlay_set_position, reg(52), pos1),
        (assign, reg53, 0), #Repeat 1 holder
        (assign, reg54, 0), #Repeat 2 holder
        
        (create_text_overlay, reg0, "@Repeat x"),
        (position_set_x, pos1, 900),
        (position_set_y, pos1, 900),
        (overlay_set_size, reg0, pos1),
        (position_set_x, pos1, 295), #285 ; 325
        (val_add, ":y_position_for_order_buttons", 25),
        (position_set_y, pos1, ":y_position_for_order_buttons"),
        (overlay_set_position, reg0, pos1),
        (create_text_overlay, reg0, "@Repeat x"),
        (position_set_x, pos1, 900),
        (position_set_y, pos1, 900),
        (overlay_set_size, reg0, pos1),
        (position_set_x, pos1, 422), #407 ; 497
        (position_set_y, pos1, ":y_position_for_order_buttons"),
        (overlay_set_position, reg0, pos1),
        (val_add, ":y_position_for_order_buttons", 25),

        (overlay_add_item, "$g_presentation_obj_battle_12", "@Dismount"),
        (overlay_add_item, "$g_presentation_obj_battle_12", "@Mount"),
        (overlay_add_item, "$g_presentation_obj_battle_12", "@Spread Out"),
        (overlay_add_item, "$g_presentation_obj_battle_12", "@Stand Closer"),
        (overlay_add_item, "$g_presentation_obj_battle_12", "@Back 10"),
        (overlay_add_item, "$g_presentation_obj_battle_12", "@Forward 10"),
        (overlay_add_item, "$g_presentation_obj_battle_12", "@None"),
        
        (position_set_x, pos1, 500), #500
        (position_set_y, pos1, 600),
        (overlay_set_size, "$g_presentation_obj_battle_12", pos1),

        (position_set_x, pos1, 430), #410 ; 450 ; 510
        (position_set_y, pos1, ":y_position_for_order_buttons"),
        (overlay_set_position, "$g_presentation_obj_battle_12", pos1),
        (overlay_set_color, "$g_presentation_obj_battle_12", 0xFF6600),
        (overlay_set_alpha, "$g_presentation_obj_battle_12", 0x60),
        (overlay_set_val, "$g_presentation_obj_battle_12", 6),
        (val_add, ":y_position_for_order_buttons", 35), 
        
        
        (overlay_add_item, "$g_presentation_obj_battle_17", "@Square"),
        (overlay_add_item, "$g_presentation_obj_battle_17", "@Wedge"),
        (overlay_add_item, "$g_presentation_obj_battle_17", "@Shieldwall"),
        (overlay_add_item, "$g_presentation_obj_battle_17", "@Ranks"),
        (overlay_add_item, "$g_presentation_obj_battle_17", "@None"),
        
        (position_set_x, pos1, 500), #500
        (position_set_y, pos1, 600),
        (overlay_set_size, "$g_presentation_obj_battle_17", pos1),

        (position_set_x, pos1, 555), #410 ; 450
        (position_set_y, pos1, ":y_position_for_order_buttons"),
        (overlay_set_position, "$g_presentation_obj_battle_17", pos1),
        (overlay_set_color, "$g_presentation_obj_battle_17", 0xFF6600),
        (overlay_set_alpha, "$g_presentation_obj_battle_17", 0x60),
        (overlay_set_val, "$g_presentation_obj_battle_17", 4),
        #(val_add, ":y_position_for_order_buttons", 35), 
        

        (overlay_add_item, "$g_presentation_obj_battle_13", "@Fire At Will"),
        (overlay_add_item, "$g_presentation_obj_battle_13", "@Hold Your Fire"),
        (overlay_add_item, "$g_presentation_obj_battle_13", "@Use Blunt Weapons"),
        (overlay_add_item, "$g_presentation_obj_battle_13", "@Use Any Weapon"),
        (overlay_add_item, "$g_presentation_obj_battle_13", "@None"),
        
        (position_set_x, pos1, 500),
        (position_set_y, pos1, 600),
        (overlay_set_size, "$g_presentation_obj_battle_13", pos1),
        (position_set_x, pos1, 175), #530 ; 170
        (position_set_y, pos1, ":y_position_for_order_buttons"),
        (overlay_set_position, "$g_presentation_obj_battle_13", pos1),
        (overlay_set_alpha, "$g_presentation_obj_battle_13", 0x60),
        (overlay_set_val, "$g_presentation_obj_battle_13", 4),
        (overlay_set_display, "$g_presentation_obj_battle_13", 0),        
        
        (overlay_add_item, "$g_presentation_obj_battle_14", "@Ranged"),
        (overlay_add_item, "$g_presentation_obj_battle_14", "@Polearms"),
        (overlay_add_item, "$g_presentation_obj_battle_14", "@Two Handed"),
        (overlay_add_item, "$g_presentation_obj_battle_14", "@One Handed"),
        (overlay_add_item, "$g_presentation_obj_battle_14", "@None"),
        
        (position_set_x, pos1, 500),
        (position_set_y, pos1, 600),
        (overlay_set_size, "$g_presentation_obj_battle_14", pos1),
        (position_set_x, pos1, 305), #290
        (position_set_y, pos1, ":y_position_for_order_buttons"),
        (overlay_set_position, "$g_presentation_obj_battle_14", pos1),
        (overlay_set_alpha, "$g_presentation_obj_battle_14", 0x60),
        (overlay_set_val, "$g_presentation_obj_battle_14", 4),
        (overlay_set_display, "$g_presentation_obj_battle_14", 0),
        
        (overlay_add_item, "$g_presentation_obj_battle_15", "@No Shields"),
        (overlay_add_item, "$g_presentation_obj_battle_15", "@Use Shields"),
        (overlay_add_item, "$g_presentation_obj_battle_15", "@None"),
        
        (val_add, ":y_position_for_order_buttons", 35),
        (position_set_x, pos1, 500),
        (position_set_y, pos1, 600),
        (overlay_set_size, "$g_presentation_obj_battle_15", pos1),
        (position_set_x, pos1, 430), #410
        (position_set_y, pos1, ":y_position_for_order_buttons"),
        (overlay_set_position, "$g_presentation_obj_battle_15", pos1),
        (overlay_set_alpha, "$g_presentation_obj_battle_15", 0x60),
        (overlay_set_val, "$g_presentation_obj_battle_15", 2),
        (overlay_set_display, "$g_presentation_obj_battle_15", 0),
        
        #(overlay_add_item, "$g_presentation_obj_battle_16", "@Melee"),
        (overlay_add_item, "$g_presentation_obj_battle_16", "@Avoid Melee"),
        (overlay_add_item, "$g_presentation_obj_battle_16", "@None"),
        
        (val_add, ":y_position_for_order_buttons", 18),
        (position_set_x, pos1, 500),
        (position_set_y, pos1, 600),
        (overlay_set_size, "$g_presentation_obj_battle_16", pos1),
        (position_set_x, pos1, 555), #495 ; 530
        (position_set_y, pos1, ":y_position_for_order_buttons"),
        (overlay_set_position, "$g_presentation_obj_battle_16", pos1),
        (overlay_set_alpha, "$g_presentation_obj_battle_16", 0x60),
        (overlay_set_val, "$g_presentation_obj_battle_16", 1),
        (overlay_set_display, "$g_presentation_obj_battle_16", 0),
        
        (val_sub, ":y_position_for_order_buttons", 53),
        
        (val_sub, ":y_position_for_order_buttons", 50),
        (create_button_overlay, "$g_presentation_obj_battle_24", "@Turn to weapon orders..."),
        (position_set_x, pos1, 900),
        (position_set_y, pos1, 900),
        (overlay_set_size, "$g_presentation_obj_battle_24", pos1),
        (position_set_x, pos1, 450), #500
        #(position_set_y, pos1, ":y_position_for_order_buttons"),
        (position_set_y, pos1, 150),
        (overlay_set_position,  "$g_presentation_obj_battle_24", pos1),    
        
        
        (create_game_button_overlay, "$g_presentation_obj_battle_25", "@Reassess"), 
        (position_set_x, pos1, 420),
        (position_set_y, pos1, 8),
        (overlay_set_position, "$g_presentation_obj_battle_25", pos1),
        
        (create_game_button_overlay, "$g_presentation_obj_battle_26", "@Scrap All"), 
        (position_set_x, pos1, 580),
        (position_set_y, pos1, 8),
        (overlay_set_position, "$g_presentation_obj_battle_26", pos1),
        
        (create_game_button_overlay, "$g_presentation_obj_battle_27", "@Prepare Orders"),
        (position_set_x, pos1, 740),
        (position_set_y, pos1, 8),
        (overlay_set_position, "$g_presentation_obj_battle_27", pos1),
        
        (create_game_button_overlay, "$g_presentation_obj_battle_28", "@Dispatch Orders"),
        (position_set_x, pos1, 900),
        (position_set_y, pos1, 8),
        (overlay_set_position, "$g_presentation_obj_battle_28", pos1),
                
        (call_script, "script_prebattle_order_get_stored"),
                        
        (presentation_set_duration, 999999),
        ]),
        
     (ti_on_presentation_event_state_change,
       [(store_trigger_param_1, ":object"),
        (store_trigger_param_2, ":value"),
        
        (try_begin), #Buttons
            (eq, ":object", "$g_presentation_obj_battle_25"),
            (jump_to_menu, "$g_next_menu"),
            (presentation_set_duration, 0),
        (else_try),
            (eq, ":object", "$g_presentation_obj_battle_26"),
            (party_set_slot, "p_main_party", slot_party_prebattle_plan, 0),
            (call_script, "script_prebattle_order_clear_all"),
        (else_try),
            (eq, ":object", "$g_presentation_obj_battle_27"),
            (call_script, "script_prebattle_order_preview_orders"),
        (else_try),
            (eq, ":object", "$g_presentation_obj_battle_28"),
            (party_set_slot, "p_main_party", slot_party_prebattle_plan, 1),
            (call_script, "script_prebattle_order_store_orders"),
            (jump_to_menu, "$g_next_menu"),
            (presentation_set_duration, 0),
        (else_try),
            (eq, ":object", "$g_presentation_obj_battle_24"),
            (overlay_get_position, pos1, "$g_presentation_obj_battle_24"),
            (position_get_x, ":x", pos1),
            (try_begin),
                (eq, ":x", 450),
                #clear movement order overlays
                (overlay_set_display, "$g_presentation_obj_battle_10", 0), #Order Selection Boxes
                (overlay_set_display, "$g_presentation_obj_battle_11", 0),
                (overlay_set_display, "$g_presentation_obj_battle_12", 0),
                (overlay_set_display, "$g_presentation_obj_battle_17", 0),
                (overlay_set_display,                         reg(51), 0), #Repeat Boxes
                (overlay_set_display,                         reg(52), 0),
                (overlay_set_display, "$g_presentation_credits_obj_2", 0), #Headings
                (overlay_set_display, "$g_presentation_credits_obj_3", 0),
                (overlay_set_display, "$g_presentation_credits_obj_4", 0),
                (overlay_set_display, "$g_presentation_credits_obj_5", 0),
                (store_add, ":overlay", reg(51), 2),
                (overlay_set_display,                      ":overlay", 0),
                (val_add, ":overlay", 1),
                (overlay_set_display,                      ":overlay", 0),
                #(overlay_set_display, "$g_presentation_credits_obj_5", 0),
                #display weapon order overlays
                (overlay_set_display, "$g_presentation_obj_battle_13", 1), #Order Selection Boxes
                (overlay_set_display, "$g_presentation_obj_battle_14", 1),
                (overlay_set_display, "$g_presentation_obj_battle_15", 1),
                (overlay_set_display, "$g_presentation_obj_battle_16", 1),
                (overlay_set_display, "$g_presentation_credits_obj_6", 1), #Headings
                (overlay_set_display, "$g_presentation_credits_obj_7", 1), 
                (overlay_set_display, "$g_presentation_credits_obj_8", 1),
                (overlay_set_display, "$g_presentation_credits_obj_9", 1),
                (try_begin), #Toggle by Division order display
                    (eq, "$group0_has_troops", 1),
                    (overlay_set_display, "$g_presentation_but0_movement", 0), #Initial
                    (overlay_set_display, "$g_presentation_but0_riding", 0), #Position 1
                    (overlay_set_display, "$g_presentation_but0_weapon_usage", 0), #Position 2
                    (overlay_set_display, reg(6), 0),  #Formation
                    (overlay_set_display, reg(15), 1), #Native Weapon
                    (overlay_set_display, reg(24), 1), #Caba'drin Weapon
                    (overlay_set_display, reg(33), 1), #Caba'drin Shield
                    (overlay_set_display, reg(42), 1), #Caba'drin Skirmish
                (try_end),
                (try_begin),
                    (eq, "$group1_has_troops", 1),
                    (overlay_set_display, "$g_presentation_but1_movement", 0), #Initial
                    (overlay_set_display, "$g_presentation_but1_riding", 0), #Position 1
                    (overlay_set_display, "$g_presentation_but1_weapon_usage", 0), #Position 2
                    (overlay_set_display, reg(7), 0),  #Formation
                    (overlay_set_display, reg(16), 1), #Native Weapon
                    (overlay_set_display, reg(25), 1), #Caba'drin Weapon
                    (overlay_set_display, reg(34), 1), #Caba'drin Shield
                    (overlay_set_display, reg(43), 1), #Caba'drin Skirmish
                (try_end),
                (try_begin),
                    (eq, "$group2_has_troops", 1),
                    (overlay_set_display, "$g_presentation_but2_movement", 0), #Initial
                    (overlay_set_display, "$g_presentation_but2_riding", 0), #Position 1
                    (overlay_set_display, "$g_presentation_but2_weapon_usage", 0), #Position 2
                    (overlay_set_display, reg(8), 0),  #Formation
                    (overlay_set_display, reg(17), 1), #Native Weapon
                    (overlay_set_display, reg(26), 1), #Caba'drin Weapon
                    (overlay_set_display, reg(35), 1), #Caba'drin Shield
                    (overlay_set_display, reg(44), 1), #Caba'drin Skirmish
                (try_end),
                (try_begin),
                    (eq, "$group3_has_troops", 1),
                    (overlay_set_display, "$g_presentation_but3_movement", 0), #Initial
                    (overlay_set_display, "$g_presentation_but3_riding", 0), #Position 1
                    (overlay_set_display, "$g_presentation_but3_weapon_usage", 0), #Position 2
                    (overlay_set_display, reg(9), 0),  #Formation
                    (overlay_set_display, reg(18), 1), #Native Weapon
                    (overlay_set_display, reg(27), 1), #Caba'drin Weapon
                    (overlay_set_display, reg(36), 1), #Caba'drin Shield
                    (overlay_set_display, reg(45), 1), #Caba'drin Skirmish
                (try_end),
                (try_begin),
                    (eq, "$group4_has_troops", 1),
                    (overlay_set_display, "$g_presentation_but4_movement", 0), #Initial
                    (overlay_set_display, "$g_presentation_but4_riding", 0), #Position 1
                    (overlay_set_display, "$g_presentation_but4_weapon_usage", 0), #Position 2
                    (overlay_set_display, reg(10), 0),  #Formation
                    (overlay_set_display, reg(19), 1), #Native Weapon
                    (overlay_set_display, reg(28), 1), #Caba'drin Weapon
                    (overlay_set_display, reg(37), 1), #Caba'drin Shield
                    (overlay_set_display, reg(46), 1), #Caba'drin Skirmish
                (try_end),
                (try_begin),
                    (eq, "$group5_has_troops", 1),
                    (overlay_set_display, "$g_presentation_but5_movement", 0), #Initial
                    (overlay_set_display, "$g_presentation_but5_riding", 0), #Position 1
                    (overlay_set_display, "$g_presentation_but5_weapon_usage", 0), #Position 2
                    (overlay_set_display, reg(11), 0),  #Formation
                    (overlay_set_display, reg(20), 1), #Native Weapon
                    (overlay_set_display, reg(29), 1), #Caba'drin Weapon
                    (overlay_set_display, reg(38), 1), #Caba'drin Shield
                    (overlay_set_display, reg(47), 1), #Caba'drin Skirmish
                (try_end),
                (try_begin),
                    (eq, "$group6_has_troops", 1),
                    (overlay_set_display, "$g_presentation_but6_movement", 0), #Initial
                    (overlay_set_display, "$g_presentation_but6_riding", 0), #Position 1
                    (overlay_set_display, "$g_presentation_but6_weapon_usage", 0), #Position 2
                    (overlay_set_display, reg(12), 0),  #Formation
                    (overlay_set_display, reg(21), 1), #Native Weapon
                    (overlay_set_display, reg(30), 1), #Caba'drin Weapon
                    (overlay_set_display, reg(39), 1), #Caba'drin Shield
                    (overlay_set_display, reg(48), 1), #Caba'drin Skirmish
                (try_end),
                (try_begin),
                    (eq, "$group7_has_troops", 1),
                    (overlay_set_display, "$g_presentation_but7_movement", 0), #Initial
                    (overlay_set_display, "$g_presentation_but7_riding", 0), #Position 1
                    (overlay_set_display, "$g_presentation_but7_weapon_usage", 0), #Position 2
                    (overlay_set_display, reg(13), 0),  #Formation
                    (overlay_set_display, reg(22), 1), #Native Weapon
                    (overlay_set_display, reg(31), 1), #Caba'drin Weapon
                    (overlay_set_display, reg(40), 1), #Caba'drin Shield
                    (overlay_set_display, reg(49), 1), #Caba'drin Skirmish
                (try_end),
                (try_begin),
                    (eq, "$group8_has_troops", 1),
                    (overlay_set_display, "$g_presentation_but8_movement", 0), #Initial
                    (overlay_set_display, "$g_presentation_but8_riding", 0), #Position 1
                    (overlay_set_display, "$g_presentation_but8_weapon_usage", 0), #Position 2
                    (overlay_set_display, reg(14), 0),  #Formation
                    (overlay_set_display, reg(23), 1), #Native Weapon
                    (overlay_set_display, reg(32), 1), #Caba'drin Weapon
                    (overlay_set_display, reg(41), 1), #Caba'drin Shield
                    (overlay_set_display, reg(50), 1), #Caba'drin Skirmish
                (try_end),
                (position_set_x, pos1, 150),
                (overlay_set_text, "$g_presentation_obj_battle_24", "@...Turn to positioning orders"),
                (overlay_set_position, "$g_presentation_obj_battle_24", pos1),
            (else_try),
                (eq, ":x", 150),
                #clear weapon order overlays
                (overlay_set_display, "$g_presentation_obj_battle_13", 0), #Order Selection Boxes
                (overlay_set_display, "$g_presentation_obj_battle_14", 0),
                (overlay_set_display, "$g_presentation_obj_battle_15", 0),
                (overlay_set_display, "$g_presentation_obj_battle_16", 0),
                (overlay_set_display, "$g_presentation_credits_obj_6", 0), #Headings
                (overlay_set_display, "$g_presentation_credits_obj_7", 0), 
                (overlay_set_display, "$g_presentation_credits_obj_8", 0),
                (overlay_set_display, "$g_presentation_credits_obj_9", 0),
                #display movement order overlays
                (overlay_set_display, "$g_presentation_obj_battle_10", 1), #Order Selection Boxes
                (overlay_set_display, "$g_presentation_obj_battle_11", 1),
                (overlay_set_display, "$g_presentation_obj_battle_12", 1),
                (overlay_set_display, "$g_presentation_obj_battle_17", 1),
                (overlay_set_display,                         reg(51), 1), #Repeat Boxes
                (overlay_set_display,                         reg(52), 1),
                (overlay_set_display, "$g_presentation_credits_obj_2", 1), #Headings
                (overlay_set_display, "$g_presentation_credits_obj_3", 1),
                (overlay_set_display, "$g_presentation_credits_obj_4", 1),
                (overlay_set_display, "$g_presentation_credits_obj_5", 1),
                (store_add, ":overlay", reg(51), 2),
                (overlay_set_display,                      ":overlay", 1),
                (val_add, ":overlay", 1),
                (overlay_set_display,                      ":overlay", 1),
                #(overlay_set_display, "$g_presentation_credits_obj_5", 1),
                (try_begin), #Toggle by Division order display
                    (eq, "$group0_has_troops", 1),
                    (overlay_set_display, "$g_presentation_but0_movement", 1), #Initial
                    (overlay_set_display, "$g_presentation_but0_riding", 1), #Position 1
                    (overlay_set_display, "$g_presentation_but0_weapon_usage", 1), #Position 2
                    (overlay_set_display, reg(6), 1),  #Formation
                    (overlay_set_display, reg(15), 0), #Native Weapon
                    (overlay_set_display, reg(24), 0), #Caba'drin Weapon
                    (overlay_set_display, reg(33), 0), #Caba'drin Shield
                    (overlay_set_display, reg(42), 0), #Caba'drin Skirmish
                (try_end),
                (try_begin),
                    (eq, "$group1_has_troops", 1),
                    (overlay_set_display, "$g_presentation_but1_movement", 1), #Initial
                    (overlay_set_display, "$g_presentation_but1_riding", 1), #Position 1
                    (overlay_set_display, "$g_presentation_but1_weapon_usage", 1), #Position 2
                    (overlay_set_display, reg(7), 1),  #Formation
                    (overlay_set_display, reg(16), 0), #Native Weapon
                    (overlay_set_display, reg(25), 0), #Caba'drin Weapon
                    (overlay_set_display, reg(34), 0), #Caba'drin Shield
                    (overlay_set_display, reg(43), 0), #Caba'drin Skirmish
                (try_end),
                (try_begin),
                    (eq, "$group2_has_troops", 1),
                    (overlay_set_display, "$g_presentation_but2_movement", 1), #Initial
                    (overlay_set_display, "$g_presentation_but2_riding", 1), #Position 1
                    (overlay_set_display, "$g_presentation_but2_weapon_usage", 1), #Position 2
                    (overlay_set_display, reg(8), 1),  #Formation
                    (overlay_set_display, reg(17), 0), #Native Weapon
                    (overlay_set_display, reg(26), 0), #Caba'drin Weapon
                    (overlay_set_display, reg(35), 0), #Caba'drin Shield
                    (overlay_set_display, reg(44), 0), #Caba'drin Skirmish
                (try_end),
                (try_begin),
                    (eq, "$group3_has_troops", 1),
                    (overlay_set_display, "$g_presentation_but3_movement", 1), #Initial
                    (overlay_set_display, "$g_presentation_but3_riding", 1), #Position 1
                    (overlay_set_display, "$g_presentation_but3_weapon_usage", 1), #Position 2
                    (overlay_set_display, reg(9), 1),  #Formation
                    (overlay_set_display, reg(18), 0), #Native Weapon
                    (overlay_set_display, reg(27), 0), #Caba'drin Weapon
                    (overlay_set_display, reg(36), 0), #Caba'drin Shield
                    (overlay_set_display, reg(45), 0), #Caba'drin Skirmish
                (try_end),
                (try_begin),
                    (eq, "$group4_has_troops", 1),
                    (overlay_set_display, "$g_presentation_but4_movement", 1), #Initial
                    (overlay_set_display, "$g_presentation_but4_riding", 1), #Position 1
                    (overlay_set_display, "$g_presentation_but4_weapon_usage", 1), #Position 2
                    (overlay_set_display, reg(10), 1),  #Formation
                    (overlay_set_display, reg(19), 0), #Native Weapon
                    (overlay_set_display, reg(28), 0), #Caba'drin Weapon
                    (overlay_set_display, reg(37), 0), #Caba'drin Shield
                    (overlay_set_display, reg(46), 0), #Caba'drin Skirmish
                (try_end),
                (try_begin),
                    (eq, "$group5_has_troops", 1),
                    (overlay_set_display, "$g_presentation_but5_movement", 1), #Initial
                    (overlay_set_display, "$g_presentation_but5_riding", 1), #Position 1
                    (overlay_set_display, "$g_presentation_but5_weapon_usage", 1), #Position 2
                    (overlay_set_display, reg(11), 1),  #Formation
                    (overlay_set_display, reg(20), 0), #Native Weapon
                    (overlay_set_display, reg(29), 0), #Caba'drin Weapon
                    (overlay_set_display, reg(38), 0), #Caba'drin Shield
                    (overlay_set_display, reg(47), 0), #Caba'drin Skirmish
                (try_end),
                (try_begin),
                    (eq, "$group6_has_troops", 1),
                    (overlay_set_display, "$g_presentation_but6_movement", 1), #Initial
                    (overlay_set_display, "$g_presentation_but6_riding", 1), #Position 1
                    (overlay_set_display, "$g_presentation_but6_weapon_usage", 1), #Position 2
                    (overlay_set_display, reg(12), 1),  #Formation
                    (overlay_set_display, reg(21), 0), #Native Weapon
                    (overlay_set_display, reg(30), 0), #Caba'drin Weapon
                    (overlay_set_display, reg(39), 0), #Caba'drin Shield
                    (overlay_set_display, reg(48), 0), #Caba'drin Skirmish
                (try_end),
                (try_begin),
                    (eq, "$group7_has_troops", 1),
                    (overlay_set_display, "$g_presentation_but7_movement", 1), #Initial
                    (overlay_set_display, "$g_presentation_but7_riding", 1), #Position 1
                    (overlay_set_display, "$g_presentation_but7_weapon_usage", 1), #Position 2
                    (overlay_set_display, reg(13), 1),  #Formation
                    (overlay_set_display, reg(22), 0), #Native Weapon
                    (overlay_set_display, reg(31), 0), #Caba'drin Weapon
                    (overlay_set_display, reg(40), 0), #Caba'drin Shield
                    (overlay_set_display, reg(49), 0), #Caba'drin Skirmish
                (try_end),
                (try_begin),
                    (eq, "$group8_has_troops", 1),
                    (overlay_set_display, "$g_presentation_but8_movement", 1), #Initial
                    (overlay_set_display, "$g_presentation_but8_riding", 1), #Position 1
                    (overlay_set_display, "$g_presentation_but8_weapon_usage", 1), #Position 2
                    (overlay_set_display, reg(14), 1),  #Formation
                    (overlay_set_display, reg(23), 0), #Native Weapon
                    (overlay_set_display, reg(32), 0), #Caba'drin Weapon
                    (overlay_set_display, reg(41), 0), #Caba'drin Shield
                    (overlay_set_display, reg(50), 0), #Caba'drin Skirmish
                (try_end),
                (position_set_x, pos1, 450),
                (overlay_set_text, "$g_presentation_obj_battle_24", "@Turn to weapon orders..."),
                (overlay_set_position, "$g_presentation_obj_battle_24", pos1),
            (try_end),            
        (else_try), #Division Selection, Order Selection
          (eq, "$group0_has_troops", 1),
          (eq, ":object", "$g_presentation_obj_battle_check0"),
          (assign, "$g_formation_group0_selected", ":value"),
          (try_begin),
            (eq, ":value", 1),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but0", 250, 0x44),
          (else_try),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but0", 250, 0),
          (try_end),
        (else_try),
          (eq, "$group1_has_troops", 1),
          (eq, ":object", "$g_presentation_obj_battle_check1"),
          (assign, "$g_formation_group1_selected", ":value"),
          (try_begin),
            (eq, ":value", 1),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but1", 250, 0x44),
          (else_try),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but1", 250, 0),
          (try_end),
        (else_try),
          (eq, "$group2_has_troops", 1),
          (eq, ":object", "$g_presentation_obj_battle_check2"),
          (assign, "$g_formation_group2_selected", ":value"),
          (try_begin),
            (eq, ":value", 1),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but2", 250, 0x44),
          (else_try),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but2", 250, 0),
          (try_end),
        (else_try),
          (eq, "$group3_has_troops", 1),
          (eq, ":object", "$g_presentation_obj_battle_check3"),
          (assign, "$g_formation_group3_selected", ":value"),
          (try_begin),
            (eq, ":value", 1),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but3", 250, 0x44),
          (else_try),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but3", 250, 0),
          (try_end),
        (else_try),
          (eq, "$group4_has_troops", 1),
          (eq, ":object", "$g_presentation_obj_battle_check4"),
          (assign, "$g_formation_group4_selected", ":value"),
          (try_begin),
            (eq, ":value", 1),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but4", 250, 0x44),
          (else_try),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but4", 250, 0),
          (try_end),
        (else_try),
          (eq, "$group5_has_troops", 1),
          (eq, ":object", "$g_presentation_obj_battle_check5"),
          (assign, "$g_formation_group5_selected", ":value"),
          (try_begin),
            (eq, ":value", 1),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but5", 250, 0x44),
          (else_try),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but5", 250, 0),
          (try_end),
        (else_try),
          (eq, "$group6_has_troops", 1),
          (eq, ":object", "$g_presentation_obj_battle_check6"),
          (assign, "$g_formation_group6_selected", ":value"),
          (try_begin),
            (eq, ":value", 1),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but6", 250, 0x44),
          (else_try),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but6", 250, 0),
          (try_end),
        (else_try),
          (eq, "$group7_has_troops", 1),
          (eq, ":object", "$g_presentation_obj_battle_check7"),
          (assign, "$g_formation_group7_selected", ":value"),
          (try_begin),
            (eq, ":value", 1),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but7", 250, 0x44),
          (else_try),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but7", 250, 0),
          (try_end),
        (else_try),
          (eq, "$group8_has_troops", 1),
          (eq, ":object", "$g_presentation_obj_battle_check8"),
          (assign, "$g_formation_group8_selected", ":value"),
          (try_begin),
            (eq, ":value", 1),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but8", 250, 0x44),
          (else_try),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but8", 250, 0),
          (try_end),        
        (else_try),
          (eq, ":object", "$g_presentation_obj_battle_but0"),
        
          (assign, "$g_formation_group0_selected", 1),
          (overlay_animate_to_alpha, "$g_presentation_obj_battle_but0", 250, 0x44),
          (overlay_set_val, "$g_presentation_obj_battle_check0", 1),

          (try_begin),
            (eq, "$group1_has_troops", 1),
            (assign, "$g_formation_group1_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check1", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but1", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group2_has_troops", 1),
            (assign, "$g_formation_group2_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check2", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but2", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group3_has_troops", 1),
            (assign, "$g_formation_group3_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check3", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but3", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group4_has_troops", 1),
            (assign, "$g_formation_group4_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check4", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but4", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group5_has_troops", 1),
            (assign, "$g_formation_group5_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check5", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but5", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group6_has_troops", 1),
            (assign, "$g_formation_group6_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check6", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but6", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group7_has_troops", 1),
            (assign, "$g_formation_group7_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check7", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but7", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group8_has_troops", 1),
            (assign, "$g_formation_group8_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check8", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but8", 250, 0),
          (try_end),
        (else_try),
          (eq, ":object", "$g_presentation_obj_battle_but1"),

          (assign, "$g_formation_group1_selected", 1),
          (overlay_animate_to_alpha, "$g_presentation_obj_battle_but1", 250, 0x44),
          (overlay_set_val, "$g_presentation_obj_battle_check1", 1),

          (try_begin),
            (eq, "$group0_has_troops", 1),
            (assign, "$g_formation_group0_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check0", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but0", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group2_has_troops", 1),
            (assign, "$g_formation_group2_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check2", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but2", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group3_has_troops", 1),
            (assign, "$g_formation_group3_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check3", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but3", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group4_has_troops", 1),
            (assign, "$g_formation_group4_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check4", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but4", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group5_has_troops", 1),
            (assign, "$g_formation_group5_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check5", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but5", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group6_has_troops", 1),
            (assign, "$g_formation_group6_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check6", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but6", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group7_has_troops", 1),
            (assign, "$g_formation_group7_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check7", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but7", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group8_has_troops", 1),
            (assign, "$g_formation_group8_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check8", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but8", 250, 0),
          (try_end),
        (else_try),
          (eq, ":object", "$g_presentation_obj_battle_but2"),

          (assign, "$g_formation_group2_selected", 1),
          (overlay_animate_to_alpha, "$g_presentation_obj_battle_but2", 250, 0x44),
          (overlay_set_val, "$g_presentation_obj_battle_check2", 1),

          (try_begin),
            (eq, "$group0_has_troops", 1),
            (assign, "$g_formation_group0_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check0", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but0", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group1_has_troops", 1),
            (assign, "$g_formation_group1_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check1", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but1", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group3_has_troops", 1),
            (assign, "$g_formation_group3_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check3", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but3", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group4_has_troops", 1),
            (assign, "$g_formation_group4_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check4", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but4", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group5_has_troops", 1),
            (assign, "$g_formation_group5_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check5", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but5", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group6_has_troops", 1),
            (assign, "$g_formation_group6_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check6", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but6", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group7_has_troops", 1),
            (assign, "$g_formation_group7_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check7", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but7", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group8_has_troops", 1),
            (assign, "$g_formation_group8_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check8", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but8", 250, 0),
          (try_end),
        (else_try),
          (eq, ":object", "$g_presentation_obj_battle_but3"),

          (assign, "$g_formation_group3_selected", 1),
          (overlay_animate_to_alpha, "$g_presentation_obj_battle_but3", 250, 0x44),
          (overlay_set_val, "$g_presentation_obj_battle_check3", 1),

          (try_begin),
            (eq, "$group0_has_troops", 1),
            (assign, "$g_formation_group0_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check0", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but0", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group1_has_troops", 1),
            (assign, "$g_formation_group1_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check1", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but1", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group2_has_troops", 1),
            (assign, "$g_formation_group2_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check2", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but2", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group4_has_troops", 1),
            (assign, "$g_formation_group4_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check4", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but4", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group5_has_troops", 1),
            (assign, "$g_formation_group5_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check5", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but5", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group6_has_troops", 1),
            (assign, "$g_formation_group6_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check6", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but6", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group7_has_troops", 1),
            (assign, "$g_formation_group7_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check7", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but7", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group8_has_troops", 1),
            (assign, "$g_formation_group8_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check8", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but8", 250, 0),
          (try_end),
        (else_try),
          (eq, ":object", "$g_presentation_obj_battle_but4"),

          (assign, "$g_formation_group4_selected", 1),
          (overlay_animate_to_alpha, "$g_presentation_obj_battle_but4", 250, 0x44),
          (overlay_set_val, "$g_presentation_obj_battle_check4", 1),

          (try_begin),
            (eq, "$group0_has_troops", 1),
            (assign, "$g_formation_group0_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check0", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but0", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group1_has_troops", 1),
            (assign, "$g_formation_group1_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check1", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but1", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group2_has_troops", 1),
            (assign, "$g_formation_group2_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check2", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but2", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group3_has_troops", 1),
            (assign, "$g_formation_group3_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check3", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but3", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group5_has_troops", 1),
            (assign, "$g_formation_group5_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check5", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but5", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group6_has_troops", 1),
            (assign, "$g_formation_group6_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check6", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but6", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group7_has_troops", 1),
            (assign, "$g_formation_group7_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check7", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but7", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group8_has_troops", 1),
            (assign, "$g_formation_group8_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check8", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but8", 250, 0),
          (try_end),
        (else_try),
          (eq, ":object", "$g_presentation_obj_battle_but5"),

          (assign, "$g_formation_group5_selected", 1),
          (overlay_animate_to_alpha, "$g_presentation_obj_battle_but5", 250, 0x44),
          (overlay_set_val, "$g_presentation_obj_battle_check5", 1),

          (try_begin),
            (eq, "$group0_has_troops", 1),
            (assign, "$g_formation_group0_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check0", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but0", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group1_has_troops", 1),
            (assign, "$g_formation_group1_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check1", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but1", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group2_has_troops", 1),
            (assign, "$g_formation_group2_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check2", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but2", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group3_has_troops", 1),
            (assign, "$g_formation_group3_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check3", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but3", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group4_has_troops", 1),
            (assign, "$g_formation_group4_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check4", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but4", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group6_has_troops", 1),
            (assign, "$g_formation_group6_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check6", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but6", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group7_has_troops", 1),
            (assign, "$g_formation_group7_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check7", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but7", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group8_has_troops", 1),
            (assign, "$g_formation_group8_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check8", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but8", 250, 0),
          (try_end),
        (else_try),
          (eq, ":object", "$g_presentation_obj_battle_but6"),

          (assign, "$g_formation_group6_selected", 1),
          (overlay_animate_to_alpha, "$g_presentation_obj_battle_but6", 250, 0x44),
          (overlay_set_val, "$g_presentation_obj_battle_check6", 1),

          (try_begin),
            (eq, "$group0_has_troops", 1),
            (assign, "$g_formation_group0_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check0", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but0", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group1_has_troops", 1),
            (assign, "$g_formation_group1_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check1", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but1", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group2_has_troops", 1),
            (assign, "$g_formation_group2_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check2", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but2", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group3_has_troops", 1),
            (assign, "$g_formation_group3_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check3", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but3", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group4_has_troops", 1),
            (assign, "$g_formation_group4_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check4", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but4", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group5_has_troops", 1),
            (assign, "$g_formation_group5_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check5", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but5", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group7_has_troops", 1),
            (assign, "$g_formation_group7_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check7", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but7", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group8_has_troops", 1),
            (assign, "$g_formation_group8_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check8", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but8", 250, 0),
          (try_end),
        (else_try),
          (eq, ":object", "$g_presentation_obj_battle_but7"),

          (assign, "$g_formation_group7_selected", 1),
          (overlay_animate_to_alpha, "$g_presentation_obj_battle_but7", 250, 0x44),
          (overlay_set_val, "$g_presentation_obj_battle_check7", 1),

          (try_begin),
            (eq, "$group0_has_troops", 1),
            (assign, "$g_formation_group0_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check0", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but0", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group1_has_troops", 1),
            (assign, "$g_formation_group1_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check1", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but1", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group2_has_troops", 1),
            (assign, "$g_formation_group2_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check2", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but2", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group3_has_troops", 1),
            (assign, "$g_formation_group3_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check3", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but3", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group4_has_troops", 1),
            (assign, "$g_formation_group4_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check4", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but4", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group5_has_troops", 1),
            (assign, "$g_formation_group5_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check5", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but5", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group6_has_troops", 1),
            (assign, "$g_formation_group6_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check6", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but6", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group8_has_troops", 1),
            (assign, "$g_formation_group8_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check8", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but8", 250, 0),
          (try_end),
        (else_try),
          (eq, ":object", "$g_presentation_obj_battle_but8"),

          (assign, "$g_formation_group8_selected", 1),
          (overlay_animate_to_alpha, "$g_presentation_obj_battle_but8", 250, 0x44),
          (overlay_set_val, "$g_presentation_obj_battle_check8", 1),

          (try_begin),
            (eq, "$group0_has_troops", 1),
            (assign, "$g_formation_group0_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check0", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but0", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group1_has_troops", 1),
            (assign, "$g_formation_group1_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check1", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but1", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group2_has_troops", 1),
            (assign, "$g_formation_group2_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check2", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but2", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group3_has_troops", 1),
            (assign, "$g_formation_group3_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check3", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but3", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group4_has_troops", 1),
            (assign, "$g_formation_group4_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check4", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but4", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group5_has_troops", 1),
            (assign, "$g_formation_group5_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check5", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but5", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group6_has_troops", 1),
            (assign, "$g_formation_group6_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check6", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but6", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group7_has_troops", 1),
            (assign, "$g_formation_group7_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check7", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but7", 250, 0),
          (try_end),
        (else_try), #Order Selection
          (eq, ":object", "$g_presentation_obj_battle_10"),
          (try_begin),
            (eq, ":value", 4),
            #(str_store_string, s1, "@-"),
            (call_script, "script_prebattle_order_update_text_slot", 0, -1, 0),
          (else_try),
            (eq, ":value", 3),
            #(str_store_string, s1, "@Hold"),
            (call_script, "script_prebattle_order_update_text_slot", 0, 0, 0),
          (else_try),
            (eq, ":value", 2),
            #(str_store_string, s1, "@Follow Me"),
            (call_script, "script_prebattle_order_update_text_slot", 0, 1, 0),
          (else_try),
            (eq, ":value", 1),
            #(str_store_string, s1, "@Charge"),
            (call_script, "script_prebattle_order_update_text_slot", 0, 2, 0),
          (else_try),
            (eq, ":value", 0),
            #(str_store_string, s1, "@Stand Ground"),
            (call_script, "script_prebattle_order_update_text_slot", 0, 3, 0),
          (try_end),
        (else_try),
          (this_or_next|eq, ":object", "$g_presentation_obj_battle_11"),
          (eq, ":object", "$g_presentation_obj_battle_12"),
          (try_begin),
                (eq, ":object", "$g_presentation_obj_battle_11"),
                (assign, ":column", 1),
                (assign, ":repeat", reg53),
          (else_try),
                (eq, ":object", "$g_presentation_obj_battle_12"),
                (assign, ":column", 2),
                (assign, ":repeat", reg54),
          (try_end),
          (try_begin),
            (eq, ":value", 6),
            #(str_store_string, s1, "@-"),
            (call_script, "script_prebattle_order_update_text_slot", ":column", -1, 0),
          (else_try),
            (eq, ":value", 1),
            #(str_store_string, s1, "@Mount"),
            (call_script, "script_prebattle_order_update_text_slot", ":column", 3, 0),
          (else_try),
            (eq, ":value", 0),
            #(str_store_string, s1, "@Dismount"),
            (call_script, "script_prebattle_order_update_text_slot", ":column", 4, 0),
          (else_try),
            (eq, ":value", 5),
            #(str_store_string, s1, "@Forward 10"),
            (call_script, "script_prebattle_order_update_text_slot", ":column", 5, ":repeat"),
            (call_script, "script_prebattle_order_update_text_slot", 0, 0, 0), #Also, hold
          (else_try),
            (eq, ":value", 4),
            #(str_store_string, s1, "@Back 10"),
            (call_script, "script_prebattle_order_update_text_slot", ":column", 6, ":repeat"),
            (call_script, "script_prebattle_order_update_text_slot", 0, 0, 0), #Also, hold
          (else_try),
            (eq, ":value", 3),
            #(str_store_string, s1, "@Stand Closer"),
            (call_script, "script_prebattle_order_update_text_slot", ":column", 7, ":repeat"),
          (else_try),
            (eq, ":value", 2),
            #(str_store_string, s1, "@Spread Out"),
            (call_script, "script_prebattle_order_update_text_slot", ":column", 8, ":repeat"),
          (try_end),
        (else_try),
          (eq, ":object", "$g_presentation_obj_battle_17"),
          (try_begin),
            (eq, ":value", 4),
            #(str_store_string, s1, "@-"),
            (call_script, "script_prebattle_order_update_text_slot", 3, -1, 0),
          (else_try),        
            (eq, ":value", 3),
            #(str_store_string, s1, "@Ranks"),
            (call_script, "script_prebattle_order_update_text_slot", 3, formation_ranks, 0),
            (call_script, "script_prebattle_order_update_text_slot", 0, 0, 0), #Also, hold
          (else_try),
            (eq, ":value", 2),
            #(str_store_string, s1, "@Shieldwall"),
            (call_script, "script_prebattle_order_update_text_slot", 3, formation_shield, 0),
            (call_script, "script_prebattle_order_update_text_slot", 0, 0, 0), #Also, hold
         (else_try), 
            (eq, ":value", 1),
            #(str_store_string, s1, "@Wedge"),
            (call_script, "script_prebattle_order_update_text_slot", 3, formation_wedge, 0),
            (call_script, "script_prebattle_order_update_text_slot", 0, 0, 0), #Also, hold
          (else_try),
            (eq, ":value", 0),
            #(str_store_string, s1, "@Square"),
            (call_script, "script_prebattle_order_update_text_slot", 3, formation_square, 0),
            (call_script, "script_prebattle_order_update_text_slot", 0, 0, 0), #Also, hold
          (try_end),          
        (else_try),
          (eq, ":object", "$g_presentation_obj_battle_13"),
          (try_begin),
            (eq, ":value", 4),
            #(str_store_string, s1, "@-"),
            (call_script, "script_prebattle_order_update_text_slot", 4, -1, 0),
          (else_try),
            (eq, ":value", 1),
            #(str_store_string, s1, "@Hold Fire"),
            (call_script, "script_prebattle_order_update_text_slot", 4, 2, 0),
          (else_try),
            (eq, ":value", 0),
            #(str_store_string, s1, "@Fire at Will"),
            (call_script, "script_prebattle_order_update_text_slot", 4, 3, 0),
          (else_try),         
            (eq, ":value", 3),
            #(str_store_string, s1, "@Any Weapon"),
            (call_script, "script_prebattle_order_update_text_slot", 4, 0, 0),
          (else_try),
            (eq, ":value", 2),
            #(str_store_string, s1, "@Blunt Weapons"),
            (call_script, "script_prebattle_order_update_text_slot", 4, 9, 0),
          (try_end),
        (else_try), 
          (eq, ":object", "$g_presentation_obj_battle_14"),
          (try_begin),
            (eq, ":value", 4),
            #(str_store_string, s1, "@-"),
            (call_script, "script_prebattle_order_update_text_slot", 5, -1, 0),
          (else_try),
            (eq, ":value", 3),
            #(str_store_string, s1, "@One Handed),
            (call_script, "script_prebattle_order_update_text_slot", 5, 1, 0),
          (else_try),
            (eq, ":value", 2),
            #(str_store_string, s1, "@Two Handed"),
            (call_script, "script_prebattle_order_update_text_slot", 5, 2, 0),
          (else_try),
            (eq, ":value", 1),
            #(str_store_string, s1, "@Polearms"),
            (call_script, "script_prebattle_order_update_text_slot", 5, 3, 0),
          (else_try),
            (eq, ":value", 0),
            #(str_store_string, s1, "@Ranged"),
            (call_script, "script_prebattle_order_update_text_slot", 5, 0, 0),
          (try_end),
        (else_try), 
          (eq, ":object", "$g_presentation_obj_battle_15"),
          (try_begin),
            (eq, ":value", 2),
            #(str_store_string, s1, "@-"),
            (call_script, "script_prebattle_order_update_text_slot", 6, -1, 0),
          (else_try),
            (eq, ":value", 1),
            #(str_store_string, s1, "@Use Shields"),
            (call_script, "script_prebattle_order_update_text_slot", 6, 4, 0),
          (else_try),
            (eq, ":value", 0),
            #(str_store_string, s1, "@No Shields"),
            (call_script, "script_prebattle_order_update_text_slot", 6, 5, 0),
          (try_end),
        (else_try), 
          (eq, ":object", "$g_presentation_obj_battle_16"),
          (try_begin),
            (eq, ":value", 1),
            #(str_store_string, s1, "@-"),
            (call_script, "script_prebattle_order_update_text_slot", 7, -1, 0),
          (else_try),
            (eq, ":value", 0),
            #(str_store_string, s1, "@Avoid Melee"),
            (call_script, "script_prebattle_order_update_text_slot", 7, 1, 0),
          (try_end),
        (else_try), #Repeat Number Boxes
          (eq, ":object", reg51),
              # (overlay_get_position, pos1, "$g_presentation_obj_battle_24"),
            # (position_get_x, ":x", pos1),
            # (eq, ":x", 450), #Only when position orders displayed
            (assign, reg53, ":value"),
        (else_try),
          (eq, ":object", reg52),
            (assign, reg54, ":value"),
      (try_end),
         
    ]),
        
    (ti_on_presentation_mouse_enter_leave,
       [(store_trigger_param_1, ":object"),
        (store_trigger_param_2, ":enter_leave"),
        (try_begin),
          (eq, ":object", "$g_presentation_obj_battle_but0"),
          (try_begin),
            (eq, ":enter_leave", 0),
            (overlay_animate_to_color, "$g_presentation_but0_movement", 250, 0xFFFFFF),
            (overlay_animate_to_color, "$g_presentation_but0_riding", 250, 0xFFFFFF),
            (overlay_animate_to_color, "$g_presentation_but0_weapon_usage", 250, 0xFFFFFF),
            (overlay_animate_to_color, reg(6), 250, 0xFFFFFF),
            (overlay_animate_to_color, reg(15), 250, 0xFFFFFF),
            (overlay_animate_to_color, reg(24), 250, 0xFFFFFF),
            (overlay_animate_to_color, reg(33), 250, 0xFFFFFF),
            (overlay_animate_to_color, reg(42), 250, 0xFFFFFF),
            (overlay_animate_to_color, "$g_presentation_obj_battle_name0", 250, 0xFFFFFF),
          (else_try),
            (overlay_animate_to_color, "$g_presentation_but0_movement", 250, 0),
            (overlay_animate_to_color, "$g_presentation_but0_riding", 250, 0),
            (overlay_animate_to_color, "$g_presentation_but0_weapon_usage", 250, 0),
            (overlay_animate_to_color, reg(6), 250, 0),
            (overlay_animate_to_color, reg(15), 250, 0),
            (overlay_animate_to_color, reg(24), 250, 0),
            (overlay_animate_to_color, reg(33), 250, 0),
            (overlay_animate_to_color, reg(42), 250, 0),
            (overlay_animate_to_color, "$g_presentation_obj_battle_name0", 250, 0),
          (try_end),
        (else_try),
          (eq, ":object", "$g_presentation_obj_battle_but1"),
          (try_begin),
            (eq, ":enter_leave", 0),
            (overlay_animate_to_color, "$g_presentation_but1_movement", 250, 0xFFFFFF),
            (overlay_animate_to_color, "$g_presentation_but1_riding", 250, 0xFFFFFF),
            (overlay_animate_to_color, "$g_presentation_but1_weapon_usage", 250, 0xFFFFFF),
            (overlay_animate_to_color, reg(7), 250, 0xFFFFFF),
            (overlay_animate_to_color, reg(16), 250, 0xFFFFFF),
            (overlay_animate_to_color, reg(25), 250, 0xFFFFFF),
            (overlay_animate_to_color, reg(34), 250, 0xFFFFFF),
            (overlay_animate_to_color, reg(43), 250, 0xFFFFFF),
            (overlay_animate_to_color, "$g_presentation_obj_battle_name1", 250, 0xFFFFFF),
          (else_try),
            (overlay_animate_to_color, "$g_presentation_but1_movement", 250, 0),
            (overlay_animate_to_color, "$g_presentation_but1_riding", 250, 0),
            (overlay_animate_to_color, "$g_presentation_but1_weapon_usage", 250, 0),
            (overlay_animate_to_color, reg(7), 250, 0),
            (overlay_animate_to_color, reg(16), 250, 0),
            (overlay_animate_to_color, reg(25), 250, 0),
            (overlay_animate_to_color, reg(34), 250, 0),
            (overlay_animate_to_color, reg(43), 250, 0),
            (overlay_animate_to_color, "$g_presentation_obj_battle_name1", 250, 0),
          (try_end),
        (else_try),
          (eq, ":object", "$g_presentation_obj_battle_but2"),
          (try_begin),
            (eq, ":enter_leave", 0),
            (overlay_animate_to_color, "$g_presentation_but2_movement", 250, 0xFFFFFF),
            (overlay_animate_to_color, "$g_presentation_but2_riding", 250, 0xFFFFFF),
            (overlay_animate_to_color, "$g_presentation_but2_weapon_usage", 250, 0xFFFFFF),
            (overlay_animate_to_color, reg(8), 250, 0xFFFFFF),
            (overlay_animate_to_color, reg(17), 250, 0xFFFFFF),
            (overlay_animate_to_color, reg(26), 250, 0xFFFFFF),
            (overlay_animate_to_color, reg(35), 250, 0xFFFFFF),
            (overlay_animate_to_color, reg(44), 250, 0xFFFFFF),
            (overlay_animate_to_color, "$g_presentation_obj_battle_name2", 250, 0xFFFFFF),
          (else_try),
            (overlay_animate_to_color, "$g_presentation_but2_movement", 250, 0),
            (overlay_animate_to_color, "$g_presentation_but2_riding", 250, 0),
            (overlay_animate_to_color, "$g_presentation_but2_weapon_usage", 250, 0),
            (overlay_animate_to_color, reg(8), 250, 0),
            (overlay_animate_to_color, reg(17), 250, 0),
            (overlay_animate_to_color, reg(26), 250, 0),
            (overlay_animate_to_color, reg(35), 250, 0),
            (overlay_animate_to_color, reg(44), 250, 0),
            (overlay_animate_to_color, "$g_presentation_obj_battle_name2", 250, 0),
          (try_end),
        (else_try),
          (eq, ":object", "$g_presentation_obj_battle_but3"),
          (try_begin),
            (eq, ":enter_leave", 0),
            (overlay_animate_to_color, "$g_presentation_but3_movement", 250, 0xFFFFFF),
            (overlay_animate_to_color, "$g_presentation_but3_riding", 250, 0xFFFFFF),
            (overlay_animate_to_color, "$g_presentation_but3_weapon_usage", 250, 0xFFFFFF),
            (overlay_animate_to_color, reg(9), 250, 0xFFFFFF),
            (overlay_animate_to_color, reg(18), 250, 0xFFFFFF),
            (overlay_animate_to_color, reg(27), 250, 0xFFFFFF),
            (overlay_animate_to_color, reg(36), 250, 0xFFFFFF),
            (overlay_animate_to_color, reg(45), 250, 0xFFFFFF),
            (overlay_animate_to_color, "$g_presentation_obj_battle_name3", 250, 0xFFFFFF),
          (else_try),
            (overlay_animate_to_color, "$g_presentation_but3_movement", 250, 0),
            (overlay_animate_to_color, "$g_presentation_but3_riding", 250, 0),
            (overlay_animate_to_color, "$g_presentation_but3_weapon_usage", 250, 0),
            (overlay_animate_to_color, reg(9), 250, 0),
            (overlay_animate_to_color, reg(18), 250, 0),
            (overlay_animate_to_color, reg(27), 250, 0),
            (overlay_animate_to_color, reg(36), 250, 0),
            (overlay_animate_to_color, reg(45), 250, 0),
            (overlay_animate_to_color, "$g_presentation_obj_battle_name3", 250, 0),
          (try_end),
        (else_try),
          (eq, ":object", "$g_presentation_obj_battle_but4"),
          (try_begin),
            (eq, ":enter_leave", 0),
            (overlay_animate_to_color, "$g_presentation_but4_movement", 250, 0xFFFFFF),
            (overlay_animate_to_color, "$g_presentation_but4_riding", 250, 0xFFFFFF),
            (overlay_animate_to_color, "$g_presentation_but4_weapon_usage", 250, 0xFFFFFF),
            (overlay_animate_to_color, reg(10), 250, 0xFFFFFF),
            (overlay_animate_to_color, reg(19), 250, 0xFFFFFF),
            (overlay_animate_to_color, reg(28), 250, 0xFFFFFF),
            (overlay_animate_to_color, reg(37), 250, 0xFFFFFF),
            (overlay_animate_to_color, reg(46), 250, 0xFFFFFF),
            (overlay_animate_to_color, "$g_presentation_obj_battle_name4", 250, 0xFFFFFF),
          (else_try),
            (overlay_animate_to_color, "$g_presentation_but4_movement", 250, 0),
            (overlay_animate_to_color, "$g_presentation_but4_riding", 250, 0),
            (overlay_animate_to_color, "$g_presentation_but4_weapon_usage", 250, 0),
            (overlay_animate_to_color, reg(10), 250, 0),
            (overlay_animate_to_color, reg(19), 250, 0),
            (overlay_animate_to_color, reg(28), 250, 0),
            (overlay_animate_to_color, reg(37), 250, 0),
            (overlay_animate_to_color, reg(46), 250, 0),
            (overlay_animate_to_color, "$g_presentation_obj_battle_name4", 250, 0),
          (try_end),
        (else_try),
          (eq, ":object", "$g_presentation_obj_battle_but5"),
          (try_begin),
            (eq, ":enter_leave", 0),
            (overlay_animate_to_color, "$g_presentation_but5_movement", 250, 0xFFFFFF),
            (overlay_animate_to_color, "$g_presentation_but5_riding", 250, 0xFFFFFF),
            (overlay_animate_to_color, "$g_presentation_but5_weapon_usage", 250, 0xFFFFFF),
            (overlay_animate_to_color, reg(11), 250, 0xFFFFFF),
            (overlay_animate_to_color, reg(20), 250, 0xFFFFFF),
            (overlay_animate_to_color, reg(29), 250, 0xFFFFFF),
            (overlay_animate_to_color, reg(38), 250, 0xFFFFFF),
            (overlay_animate_to_color, reg(47), 250, 0xFFFFFF),
            (overlay_animate_to_color, "$g_presentation_obj_battle_name5", 250, 0xFFFFFF),
          (else_try),
            (overlay_animate_to_color, "$g_presentation_but5_movement", 250, 0),
            (overlay_animate_to_color, "$g_presentation_but5_riding", 250, 0),
            (overlay_animate_to_color, "$g_presentation_but5_weapon_usage", 250, 0),
            (overlay_animate_to_color, reg(11), 250, 0),
            (overlay_animate_to_color, reg(20), 250, 0),
            (overlay_animate_to_color, reg(29), 250, 0),
            (overlay_animate_to_color, reg(38), 250, 0),
            (overlay_animate_to_color, reg(47), 250, 0),
            (overlay_animate_to_color, "$g_presentation_obj_battle_name5", 250, 0),
          (try_end),
        (else_try),
          (eq, ":object", "$g_presentation_obj_battle_but6"),
          (try_begin),
            (eq, ":enter_leave", 0),
            (overlay_animate_to_color, "$g_presentation_but6_movement", 250, 0xFFFFFF),
            (overlay_animate_to_color, "$g_presentation_but6_riding", 250, 0xFFFFFF),
            (overlay_animate_to_color, "$g_presentation_but6_weapon_usage", 250, 0xFFFFFF),
            (overlay_animate_to_color, reg(12), 250, 0xFFFFFF),
            (overlay_animate_to_color, reg(21), 250, 0xFFFFFF),
            (overlay_animate_to_color, reg(30), 250, 0xFFFFFF),
            (overlay_animate_to_color, reg(39), 250, 0xFFFFFF),
            (overlay_animate_to_color, reg(48), 250, 0xFFFFFF),
            (overlay_animate_to_color, "$g_presentation_obj_battle_name6", 250, 0xFFFFFF),
          (else_try),
            (overlay_animate_to_color, "$g_presentation_but6_movement", 250, 0),
            (overlay_animate_to_color, "$g_presentation_but6_riding", 250, 0),
            (overlay_animate_to_color, "$g_presentation_but6_weapon_usage", 250, 0),
            (overlay_animate_to_color, reg(12), 250, 0),
            (overlay_animate_to_color, reg(21), 250, 0),
            (overlay_animate_to_color, reg(30), 250, 0),
            (overlay_animate_to_color, reg(39), 250, 0),
            (overlay_animate_to_color, reg(48), 250, 0),
            (overlay_animate_to_color, "$g_presentation_obj_battle_name6", 250, 0),
          (try_end),
        (else_try),
          (eq, ":object", "$g_presentation_obj_battle_but7"),
          (try_begin),
            (eq, ":enter_leave", 0),
            (overlay_animate_to_color, "$g_presentation_but7_movement", 250, 0xFFFFFF),
            (overlay_animate_to_color, "$g_presentation_but7_riding", 250, 0xFFFFFF),
            (overlay_animate_to_color, "$g_presentation_but7_weapon_usage", 250, 0xFFFFFF),
            (overlay_animate_to_color, reg(13), 250, 0xFFFFFF),
            (overlay_animate_to_color, reg(22), 250, 0xFFFFFF),
            (overlay_animate_to_color, reg(31), 250, 0xFFFFFF),
            (overlay_animate_to_color, reg(40), 250, 0xFFFFFF),
            (overlay_animate_to_color, reg(49), 250, 0xFFFFFF),
            (overlay_animate_to_color, "$g_presentation_obj_battle_name7", 250, 0xFFFFFF),
          (else_try),
            (overlay_animate_to_color, "$g_presentation_but7_movement", 250, 0),
            (overlay_animate_to_color, "$g_presentation_but7_riding", 250, 0),
            (overlay_animate_to_color, "$g_presentation_but7_weapon_usage", 250, 0),
            (overlay_animate_to_color, reg(13), 250, 0),
            (overlay_animate_to_color, reg(22), 250, 0),
            (overlay_animate_to_color, reg(31), 250, 0),
            (overlay_animate_to_color, reg(40), 250, 0),
            (overlay_animate_to_color, reg(49), 250, 0),
            (overlay_animate_to_color, "$g_presentation_obj_battle_name7", 250, 0),
          (try_end),
        (else_try),
          (eq, ":object", "$g_presentation_obj_battle_but8"),
          (try_begin),
            (eq, ":enter_leave", 0),
            (overlay_animate_to_color, "$g_presentation_but8_movement", 250, 0xFFFFFF),
            (overlay_animate_to_color, "$g_presentation_but8_riding", 250, 0xFFFFFF),
            (overlay_animate_to_color, "$g_presentation_but8_weapon_usage", 250, 0xFFFFFF),
            (overlay_animate_to_color, reg(14), 250, 0xFFFFFF),
            (overlay_animate_to_color, reg(23), 250, 0xFFFFFF),
            (overlay_animate_to_color, reg(32), 250, 0xFFFFFF),
            (overlay_animate_to_color, reg(41), 250, 0xFFFFFF),
            (overlay_animate_to_color, reg(50), 250, 0xFFFFFF),
            (overlay_animate_to_color, "$g_presentation_obj_battle_name8", 250, 0xFFFFFF),
          (else_try),
            (overlay_animate_to_color, "$g_presentation_but8_movement", 250, 0),
            (overlay_animate_to_color, "$g_presentation_but8_riding", 250, 0),
            (overlay_animate_to_color, "$g_presentation_but8_weapon_usage", 250, 0),
            (overlay_animate_to_color, reg(14), 250, 0),
            (overlay_animate_to_color, reg(23), 250, 0),
            (overlay_animate_to_color, reg(32), 250, 0),
            (overlay_animate_to_color, reg(41), 250, 0),
            (overlay_animate_to_color, reg(50), 250, 0),
            (overlay_animate_to_color, "$g_presentation_obj_battle_name8", 250, 0),
          (try_end),
        (try_end),
        ]),
        
      (ti_on_presentation_run,
        [
        (try_begin),
          (key_clicked, key_escape),
          (party_set_slot, "p_main_party", slot_party_prebattle_plan, 0),
          (jump_to_menu, "$g_next_menu"),
          (presentation_set_duration, 0),
        (try_end),
        ]),
      ]),

 ("prebattle_record_battle_size",0,mesh_message_window,[
      (ti_on_presentation_load,
       [(set_fixed_point_multiplier, 1000),
        (str_store_string, s1, "@Record Battle Size as set in Options"),
        (create_text_overlay, reg1, s1, tf_center_justify),
        (position_set_x, pos1, 500),
        (position_set_y, pos1, 500),
        (overlay_set_position, reg1, pos1),
        (overlay_set_text, reg1, s1),
        (create_number_box_overlay, "$g_presentation_obj_name_kingdom_1", 30, max_battle_size + 1),
        (position_set_x, pos1, 400),
        (position_set_y, pos1, 400),
        (overlay_set_position, "$g_presentation_obj_name_kingdom_1", pos1),
        (party_get_slot, ":battle_size", "p_main_party", slot_party_prebattle_battle_size),
        (overlay_set_val, "$g_presentation_obj_name_kingdom_1", ":battle_size"),

        
        (create_button_overlay, "$g_presentation_obj_name_kingdom_2", "@Continue...", tf_center_justify),
        (position_set_x, pos1, 500),
        (position_set_y, pos1, 300),
        (overlay_set_position, "$g_presentation_obj_name_kingdom_2", pos1),
        (presentation_set_duration, 999999),
        ]),
      (ti_on_presentation_event_state_change,
       [(store_trigger_param_1, ":object"),
        (store_trigger_param_2, ":value"),
        (try_begin),
          (eq, ":object", "$g_presentation_obj_name_kingdom_1"),
          (party_set_slot, "p_main_party", slot_party_prebattle_battle_size, ":value"),
        (else_try),
          (eq, ":object", "$g_presentation_obj_name_kingdom_2"),
          (party_get_slot, ":battle_size", "p_main_party", slot_party_prebattle_battle_size),
          (val_clamp, ":battle_size", 30, max_battle_size + 1),
          (party_set_slot, "p_main_party", slot_party_prebattle_battle_size, ":battle_size"),
          (try_begin),
            (eq, "$g_presentation_credits_obj_1", 1),
            (start_presentation, "prsnt_prebattle_custom_deployment"),
          (else_try),
            (presentation_set_duration, 0),
          (try_end),
        (try_end),
        ]),
    ]),
   
 ("pbod_preferences", 0, mesh_message_window, [
    (ti_on_presentation_load,
      [
        (presentation_set_duration, 999999),
        (set_fixed_point_multiplier, 1000),
        
        (try_begin),
            (party_slot_eq, "p_main_party", slot_party_pref_prefs_set, 0),
            (call_script, "script_prebattle_set_default_prefs"),
            (party_set_slot, "p_main_party", slot_party_pref_prefs_set, 1),
        (try_end),
        
        (str_clear, s0),
        (create_text_overlay, reg0, s0, tf_scrollable),
        (position_set_x, pos1, 50),
        (position_set_y, pos1, 50),
        (overlay_set_position, reg0, pos1),
        (position_set_x, pos1, 550),
        (position_set_y, pos1, 630),
        (overlay_set_area_size, reg0, pos1),
        (set_container_overlay, reg0),
        
        (assign, ":num_options", 15),
        (val_add, ":num_options", 2), #For extra space for headings
        (assign, ":cur_y_shift", 50),
        (store_div, ":line_y_shift", ":cur_y_shift", 2),
        (store_mul, ":headings_y", ":cur_y_shift", ":num_options"),
        (store_sub, ":inputs_y", ":headings_y", 5),
        

        ## Headings
        (position_set_x, pos1, 50),
        
        (create_text_overlay, reg0, "@Record Battle Size as set in Options:", tf_vertical_align_center),
        (position_set_y, pos1, ":headings_y"),
        (overlay_set_position, reg0, pos1),
        
        (store_sub, ":line_1_y", ":headings_y", ":line_y_shift"), #LINE 1 Here
        (val_sub, ":headings_y", ":cur_y_shift"),
        (val_sub, ":headings_y", 30),        
        
        (create_text_overlay, reg0, "@The 'Weapon Use Fixes' change NPC decision-^making with the following weapon types.^^Un-tick the boxes if you dislike the behavior.", tf_vertical_align_center),
        (position_set_y, pos1, ":headings_y"),
        (overlay_set_position, reg0, pos1),
        (val_sub, ":headings_y", ":cur_y_shift"),
        (val_sub, ":headings_y", 20),

        (create_text_overlay, reg0, "@Use NPC Lancer Fix:", tf_vertical_align_center),
        (position_set_y, pos1, ":headings_y"),
        (overlay_set_position, reg0, pos1),
        (val_sub, ":headings_y", ":cur_y_shift"),
        (assign, "$g_presentation_obj_banner_selection_2", reg0), #For Mouse-Overs

        (create_text_overlay, reg0, "@Use NPC Horse Archer Fix:", tf_vertical_align_center),
        (position_set_y, pos1, ":headings_y"),
        (overlay_set_position, reg0, pos1),
        (val_sub, ":headings_y", ":cur_y_shift"),

        (create_text_overlay, reg0, "@Use NPC Spear/Polearm Fix:", tf_vertical_align_center),
        (position_set_y, pos1, ":headings_y"),
        (overlay_set_position, reg0, pos1),
        (val_sub, ":headings_y", ":cur_y_shift"),
        
        (store_add, ":line_2_y", ":headings_y", ":line_y_shift"), #LINE 2 Here
        
        (create_text_overlay, reg0, "@Use Pike/Horse Damage Tweaks:", tf_vertical_align_center),
        (position_set_y, pos1, ":headings_y"),
        (overlay_set_position, reg0, pos1),
        (val_sub, ":headings_y", ":cur_y_shift"),
        
        (create_text_overlay, reg0, "@Reassign De-horsed Cavalry to:", tf_vertical_align_center),
        (position_set_y, pos1, ":headings_y"),
        (overlay_set_position, reg0, pos1),
        (val_sub, ":headings_y", ":cur_y_shift"),
        
        (create_text_overlay, reg0, "@Reassign No-Ammo Archers to:", tf_vertical_align_center),
        (position_set_y, pos1, ":headings_y"),
        (overlay_set_position, reg0, pos1),
        (val_sub, ":headings_y", ":cur_y_shift"),
        
        (create_text_overlay, reg0, "@Enable Battle Continuation:", tf_vertical_align_center),
        (position_set_y, pos1, ":headings_y"),
        (overlay_set_position, reg0, pos1),
        (val_sub, ":headings_y", ":cur_y_shift"),
        
        (create_text_overlay, reg0, "@Enable 'Charge' after Knock-Out:", tf_vertical_align_center),
        (position_set_y, pos1, ":headings_y"),
        (overlay_set_position, reg0, pos1),
        (val_sub, ":headings_y", ":cur_y_shift"),
        
        (create_text_overlay, reg0, "@Formations Battle AI:", tf_vertical_align_center),
        (position_set_y, pos1, ":headings_y"),
        (overlay_set_position, reg0, pos1),
        (val_sub, ":headings_y", ":cur_y_shift"),
        
        (create_text_overlay, reg0, "@Enable AI to use Special Orders:", tf_vertical_align_center),
        (position_set_y, pos1, ":headings_y"),
        (overlay_set_position, reg0, pos1),
        (val_sub, ":headings_y", ":cur_y_shift"),
        
        (create_text_overlay, reg0, "@Enable Bodyguards in Towns/Villages:", tf_vertical_align_center),
        (position_set_y, pos1, ":headings_y"),
        (overlay_set_position, reg0, pos1),
        (val_sub, ":headings_y", ":cur_y_shift"),
        
        (store_add, ":line_3_y", ":headings_y", ":line_y_shift"), #LINE 3 HERE
		
        (create_text_overlay, reg0, "@Enable Enhanced Riding AI:", tf_vertical_align_center),
        (position_set_y, pos1, ":headings_y"),
        (overlay_set_position, reg0, pos1),
        (val_sub, ":headings_y", ":cur_y_shift"),

        (create_text_overlay, reg0, "@Enable Enhanced Combat AI:", tf_vertical_align_center),
        (position_set_y, pos1, ":headings_y"),
        (overlay_set_position, reg0, pos1),
        (val_sub, ":headings_y", ":cur_y_shift"),		

        #(create_text_overlay, reg0, "@Disable Companions' complaints:", tf_vertical_align_center),
        #(position_set_y, pos1, ":headings_y"),
        #(overlay_set_position, reg0, pos1),
        #(val_sub, ":headings_y", ":cur_y_shift"),

        #(create_text_overlay, reg0, "@Enable the cheat menu:", tf_vertical_align_center),
        #(position_set_y, pos1, ":headings_y"),
        #(overlay_set_position, reg0, pos1),
        #(val_sub, ":headings_y", ":cur_y_shift"),

        ## Lines
        
        (create_mesh_overlay, reg0, "mesh_white_plane"),
        (position_set_x, pos1, 23500),
        (position_set_y, pos1, 100),
        (overlay_set_size, reg0, pos1),
        (position_set_x, pos1, 50),
        (position_set_y, pos1, ":line_1_y"),
        (overlay_set_position, reg0, pos1),
        (overlay_set_color, reg0, 0),
        
        (create_mesh_overlay, reg0, "mesh_white_plane"),
        (position_set_x, pos1, 23500),
        (position_set_y, pos1, 100),
        (overlay_set_size, reg0, pos1),
        (position_set_x, pos1, 50),
        (position_set_y, pos1, ":line_2_y"),
        (overlay_set_position, reg0, pos1),
        (overlay_set_color, reg0, 0), #0x000000
        
        (create_mesh_overlay, reg0, "mesh_white_plane"),
        (position_set_x, pos1, 23500),
        (position_set_y, pos1, 100),
        (overlay_set_size, reg0, pos1),
        (position_set_x, pos1, 50),
        (position_set_y, pos1, ":line_3_y"),
        (overlay_set_position, reg0, pos1),
        (overlay_set_color, reg0, 0), #0x000000
        
        ## Inputs
        (position_set_x, pos1, 450),

        (val_sub, ":inputs_y", 9),    
        (create_number_box_overlay, "$g_presentation_obj_name_kingdom_1", 30, max_battle_size + 1),
        (position_set_y, pos1, ":inputs_y"),
        (overlay_set_position, "$g_presentation_obj_name_kingdom_1", pos1),
        (party_get_slot, ":battle_size", "p_main_party", slot_party_prebattle_battle_size),
        (overlay_set_val, "$g_presentation_obj_name_kingdom_1", ":battle_size"),
        (val_sub, ":inputs_y", ":cur_y_shift"),
        (val_sub, ":inputs_y", ":cur_y_shift"),
        (val_sub, ":inputs_y", 41),

        (create_check_box_overlay, reg0, "mesh_checkbox_off", "mesh_checkbox_on"), #Lancer
        (position_set_y, pos1, ":inputs_y"),
        (overlay_set_position, reg0, pos1),
        (overlay_set_display, reg0, 0),
        (val_sub, ":inputs_y", ":cur_y_shift"),

        (create_check_box_overlay, reg0, "mesh_checkbox_off", "mesh_checkbox_on"), #Horse Archer
        (position_set_y, pos1, ":inputs_y"),
        (overlay_set_position, reg0, pos1),  
        (overlay_set_display, reg0, 0),
        (val_sub, ":inputs_y", ":cur_y_shift"),

        (create_check_box_overlay, reg0, "mesh_checkbox_off", "mesh_checkbox_on"), #Spear/Polearm
        (position_set_y, pos1, ":inputs_y"),
        (overlay_set_position, reg0, pos1),  
        (val_sub, ":inputs_y", ":cur_y_shift"),
        
        (create_check_box_overlay, reg0, "mesh_checkbox_off", "mesh_checkbox_on"), #Damage
        (position_set_y, pos1, ":inputs_y"),
        (overlay_set_position, reg0, pos1),    
        (val_sub, ":inputs_y", ":cur_y_shift"),        
        
        (create_combo_button_overlay, reg0), #De-Horsed Division Set
        (position_set_x, pos1, 485),
        (val_sub, ":inputs_y", 8),
        (position_set_y, pos1, ":inputs_y"),
        (overlay_set_position, reg0, pos1),
        (position_set_x, pos1, 700),
        (position_set_y, pos1, 800),
        (overlay_set_size, reg0, pos1),
        (try_for_range, ":i", 0, 9),
            (str_store_class_name, s1, ":i"),
            (overlay_add_item, reg0, s1),
        (try_end),
        (overlay_add_item, reg0, "@{!}- Disabled -"),
        (position_set_x, pos1, 450),
        (val_add, ":inputs_y", 8),
        (val_sub, ":inputs_y", ":cur_y_shift"),
        
        (create_combo_button_overlay, reg0), #Out of Ammo Archer Division Set
        (position_set_x, pos1, 485),
        (val_sub, ":inputs_y", 8),
        (position_set_y, pos1, ":inputs_y"),
        (overlay_set_position, reg0, pos1),
        (position_set_x, pos1, 700),
        (position_set_y, pos1, 800),
        (overlay_set_size, reg0, pos1),
        (try_for_range, ":i", 0, 9),
            (str_store_class_name, s1, ":i"),
            (overlay_add_item, reg0, s1),
        (try_end),
        (overlay_add_item, reg0, "@{!}- Disabled -"),
        (position_set_x, pos1, 450),
        (val_add, ":inputs_y", 8),
        (val_sub, ":inputs_y", ":cur_y_shift"),
        
        (create_check_box_overlay, reg0, "mesh_checkbox_off", "mesh_checkbox_on"), #Battle Continuation
        (position_set_y, pos1, ":inputs_y"),
        (overlay_set_position, reg0, pos1),    
        (val_sub, ":inputs_y", ":cur_y_shift"),    
        
        # (create_check_box_overlay, reg0, "mesh_checkbox_off", "mesh_checkbox_on"), #Post-KD Charge
        # (position_set_y, pos1, ":inputs_y"),
        # (overlay_set_position, reg0, pos1),    
        # (val_sub, ":inputs_y", ":cur_y_shift"),

        (create_combo_button_overlay, reg0), #Post-KD Charge
        (position_set_x, pos1, 485),
        (val_sub, ":inputs_y", 8),
        (position_set_y, pos1, ":inputs_y"),
        (overlay_set_position, reg0, pos1),
        (position_set_x, pos1, 700),
        (position_set_y, pos1, 800),
        (overlay_set_size, reg0, pos1),
        (overlay_add_item, reg0, "@{!}- Disabled -"),
        (overlay_add_item, reg0, "@Charge All"),
        (overlay_add_item, reg0, "@Formations AI"),
        (position_set_x, pos1, 450),
        (val_add, ":inputs_y", 8),
        (val_sub, ":inputs_y", ":cur_y_shift"),        
        
        # (create_check_box_overlay, reg0, "mesh_checkbox_off", "mesh_checkbox_on"), #AI Formations
        # (position_set_y, pos1, ":inputs_y"),
        # (overlay_set_position, reg0, pos1),    
        # (val_sub, ":inputs_y", ":cur_y_shift"),    
        
        (create_combo_button_overlay, reg0), #AI Formations
        (position_set_x, pos1, 485),
        (val_sub, ":inputs_y", 8),
        (position_set_y, pos1, ":inputs_y"),
        (overlay_set_position, reg0, pos1),
        (position_set_x, pos1, 700),
        (position_set_y, pos1, 800),
        (overlay_set_size, reg0, pos1),
        (overlay_add_item, reg0, "@{!}- Disabled -"),
        (overlay_add_item, reg0, "@Formations AI"),
        (overlay_add_item, reg0, "@Native AI, w/Formations"),
        (position_set_x, pos1, 450),
        (val_add, ":inputs_y", 8),
        (val_sub, ":inputs_y", ":cur_y_shift"),    
        
        (create_check_box_overlay, reg0, "mesh_checkbox_off", "mesh_checkbox_on"), #AI Spear Brace/Special Orders
        (position_set_y, pos1, ":inputs_y"),
        (overlay_set_position, reg0, pos1),    
        (val_sub, ":inputs_y", ":cur_y_shift"),    
        
        (create_check_box_overlay, reg0, "mesh_checkbox_off", "mesh_checkbox_on"), #Bodyguards
        (position_set_y, pos1, ":inputs_y"),
        (overlay_set_position, reg0, pos1),    
        (val_sub, ":inputs_y", ":cur_y_shift"),

        (create_check_box_overlay, reg0, "mesh_checkbox_off", "mesh_checkbox_on"), #Enhanced Riding AI
        (position_set_y, pos1, ":inputs_y"),
        (overlay_set_position, reg0, pos1),    
        (val_sub, ":inputs_y", ":cur_y_shift"),    
        
        (create_check_box_overlay, reg0, "mesh_checkbox_off", "mesh_checkbox_on"), #Enhanced Combat AI
        (position_set_y, pos1, ":inputs_y"),
        (overlay_set_position, reg0, pos1),    
        (val_sub, ":inputs_y", ":cur_y_shift"), 		
        
        #(create_check_box_overlay, reg0, "mesh_checkbox_off", "mesh_checkbox_on"),
        #(position_set_y, pos1, ":inputs_y"),
        #(overlay_set_position, reg0, pos1),
        #(overlay_set_val, reg0, "$disable_npc_complaints"),
        #(val_sub, ":inputs_y", ":cur_y_shift"),

        #(create_check_box_overlay, reg0, "mesh_checkbox_off", "mesh_checkbox_on"),
        #(position_set_y, pos1, ":inputs_y"),
        #(overlay_set_position, reg0, pos1),
        #(overlay_set_val, reg0, "$cheat_mode"),   
        #(val_sub, ":inputs_y", ":cur_y_shift"),        
        
        (set_container_overlay, -1),
        
        #Set Values of Caba'drin Order Preferences
        (party_get_slot, ":pref_lancer", "p_main_party", slot_party_pref_wu_lance),
        (party_get_slot, ":pref_harcher", "p_main_party", slot_party_pref_wu_harcher),
        (party_get_slot, ":pref_spear", "p_main_party", slot_party_pref_wu_spear),
        (party_get_slot, ":pref_damage", "p_main_party", slot_party_pref_dmg_tweaks),
        
        (party_get_slot, ":pref_bodyguard", "p_main_party", slot_party_pref_bodyguard),
        (party_get_slot, ":pref_battcont", "p_main_party", slot_party_pref_bc_continue),
        (party_get_slot, ":pref_KOcharge", "p_main_party", slot_party_pref_bc_charge_ko),
        (party_get_slot, ":pref_dehorsed", "p_main_party", slot_party_pref_div_dehorse),
        (party_get_slot, ":pref_outofammo", "p_main_party", slot_party_pref_div_no_ammo),
        (party_get_slot, ":pref_formAI", "p_main_party", slot_party_pref_formations),
        (party_get_slot, ":pref_spbrace", "p_main_party", slot_party_pref_spear_brace),
		(party_get_slot, ":pref_riding_ai", "p_main_party", slot_party_pref_riding_ai),
		(party_get_slot, ":pref_combat_ai", "p_main_party", slot_party_pref_combat_ai),
        
        (store_add, ":overlay", "$g_presentation_obj_name_kingdom_1", 1),
        (overlay_set_val, ":overlay", ":pref_lancer"), 
        (val_add, ":overlay", 1),
        (overlay_set_val, ":overlay", ":pref_harcher"), 
        (val_add, ":overlay", 1),
        (overlay_set_val, ":overlay", ":pref_spear"), 
        (val_add, ":overlay", 1),
        (overlay_set_val, ":overlay", ":pref_damage"), 
        (val_add, ":overlay", 1),
        (overlay_set_val, ":overlay", ":pref_dehorsed"),
        (val_add, ":overlay", 1),
        (overlay_set_val, ":overlay", ":pref_outofammo"),
        (val_add, ":overlay", 1),
        (overlay_set_val, ":overlay", ":pref_battcont"),
        (val_add, ":overlay", 1),
        (overlay_set_val, ":overlay", ":pref_KOcharge"),
        (val_add, ":overlay", 1),
        (overlay_set_val, ":overlay", ":pref_formAI"),
        (val_add, ":overlay", 1),
        (overlay_set_val, ":overlay", ":pref_spbrace"),
        (val_add, ":overlay", 1),
        (overlay_set_val, ":overlay", ":pref_bodyguard"),
        (val_add, ":overlay", 1),
        (overlay_set_val, ":overlay", ":pref_riding_ai"),
        (val_add, ":overlay", 1),
        (overlay_set_val, ":overlay", ":pref_combat_ai"),		

        ## Mouse-over Tips    
        (create_text_overlay, reg0, "@PBOD Mod^Options", tf_center_justify|tf_with_outline),
        (overlay_set_color, reg0, 0xFFFFFFFF),
        (position_set_x, pos1, 800),
        (position_set_y, pos1, 600),
        (overlay_set_position, reg0, pos1),
        (position_set_x, pos1, 2000),
        (position_set_y, pos1, 2000),
        (overlay_set_size, reg0, pos1),
        
        (str_store_string, s0, "@Mouse-over options for further information."),
        (create_text_overlay, "$g_presentation_obj_banner_selection_1", s0, tf_double_space|tf_scrollable),
        (position_set_x, pos1, 650),
        (position_set_y, pos1, 400),
        (overlay_set_position, "$g_presentation_obj_banner_selection_1", pos1),
        (position_set_x, pos1, 800),
        (position_set_y, pos1, 800),
        (overlay_set_size, "$g_presentation_obj_banner_selection_1", pos1),
        (position_set_x, pos1, 300),
        (position_set_y, pos1, 150),
        (overlay_set_area_size, "$g_presentation_obj_banner_selection_1", pos1),
        
        
        ## Button
        (position_set_x, pos1, 900),
        (position_set_y, pos1, 25),
        (create_game_button_overlay, "$g_presentation_obj_name_kingdom_2", "@Done", tf_center_justify),
        (overlay_set_position, "$g_presentation_obj_name_kingdom_2", pos1),  

        (position_set_x, pos1, 740),
        (create_game_button_overlay, reg0, "@Restore Defaults", tf_center_justify),
        (overlay_set_position, reg0, pos1),    

        (position_set_x, pos1, 900),
        (position_set_y, pos1, 75),
        (create_game_button_overlay, reg0, "@Key Settings", tf_center_justify),
        (overlay_set_position, reg0, pos1),
      ]),

      (ti_on_presentation_event_state_change,
      [
        (store_trigger_param_1, ":object"),
        (store_trigger_param_2, ":value"),

        (try_begin),
          (eq, ":object", "$g_presentation_obj_name_kingdom_1"),
          (party_set_slot, "p_main_party", slot_party_prebattle_battle_size, ":value"),
        (else_try),
          (eq, ":object", "$g_presentation_obj_name_kingdom_2"),
          
          (party_get_slot, ":battle_size", "p_main_party", slot_party_prebattle_battle_size),
          (val_clamp, ":battle_size", 30, max_battle_size + 1),
          (party_set_slot, "p_main_party", slot_party_prebattle_battle_size, ":battle_size"),
          
          (presentation_set_duration, 0),      
        (else_try),
          (store_add, ":overlay", "$g_presentation_obj_name_kingdom_2", 1),
          (eq, ":object", ":overlay"),
          (call_script, "script_prebattle_set_default_prefs"),
          (start_presentation, "prsnt_pbod_preferences"),
        (else_try),
          (val_add, ":overlay", 1),
          (eq, ":object", ":overlay"),
          (start_presentation, "prsnt_pbod_redefine_keys"),
        (else_try),
          (store_add, ":overlay", "$g_presentation_obj_name_kingdom_1", 1),
          (eq, ":object", ":overlay"), #Lancer          
          (party_set_slot, "p_main_party", slot_party_pref_wu_lance, 0),           
        (else_try),
          (val_add, ":overlay", 1),
          (eq, ":object", ":overlay"), #Horse Archer
          (party_set_slot, "p_main_party", slot_party_pref_wu_harcher, 0),    
        (else_try),
          (val_add, ":overlay", 1),
          (eq, ":object", ":overlay"), #Spear
          (party_set_slot, "p_main_party", slot_party_pref_wu_spear, ":value"),    
        (else_try),
          (val_add, ":overlay", 1),
          (eq, ":object", ":overlay"), #Damage
          (party_set_slot, "p_main_party", slot_party_pref_dmg_tweaks, ":value"),    
        (else_try),
          (val_add, ":overlay", 1),
          (eq, ":object", ":overlay"),  #De-horsed
          (party_set_slot, "p_main_party", slot_party_pref_div_dehorse, ":value"),    
        (else_try),
          (val_add, ":overlay", 1),
          (eq, ":object", ":overlay"), #Out of Ammo
          (party_set_slot, "p_main_party", slot_party_pref_div_no_ammo, ":value"),    
        (else_try),
          (val_add, ":overlay", 1),
          (eq, ":object", ":overlay"), #Battle Continuation
          (party_set_slot, "p_main_party", slot_party_pref_bc_continue, ":value"),
        (else_try),
          (val_add, ":overlay", 1),
          (eq, ":object", ":overlay"), #KO Charge
          (party_set_slot, "p_main_party", slot_party_pref_bc_charge_ko, ":value"),
        (else_try),
          (val_add, ":overlay", 1),
          (eq, ":object", ":overlay"), #AI Formations
          (party_set_slot, "p_main_party", slot_party_pref_formations, ":value"),
        (else_try),
          (val_add, ":overlay", 1),
          (eq, ":object", ":overlay"), #AI Spear Brace/Special Orders
          (party_set_slot, "p_main_party", slot_party_pref_spear_brace, ":value"),          
        (else_try),
          (val_add, ":overlay", 1),
          (eq, ":object", ":overlay"), #Bodyguard
          (party_set_slot, "p_main_party", slot_party_pref_bodyguard, ":value"),
        (else_try),
          (val_add, ":overlay", 1),
          (eq, ":object", ":overlay"), #Enhanced Riding AI
          (party_set_slot, "p_main_party", slot_party_pref_riding_ai, ":value"),
        (else_try),
          (val_add, ":overlay", 1),
          (eq, ":object", ":overlay"), #Enhanced Combat AI
          (party_set_slot, "p_main_party", slot_party_pref_combat_ai, ":value"),
        (else_try),		
        #  (val_add, ":overlay", 1),
        #  (eq, ":object", ":overlay"), #NPC Complaints
        #  (assign, "$disable_npc_complaints", ":value"),
        #(else_try),
        #  (val_add, ":overlay", 1),
        #  (eq, ":object", ":overlay"), #Cheat Mode
        #  (assign, "$cheat_mode", ":value"),
        (try_end),
      ]),
      
      (ti_on_presentation_mouse_enter_leave, #Mouse-Over Pref-Tips
      [
        (store_trigger_param_1, ":object"),
        (store_trigger_param_2, ":enter_leave"), #0 if mouse enters, 1 if mouse leaves
        (try_begin),
          (eq, ":enter_leave", 1),
          #Clear String...or do nothing?
        (else_try),
          (eq, ":enter_leave", 0),
          (store_add, ":overlay", "$g_presentation_obj_name_kingdom_1", 1), #Input
          (assign, ":overlay_2", "$g_presentation_obj_banner_selection_2"), #Heading
          (try_begin),
            (lt, ":object", ":overlay_2"),
            (overlay_set_text, "$g_presentation_obj_banner_selection_1", "@Mouse-over options for further information."),
          (else_try),
            (this_or_next|eq, ":object", ":overlay_2"),
            (eq, ":object", ":overlay"), #Lancer          
            (overlay_set_text, "$g_presentation_obj_banner_selection_1", "@Weapon Use Fix for Lancers will force mounted bots with lances to use them unless they are surrounded by enemies."),       
          (else_try),
            (val_add, ":overlay", 1),
            (val_add, ":overlay_2", 1),
            (this_or_next|eq, ":object", ":overlay_2"),
            (eq, ":object", ":overlay"), #Horse Archer
            (overlay_set_text, "$g_presentation_obj_banner_selection_1", "@Weapon Use Fix for Horse Archers will force mounted bots with bows to use them until they run out of ammo."),       
          (else_try),
            (val_add, ":overlay", 1),
            (val_add, ":overlay_2", 1),
            (this_or_next|eq, ":object", ":overlay_2"),
            (eq, ":object", ":overlay"), #Spear
            (overlay_set_text, "$g_presentation_obj_banner_selection_1", "@Weapon Use Fix for Spear/Polearms will force infantry bots with polearms to use them unless they are surrounded by enemies."),       
          (else_try),
            (val_add, ":overlay", 1),
            (val_add, ":overlay_2", 1),
            (this_or_next|eq, ":object", ":overlay_2"),
            (eq, ":object", ":overlay"), #Damage
            (overlay_set_text, "$g_presentation_obj_banner_selection_1", "@Damage tweaks will give a flat boost to damage from spears to horses, and charge damage from horses to infantry, in an attempt to compensate for poor AI use of polearms and charges."),        
          (else_try),
            (val_add, ":overlay", 1),
            (val_add, ":overlay_2", 1),
            (this_or_next|eq, ":object", ":overlay_2"),
            (eq, ":object", ":overlay"),  #De-horsed
            (overlay_set_text, "$g_presentation_obj_banner_selection_1", "@Mounted bots, once their horse dies, can be re-assinged to a division of your choosing. If active, AI bots will be reassigned to infantry."),         
          (else_try),
            (val_add, ":overlay", 1),
            (val_add, ":overlay_2", 1),
            (this_or_next|eq, ":object", ":overlay_2"),
            (eq, ":object", ":overlay"), #Out of Ammo
            (overlay_set_text, "$g_presentation_obj_banner_selection_1", "@Foot archer bots, once out of ammo, can be re-assinged to a division of your choosing. If active, AI bots will be reassigned to infantry."),  
          (else_try),
            (val_add, ":overlay", 1),
            (val_add, ":overlay_2", 1),
            (this_or_next|eq, ":object", ":overlay_2"),
            (eq, ":object", ":overlay"), #Battle Continuation
            (overlay_set_text, "$g_presentation_obj_banner_selection_1", "@Battle Continuation allows your troops to continue fighting after you are knocked out."),
          (else_try),
            (val_add, ":overlay", 1),
            (val_add, ":overlay_2", 1),
            (this_or_next|eq, ":object", ":overlay_2"),
            (eq, ":object", ":overlay"), #KO Charge
            (overlay_set_text, "$g_presentation_obj_banner_selection_1", "@If Battle Continuation is active, you can select what your troops will do after you get knocked out: Disabled has them continue their previous orders; Charge all will give everyone a charge order; Formations AI (if active for the AI) will allow the new AI to take over for you."),
          (else_try),
            (val_add, ":overlay", 1),
            (val_add, ":overlay_2", 1),
            (this_or_next|eq, ":object", ":overlay_2"),
            (eq, ":object", ":overlay"), #AI Formations
            (overlay_set_text, "$g_presentation_obj_banner_selection_1", "@Select your prefered Battle AI: Disabled is Native AI; Formations AI both allows the AI to use formations and changes their battle decision-making; Native AI w/Formations is Native AI but carries out the Native AI with basic formations."),
          (else_try),
            (val_add, ":overlay", 1),
            (val_add, ":overlay_2", 1),
            (this_or_next|eq, ":object", ":overlay_2"),
            (eq, ":object", ":overlay"), #AI Spear Brace/Special Orders
            (overlay_set_text, "$g_presentation_obj_banner_selection_1", "@Enabling AI Special Orders allows the AI teams to use volley fire (crossbows), skirmish mode (bow-users), and spear-bracing (polearm infantry)."),
          (else_try),
            (val_add, ":overlay", 1),
            (val_add, ":overlay_2", 1),
            (this_or_next|eq, ":object", ":overlay_2"),
            (eq, ":object", ":overlay"), #Bodyguard
            (overlay_set_text, "$g_presentation_obj_banner_selection_1", "@Bodyguards allows your companions to serve as your character's bodyguards in town and village scenes. The number of bodyguards depends on your character's leadership and renown."),
          (else_try),
            (val_add, ":overlay", 1),
            (val_add, ":overlay_2", 1),
            (this_or_next|eq, ":object", ":overlay_2"),
            (eq, ":object", ":overlay"), #NPC Complaints
			(overlay_set_text, "$g_presentation_obj_banner_selection_1", "@Enabling hit and run for AI archers."),
            #(overlay_set_text, "$g_presentation_obj_banner_selection_1", "@Disabling NPC Complaints will mute your companion's complaints about eachother or your decisions. It will not remove the consequences of their opinions, however."),
          (else_try),
            (val_add, ":overlay", 1),
            (val_add, ":overlay_2", 1),
            (this_or_next|eq, ":object", ":overlay_2"),
            (eq, ":object", ":overlay"), #Cheat Mode
			(overlay_set_text, "$g_presentation_obj_banner_selection_1", "@Optimizing the pathing, targetting and melee AI behaviours."),
            #(overlay_set_text, "$g_presentation_obj_banner_selection_1", "@The cheat/debug mode activates debug messages as well as the 'cheatmenu' in your Camp Menu and additional options under Reports."),
          (try_end),
        (try_end),    
    ]),
    ]),

 # Key configuration by Dunde
 ("pbod_redefine_keys", 0, mesh_message_window, 
  [(ti_on_presentation_load, 
    [(presentation_set_duration, 999999),
     (set_fixed_point_multiplier, 1000),
     (assign, "$g_presentation_obj_custom_battle_designer_1", 0),                    
     (call_script, "script_init_key_config"), #CABA-Initialize Slots to use TEMP troop
     (init_position, pos1),
     # Tittle
     (position_set_y, pos1, 650),  (position_set_x, pos1, 500),  # Tittle Position
     (position_set_x, pos2, 2000), (position_set_y, pos2, 2000), # Tittle Size
     (create_text_overlay, reg0, "@Keys Configuration", tf_center_justify),
     (overlay_set_position, reg0, pos1), (overlay_set_size, reg0, pos2),
     (position_set_y, pos1, 25), (position_set_x, pos1, 50),   # Notes' Position
     (position_set_x, pos2, 750), (position_set_y, pos2, 750), # Note's Size
     (create_text_overlay, "$g_presentation_obj_custom_battle_designer_2", "@Press Esc to^^Disable a key", tf_left_align),
     (overlay_set_position, "$g_presentation_obj_custom_battle_designer_2", pos1), 
     (overlay_set_size, "$g_presentation_obj_custom_battle_designer_2", pos2),
     (overlay_set_color, "$g_presentation_obj_custom_battle_designer_2", 0x600000),  # Note's Color  
     (overlay_set_alpha, "$g_presentation_obj_custom_battle_designer_2", 0x00),      # Note's invisible  
     (position_set_y, pos1, 600),                             # First KeyConfig's Label Position
     (try_begin),
        (le, number_of_keys, two_columns_limit),                 # KeyConfig's Labels Size
        (position_set_x, pos2, 1000), (position_set_y, pos2, 1000), 
        (position_set_x, pos1, 50),
     (else_try),
        (position_set_x, pos2, 750), (position_set_y, pos2, 750),   
         (position_set_x, pos1, 25),
     (try_end),     
     (position_set_x, pos3, 120),  (position_set_y, pos3, 30),   # KeyConfig's Buttons Size     
     (try_for_range, ":no", 0, number_of_keys),
        (store_add, ":off_string", ":no", key_names_begin),             # Offset for Label String
        (store_add, ":off_overlay2", ":no", slot_key_overlay_begin),    # Offset for Buttons Overlay
        (store_add, ":off_overlay1", ":off_overlay2", number_of_keys),  # Offset for Labels Overlay
        (create_text_overlay, reg1, ":off_string", tf_left_align),              # Creating,
        (troop_set_slot, key_config_data, ":off_overlay1", reg1),               # Saving,
        (overlay_set_position, reg1, pos1), (overlay_set_size, reg1, pos2),     # Positioning, and Resizing KeyConfig Labels
        (try_begin),
           (le, number_of_keys, two_columns_limit),
           (position_move_x, pos1, 35),                                         # Move Right to give spave between labels and buttons
        (else_try),
           (position_move_x, pos1, 24), 
        (try_end),   
        (create_game_button_overlay, reg2, "str_no_string", tf_center_justify), # Creating,
        (troop_set_slot, key_config_data, ":off_overlay2", reg2),               # Saving,
        (overlay_set_position, reg2, pos1), (overlay_set_size, reg2, pos3),     # Positioning, and Resizing KeyConfig Buttons
        (try_begin),
           (le, number_of_keys, two_columns_limit),
           (position_move_x, pos1, -35),                                        # Move Left
        (else_try),
           (position_move_x, pos1, -24), 
        (try_end),   
        (position_move_y, pos1, -4),              # Move left, and move down for next keyconfig's label and button
        (try_begin),          
            (le, number_of_keys, two_columns_limit), 
            (try_begin),
               (eq, number_of_keys/2, ":no"),                                   # Half of keyconfigs positions are moved up and right
               (assign, ":move_y", number_of_keys/2+1), (val_mul, ":move_y", 4),
               (position_move_y, pos1, ":move_y"),
               (position_move_x, pos1, 50),
            (try_end),
        (else_try),          
            (try_begin),
               (eq, number_of_keys/3, ":no"),          # 2nd 1/3 part of keyconfigs positions are moved up and right
               (assign, ":move_y", number_of_keys/3+1), (val_mul, ":move_y", 4),
               (position_move_y, pos1, ":move_y"),
               (position_move_x, pos1, 33),
            (try_end),
            (try_begin),
               (eq, 2*number_of_keys/3, ":no"),        # 3nd 2/3 part of keyconfigs positions are moved up and right
               (assign, ":move_y", number_of_keys/3+1), (val_mul, ":move_y", 4),
               (position_move_y, pos1, ":move_y"),
               (position_move_x, pos1, 33),
            (try_end),
        (try_end),  
     (try_end),
     (call_script, "script_set_config_slot_key_config"),                        # Get Current KeyConfig
     (call_script, "script_update_key_config_buttons"),                         # Writting the  Captions
     # Other Buttons
     (position_set_y, pos1, 25), (position_set_x, pos1, 900),                   
     (create_game_button_overlay, "$g_presentation_obj_custom_battle_designer_3", "@OK", tf_center_justify),          # OK Button
     (overlay_set_position, "$g_presentation_obj_custom_battle_designer_3", pos1),
     (position_move_x, pos1, -16),
     (create_game_button_overlay, "$g_presentation_obj_custom_battle_designer_4", "@Reset", tf_center_justify),       # RESET Button
     (overlay_set_position, "$g_presentation_obj_custom_battle_designer_4", pos1),                       
     (position_move_x, pos1, -16),
     (create_game_button_overlay, "$g_presentation_obj_custom_battle_designer_5", "@Default", tf_center_justify),     # DEFAULT Button
     (overlay_set_position, "$g_presentation_obj_custom_battle_designer_5", pos1),
     (create_game_button_overlay, "$g_presentation_obj_custom_battle_designer_6", "@PBOD Preferences"),
     (position_set_x, pos1, 900),
     (position_set_y, pos1, 75),
     (overlay_set_position, "$g_presentation_obj_custom_battle_designer_6", pos1),
    ]),
    
   (ti_on_presentation_event_state_change, 
    [(store_trigger_param_1, ":object"),
     (assign, ":found", 0),
     (store_add, ":upper_limit", slot_key_overlay_begin, number_of_keys),    #  Checking
     (try_for_range, ":slot", slot_key_overlay_begin, ":upper_limit"),       # for all KeyConfigs Button Overlay
        (troop_slot_eq, key_config_data, ":slot", ":object"),                # Found the Right Button Overlay?
        (assign, "$g_presentation_obj_custom_battle_designer_1", 1),                              # Flag the event
        (assign, "$g_presentation_credits_obj_1", ":object"),                                      # Get The Overlay 
        (overlay_set_text, "$g_presentation_credits_obj_1", "@Press a key", tf_center_justify),    # Change it's caption & color
        (overlay_set_color, "$g_presentation_credits_obj_1", 0x0000FF),
        (overlay_set_hilight_color, "$g_presentation_credits_obj_1", 0x0000FF),
        (store_sub, "$g_presentation_credits_obj_2", ":slot",  number_of_keys),
        (assign, ":found", ":slot"), (assign, ":upper_limit", ":slot"),      # Break the Loops
     (try_end),     
     (try_begin),
        (gt, ":found", 0),                                                  # Skip, the Object is a keyconfig button 
     (else_try),    
       (eq, ":object", "$g_presentation_obj_custom_battle_designer_3"),     # OK pressed?
       (call_script, "script_set_global_var_key_config"),                   # Write the Config to Global Variable
       (call_script, "script_update_key_config_buttons"), # it's not neccessary, just incase
       (presentation_set_duration, 0),    # Quit from KeyConfig Presentation
     (else_try),    
       (eq, ":object", "$g_presentation_obj_custom_battle_designer_4"),     # RESET pressed? 
       (call_script, "script_set_config_slot_key_config"),                  # Reload Current Config
       (call_script, "script_update_key_config_buttons"),                   # Update Captions
     (else_try),
       (eq, ":object", "$g_presentation_obj_custom_battle_designer_5"),     # DEFAULT pressed?
       (call_script, "script_reset_to_default_keys"),                       # Reload Default Config
       (call_script, "script_update_key_config_buttons"),                   # Update Captions 
     (else_try),
       (eq, ":object", "$g_presentation_obj_custom_battle_designer_6"),     # RETURN TO PREFERENCES
       (call_script, "script_set_global_var_key_config"),                   # Write the Config to Global Variable
       (start_presentation, "prsnt_pbod_preferences"),                      # Go To Preferences
     (try_end),
     (try_begin),
        (eq, "$g_presentation_obj_custom_battle_designer_1", 1),                    # if a Button's waiting to set 
        (overlay_set_alpha, "$g_presentation_obj_custom_battle_designer_2", 0xFF),  # then make The Note visible
     (try_end), ]),

  (ti_on_presentation_run, 
   [(eq, "$g_presentation_obj_custom_battle_designer_1", 1),                                     # if a Button's waiting to set 
    (assign, "$g_presentation_obj_custom_battle_designer_1", 0),                                 #
    (assign, ":found", 0),
    (store_add, ":upper_limit", slot_key_defs_begin, number_of_all_keys),   # Checking
    (try_for_range, ":no", slot_key_defs_begin,  ":upper_limit"),           # for all keys
       (troop_get_slot, ":key", key_config_data, ":no"),                    # reload the key from slot
       (key_clicked, ":key"),                                               # if that key's clicked?
       (troop_set_slot, key_config_data, "$g_presentation_credits_obj_2", ":key"),                # Yes, then save the new config for the button
       (assign, ":found", ":key"),                                          # Flag we found it
       (assign, ":upper_limit", ":no"),                                     # Break the Loops
    (try_end),
    (try_begin),
       (gt, ":found", 0),                                                   # We Found the key
    (else_try),   
       (key_clicked, key_escape),                                           # ESC clicked?
       (troop_set_slot, key_config_data, "$g_presentation_credits_obj_2", 0xff),      # Disable the button
    (else_try),
       (assign, "$g_presentation_obj_custom_battle_designer_1", 1),          # else? do nothing. The Button's still waiting
    (try_end),
    (try_begin),
       (eq, "$g_presentation_obj_custom_battle_designer_1", 0),                     # if there's new keyconfig for the button
       (try_for_range, ":no", slot_keys_begin, slot_keys_begin + number_of_keys),   # Check if there is another button use the same key
           (neq, ":no",  "$g_presentation_credits_obj_2"),
           (troop_slot_eq, key_config_data, ":no", ":found"),                       # if there is, then disable the button
           (troop_set_slot, key_config_data, ":no", 0xff),
       (try_end),                          
       (overlay_set_hilight_color, "$g_presentation_credits_obj_1", 0x00ff00),      # Set the button color back to normal
       (overlay_set_alpha, "$g_presentation_obj_custom_battle_designer_2", 0x00),   # The Note must be dissapear again
       (call_script, "script_update_key_config_buttons"),                           # Update Captions
    (try_end), 
    ]),  
   ]),      
    
 ("caba_order_display", prsntf_read_only,0,[
  (ti_on_presentation_load,
    [(set_fixed_point_multiplier, 1000),
    (try_for_range, ":i", slot_party_pref_prefs_set, slot_party_pref_prefs_set+9),
    #(try_for_range, ":i", 0, 9),
      #(troop_set_slot, "trp_temp_array_a", ":i", -1),
      (party_set_slot, "p_temp_party", ":i", -1),
    (try_end),
    
    (call_script, "script_init_key_config"),
    
    (str_store_string, s10, "str_key_f5"), #F5
    (str_store_string, s11, "str_key_f6"), #F6
    (str_store_string, s12, "str_key_f7"), #F7
    (str_store_string, s13, "str_key_f8"), #F8
    (call_script, "script_str_store_key_name", s14, "$key_order_9"), #F9
    (call_script, "script_str_store_key_name", s15, "$key_order_10"), #F10
    
    (assign, ":y_position", 500),
    (try_begin), #Figure out which orders to display, set strings
      (party_slot_eq, "p_main_party", slot_party_gk_order, 0),
      (try_begin),
        (this_or_next|eq, "$g_next_menu", "mnu_simple_encounter"), #mst_lead_charge
        (eq, "$g_next_menu", "mnu_join_battle"),
        (str_store_string, s1, "@{s10} - Formations orders"),
        (str_store_string, s2, "@{s11} - Weapon orders"),
        (str_store_string, s3, "@{s12} - Shield orders"),
        (str_store_string, s4, "@{s13} - Attack orders"),
      
        (assign, ":num_orders", 4),
      (else_try),
        (str_store_string, s1, "@{s11} - Weapon orders"),
        (str_store_string, s2, "@{s12} - Shield orders"),
        (str_store_string, s3, "@{s13} - Attack orders"),
      
        (assign, ":num_orders", 3),
      (try_end),
      (assign, ":y_position", 413), #470
    (else_try),
      (party_slot_eq, "p_main_party", slot_party_gk_order, gk_order_5),
      (str_store_string, s1, "@{s10} - Ranks"),
      (str_store_string, s2, "@{s11} - Shieldwall"),
      (str_store_string, s3, "@{s12} - Wedge"),
      (str_store_string, s4, "@{s13} - Square"),
      (str_store_string, s5, "@{s14} - No Formation"),
      (str_store_string, s6, "@{s15} - Escape Menu"),
      
      (assign, ":num_orders", 6),
    (else_try),  
      (party_slot_eq, "p_main_party", slot_party_gk_order, gk_order_6),
      (str_store_string, s1, "@{s11} - One Handers"),
      (str_store_string, s2, "@{s12} - Two Handers"),
      (str_store_string, s3, "@{s13} - Polearms"),
      (str_store_string, s4, "@{s14} - Ranged"),
      (str_store_string, s5, "@{s15} - Escape Menu"),

      (assign, ":num_orders", 5),
    (else_try),
      (party_slot_eq, "p_main_party", slot_party_gk_order, gk_order_7),
      (str_store_string, s1, "@{s11} - Use Shields"),
      (str_store_string, s2, "@{s12} - No Shields"),
      (str_store_string, s3, "@{s13} - Free"),
      (str_store_string, s4, "@{s15} - Escape Menu"),
      
      (assign, ":num_orders", 4),
    (else_try),
      (party_slot_eq, "p_main_party", slot_party_gk_order, gk_order_8),
      (str_store_string, s1, "@{s10} - End Order"),
      (str_store_string, s2, "@{s11} - Skirmish"),
      (str_store_string, s3, "@{s12} - Volley Fire"),
      (str_store_string, s4, "@{s13} - Brace Polearms"),
      (str_store_string, s5, "@{s15} - Escape Menu"),
      
      (assign, ":num_orders", 5),
    (try_end),
    (party_get_slot, ":starting_order", "p_main_party", slot_party_gk_order),
    (party_set_slot, "p_main_party_backup", slot_party_gk_order, ":starting_order"),

    (try_for_range, ":i", 0, ":num_orders"),
      (store_add, ":string", ":i", 1),
      (str_store_string_reg, s0, ":string"),

      (create_text_overlay, ":overlay", s0),
      (overlay_set_color, ":overlay", 0xFFFFFF),
      (position_set_x, pos1, 1000),
      (position_set_y, pos1, 1000),
      (overlay_set_size, ":overlay", pos1),
      (position_set_x, pos1, 0),
      (position_set_y, pos1, ":y_position"),
      (overlay_set_position, ":overlay", pos1),
      
      #(troop_set_slot, "trp_temp_array_a", ":i", ":overlay"),
      (store_add, ":slot", ":i", slot_party_pref_prefs_set),
      (party_set_slot, "p_temp_party", ":slot", ":overlay"),
      
      (val_sub, ":y_position", 30),
    (try_end),
    (store_mul, ":add_back", 30, ":num_orders"),
    (val_add, ":y_position", ":add_back"),
    (val_sub, ":y_position", 3),
    (try_for_range, ":i", 0, ":num_orders"),
      (create_mesh_overlay, ":overlay", "mesh_order_frame"),
      (position_set_x, pos1, 700),#712
      (position_set_y, pos1, 700),#780
      (overlay_set_size, ":overlay", pos1),
      
      (position_set_x, pos1, 0),
      (position_set_y, pos1, ":y_position"),
      (overlay_set_position, ":overlay", pos1),
      
      (val_sub, ":y_position", 30),
    (try_end),
    
    (try_begin),
      (neg|party_slot_eq, "p_main_party", slot_party_gk_order, 0),
      (create_mesh_overlay, ":overlay", "mesh_white_plane"),
      (overlay_set_color, ":overlay", 0),
      (overlay_set_alpha, ":overlay", 0x10),
      (position_set_x, pos1, 14000),
      (position_set_y, pos1, 4500),
      (overlay_set_size, ":overlay", pos1),
      
      (position_set_x, pos1, 0),
      (position_set_y, pos1, 498),
      (overlay_set_position, ":overlay", pos1),
    (try_end),    
    (presentation_set_duration, 999999),
     ]),
     
  (ti_on_presentation_run,
       [(store_trigger_param_1, ":cur_time"),
       
        #(try_begin),
        #  (gt, ":cur_time", 200),
        #  (game_key_clicked, gk_view_orders),
        #  (try_for_agents, ":cur_agent"),
        #    (agent_set_slot, ":cur_agent", slot_agent_map_overlay_id, 0),
        #  (try_end),
        #  (presentation_set_duration, 0),
        #  (start_presentation, "prsnt_mini_map"),
        #(try_end),
       
        (gt, ":cur_time", 250), #0.25 Second after Pres. Start
        (try_begin),
          (this_or_next|game_key_clicked, gk_view_orders),
          (this_or_next|key_clicked, "$key_order_9"), #current exit key
          (this_or_next|game_key_clicked, gk_order_1),
          (this_or_next|game_key_clicked, gk_order_2),
          (this_or_next|game_key_clicked, gk_order_3), #Order Keys not used by Expanded Orders
          (this_or_next|game_key_clicked, gk_order_4),
          (this_or_next|game_key_clicked, gk_group0_hear),
          (this_or_next|game_key_clicked, gk_group1_hear),
          (this_or_next|game_key_clicked, gk_group2_hear),
          (this_or_next|game_key_clicked, gk_group3_hear),
          (this_or_next|game_key_clicked, gk_group4_hear),
          (this_or_next|game_key_clicked, gk_group5_hear),
          (this_or_next|game_key_clicked, gk_group6_hear),
          (this_or_next|game_key_clicked, gk_group7_hear),
          (this_or_next|game_key_clicked, gk_group8_hear),
          (this_or_next|game_key_clicked, gk_everyone_hear),
          (game_key_clicked, gk_reverse_order_group),
          (presentation_set_duration, 0),
          (start_presentation, "prsnt_mini_map"),
        (else_try),
          (assign, ":key", -1),
          (try_begin),
            (game_key_clicked, gk_order_5),
            (assign, ":key", 5),
          (else_try),
            (game_key_clicked, gk_order_6),
            (assign, ":key", 6),
          (else_try),
            (game_key_clicked, gk_order_7),
            (assign, ":key", 7),
          (else_try),
            (game_key_clicked, gk_order_8),
            (assign, ":key", 8),
          (else_try),
            (key_clicked, "$key_order_9"),
            (assign, ":key", 9),
          (try_end),
          (neq, ":key", -1),
          (try_begin),
            (party_slot_eq, "p_main_party_backup", slot_party_gk_order, 0),
            (presentation_set_duration, 0),
            (start_presentation, "prsnt_mini_map"),
          (else_try),
            (try_begin),
              (party_slot_eq, "p_main_party_backup", slot_party_gk_order, gk_order_5),
              (assign, ":min_key", 5),
              (assign, ":max_key", 9),
            (else_try),
              (party_slot_eq, "p_main_party_backup", slot_party_gk_order, gk_order_6),
              (assign, ":min_key", 6),
              (assign, ":max_key", 9),
            (else_try),
              (party_slot_eq, "p_main_party_backup", slot_party_gk_order, gk_order_7),
              (assign, ":min_key", 6),
              (assign, ":max_key", 8),
            (else_try),
              (party_slot_eq, "p_main_party_backup", slot_party_gk_order, gk_order_8),
              (assign, ":min_key", 5),
              (assign, ":max_key", 8),
            (try_end),
            (store_sub, ":num_orders", ":max_key", ":min_key"),
            (val_add, ":num_orders", 1),
            (store_sub, ":key_pressed", ":key", ":min_key"),
            (is_between, ":key_pressed", 0, ":num_orders"),
            (val_add, ":num_orders", 1), #For the cancel box
            (try_for_range, ":i", 0, ":num_orders"),
              #(troop_get_slot, ":overlay", "trp_temp_array_a", ":i"),
              (store_add, ":slot", ":i", slot_party_pref_prefs_set),
              (party_get_slot, ":overlay", "p_temp_party", ":slot"), 
              (neq, ":i", ":key_pressed"),
              (overlay_animate_to_alpha, ":overlay", 400, 0x00),
              (val_add, ":overlay", ":num_orders"),
              (overlay_animate_to_alpha, ":overlay", 400, 0x00),
            (else_try),          
              (overlay_animate_to_alpha, ":overlay", 1100, 0x00),
              (val_add, ":overlay", ":num_orders"),
              (overlay_animate_to_alpha, ":overlay", 1100, 0x00),
            (try_end),      
            (presentation_set_duration, 200), #100
          (try_end),
        (try_end),
       ]),
 ]),    

 ("caba_camera_mode_display", prsntf_read_only, 0, [
    (ti_on_presentation_load,
      [
        (set_fixed_point_multiplier, 1000),
        (presentation_set_duration, 200),
        
        (try_begin),
            (main_hero_fallen),
            (str_store_string, s0, "@DeathCam"),
        (else_try),
            (str_store_string, s0, "@Camera"),
        (try_end),
        (try_begin),
            (eq, "$cam_mode", 0),
            (str_store_string, s1, "@Default"),
        (else_try),
            (eq, "$cam_mode", 1),
            (str_store_string, s1, "@Follow"),
        (else_try),
            (eq, "$cam_mode", 2),
            (str_store_string, s1, "@Free"),
        (try_end),
        
        (str_store_string, s0, "@{!}{s0} Mode: {s1}"),
        
        (create_text_overlay, "$g_presentation_obj_name_kingdom_1", s0),
        (overlay_set_color, "$g_presentation_obj_name_kingdom_1", 0xFFFFFF),
        (position_set_x, pos1, 1000),
        (position_set_y, pos1, 1000),
        (overlay_set_size, "$g_presentation_obj_name_kingdom_1", pos1),
        (position_set_x, pos1, 750),
        (position_set_y, pos1, 625),
        (overlay_set_position, "$g_presentation_obj_name_kingdom_1", pos1),
        
        (create_mesh_overlay, "$g_presentation_obj_name_kingdom_2", "mesh_order_frame"), #order_frame" mp_ui_command_panel
        (position_set_x, pos1, 570),
        (position_set_y, pos1, 725),
        (overlay_set_size, "$g_presentation_obj_name_kingdom_2", pos1),        
        (position_set_x, pos1, 745),
        (position_set_y, pos1, 622),
        (overlay_set_position, "$g_presentation_obj_name_kingdom_2", pos1),
       ]),
    (ti_on_presentation_run,
      [   
        (store_trigger_param_1, ":time"),
        (ge, ":time", 1000),        
        (overlay_animate_to_alpha, "$g_presentation_obj_name_kingdom_1", 200, 0x00),
        (overlay_animate_to_alpha, "$g_presentation_obj_name_kingdom_2", 200, 0x00),
       ]),
 ]),
    
 ("prebattle_custom_divisions", 0, mesh_message_window, [ #diff mesh?
    (ti_on_presentation_load,
     [(set_fixed_point_multiplier, 1000),
     
      (try_for_range, ":i", soldiers_begin, soldiers_end),
        (troop_set_slot, "trp_temp_array_a", ":i", -1), #Overlays
        (troop_set_slot, "trp_temp_array_b", ":i", -1), #Split- Percent
        (troop_set_slot, "trp_temp_array_c", ":i", -1), #Split- Division
      (try_end),
    
      #Headers
      (create_text_overlay, reg0, "@Troop Assignments", tf_center_justify|tf_single_line|tf_with_outline),
      (overlay_set_color, reg0, 0xFFFFFFFF),
      (position_set_x, pos1, 1500),
      (position_set_y, pos1, 1500),
      (overlay_set_size, reg0, pos1),
      (position_set_x, pos1, 500),
      (position_set_y, pos1, 680),
      (overlay_set_position, reg0, pos1),

      (create_text_overlay, reg0, "@Split Troops into Secondary Divisions", tf_center_justify|tf_single_line),
      (position_set_x, pos1, 500),
      (position_set_y, pos1, 650),
      (overlay_set_position, reg0, pos1),
      
      (create_text_overlay, reg0, "@Troops by^ Primary Division",  tf_center_justify),
      (position_set_x, pos1, 170),
      (position_set_y, pos1, 600),
      (overlay_set_position, reg0, pos1),

      (position_set_x, pos2, 800),
      (position_set_y, pos2, 800),
      
      (create_text_overlay, reg0, "@# in^Main Division", tf_center_justify),
      (position_set_x, pos1, 352),
      #(position_set_y, pos1, 600),
      (overlay_set_position, reg0, pos1),
      (overlay_set_size, reg0, pos2),
      
      (create_text_overlay, reg0, "@Show/^Hide", tf_center_justify),
      (position_set_x, pos1, 425),
      #(position_set_y, pos1, 600),
      (overlay_set_position, reg0, pos1),
      (overlay_set_size, reg0, pos2),
      
      (create_text_overlay, reg0, "@# in^Secondary Division", tf_center_justify),
      (position_set_x, pos1, 630),
      #(position_set_y, pos1, 600),
      (overlay_set_position, reg0, pos1),
      (overlay_set_size, reg0, pos2),
      
      (create_text_overlay, reg0, "@Secondary^Division", tf_center_justify),
      (position_set_x, pos1, 755), #added 55 to all
      #(position_set_y, pos1, 600),
      (overlay_set_position, reg0, pos1),
      (overlay_set_size, reg0, pos2),

      #Container
      (str_clear, s0),
      (create_text_overlay, "$g_presentation_obj_bugdet_report_container", s0, tf_scrollable_style_2),
      (position_set_x, pos1, 105),
      (position_set_y, pos1, 80),
      (overlay_set_position, "$g_presentation_obj_bugdet_report_container", pos1),
      (position_set_x, pos1, 750),
      (position_set_y, pos1, 500),
      (overlay_set_area_size, "$g_presentation_obj_bugdet_report_container", pos1),
      (set_container_overlay, "$g_presentation_obj_bugdet_report_container"),
   
      #Count Classes to Set Proper Size
      (party_get_num_companion_stacks, ":num_of_stacks", "p_main_party"),
      (assign, ":num_of_classes", 0),
      (try_for_range, ":class", 0, 9),
        (assign, ":end", ":num_of_stacks"),
        (try_for_range, ":i", 0, ":end"),
            (party_stack_get_troop_id, ":troop_id", "p_main_party", ":i"),
            (neq, ":troop_id", "trp_player"),
            (neg|troop_is_hero, ":troop_id"),
            (troop_get_class, ":trp_class", ":troop_id"),
            (eq, ":trp_class", ":class"),

            (val_add, ":num_of_classes", 1),
            (assign, ":end", 0), #Break
        (try_end),
      (try_end),
      
      #Calculate Container Size
      (assign, ":cur_y_adder", 20),
      (store_mul, ":cur_y", ":num_of_stacks", ":cur_y_adder"),
      (store_mul, ":class_y_addition", ":num_of_classes", 3), #For spaces, headings, lines
      (val_mul, ":class_y_addition", ":cur_y_adder"),
      (val_add, ":cur_y", ":class_y_addition"),
      
      #Troop List and Setting Controls
      (try_for_range, ":class", 0, 9),
        (assign, ":class_has_troops", 0),
        (assign, ":every_other", 0),
        (assign, ":title_y", ":cur_y"),

        (try_for_range, ":i", 0, ":num_of_stacks"),
            (party_stack_get_troop_id, ":troop_id", "p_main_party", ":i"),
            (neq, ":troop_id", "trp_player"),
            (neg|troop_is_hero, ":troop_id"),
            (troop_get_class, ":trp_class", ":troop_id"),
            (eq, ":trp_class", ":class"),
            
            (party_stack_get_size, ":stack_size", "p_main_party", ":i"),
            (party_stack_get_num_wounded, ":stack_wounded", "p_main_party", ":i"),
            (val_sub, ":stack_size", ":stack_wounded"),
            (gt, ":stack_size", 0),
            (assign, ":class_has_troops", 1),
            
            (val_sub, ":cur_y", ":cur_y_adder"),
            
            (try_begin), #Shade every other row
                (eq, ":every_other", 1),
                (create_mesh_overlay, reg0, "mesh_white_plane"),
                (position_set_x, pos1, 36200),
                (position_set_y, pos1, 1000),
                (overlay_set_size, reg0, pos1),
                (position_set_x, pos1, 15),
                (position_set_y, pos1, ":cur_y"),
                (overlay_set_position, reg0, pos1),
                (overlay_set_color, reg0, 0xFFFFFF),
                (overlay_set_alpha, reg0, 0x50),
                (assign, ":every_other", 0),
            (else_try),
                (assign, ":every_other", 1),
            (try_end),
            
            (str_store_troop_name, s1, ":troop_id"),
            (create_text_overlay, reg0, s1),
            (position_set_x, pos2, 900),
            (position_set_y, pos2, 900),
            (overlay_set_size, reg0, pos2),
            (position_set_x, pos1, 15),
            (position_set_y, pos1, ":cur_y"),
            (overlay_set_position, reg0, pos1),
            
            (assign, reg0, ":stack_size"),
            (str_store_string, s1, "str_reg0"), #Number in Primary Division
            (create_text_overlay, reg0, s1),
            (position_set_x, pos1, 240),
            (position_set_y, pos1, ":cur_y"),
            (overlay_set_position, reg0, pos1),
            (overlay_set_size, reg0, pos2),
            
            #Tick box to activate alternate division
            (create_check_box_overlay, reg0, "mesh_checkbox_off", "mesh_checkbox_on"), 
            (position_set_x, pos1, 315),
            (position_set_y, pos1, ":cur_y"),
            (overlay_set_position, reg0, pos1),                        
                            
            (create_slider_overlay, reg0, 0, 51), #Percentage
            (position_set_x, pos1, 465),
            (position_set_y, pos1, ":cur_y"),
            (overlay_set_position, reg0, pos1),    
            (position_set_x, pos1, 500),
            (position_set_y, pos1, 500),
            (overlay_set_size, reg0, pos1),                
            (troop_set_slot, "trp_temp_array_a", ":troop_id", reg0), #store overlay ID for tracking changes
                
            (create_text_overlay, reg0, "@{!}% to split"), #Percent Value
            (position_set_x, pos1, 700),
            (position_set_y, pos1, 700),
            (overlay_set_size, reg0, pos1),
            (position_set_x, pos1, 465),
            (position_set_y, pos1, ":cur_y"),
            (overlay_set_position, reg0, pos1),
                        
            (str_clear, s0),
            (create_text_overlay, reg0, s0), #Number in alt division
            (overlay_set_size, reg0, pos2),
            (position_set_x, pos1, 520),
            (position_set_y, pos1, ":cur_y"),
            (overlay_set_position, reg0, pos1),
            
            (create_combo_button_overlay, reg0), #Which alt division
            (try_for_range, ":button_class", 0, 9),
                (str_store_class_name, s0, ":button_class"),
                (overlay_add_item, reg0, s0),            
            (try_end),
            (overlay_add_item, reg0, "@{!}- Disabled -"),
            (position_set_x, pos1, 700),
            (position_set_y, pos1, ":cur_y"),
            (overlay_set_position, reg0, pos1),    
            (position_set_x, pos1, 600),
            (position_set_y, pos1, 600),
            (overlay_set_size, reg0, pos1),    
            (overlay_set_val, reg0, 9),
            

            #Check for saved values, set things appropriately
            (troop_get_slot, ":alt_percent", ":troop_id", slot_troop_prebattle_alt_division_percent),
            (troop_get_slot, ":alt_division", ":troop_id", slot_troop_prebattle_alt_division),
            (assign, ":display", 0),
            (try_begin),
                (this_or_next|gt, ":alt_percent", 0),
                (is_between, ":alt_division", 1, 9), #skip 0 if it is an empty slot
                (assign, ":display", 1),
            (try_end),
            (troop_get_slot, ":slider", "trp_temp_array_a", ":troop_id"),
            (store_add, ":end", ":slider", 4),
            (try_for_range, ":overlay", ":slider", ":end"),
                (overlay_set_display, ":overlay", ":display"),    
            (try_end),
            (eq, ":display", 1),
            (store_sub, ":overlay", ":slider", 1),
            (overlay_set_val, ":overlay", 1), #Tick box ticked
            
            (try_begin),
                (is_between, ":alt_division", 0, 9), #skip 0 if it is an empty slot
                (val_add, ":overlay", 4),
                (overlay_set_val, ":overlay", ":alt_division"),
            (try_end),
            
            #Calculate/display saved split
            (gt, ":alt_percent", 0),
            (overlay_set_val, ":slider", ":alt_percent"),
            (store_add, ":overlay", ":slider", 1),
            (assign, reg0, ":alt_percent"),
            (overlay_set_text, ":overlay", "str_reg0_percent"),
            (store_mul, ":alt_num", ":alt_percent", ":stack_size"),
            (val_div, ":alt_num", 100),
            (val_sub, ":stack_size", ":alt_num"),
            (val_sub, ":overlay", 3),
            (assign, reg0, ":stack_size"),
            (overlay_set_text, ":overlay", "str_reg0"),
            (val_add, ":overlay", 4),
            (assign, reg0, ":alt_num"),
            (overlay_set_text, ":overlay", "str_reg0"),
        (try_end), #End Stack/Troop Loop
        (eq, ":class_has_troops", 1),
        
        (str_store_class_name, s1, ":class"),
        (create_text_overlay, reg0, s1, tf_with_outline), 
        (position_set_x, pos1, 1000),
        (position_set_y, pos1, 1000),
        (overlay_set_size, reg0, pos1),
        (position_set_x, pos1, 25),
        (position_set_y, pos1, ":title_y"),
        (overlay_set_position, reg0, pos1),
        
        (val_sub, ":cur_y", ":cur_y_adder"),
        
        #Draw Line
        (create_mesh_overlay, reg0, "mesh_white_plane"),
        (position_set_x, pos1, 37000),
        (position_set_y, pos1, 150),
        (overlay_set_size, reg0, pos1),
        (position_set_x, pos1, 5),
        (position_set_y, pos1, ":cur_y"),
        (overlay_set_position, reg0, pos1),
        (overlay_set_color, reg0, 0),
        
        (val_sub, ":cur_y", ":cur_y_adder"),
        (val_sub, ":cur_y", ":cur_y_adder"),
     (try_end), #End Class Loop

     (set_container_overlay, -1),
     
         #Tick box to activate/disable splitting divisions
        (create_check_box_overlay, "$g_presentation_obj_custom_battle_designer_20", "mesh_checkbox_off", "mesh_checkbox_on"), 
        (position_set_x, pos1, 830),
        (position_set_y, pos1, 680),
        (overlay_set_position, "$g_presentation_obj_custom_battle_designer_20", pos1),    
        (party_get_slot, ":value", "p_main_party", slot_party_prebattle_customized_divisions),
        (overlay_set_val, "$g_presentation_obj_custom_battle_designer_20", ":value"),
        (str_store_string, s0, "@Disabled"),
        (str_store_string, s1, "@Split Active"),
        (str_store_string_reg, s2, ":value"),
        
         (create_text_overlay, reg0, s2),
        (position_set_x, pos1, 850),
        (position_set_y, pos1, 675),
        (overlay_set_position, reg0, pos1),
            
        #Bottom Buttons
          (create_game_button_overlay, "$g_presentation_obj_battle_25", "@Clear All"), 
        (position_set_x, pos1, 420),
        (position_set_y, pos1, 25),
        (overlay_set_position, "$g_presentation_obj_battle_25", pos1),
        
        (create_game_button_overlay, "$g_presentation_obj_battle_26", "@Discard Changes"), 
        (position_set_x, pos1, 580),
        (position_set_y, pos1, 25),
        (overlay_set_position, "$g_presentation_obj_battle_26", pos1),
        
        (create_game_button_overlay, "$g_presentation_obj_battle_27", "@Save"),
        (position_set_x, pos1, 740),
        (position_set_y, pos1, 25),
        (overlay_set_position, "$g_presentation_obj_battle_27", pos1),
        
        (create_game_button_overlay, "$g_presentation_obj_battle_28", "@Done"),
        (position_set_x, pos1, 900),
        (position_set_y, pos1, 25),
        (overlay_set_position, "$g_presentation_obj_battle_28", pos1),     
     
     (presentation_set_duration, 999999),
     ]),
    (ti_on_presentation_run,
      [    
        (try_begin),
            (key_clicked, key_escape),
            (presentation_set_duration, 0),
            (party_set_slot, "p_main_party", slot_party_prebattle_customized_divisions, 0),
        (try_end),
      ]),
    (ti_on_presentation_event_state_change,
     [
       (store_trigger_param_1, ":object"),
       (store_trigger_param_2, ":value"),
       
        (try_begin), #Done
            (eq, ":object", "$g_presentation_obj_battle_28"),
            (presentation_set_duration, 0),
        (else_try), #Save
            (eq, ":object", "$g_presentation_obj_battle_27"),
            #Loop to Set Troop Slots from Temp Arrays
            (party_get_num_companion_stacks, ":num_of_stacks", "p_main_party"),
            (try_for_range, ":i", 0, ":num_of_stacks"),
                (party_stack_get_troop_id, ":troop_id", "p_main_party", ":i"),
                (troop_get_slot, ":percent", "trp_temp_array_b", ":troop_id"),
                (try_begin),
                    (gt, ":percent", -1),
                    (troop_set_slot, ":troop_id", slot_troop_prebattle_alt_division_percent, ":percent"),
                (try_end),
                (troop_get_slot, ":division", "trp_temp_array_c", ":troop_id"),    
                (try_begin),
                    (gt, ":division", -1),
                    (troop_set_slot, ":troop_id", slot_troop_prebattle_alt_division, ":division"),
                (try_end),                
            (try_end),            
            (party_set_slot, "p_main_party", slot_party_prebattle_customized_divisions, 1),
            (overlay_set_val, "$g_presentation_obj_custom_battle_designer_20", 1),
            (store_add, ":overlay", "$g_presentation_obj_custom_battle_designer_20", 1),
            (overlay_set_text, ":overlay", "@Split Active"),        
        (else_try), #Discard (reload saved)
            (eq, ":object", "$g_presentation_obj_battle_26"),
            (start_presentation, "prsnt_prebattle_custom_divisions"), 
        (else_try), #Clear All(&Disable)
            (eq, ":object", "$g_presentation_obj_battle_25"),
            (try_for_range, ":troop_id", soldiers_begin, soldiers_end), 
                (troop_set_slot, ":troop_id", slot_troop_prebattle_alt_division, -1),
                (troop_set_slot, ":troop_id", slot_troop_prebattle_alt_division_percent, -1),
            (try_end),
            (party_set_slot, "p_main_party", slot_party_prebattle_customized_divisions, 0),
            (start_presentation, "prsnt_prebattle_custom_divisions"),     
        (else_try),    #Active/Disable Tick Box
            (eq, ":object", "$g_presentation_obj_custom_battle_designer_20"),
            (str_store_string, s1, "@Split Active"),
            (str_store_string, s0, "@Disabled"),
            (str_store_string_reg, s2, ":value"),
            (store_add, ":overlay", ":object", 1),
            (overlay_set_text, ":overlay", s2),     
            (party_set_slot, "p_main_party", slot_party_prebattle_customized_divisions, ":value"),
        (else_try), #Troop-specific settings
            (party_get_num_companion_stacks, ":num_of_stacks", "p_main_party"),
            (try_for_range, ":i", 0, ":num_of_stacks"),
                (party_stack_get_troop_id, ":troop_id", "p_main_party", ":i"),
                (troop_get_slot, ":overlay", "trp_temp_array_a", ":troop_id"), 
                (eq, ":object", ":overlay"), #Slider
                (is_between, ":value", 0, 51),
                (troop_set_slot, "trp_temp_array_b", ":troop_id", ":value"), #temp storage until 'save' is clicked
                
                (overlay_set_val, ":object", ":value"), #looks cleaner
                (store_add, ":other_overlay", ":overlay", 1),
                (assign, reg0, ":value"),
                (overlay_set_text, ":other_overlay", "str_reg0_percent"),    
                
                (party_stack_get_size, ":stack_size", "p_main_party", ":i"),
                (party_stack_get_num_wounded, ":stack_wounded", "p_main_party", ":i"),
                (val_sub, ":stack_size", ":stack_wounded"),
                
                #Calculate/display new split
                (store_mul, ":alt_num", ":value", ":stack_size"),
                (val_div, ":alt_num", 100),
                (val_sub, ":stack_size", ":alt_num"),
                (val_sub, ":other_overlay", 3),
                (assign, reg0, ":stack_size"),
                (overlay_set_text, ":other_overlay", "str_reg0"),
                (val_add, ":other_overlay", 4),
                (assign, reg0, ":alt_num"),
                (overlay_set_text, ":other_overlay", "str_reg0"),                
            (else_try),
                (val_sub, ":overlay", 1),
                (eq, ":object", ":overlay"), #Check Box
                (store_add, ":begin", ":overlay", 1),
                (store_add, ":end", ":overlay", 5),
                (try_for_range, ":other_overlay", ":begin", ":end"),
                    (overlay_set_display, ":other_overlay", ":value"),
                (try_end),
            (else_try),
                (val_add, ":overlay", 4), #Division combo box
                (eq, ":object", ":overlay"),                
                (troop_set_slot, "trp_temp_array_c", ":troop_id", ":value"), #temp storage until 'save' is clicked
            (try_end),    #Troop Loop
        (try_end),            
     ]),
    ]),            
    
## Prebattle Orders & Deployment End


  ("faction_selection",0,mesh_load_window,[
      (ti_on_presentation_load,
       [

        (try_begin),
          (store_sub, ":cur_kingdom", npc_kingdoms_begin, 1),
          (this_or_next | eq, "$g_start_faction", ":cur_kingdom"),
          (eq, "$g_start_faction",  "fac_player_supporters_faction"),
          (store_sub, "$g_start_faction", npc_kingdoms_end, 1),
          #(assign, "$g_start_faction", npc_kingdoms_end-1),
        (else_try),
          (this_or_next | lt, "$g_start_faction", 0),
          (this_or_next | lt, "$g_start_faction", npc_kingdoms_begin),
          (ge, "$g_start_faction", npc_kingdoms_end),
          (assign, "$g_start_faction", npc_kingdoms_begin),
        (try_end),

        (str_store_faction_name, s1, "$g_start_faction"),
        (create_text_overlay, reg1, s1, tf_center_justify),
        (position_set_x, pos1, 500),
        (position_set_y, pos1, 625),
        (overlay_set_position, reg1, pos1),
        (overlay_set_text, reg1, s1),


        (create_game_button_overlay, "$g_presentation_obj_faction_selection_2", "@Next"),
        (position_set_x, pos1, 900),
        (position_set_y, pos1, 60),
        (overlay_set_position, "$g_presentation_obj_faction_selection_2", pos1),

        (create_game_button_overlay, "$g_presentation_obj_faction_selection_3", "@Previous"),
        (position_set_x, pos1, 100),
        (position_set_y, pos1, 60),
        (overlay_set_position, "$g_presentation_obj_faction_selection_3", pos1),

        (create_game_button_overlay, "$g_presentation_obj_faction_selection_4", "@Accept"),
        (position_set_x, pos1, 500),
        (position_set_y, pos1, 50),
        (overlay_set_position, "$g_presentation_obj_faction_selection_4", pos1),

        (store_add, "$g_presentation_banner_start", "$g_presentation_obj_banner_selection_1", 1),


        (try_begin),
            (eq, "$g_start_faction","fac_kingdom_1"),
            (create_mesh_overlay, reg1, "mesh_pic_arms_kingdom_1"),
        (else_try),
            (eq, "$g_start_faction","fac_kingdom_2"),
            (create_mesh_overlay, reg1, "mesh_pic_arms_kingdom_2"),
        (else_try),
            (eq, "$g_start_faction","fac_kingdom_3"),
            (create_mesh_overlay, reg1, "mesh_pic_arms_kingdom_3"),
        (else_try),
            (eq, "$g_start_faction","fac_kingdom_4"),
            (create_mesh_overlay, reg1, "mesh_pic_arms_kingdom_4"),
        (else_try),
            (eq, "$g_start_faction","fac_kingdom_5"),
            (create_mesh_overlay, reg1, "mesh_pic_arms_kingdom_5"),
        (else_try),
            (eq, "$g_start_faction","fac_kingdom_6"),
            (create_mesh_overlay, reg1, "mesh_pic_arms_kingdom_6"),
        (else_try),
            (eq, "$g_start_faction","fac_kingdom_7"),
            (create_mesh_overlay, reg1, "mesh_pic_arms_kingdom_7"),
        (else_try),
            (eq, "$g_start_faction","fac_kingdom_8"),
            (create_mesh_overlay, reg1, "mesh_pic_arms_kingdom_8"),
        (else_try),
            (eq, "$g_start_faction","fac_kingdom_9"),
            (create_mesh_overlay, reg1, "mesh_pic_arms_kingdom_9"),
        (else_try),
            (eq, "$g_start_faction","fac_kingdom_10"),
            (create_mesh_overlay, reg1, "mesh_pic_arms_kingdom_10"),
        (else_try),
            (eq, "$g_start_faction","fac_kingdom_11"),
            (create_mesh_overlay, reg1, "mesh_pic_arms_kingdom_11"),
        (else_try),
            (eq, "$g_start_faction","fac_kingdom_12"),
            (create_mesh_overlay, reg1, "mesh_pic_arms_kingdom_12"),
        (else_try),
            (eq, "$g_start_faction","fac_kingdom_13"),
            (create_mesh_overlay, reg1, "mesh_pic_arms_kingdom_13"),
        (else_try),
            (eq, "$g_start_faction","fac_kingdom_14"),
            (create_mesh_overlay, reg1, "mesh_pic_arms_kingdom_14"),
        (try_end),
        
        
        
        (position_set_x, pos1, 150),
        (position_set_y, pos1, 130),
        
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 500),
        (position_set_y, pos1, 600),
        
        (overlay_set_position, reg1, pos1),
        
        (presentation_set_duration, 999999),
        ]),
        
      (ti_on_presentation_event_state_change,
       [(store_trigger_param_1, ":object"),
        (try_begin),
          (eq, ":object", "$g_presentation_obj_faction_selection_2"),
          (val_add, "$g_start_faction", 1),
          (try_begin),
            (neg|faction_slot_eq, "$g_start_faction", slot_faction_state, sfs_active),
            (assign, ":end", 0),
            (try_for_range, ":kingdoms", "$g_start_faction", npc_kingdoms_end),
              (eq, ":end", 0),
              (faction_slot_eq,":kingdoms", slot_faction_state, sfs_active),
              (assign, "$g_start_faction", ":kingdoms"),
              (assign, ":end", ":kingdoms"),
            (try_end),
            (try_for_range, ":kingdoms", npc_kingdoms_begin, "$g_start_faction"),
              (neg|faction_slot_eq, "$g_start_faction", slot_faction_state, sfs_active),
              (eq, ":end", 0),
              (faction_slot_eq,":kingdoms", slot_faction_state, sfs_active),
              (assign, "$g_start_faction", ":kingdoms"),
              (assign, ":end", ":kingdoms"),
            (try_end),
          (try_end),
          (start_presentation, "prsnt_faction_selection"),
        (else_try),
          (eq, ":object", "$g_presentation_obj_faction_selection_3"),
          (val_sub, "$g_start_faction", 1),
          (try_begin),
            (neg|faction_slot_eq, "$g_start_faction", slot_faction_state, sfs_active),
            (assign, ":end", 0),
            (try_for_range_backwards, ":kingdoms", npc_kingdoms_begin, "$g_start_faction"),
              (eq, ":end", 0),
              (faction_slot_eq,":kingdoms", slot_faction_state, sfs_active),
              (assign, "$g_start_faction", ":kingdoms"),
              (assign, ":end", ":kingdoms"),
            (try_end),
            (try_for_range_backwards, ":kingdoms", "$g_start_faction", npc_kingdoms_end),
              (neg|faction_slot_eq, "$g_start_faction", slot_faction_state, sfs_active),
              (eq, ":end", 0),
              (faction_slot_eq,":kingdoms", slot_faction_state, sfs_active),
              (assign, "$g_start_faction", ":kingdoms"),
              (assign, ":end", ":kingdoms"),
            (try_end),
          (try_end),
          (start_presentation, "prsnt_faction_selection"),
        (else_try),
          (eq, ":object", "$g_presentation_obj_faction_selection_4"),
          (presentation_set_duration, 0),
          (jump_to_menu, "mnu_banner_selection_for_noble"),
          #(try_begin),
            #(eq, "$background_type", cb_noble),
            #(jump_to_menu, "mnu_auto_return"),
            #(start_presentation, "prsnt_banner_selection"),
          #(else_try),
            #(presentation_set_duration, 0),
            #(jump_to_menu,"mnu_auto_return"),
          #(try_end),
        (try_end),
        ]),
        
      (ti_on_presentation_run,
       [
        ]),
      ]),

  ("taragoth_lords_report", 0, mesh_load_window, [

    (ti_on_presentation_load,
    [
        (presentation_set_duration, 999999),
        (set_fixed_point_multiplier, 1000),

        #title
        (create_text_overlay, reg0, "@CURRENT COMMANDER'S REPORT!", tf_left_align),
        (position_set_x, pos1, 50),
        (position_set_y, pos1, 650),
        (overlay_set_position, reg0, pos1),
        (position_set_x, pos1, 1500),
        (position_set_y, pos1, 1500),
        (overlay_set_size, reg0, pos1),
        
        #Player Name
        #(create_text_overlay, reg0, "@'{playername}'", tf_center_justify),
        #(position_set_x, pos1, 500),
        #(position_set_y, pos1, 615),
        #(overlay_set_position, reg0, pos1),

        (assign, ":cur_y_adder", 40),  #the amount of space between lines
        (assign, ":cur_y", 580),
        (position_set_x, pos1, 50),        
        
        #Commander_name
        (str_store_troop_name, s19, "$enlisted_lord"),
        (create_text_overlay, reg0, "@Your Commander: {s19}", tf_left_align),    
        (position_set_y, pos1, ":cur_y"),
        (overlay_set_position, reg0, pos1),
        (val_sub, ":cur_y", ":cur_y_adder"),

        #Player_Relation
        (call_script, "script_troop_get_player_relation", "$enlisted_lord"),
        #(assign, ":commander_relation", reg0),
        (create_text_overlay, reg0, "@Commander Relation: {reg0}", tf_left_align),
        (position_set_y, pos1, ":cur_y"),
        (overlay_set_position, reg0, pos1),
        (val_sub, ":cur_y", ":cur_y_adder"),

        #Faction_name
        (store_faction_of_troop, reg1, "$enlisted_lord"),
        (str_store_faction_name, s20, reg1),
        (create_text_overlay, reg0, "@Enlisted Faction: {s20}", tf_left_align),
        (position_set_y, pos1, ":cur_y"),
        (overlay_set_position, reg0, pos1),
        (val_sub, ":cur_y", ":cur_y_adder"),

        #Rank_name
        (str_store_troop_name, s21, "$player_cur_troop"),
        (create_text_overlay, reg0, "@Current Rank: {s21}", tf_left_align),
        (position_set_y, pos1, ":cur_y"),
        (overlay_set_position, reg0, pos1),
        (val_sub, ":cur_y", ":cur_y_adder"),
        
        #xp-to-next promotion
    #(troop_get_slot, ":service_xp_cur", "trp_player", slot_troop_contribution),    
        (troop_get_upgrade_troop, ":upgrade_troop", "$player_cur_troop", 0),
        (str_store_string, s1, "@N/A"),
        (try_begin),
            (gt, ":upgrade_troop", 1), #make sure troop is valid and not player troop
      (troop_get_slot, ":old_renown", "trp_player", slot_troop_contribution),
      (call_script,"script_get_upgrade_contribution"),
      #(assign,":required_xp",reg0),
            (store_sub, reg0, reg0, ":old_renown"), #required XP from script
            (gt, reg0, 0),
            (str_store_string, s1, "str_reg0"),
        (try_end),
        (create_text_overlay, reg0, "@Contribution to next promotion: {s1}", tf_left_align),
        (position_set_y, pos1, ":cur_y"),
        (overlay_set_position, reg0, pos1),
        (val_sub, ":cur_y", ":cur_y_adder"),

        #enlisted_time
        (store_current_day, ":cur_day"),
        (troop_get_slot, ":service_day_start", "trp_player", slot_troop_freelancer_start_date),
        (store_sub, ":service_length", ":cur_day", ":service_day_start"),
        (assign, reg20, ":service_length"),
        (create_text_overlay, reg0, "@Days in service: {reg20}", tf_left_align),
        (position_set_y, pos1, ":cur_y"),
        (overlay_set_position, reg0, pos1),
        (val_sub, ":cur_y", ":cur_y_adder"),

        #current_wage
        (store_character_level, ":level", "$player_cur_troop"),
        #pays player 10 times the troop level
        (store_mul, ":weekly_pay", 10, ":level"),
        (call_script, "script_game_get_troop_wage", "$player_cur_troop", -1),
        (val_add, ":weekly_pay", reg0),
        (val_mul, ":weekly_pay", 10),
        (assign, reg23, ":weekly_pay"),
        (create_text_overlay, reg0, "@Current Wage: {reg23} denars.", tf_left_align),
        (position_set_y, pos1, ":cur_y"),
        (overlay_set_position, reg0, pos1),
        (val_sub, ":cur_y", ":cur_y_adder"),
        
        #next_pay
        (str_store_date, s25, "$g_next_pay_time"),
        (create_text_overlay, reg0, "@Next Pay/Promotion day: {s25}", tf_left_align),
        (position_set_y, pos1, ":cur_y"),
        (overlay_set_position, reg0, pos1),
        (val_sub, ":cur_y", ":cur_y_adder"),

        #next_pay
        (troop_get_slot, ":service_day_start", "trp_player", slot_troop_freelancer_start_xp),
        #(store_add, ":service_day_start", 30),
        (store_add, ":retire_day", ":service_day_start", 30*24),
        (store_add, ":leave_day", ":service_day_start", 7*24),
        
        (str_store_date, s25, ":retire_day"),
        (create_text_overlay, reg0, "@Next retire_day: {s25}", tf_left_align),
        (position_set_y, pos1, ":cur_y"),
        (overlay_set_position, reg0, pos1),
        (val_sub, ":cur_y", ":cur_y_adder"),
        #next_pay
        (str_store_date, s25, ":leave_day"),
        (create_text_overlay, reg0, "@Next leave_day: {s25}", tf_left_align),
        (position_set_y, pos1, ":cur_y"),
        (overlay_set_position, reg0, pos1),
        (val_sub, ":cur_y", ":cur_y_adder"),

        #Commanders_troops size(right side)
        (store_party_size_wo_prisoners,":army_size","$enlisted_party"), 
        (assign, reg26, ":army_size"),
        (create_text_overlay, reg0, "@Army size: {reg26}", tf_left_align),
        (position_set_x, pos1, 800),
        (position_set_y, pos1, 60),
        (overlay_set_position, reg0, pos1),
        (position_set_x, pos1, 900),
        (position_set_y, pos1, 900),
        (overlay_set_size, reg0, pos1),

        #commanders_army_title
        (create_text_overlay, reg0, "@Commander's Army", tf_left_align),
        (position_set_x, pos1, 500),
        (position_set_y, pos1, 430),
        (overlay_set_position, reg0, pos1),

        #camp  pic        
        (create_mesh_overlay, reg0, "mesh_pic_camp"),
        (position_set_x, pos1, 450),
        (position_set_y, pos1, 380),
        (overlay_set_position, reg0, pos1),
        (position_set_x, pos1, 500),
        (position_set_y, pos1, 500),
        (overlay_set_size, reg0, pos1),    
         #Faction arms(try_end),
         
        (store_faction_of_troop, ":cmdr_faction", "$enlisted_lord"),
        (try_begin),
            (eq, ":cmdr_faction","fac_kingdom_1"),
            (create_mesh_overlay, reg0, "mesh_pic_arms_kingdom_1"),
        (else_try),
            (eq, ":cmdr_faction","fac_kingdom_2"),
            (create_mesh_overlay, reg0, "mesh_pic_arms_kingdom_2"),
        (else_try),
            (eq, ":cmdr_faction","fac_kingdom_3"),
            (create_mesh_overlay, reg0, "mesh_pic_arms_kingdom_3"),
        (else_try),
            (eq, ":cmdr_faction","fac_kingdom_4"),
            (create_mesh_overlay, reg0, "mesh_pic_arms_kingdom_4"),
        (else_try),
            (eq, ":cmdr_faction","fac_kingdom_5"),
            (create_mesh_overlay, reg0, "mesh_pic_arms_kingdom_5"),
        (else_try),
            (eq, ":cmdr_faction","fac_kingdom_6"),
            (create_mesh_overlay, reg0, "mesh_pic_arms_kingdom_6"),
        (else_try),
            (eq, ":cmdr_faction","fac_kingdom_7"),
            (create_mesh_overlay, reg0, "mesh_pic_arms_kingdom_7"),
        (else_try),
            (eq, ":cmdr_faction","fac_kingdom_8"),
            (create_mesh_overlay, reg0, "mesh_pic_arms_kingdom_8"),
        (else_try),
            (eq, ":cmdr_faction","fac_kingdom_9"),
            (create_mesh_overlay, reg0, "mesh_pic_arms_kingdom_9"),
        (else_try),
            (eq, ":cmdr_faction","fac_kingdom_10"),
            (create_mesh_overlay, reg0, "mesh_pic_arms_kingdom_10"),
        (else_try),
            (eq, ":cmdr_faction","fac_kingdom_11"),
            (create_mesh_overlay, reg0, "mesh_pic_arms_kingdom_11"),
        (else_try),
            (eq, ":cmdr_faction","fac_kingdom_12"),
            (create_mesh_overlay, reg0, "mesh_pic_arms_kingdom_12"),
        (else_try),
            (eq, ":cmdr_faction","fac_kingdom_13"),
            (create_mesh_overlay, reg0, "mesh_pic_arms_kingdom_13"),
        (else_try),
            (eq, ":cmdr_faction","fac_kingdom_14"),
            (create_mesh_overlay, reg0, "mesh_pic_arms_kingdom_14"),
        (try_end),

        (position_set_x, pos1, 180),
        (position_set_y, pos1, 80),
        (overlay_set_position, reg0, pos1),
        (position_set_x, pos1, 600),
        (position_set_y, pos1, 600),
        (overlay_set_size, reg0, pos1),

        (str_clear, s0),
        (create_text_overlay, "$g_presentation_obj_bugdet_report_container", s0, tf_scrollable_style_2),
        (position_set_x, pos1, 560),
        (position_set_y, pos1, 100),
        (overlay_set_position, "$g_presentation_obj_bugdet_report_container", pos1),
        (position_set_x, pos1, 400),
        (position_set_y, pos1, 300), 
        (overlay_set_area_size, "$g_presentation_obj_bugdet_report_container", pos1),
        (set_container_overlay, "$g_presentation_obj_bugdet_report_container"), #all of this above here puts the list of troops in a scrollable box

        (assign, ":cur_y_adder", 40),  #the amount of space between lines
        (party_get_num_companion_stacks, ":num_of_stacks", "$enlisted_party"),
        (store_mul, ":cur_y", ":num_of_stacks", ":cur_y_adder"),
  
        (try_for_range, ":i", 1, ":num_of_stacks"), #1, to skip the commander
            (party_stack_get_troop_id, ":troop_id", "$enlisted_party", ":i"),
            (party_stack_get_size, ":stack_size", "$enlisted_party", ":i"),
            (party_stack_get_num_wounded, ":stack_wounded", "$enlisted_party", ":i"),
            (val_sub, ":stack_size", ":stack_wounded"),
                        
            (str_store_troop_name, s1, ":troop_id"),
            (create_text_overlay, reg0, s1),
            (position_set_x, pos1, 25),
            (position_set_y, pos1, ":cur_y"),
            (overlay_set_position, reg0, pos1),
            (position_set_x, pos1, 900),
            (position_set_y, pos1, 900),
            (overlay_set_size, reg0, pos1),
            
            
            (assign, reg0, ":stack_size"),
            (create_text_overlay, reg0, "str_reg0"),
            (position_set_x, pos1, 325),
            (position_set_y, pos1, ":cur_y"),
            (overlay_set_position, reg0, pos1),
            (position_set_x, pos1, 900),
            (position_set_y, pos1, 900),
            (overlay_set_size, reg0, pos1),

            
            (val_sub, ":cur_y", ":cur_y_adder"),
        (try_end), #End Stack/Troop Loop

        (set_container_overlay, -1), #end the box so you can keep putting other things elsewhere
    
        #done button
        (create_game_button_overlay, "$g_presentation_obj_custom_battle_designer_19", "@Done", tf_center_justify),
        (position_set_x, pos1, 500),
        (position_set_y, pos1, 25),
        (overlay_set_position, "$g_presentation_obj_custom_battle_designer_19", pos1),

    ]),
    (ti_on_presentation_event_state_change,
    [
        (store_trigger_param_1, ":object"),
        (try_begin),
            (eq, ":object", "$g_presentation_obj_custom_battle_designer_19"),
            (presentation_set_duration, 0),
        (try_end),
    ]),
   ]),


  ("party_size_and_morale", 0, mesh_load_window, [
    (ti_on_presentation_load,
      [
        (presentation_set_duration, 999999),
        (set_fixed_point_multiplier, 1000),
  
        (create_text_overlay, reg1, "@Party Morale", tf_center_justify),
        (position_set_x, pos1, 1500),
        (position_set_y, pos1, 1500),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 260),
        (position_set_y, pos1, 650),
        (overlay_set_position, reg1, pos1),
        
        (position_set_x, pos3, 900),
        (position_set_y, pos3, 900),
        (position_set_x, pos1, 80),
        (position_set_x, pos2, 440),
        (assign, ":cur_y", 600),
        (assign, ":y_offset", 30),
        
        (call_script, "script_get_player_party_morale_values"),
        (assign, ":ideal_morale", reg1),
        
        # Base morale
        (create_text_overlay, reg1, "@Base morale", tf_left_align),
        (position_set_y, pos1, ":cur_y"),
        (overlay_set_position, reg1, pos1),
        (overlay_set_size, reg1, pos3),
        (create_text_overlay, reg1, "@+50", tf_right_align),
        (position_set_y, pos2, ":cur_y"),
        (overlay_set_position, reg1, pos2),
        (overlay_set_color, reg1, 0x00AA00),
        (overlay_set_size, reg1, pos3),
        (val_sub, ":cur_y", ":y_offset"),
        
        # Party size
        (assign, reg0, "$g_player_party_morale_modifier_party_size"),
        (create_text_overlay, reg1, "@Party size", tf_left_align),
        (position_set_y, pos1, ":cur_y"),
        (overlay_set_position, reg1, pos1),
        (overlay_set_size, reg1, pos3),
        (try_begin),
          (gt, reg0, 0),
          (str_store_string, s1, "@-{reg0}"),
          (assign, ":dest_color", 0xAA0000),
        (else_try),
          (eq, reg0, 0),
          (str_store_string, s1, "@{reg0}"),
          (assign, ":dest_color", 0x000000),
        (try_end),
        (create_text_overlay, reg1, s1, tf_right_align),
        (position_set_y, pos2, ":cur_y"),
        (overlay_set_position, reg1, pos2),
        (overlay_set_color, reg1, ":dest_color"),
        (overlay_set_size, reg1, pos3),
        (val_sub, ":cur_y", ":y_offset"),
        
        # Leadership
        (assign, reg0, "$g_player_party_morale_modifier_leadership"),
        (create_text_overlay, reg1, "@Leadership", tf_left_align),
        (position_set_y, pos1, ":cur_y"),
        (overlay_set_position, reg1, pos1),
        (overlay_set_size, reg1, pos3),
        (try_begin),
          (gt, reg0, 0),
          (str_store_string, s1, "@+{reg0}"),
          (assign, ":dest_color", 0x00AA00),
        (else_try),
          (eq, reg0, 0),
          (str_store_string, s1, "@{reg0}"),
          (assign, ":dest_color", 0x000000),
        (try_end),
        (create_text_overlay, reg1, s1, tf_right_align),
        (position_set_y, pos2, ":cur_y"),
        (overlay_set_position, reg1, pos2),
        (overlay_set_color, reg1, ":dest_color"),
        (overlay_set_size, reg1, pos3),
        (val_sub, ":cur_y", ":y_offset"),
        
        # honor
        (assign, reg0, "$g_player_party_morale_modifier_honor"),
        (create_text_overlay, reg1, "@honor", tf_left_align),
        (position_set_y, pos1, ":cur_y"),
        (overlay_set_position, reg1, pos1),
        (overlay_set_size, reg1, pos3),
        (try_begin),
          (gt, reg0, 0),
          (str_store_string, s1, "@+{reg0}"),
          (assign, ":dest_color", 0x00AA00),
        (else_try),
          (lt, reg0, 0),
          (str_store_string, s1, "@{reg0}"),
          (assign, ":dest_color", 0xAA0000),
        (else_try),
          (eq, reg0, 0),
          (str_store_string, s1, "@{reg0}"),
          (assign, ":dest_color", 0x000000),
        (try_end),
        (create_text_overlay, reg1, s1, tf_right_align),
        (position_set_y, pos2, ":cur_y"),
        (overlay_set_position, reg1, pos2),
        (overlay_set_color, reg1, ":dest_color"),
        (overlay_set_size, reg1, pos3),
        (val_sub, ":cur_y", ":y_offset"),
        
        # nobility_troop_bonu
        
        (assign, ":num_human", 0),
        (assign, ":num_chaos", 0),
        (assign, ":num_death", 0),
        (assign, ":num_order", 0),
        (assign, ":num_nature", 0),
        (faction_get_slot, ":actor_religion", "fac_player_faction", slot_faction_religion),
        
        
        (create_text_overlay, reg1, "@nobility_troop_bonu", tf_left_align),
        (position_set_y, pos1, ":cur_y"),
        (overlay_set_position, reg1, pos1),
        (overlay_set_size, reg1, pos3),
        (party_get_num_companion_stacks, ":num_stacks","p_main_party"),
        (assign, ":nobility_troop_bonus_morale", 0),
        (try_for_range, ":i_stack", 1, ":num_stacks"),
          (party_stack_get_troop_id, ":stack_troop","p_main_party",":i_stack"),
          (try_begin),
            (is_between, ":stack_troop", nobility_troops_begin, nobility_troops_end),
            (party_stack_get_size, ":stack_size","p_main_party",":i_stack"),
            (store_mul, ":num_nobility_troop", ":stack_size", 4),
            (val_add, ":nobility_troop_bonus_morale", ":num_nobility_troop"),
          (try_end),
          (try_begin),
            (store_troop_faction, ":target_faction", ":stack_troop"),
            (faction_get_slot, ":target_religion", ":target_faction", slot_faction_religion),
            (party_stack_get_size, ":stack_size","p_main_party",":i_stack"),
            (try_begin),
              (eq, ":target_religion", religion_nature),
              (val_add, ":num_nature", ":stack_size"),
            (else_try),
              (eq, ":target_religion", religion_chaos),
              (val_add, ":num_chaos", ":stack_size"),
            (else_try),
              (eq, ":target_religion", religion_death),
              (val_add, ":num_death", ":stack_size"),
            (else_try),
              (eq, ":target_religion", religion_human),
              (val_add, ":num_human", ":stack_size"),
            (else_try),
              (eq, ":target_religion", religion_order),
              (val_add, ":num_order", ":stack_size"),
            (try_end),
          (try_end),
        (try_end),
            (try_begin),
              (eq, ":actor_religion", religion_nature),
              (val_add, ":nobility_troop_bonus_morale", ":num_nature"),
            (else_try),
              (eq, ":actor_religion", religion_chaos),
              (val_add, ":nobility_troop_bonus_morale", ":num_chaos"),
            (else_try),
              (eq, ":actor_religion", religion_death),
              (val_add, ":nobility_troop_bonus_morale", ":num_death"),
            (else_try),
              (eq, ":actor_religion", religion_human),
              (val_add, ":nobility_troop_bonus_morale", ":num_human"),
            (else_try),
              (eq, ":actor_religion", religion_order),
              (val_add, ":nobility_troop_bonus_morale", ":num_order"),
            (try_end),
        (assign, reg0, ":nobility_troop_bonus_morale"),
        (try_begin),
          (gt, reg0, 0),
          (str_store_string, s1, "@+{reg0}"),
          (assign, ":dest_color", 0x00AA00),
        (else_try),
          (lt, reg0, 0),
          (str_store_string, s1, "@{reg0}"),
          (assign, ":dest_color", 0xAA0000),
        (else_try),
          (str_store_string, s1, "@{reg0}"),
          (assign, ":dest_color", 0x000000),
        (try_end),
        (create_text_overlay, reg1, s1, tf_right_align),
        (position_set_y, pos2, ":cur_y"),
        (overlay_set_position, reg1, pos2),
        (overlay_set_color, reg1, ":dest_color"),
        (overlay_set_size, reg1, pos3),
        (val_sub, ":cur_y", ":y_offset"),
       
        # religion
        (create_text_overlay, reg1, "@toop_religion", tf_left_align),
        (position_set_y, pos1, ":cur_y"),
        (overlay_set_position, reg1, pos1),
        (overlay_set_size, reg1, pos3),
        (assign, ":num_human", 0),
        (assign, ":num_chaos", 0),
        (assign, ":num_death", 0),
        (assign, ":num_order", 0),
        (assign, ":num_nature", 0),
        (party_get_num_companion_stacks, ":num_stacks","p_main_party"),
        (try_for_range, ":i_stack", 1, ":num_stacks"),
          (party_stack_get_troop_id, ":stack_troop","p_main_party",":i_stack"),
          (try_begin),
            (store_troop_faction, ":target_faction", ":stack_troop"),
            (faction_get_slot, ":target_religion", ":target_faction", slot_faction_religion),
            (party_stack_get_size, ":stack_size","p_main_party",":i_stack"),
            (try_begin),
              (eq, ":target_religion", religion_nature),
              (val_add, ":num_nature", ":stack_size"),
            (else_try),
              (eq, ":target_religion", religion_chaos),
              (val_add, ":num_chaos", ":stack_size"),
            (else_try),
              (eq, ":target_religion", religion_death),
              (val_add, ":num_death", ":stack_size"),
            (else_try),
              (eq, ":target_religion", religion_human),
              (val_add, ":num_human", ":stack_size"),
            (else_try),
              (eq, ":target_religion", religion_order),
              (val_add, ":num_order", ":stack_size"),
            (try_end),
          (try_end),
        (try_end),
        
        (party_get_num_companions, ":party_size", "p_main_party"),
        (val_div, ":party_size", 10),
        # rafi
        (assign, ":morale_dif", 0),
        (try_begin),
          (gt, ":num_nature", ":party_size"),
          (gt, ":num_death", ":party_size"),
          (val_add, ":morale_dif", -30),
        (try_end),
        (try_begin),
          (gt, ":num_nature", ":party_size"),
          (gt, ":num_order", ":party_size"),
          (val_add, ":morale_dif", -30),
        (try_end),
        (try_begin),
          (gt, ":num_human", ":party_size"),
          (gt, ":num_chaos", ":party_size"),
          (val_add, ":morale_dif", -30),
        (try_end),
        (try_begin),
          (gt, ":num_human", ":party_size"),
          (gt, ":num_death", ":party_size"),
          (val_add, ":morale_dif", -30),
        (try_end),
        (try_begin),
          (gt, ":num_order", ":party_size"),
          (gt, ":num_chaos", ":party_size"),
          (val_add, ":morale_dif", -30),
        (try_end),

        (try_begin),
          (gt, ":num_nature", ":party_size"),
          (gt, ":num_death", ":party_size"),
          (gt, ":num_order", ":party_size"),
          (val_add, ":morale_dif", -30),
        (try_end),
        (try_begin),
          (gt, ":num_order", ":party_size"),
          (gt, ":num_chaos", ":party_size"),
          (gt, ":num_nature", ":party_size"),
          (val_add, ":morale_dif", -30),
        (try_end),
        (try_begin),
          (gt, ":num_human", ":party_size"),
          (gt, ":num_chaos", ":party_size"),
          (gt, ":num_death", ":party_size"),
          (val_add, ":morale_dif", -30),
        (try_end),
        (try_begin),
          (gt, ":num_chaos", ":party_size"),
          (gt, ":num_human", ":party_size"),
          (gt, ":num_order", ":party_size"),
          (val_add, ":morale_dif", -30),
        (try_end),
        (try_begin),
          (gt, ":num_death", ":party_size"),
          (gt, ":num_nature", ":party_size"),
          (gt, ":num_human", ":party_size"),
          (val_add, ":morale_dif", -30),
        (try_end),
        
        (assign, reg0, ":morale_dif"),
        (try_begin),
          (gt, reg0, 0),
          (str_store_string, s1, "@+{reg0}"),
          (assign, ":dest_color", 0x00AA00),
        (else_try),
          (lt, reg0, 0),
          (str_store_string, s1, "@{reg0}"),
          (assign, ":dest_color", 0xAA0000),
        (else_try),
          (str_store_string, s1, "@{reg0}"),
          (assign, ":dest_color", 0x000000),
        (try_end),
        (create_text_overlay, reg1, s1, tf_right_align),
        (position_set_y, pos2, ":cur_y"),
        (overlay_set_position, reg1, pos2),
        (overlay_set_color, reg1, ":dest_color"),
        (overlay_set_size, reg1, pos3),
        (val_sub, ":cur_y", ":y_offset"),
                
        # food or no food
        (try_begin),
          (eq, "$g_player_party_morale_modifier_food", 0),
          (str_store_string, s1, "@No food"),
          (assign, reg0, "$g_player_party_morale_modifier_no_food"),
          (str_store_string, s2, "@{reg0}"),
          (assign, ":dest_color", 0xAA0000),
        (else_try),
          (str_store_string, s1, "@Food variety"),
          (assign, reg0, "$g_player_party_morale_modifier_food"),
          (str_store_string, s2, "@+{reg0}"),
          (assign, ":dest_color", 0x00AA00),
        (try_end),
        (create_text_overlay, reg1, s1, tf_left_align),
        (position_set_y, pos1, ":cur_y"),
        (overlay_set_position, reg1, pos1),
        (overlay_set_size, reg1, pos3),
        (create_text_overlay, reg1, s2, tf_right_align),
        (position_set_y, pos2, ":cur_y"),
        (overlay_set_position, reg1, pos2),
        (overlay_set_color, reg1, ":dest_color"),
        (overlay_set_size, reg1, pos3),
        (val_sub, ":cur_y", ":y_offset"),
        
        # Wage debt
        (try_begin),
          (gt, "$g_player_party_morale_modifier_debt", 0),
          (assign, reg0, "$g_player_party_morale_modifier_debt"),
          (create_text_overlay, reg1, "@Wage debt", tf_left_align),
          (position_set_y, pos1, ":cur_y"),
          (overlay_set_position, reg1, pos1),
          (overlay_set_size, reg1, pos3),
          (create_text_overlay, reg1, "@-{reg0}", tf_right_align),
          (position_set_y, pos2, ":cur_y"),
          (overlay_set_position, reg1, pos2),
          (overlay_set_color, reg1, 0xAA0000),
          (overlay_set_size, reg1, pos3),
          (val_sub, ":cur_y", ":y_offset"),
        (try_end),
        
        # Recent events
        (create_text_overlay, reg1, "@Recent events", tf_left_align),
        (position_set_y, pos1, ":cur_y"),
        (overlay_set_position, reg1, pos1),
        (overlay_set_size, reg1, pos3),
        (party_get_morale, ":cur_morale", "p_main_party"),
        (store_sub, reg0, ":cur_morale", ":ideal_morale"),
        (try_begin),
          (gt, reg0, 0),
          (str_store_string, s1, "@+{reg0}"),
          (assign, ":dest_color", 0x00AA00),
        (else_try),
          (eq, reg0, 0),
          (str_store_string, s1, "@{reg0}"),
          (assign, ":dest_color", 0x000000),
        (else_try),
          (str_store_string, s1, "@{reg0}"),
          (assign, ":dest_color", 0xAA0000),
        (try_end),
        (create_text_overlay, reg1, s1, tf_right_align),
        (position_set_y, pos2, ":cur_y"),
        (overlay_set_position, reg1, pos2),
        (overlay_set_color, reg1, ":dest_color"),
        (overlay_set_size, reg1, pos3),
        (val_sub, ":cur_y", ":y_offset"),
        
        # division line, offset: +75%
        (store_mul, ":line_offset", ":y_offset", 75),
        (val_div, ":line_offset", 100),
        (store_add, ":line_pos_y", ":cur_y", ":line_offset"),
        (call_script, "script_prsnt_lines", 360, 1, 80, ":line_pos_y", 0),
        
        # Total
        (create_text_overlay, reg1, "@Total", tf_left_align),
        (position_set_y, pos1, ":cur_y"),
        (overlay_set_position, reg1, pos1),
        (party_get_morale, reg0, "p_main_party"),
        (overlay_set_size, reg1, pos3),
        (create_text_overlay, reg1, "@{reg0}", tf_right_align),
        (position_set_y, pos2, ":cur_y"),
        (overlay_set_position, reg1, pos2),
        (overlay_set_size, reg1, pos3),
        (val_sub, ":cur_y", ":y_offset"),
        
        ## Morale value to change and Prospective party morale
        (party_get_morale, ":cur_morale", "p_main_party"),
        (store_sub, ":dif", ":ideal_morale", ":cur_morale"),
        # leadership modifier 
        (store_skill_level, ":skill", "skl_leadership", "trp_player"),
        (try_begin),
          (gt, ":dif", 0),
          (store_add, ":morale_change_factor", 20, ":skill"),
        (else_try),
          (store_sub, ":morale_change_factor", 20, ":skill"),
        (try_end),
        (store_mul, ":dif_to_add", ":dif", ":morale_change_factor"),
        (val_div, ":dif_to_add", 100),
        (store_mul, ":dif_to_add_correction", ":dif_to_add", 100),
        (val_div, ":dif_to_add_correction", ":morale_change_factor"),
        # leadership modifier 
        (try_begin),#finding ceiling of the value
          (neq, ":dif_to_add_correction", ":dif"),
          (try_begin),
            (gt, ":dif", 0),
            (val_add, ":dif_to_add", 1),
          (else_try),
            (val_sub, ":dif_to_add", 1),
          (try_end),
        (try_end),
        (store_add, ":dest_morale", ":cur_morale", ":dif_to_add"),
        (val_clamp, ":dest_morale", 0, 100),
        (store_sub, ":morale_to_change", ":dest_morale", ":cur_morale"),
        # Morale value to change
        (create_text_overlay, reg1, "@Morale value to change", tf_left_align),
        (position_set_y, pos1, ":cur_y"),
        (overlay_set_position, reg1, pos1),
        (overlay_set_size, reg1, pos3),
        (assign, reg0, ":morale_to_change"),
        (try_begin),
          (gt, reg0, 0),
          (str_store_string, s1, "@+{reg0}"),
          (assign, ":dest_color", 0x00AA00),
        (else_try),
          (eq, reg0, 0),
          (str_store_string, s1, "@{reg0}"),
          (assign, ":dest_color", 0x000000),
        (else_try),
          (str_store_string, s1, "@{reg0}"),
          (assign, ":dest_color", 0xAA0000),
        (try_end),
        (create_text_overlay, reg1, s1, tf_right_align),
        (position_set_y, pos2, ":cur_y"),
        (overlay_set_position, reg1, pos2),
        (overlay_set_color, reg1, ":dest_color"),
        (overlay_set_size, reg1, pos3),
        (val_sub, ":cur_y", ":y_offset"),
        # Prospective party morale
        (create_text_overlay, reg1, "@Prospective party morale", tf_left_align),
        (position_set_y, pos1, ":cur_y"),
        (overlay_set_position, reg1, pos1),
        (assign, reg0, ":dest_morale"),
        (overlay_set_size, reg1, pos3),
        (create_text_overlay, reg1, "@{reg0}", tf_right_align),
        (position_set_y, pos2, ":cur_y"),
        (overlay_set_position, reg1, pos2),
        (overlay_set_size, reg1, pos3),
        (val_sub, ":cur_y", ":y_offset"),
        
        (val_sub, ":cur_y", ":y_offset"),
        (val_sub, ":cur_y", ":y_offset"),
        # Extra morale for kingdom troops
        (try_for_range, ":kingdom_no", npc_kingdoms_begin, npc_kingdoms_end),
          (faction_get_slot, ":faction_morale", ":kingdom_no",  slot_faction_morale_of_player_troops),
          (val_div, ":faction_morale", 100),
          (neq, ":faction_morale", 0),
          (assign, reg0, ":faction_morale"),
          (str_store_faction_name, s1, ":kingdom_no"),
          (create_text_overlay, reg1, "@Extra morale for {s1} troops", tf_left_align),
          (position_set_y, pos1, ":cur_y"),
          (overlay_set_position, reg1, pos1),
          (overlay_set_size, reg1, pos3),
          (try_begin),
            (gt, reg0, 0),
            (str_store_string, s1, "@+{reg0}"),
            (assign, ":dest_color", 0x00AA00),
          (else_try),
            (str_store_string, s1, "@{reg0}"),
            (assign, ":dest_color", 0xAA0000),
          (try_end),
          (create_text_overlay, reg1, s1, tf_right_align),
          (position_set_y, pos2, ":cur_y"),
          (overlay_set_position, reg1, pos2),
          (overlay_set_color, reg1, ":dest_color"),
          (overlay_set_size, reg1, pos3),
          (val_sub, ":cur_y", ":y_offset"),
        (try_end),
        
        ## party size report
        (create_text_overlay, reg1, "@Party Size", tf_center_justify),
        (position_set_x, pos1, 1500),
        (position_set_y, pos1, 1500),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 740),
        (position_set_y, pos1, 650),
        (overlay_set_position, reg1, pos1),
        
        (position_set_x, pos1, 560),
        (position_set_x, pos2, 920),
        (assign, ":cur_y", 600),
        (assign, ":y_offset", 30),
        
        # Base size
        (create_text_overlay, reg1, "@Base size", tf_left_align),
        (position_set_y, pos1, ":cur_y"),
        (overlay_set_position, reg1, pos1),
        (overlay_set_size, reg1, pos3),
        (assign, ":limit", 50),
        (try_begin),
          (this_or_next|faction_slot_eq, "fac_player_supporters_faction", slot_faction_leader, "trp_player"),
          (faction_slot_eq, "fac_player_supporters_faction", slot_faction_marshall, "trp_player"),
          (assign, ":has_center", 0),
          (try_for_range, ":cur_center", centers_begin, centers_end),
            (store_faction_of_party, ":cur_center_faction", ":cur_center"),
            (eq, ":cur_center_faction", "fac_player_supporters_faction"),
            (assign, ":has_center", 1),
          (try_end),
          (eq, ":has_center", 1),
          (val_add, ":limit", 100),
        (else_try),  
          (is_between, "$players_kingdom", npc_kingdoms_begin, npc_kingdoms_end),
          (this_or_next|faction_slot_eq, "$players_kingdom", slot_faction_leader, "trp_player"),
          (faction_slot_eq, "$players_kingdom", slot_faction_marshall, "trp_player"),
          (val_add, ":limit", 100),
        (try_end),  
        (assign, reg4, ":limit"),
        (create_text_overlay, reg1, "@+{reg4}", tf_right_align),
        (position_set_y, pos2, ":cur_y"),
        (overlay_set_position, reg1, pos2),
        (overlay_set_size, reg1, pos3),
        (val_sub, ":cur_y", ":y_offset"),
                
        # Leadership
        (create_text_overlay, reg1, "@Leadership", tf_left_align),
        (position_set_y, pos1, ":cur_y"),
        (overlay_set_position, reg1, pos1),
        (overlay_set_size, reg1, pos3),
        (store_skill_level, ":leadership", "skl_leadership", "trp_player"),
        (store_mul, reg0, ":leadership", 10),
        (store_skill_level, ":leadership", "skl_leadership", "trp_player"),
        (val_mul, ":leadership", 10), ## CC
        (try_begin),
          (eq,"$background_type",cb_noble),
          (store_skill_level, ":noble_bounc", "skl_leadership", "trp_player"),
          (val_mul, ":noble_bounc", 5),
          (val_add, ":leadership", ":noble_bounc"),
        (try_end),
        (try_begin),
          (eq,"$background_answer_3",cb3_lady_in_waiting),
          (store_skill_level, ":noble_bounc", "skl_leadership", "trp_player"),
          (val_mul, ":noble_bounc", 5),
          (val_add, ":leadership", ":noble_bounc"),
        (try_end),
        (assign, reg0, ":leadership"),
        (try_begin),
          (gt, reg0, 0),
          (str_store_string, s1, "@+{reg0}"),
        (else_try),
          (str_store_string, s1, "@{reg0}"),
        (try_end),
        (create_text_overlay, reg1, s1, tf_right_align),
        (position_set_y, pos2, ":cur_y"),
        (overlay_set_position, reg1, pos2),
        (overlay_set_size, reg1, pos3),
        (val_sub, ":cur_y", ":y_offset"),
        
        # Charisma
        (create_text_overlay, reg1, "@Charisma", tf_left_align),
        (position_set_y, pos1, ":cur_y"),
        (overlay_set_position, reg1, pos1),
        (overlay_set_size, reg1, pos3),
        (store_attribute_level, reg0, "trp_player", ca_charisma),
        (assign, ":charisma", reg0),
        (try_begin),
          (gt, reg0, 0),
          (str_store_string, s1, "@+{reg0}"),
        (else_try),
          (str_store_string, s1, "@{reg0}"),
        (try_end),
        (create_text_overlay, reg1, s1, tf_right_align),
        (position_set_y, pos2, ":cur_y"),
        (overlay_set_position, reg1, pos2),
        (overlay_set_size, reg1, pos3),
        (val_sub, ":cur_y", ":y_offset"),
        
        # Renown
        (create_text_overlay, reg1, "@Renown", tf_left_align),
        (position_set_y, pos1, ":cur_y"),
        (overlay_set_position, reg1, pos1),
        (overlay_set_size, reg1, pos3),
        (troop_get_slot, ":renown", "trp_player", slot_troop_renown),
        (val_div, ":renown", 25),
        (val_mul, ":renown", 3),
        (assign, reg0, ":renown"),
        (try_begin),
          (gt, reg0, 0),
          (str_store_string, s1, "@+{reg0}"),
        (else_try),
          (str_store_string, s1, "@{reg0}"),
        (try_end),
        (create_text_overlay, reg1, s1, tf_right_align),
        (position_set_y, pos2, ":cur_y"),
        (overlay_set_position, reg1, pos2),
        (overlay_set_size, reg1, pos3),
        (val_sub, ":cur_y", ":y_offset"),
        
        # Castles
        (create_text_overlay, reg1, "@Castles", tf_left_align),
        (position_set_y, pos1, ":cur_y"),
        (overlay_set_position, reg1, pos1),
        (overlay_set_size, reg1, pos3),
        (assign, ":center_score", 0),
        (try_for_range, ":cur_center", centers_begin, centers_end),
          (party_slot_eq, ":cur_center", slot_town_lord, "trp_player"),
          (try_begin),
            (party_slot_eq, ":cur_center", slot_party_type, spt_town),
            (val_add, ":center_score", 4),
          (else_try),
            (party_slot_eq, ":cur_center", slot_party_type, spt_castle),
            (val_add, ":center_score", 2),
          (else_try),
            (party_slot_eq, ":cur_center", slot_party_type, spt_village),
            (val_add, ":center_score", 1),
          (try_end),
        (try_end),
        (store_mul, ":center_bonus", ":center_score", 5),
        (assign, reg0, ":center_bonus"),
        (try_begin),
          (gt, reg0, 0),
          (str_store_string, s1, "@+{reg0}"),
        (else_try),
          (str_store_string, s1, "@{reg0}"),
        (try_end),
        (create_text_overlay, reg1, s1, tf_right_align),
        (position_set_y, pos2, ":cur_y"),
        (overlay_set_position, reg1, pos2),
        (overlay_set_size, reg1, pos3),
        (val_sub, ":cur_y", ":y_offset"),
        
        # cav_bonu
        (create_text_overlay, reg1, "@cav_bonu", tf_left_align),
        (position_set_y, pos1, ":cur_y"),
        (overlay_set_position, reg1, pos1),
        (overlay_set_size, reg1, pos3),
        (party_get_num_companion_stacks, ":num_stacks","p_main_party"),
        (assign, ":cav", 0),
        (try_for_range, ":i_stack", 1, ":num_stacks"),
          (party_stack_get_troop_id, ":stack_troop","p_main_party",":i_stack"),
          (neg|troop_is_hero, ":stack_troop"),
          (try_begin),
            (call_script, "script_cf_troop_is_heavy_cav", ":stack_troop"),
            (party_stack_get_size, ":stack_size","p_main_party",":i_stack"),
            (val_add, ":cav", ":stack_size"),
          (try_end),
          
          (try_begin),
            (troop_get_type, ":agent_gender", ":stack_troop"),
            (party_stack_get_size, ":stack_size","p_main_party",":i_stack"),
            (try_begin),
              (this_or_next|eq, ":stack_troop", "trp_inferno"),
              (this_or_next|eq, ":stack_troop", "trp_huge_inferno"),
              (this_or_next|is_between,":stack_troop","trp_air_elemental","trp_human_magic_1"),
              (this_or_next|is_between,":stack_troop","trp_golem_1","trp_sissofbattle"),
              (this_or_next|eq, ":stack_troop", "trp_gargoyle"),

              (this_or_next|eq, ":stack_troop", "trp_demon_1"),
              (this_or_next|eq, ":stack_troop", "trp_demon_2"),
              (this_or_next|eq, ":stack_troop", "trp_demon_1_2"),
              (this_or_next|eq, ":stack_troop", "trp_demon_1_3"),

              (this_or_next|eq, ":stack_troop", "trp_ent_1"),
              (this_or_next|eq, ":stack_troop", "trp_ent_2"),
              
              (this_or_next|eq, ":stack_troop", "trp_dullahan"),
              (this_or_next|eq, ":stack_troop", "trp_ghost"),
              (this_or_next|eq, ":stack_troop", "trp_wight"),
              (this_or_next|eq, ":agent_gender", tf_goblin),
              (eq, ":agent_gender", tf_undead),
              (val_mul, ":stack_size", -1),
              (val_add, ":cav", ":stack_size"),
            (else_try),
              (eq, ":agent_gender", "$character_gender"),
              (val_add, ":cav", 0),
            (else_try),
              (neg|eq, ":agent_gender", "$character_gender"),
              (this_or_next|eq, ":agent_gender", tf_female_elf),
              (this_or_next|eq, ":agent_gender", tf_demon_human),
              (eq, ":agent_gender", tf_male_elf),
              (val_mul, ":stack_size", 1), 
              (val_add, ":cav", ":stack_size"),
            (else_try),
              (neg|eq, ":agent_gender", "$character_gender"),
              (neg|eq, ":stack_troop", "trp_orc_blackorc"),
              (neg|eq, ":stack_troop", "trp_orc_veterun_blackorc"),
              (neg|eq, ":stack_troop", "trp_orc_blackorc_boss"),
              (neg|eq, ":stack_troop", "trp_orc_big_boss"),
              (this_or_next|eq, ":agent_gender", tf_beastman),
              (this_or_next|eq, ":agent_gender", tf_vampire),
              (eq, ":agent_gender", tf_ogre),
              (val_mul, ":stack_size", 2), 
              (val_add, ":cav", ":stack_size"),
            (else_try),
              (neg|eq, ":agent_gender", "$character_gender"),
              (this_or_next|eq, ":agent_gender", tf_titan),
              (this_or_next|eq, ":agent_gender", tf_troll),
              (eq, ":agent_gender", tf_giant_dwarf),
              (val_mul, ":stack_size", 3), 
              (val_add, ":cav", ":stack_size"),
            (try_end),
          (try_end),
                    
        (try_end),
        (assign, reg0, ":cav"),
        (try_begin),
          (gt, reg0, 0),
          (str_store_string, s1, "@-{reg0}"),
          (assign, ":dest_color", 0xAA0000),
        (else_try),
          (lt, reg0, 0),
          (str_store_string, s1, "@+{reg0}"),
          (assign, ":dest_color", 0x000000),
        (else_try),
          (str_store_string, s1, "@{reg0}"),
          (assign, ":dest_color", 0x000000),
        (try_end),
        (create_text_overlay, reg1, s1, tf_right_align),
        (position_set_y, pos2, ":cur_y"),
        (overlay_set_position, reg1, pos2),
        (overlay_set_color, reg1, ":dest_color"),
        (overlay_set_size, reg1, pos3),
        (val_sub, ":cur_y", ":y_offset"),
        
        # diplomacy
        (create_text_overlay, reg1, "@diplomacy", tf_left_align),
        (position_set_y, pos1, ":cur_y"),
        (overlay_set_position, reg1, pos1),
        (overlay_set_size, reg1, pos3),
        (call_script, "script_game_get_party_companion_limit"),
        (assign, ":diplomacy", reg0),
        (val_sub, ":diplomacy", ":leadership"),
        (val_sub, ":diplomacy", ":charisma"),
        (val_sub, ":diplomacy", ":renown"),
        (val_sub, ":diplomacy", ":limit"),
        (val_sub, ":diplomacy", ":center_bonus"),
        (val_add, ":diplomacy", ":cav"),
        (assign, reg0, ":diplomacy"),
        (try_begin),
          (gt, reg0, 0),
          (str_store_string, s1, "@+{reg0}"),
          (assign, ":dest_color", 0x00AA00),
        (else_try),
          (lt, reg0, 0),
          (str_store_string, s1, "@{reg0}"),
          (assign, ":dest_color", 0xAA0000),
        (else_try),
          (str_store_string, s1, "@{reg0}"),
          (assign, ":dest_color", 0x000000),
        (try_end),
        (create_text_overlay, reg1, s1, tf_right_align),
        (position_set_y, pos2, ":cur_y"),
        (overlay_set_position, reg1, pos2),
        (overlay_set_color, reg1, ":dest_color"),
        (overlay_set_size, reg1, pos3),
        (val_sub, ":cur_y", ":y_offset"),
        
        # division line, offset: +75%
        (store_mul, ":line_offset", ":y_offset", 75),
        (val_div, ":line_offset", 100),
        (store_add, ":line_pos_y", ":cur_y", ":line_offset"),
        (call_script, "script_prsnt_lines", 360, 1, 560, ":line_pos_y", 0),
        
        (create_text_overlay, reg1, "@Total", tf_left_align),
        (position_set_y, pos1, ":cur_y"),
        (overlay_set_position, reg1, pos1),
        (overlay_set_size, reg1, pos3),
        (call_script, "script_game_get_party_companion_limit"),
        (create_text_overlay, reg1, "@{reg0}", tf_right_align),
        (position_set_y, pos2, ":cur_y"),
        (overlay_set_position, reg1, pos2),
        (overlay_set_size, reg1, pos3),
        (val_sub, ":cur_y", ":y_offset"),
        
        # Done
        (create_game_button_overlay, "$g_presentation_obj_5", "@Done"),
        (position_set_x, pos1, 900),
        (position_set_y, pos1, 25),
        (overlay_set_position, "$g_presentation_obj_5", pos1),
      ]),
  
    (ti_on_presentation_event_state_change,
      [
        (store_trigger_param_1, ":object"),
  
        (try_begin),
          (eq, ":object", "$g_presentation_obj_5"),
          (presentation_set_duration, 0),
        (try_end),
    ]),
  ]),

  ("world_map", 0, mesh_load_window, [
    (ti_on_presentation_load,
      [
        (presentation_set_duration, 999999),
        (set_fixed_point_multiplier, 1000),
        
      ## initialization part begin
        # presentation obj: begin from top left corner
        (assign, ":init_pos_x", 20), # init x
        (assign, ":init_pos_y", 720), # init y
        
        # world map, X: -180 t0 180  Y: -120 to 140
        (assign, ":min_map_x", -210*1000),
        (assign, ":max_map_x", 230*1000),
        (assign, ":min_map_y", -280*1000),
        (assign, ":max_map_y", 240*1000),
        
        # also begin from top left corner
        (assign, ":init_map_x", ":min_map_x"), # init map_x
        (assign, ":init_map_y", ":max_map_y"), # init map_y
        
        # move length of p_temp_party, total_cols and total_rows
        (store_mul, ":party_move_length", 0.5*1000, "$temp_2"), # $temp_2: map_precision
        (val_mul, ":party_move_length", 3),
        (val_div, ":party_move_length", 2),
        (store_sub, ":total_cols", ":max_map_x", ":min_map_x"),
        (store_sub, ":total_rows", ":max_map_y", ":min_map_y"),
        (val_div, ":total_cols", ":party_move_length"),
        (val_div, ":total_rows", ":party_move_length"),
        
        # color_block_length
        (assign, ":color_block_length", "$temp_2"), # $temp_2: map_precision
        (store_mul, ":color_block_size", ":color_block_length", 50),
        (position_set_x, pos2, ":color_block_size"),
        (position_set_y, pos2, ":color_block_size"),
        # borderlines length and width
        (store_add, ":line_length_1", ":color_block_size", 1*50),
        (assign, ":line_width_1", 1*50), # 1 pixel width
        (store_add, ":line_length_2", ":color_block_size", 2*50),
        (assign, ":line_width_2", 2*50), # 2 pixels width
      ## initialization part end
        
        # background: a large white block
        (create_mesh_overlay, reg0, "mesh_white_plane"),
        (overlay_set_color, reg0, 0xFFFFFF),
        (assign, ":bg_x", ":init_pos_x"),
        (store_add, ":bg_y", ":init_pos_y", ":color_block_length"),
        (position_set_x, pos1, ":bg_x"),
        (position_set_y, pos1, ":bg_y"),
        (overlay_set_position, reg0, pos1),
        (store_mul, ":bg_size_x", ":total_cols", ":color_block_length"),
        (val_mul, ":bg_size_x", 50),
        (store_mul, ":bg_size_y", ":total_rows", ":color_block_length"),
        (val_mul, ":bg_size_y", -50),
        (position_set_x, pos1, ":bg_size_x"),
        (position_set_y, pos1, ":bg_size_y"),
        (overlay_set_size, reg0, pos1),
        
        (assign, ":pos_x", ":init_pos_x"), # assign to cur pos_x
        (assign, ":pos_y", ":init_pos_y"), # assign to cur pos_y
        (assign, ":map_x", ":init_map_x"), # assign to cur map_x
        (assign, ":map_y", ":init_map_y"), # assign to cur map_y 
        ## draw whole map
        (try_for_range, ":unused_rows", 0, ":total_rows"),
          (try_for_range, ":unused_cols", 0, ":total_cols"),
            (assign, ":dest_color", 0xFFFFFF), # default
            (position_set_x, pos3, ":map_x"),
            (position_set_y, pos3, ":map_y"),
            (party_set_position, "p_temp_party", pos3),
            (party_get_current_terrain, ":current_terrain", "p_temp_party"),
            (try_begin),
              (neg|is_between, ":current_terrain", rt_mountain, rt_bridge),
              (neg|is_between, ":current_terrain", rt_mountain_forest, 14),
              (assign, ":current_terrain", rt_water),
            (try_end),
            (try_begin),
              (eq, ":current_terrain", rt_water), # it's water, don't draw the block
            (else_try),
              (call_script, "script_get_closest_center", "p_temp_party"),
              (assign, ":nearest_center", reg0),
              (try_begin),
                (gt, ":nearest_center", -1),
                (store_faction_of_party, ":center_faction", ":nearest_center"),
                (is_between, ":center_faction", kingdoms_begin, kingdoms_end),
                (faction_get_color, ":dest_color", ":center_faction"),
              (try_end),
            (create_mesh_overlay, reg0, "mesh_white_plane"),
            (overlay_set_color, reg0, ":dest_color"),
            (position_set_x, pos1, ":pos_x"),
            (position_set_y, pos1, ":pos_y"),
            (overlay_set_position, reg0, pos1),
            (overlay_set_size, reg0, pos2), # color block size
            (try_end),
            
            ## draw borderlines begin [optional]
            # find bound_center
            (try_begin),
              (this_or_next|party_slot_eq, ":nearest_center", slot_party_type, spt_town),
              (party_slot_eq, ":nearest_center", slot_party_type, spt_castle),
              (assign, ":bound_center", ":nearest_center"), # itself
            (else_try),
              (party_slot_eq, ":nearest_center", slot_party_type, spt_village),
              (party_get_slot, ":bound_center", ":nearest_center", slot_village_bound_center),
            (try_end),
            # compare with the left side color block
            (try_begin),
              (store_sub, ":map_x_2", ":map_x", ":party_move_length"),
              (assign, ":map_y_2", ":map_y"),
              (position_set_x, pos4, ":map_x_2"),
              (position_set_y, pos4, ":map_y_2"),
              (party_set_position, "p_temp_party", pos4),
              (party_get_current_terrain, ":current_terrain_2", "p_temp_party"),
            (try_begin),
              (neg|is_between, ":current_terrain_2", rt_mountain, rt_bridge),
              (neg|is_between, ":current_terrain_2", rt_mountain_forest, 14),
              (assign, ":current_terrain_2", rt_water),
            (try_end),
              (try_begin),
                (assign, ":continue", 0),
                (try_begin),
                  (neq, ":current_terrain", rt_water),
                  (neq, ":current_terrain_2", rt_water),
                  (call_script, "script_get_closest_center", "p_temp_party"),
                  (assign, ":nearest_center_2", reg0),
                  (try_begin),
                    (gt, ":nearest_center_2", -1),
                    (try_begin),
                      (this_or_next|party_slot_eq, ":nearest_center_2", slot_party_type, spt_town),
                      (party_slot_eq, ":nearest_center_2", slot_party_type, spt_castle),
                      (assign, ":bound_center_2", ":nearest_center_2"),
                    (else_try),
                      (party_slot_eq, ":nearest_center_2", slot_party_type, spt_village),
                      (party_get_slot, ":bound_center_2", ":nearest_center_2", slot_village_bound_center),
                    (try_end),
                    (neq, ":bound_center_2", ":bound_center"),
                    (assign, ":continue", 1),
                    (try_begin),
                      (store_faction_of_party, ":center_faction_1", ":bound_center"),
                      (store_faction_of_party, ":center_faction_2", ":bound_center_2"),
                      (neq, ":center_faction_1", ":center_faction_2"), # change to 2 pixels width
                      (assign, ":dest_length", ":line_length_2"),
                      (assign, ":dest_width", ":line_width_2"),
                (else_try),
                      (assign, ":dest_length", ":line_length_1"),
                      (assign, ":dest_width", ":line_width_1"),
                    (try_end),
                  (try_end),
                (else_try), # sea line: change to 2 pixels width
                  (neq, ":current_terrain", ":current_terrain_2"),
                  (this_or_next|eq, ":current_terrain", rt_water),
                  (eq, ":current_terrain_2", rt_water),
                  (assign, ":continue", 1),
                  (assign, ":dest_length", ":line_length_2"),
                  (assign, ":dest_width", ":line_width_2"),
                (try_end),
                (eq, ":continue", 1),
                (create_mesh_overlay, reg0, "mesh_white_plane"),
                (overlay_set_color, reg0, 0),
                (position_set_x, pos1, ":pos_x"),
                (position_set_y, pos1, ":pos_y"),
                (overlay_set_position, reg0, pos1),
                (position_set_x, pos1, ":dest_width"),
                (position_set_y, pos1, ":dest_length"),
                (overlay_set_size, reg0, pos1),
              (try_end),
            (try_end),
            # compare with the under color block
            (try_begin),
              (assign, ":map_x_2", ":map_x"),
              (store_sub, ":map_y_2", ":map_y", ":party_move_length"),
              (position_set_x, pos4, ":map_x_2"),
              (position_set_y, pos4, ":map_y_2"),
              (party_set_position, "p_temp_party", pos4),
              (party_get_current_terrain, ":current_terrain_2", "p_temp_party"),
            (try_begin),
              (neg|is_between, ":current_terrain_2", rt_mountain, rt_bridge),
              (neg|is_between, ":current_terrain_2", rt_mountain_forest, 14),
              (assign, ":current_terrain_2", rt_water),
            (try_end),
              (try_begin),
                (assign, ":continue", 0),
                (try_begin),
                  (neq, ":current_terrain", rt_water),
                  (neq, ":current_terrain_2", rt_water),
                  (call_script, "script_get_closest_center", "p_temp_party"),
                  (assign, ":nearest_center_2", reg0),
                  (try_begin),
                    (gt, ":nearest_center_2", -1),
                    (try_begin),
                      (this_or_next|party_slot_eq, ":nearest_center_2", slot_party_type, spt_town),
                      (party_slot_eq, ":nearest_center_2", slot_party_type, spt_castle),
                      (assign, ":bound_center_2", ":nearest_center_2"),
                    (else_try),
                      (party_slot_eq, ":nearest_center_2", slot_party_type, spt_village),
                      (party_get_slot, ":bound_center_2", ":nearest_center_2", slot_village_bound_center),
                    (try_end),
                    (neq, ":bound_center_2", ":bound_center"),
                    (assign, ":continue", 1),
                    (try_begin),
                      (store_faction_of_party, ":center_faction_1", ":bound_center"),
                      (store_faction_of_party, ":center_faction_2", ":bound_center_2"),
                      (neq, ":center_faction_1", ":center_faction_2"), # change to 2 pixels width
                      (assign, ":dest_length", ":line_length_2"),
                      (assign, ":dest_width", ":line_width_2"),
                (else_try),
                      (assign, ":dest_length", ":line_length_1"),
                      (assign, ":dest_width", ":line_width_1"),
                    (try_end),
                  (try_end),
                (else_try), # sea line: change to 2 pixels width
                  (neq, ":current_terrain", ":current_terrain_2"),
                  (this_or_next|eq, ":current_terrain", rt_water),
                  (eq, ":current_terrain_2", rt_water),
                  (assign, ":continue", 1),
                  (assign, ":dest_length", ":line_length_2"),
                  (assign, ":dest_width", ":line_width_2"),
                (try_end),
                (eq, ":continue", 1),
                (create_mesh_overlay, reg0, "mesh_white_plane"),
                (overlay_set_color, reg0, 0),
                (position_set_x, pos1, ":pos_x"),
                (position_set_y, pos1, ":pos_y"),
                (overlay_set_position, reg0, pos1),
                (position_set_x, pos1, ":dest_length"),
                (position_set_y, pos1, ":dest_width"),
                (overlay_set_size, reg0, pos1),
              (try_end),
            (try_end),
            ## draw borderlines end [optional]
            
            # offset
            (val_add, ":pos_x", ":color_block_length"),
            (val_add, ":map_x", ":party_move_length"), 
          (try_end),
          # offset
          (assign, ":pos_x", ":init_pos_x"),
          (val_sub, ":pos_y", ":color_block_length"),
          (assign, ":map_x", ":init_map_x"),
          (val_sub, ":map_y", ":party_move_length"),
        (try_end),
        
        ## blocks of centers 
        (assign, ":slot_no", 0),
        (try_for_range, ":center_no", centers_begin, centers_end),
          (party_is_active, ":center_no"),
          (party_get_position, pos4, ":center_no"),
          (position_get_x, ":center_x", pos4),
          (position_get_y, ":center_y", pos4),
          (val_sub, ":center_x", ":init_map_x"),
          (val_sub, ":center_y", ":init_map_y"),
          (val_mul, ":center_x", ":color_block_length"),
          (val_mul, ":center_y", ":color_block_length"),
          (val_div, ":center_x", ":party_move_length"),
          (val_div, ":center_y", ":party_move_length"),
          (val_add, ":center_x", ":init_pos_x"),
          (val_add, ":center_y", ":init_pos_y"),
          # offset and size
          (try_begin),
            (party_slot_eq, ":center_no", slot_party_type, spt_town),
            (assign, ":block_size", 8),
            (assign, ":center_type", spt_town),
          (else_try),
            (party_slot_eq, ":center_no", slot_party_type, spt_castle),
            (assign, ":block_size", 4),
            (assign, ":center_type", spt_castle),
          (else_try),
            (party_slot_eq, ":center_no", slot_party_type, spt_village),
            (assign, ":block_size", 2),
            (assign, ":center_type", spt_village),
          (try_end),
          (store_div, ":half_block_size", ":block_size", 2),
          (val_sub, ":center_x", ":half_block_size"),
          (val_sub, ":center_y", ":half_block_size"),
          (val_mul, ":block_size", 50),
          # block
          (create_mesh_overlay, reg0, "mesh_white_plane"),
          (overlay_set_color, reg0, 0),
          (position_set_x, pos1, ":center_x"),
          (position_set_y, pos1, ":center_y"),
          (overlay_set_position, reg0, pos1),
          (position_set_x, pos1, ":block_size"),
          (position_set_y, pos1, ":block_size"),
          (overlay_set_size, reg0, pos1),
          # name
          (str_store_party_name, s1, ":center_no"),
          (create_text_overlay, reg1, s1, tf_center_justify),
          (store_add, ":text_x", ":center_x", 0),
          (store_add, ":text_y", ":center_y", 10),
          (position_set_x, pos1, ":text_x"),
          (position_set_y, pos1, ":text_y"),
          (overlay_set_position, reg1, pos1),
          (overlay_set_display, reg1, 0),
          # slots
          (troop_set_slot, "trp_temp_array_a", ":slot_no", reg0), # overlay id
          (troop_set_slot, "trp_temp_array_b", ":slot_no", ":center_type"), # center type
          (troop_set_slot, "trp_temp_array_c", ":slot_no", reg1), # center name
          (val_add, ":slot_no", 1),
        (try_end),
        
        ## blocks of kingdoms 
        (create_text_overlay, reg0, "@Factions", tf_vertical_align_center),
        (position_set_x, pos1, 790),
        (position_set_y, pos1, 700),
        (overlay_set_position, reg0, pos1),
        
        (assign, ":pos_x", 750),
        (assign, ":pos_y", 650),
        (try_for_range, ":cur_kingdom", kingdoms_begin, kingdoms_end),
          (faction_slot_eq, ":cur_kingdom", slot_faction_state, sfs_active),
          # color block
          (create_mesh_overlay, reg0, "mesh_white_plane"),
          (faction_get_color, ":dest_color", ":cur_kingdom"),
          (overlay_set_color, reg0, ":dest_color"),
          (position_set_x, pos1, ":pos_x"),
          (position_set_y, pos1, ":pos_y"),
          (overlay_set_position, reg0, pos1),
          # size: 35*25
          (position_set_x, pos1, 35*50),
          (position_set_y, pos1, 25*50),
          (overlay_set_size, reg0, pos1),
          # kingdom name
          (store_add, ":text_x", ":pos_x", 40),
          (store_add, ":text_y", ":pos_y", 12),
          (str_store_faction_name, s1, ":cur_kingdom"),
          (create_text_overlay, reg0, s1, tf_vertical_align_center),
          (position_set_x, pos1, ":text_x"),
          (position_set_y, pos1, ":text_y"),
          (overlay_set_position, reg0, pos1),
          (position_set_x, pos1, 900),
          (position_set_y, pos1, 900),
          (overlay_set_size, reg0, pos1),
          (val_sub, ":pos_y", 40),
        (try_end),
        
        ## show centers or not
        # towns
        (create_check_box_overlay, "$g_presentation_obj_1", "mesh_checkbox_off", "mesh_checkbox_on"),
        (position_set_x, pos1, 50),
        (position_set_y, pos1, 110),
        (overlay_set_position, "$g_presentation_obj_1", pos1),
        (overlay_set_val, "$g_presentation_obj_1", 1),
        (create_text_overlay, reg0, "@Show towns", tf_vertical_align_center),
        (position_set_x, pos1, 80),
        (position_set_y, pos1, 120),
        (overlay_set_position, reg0, pos1),
        # castles
        (create_check_box_overlay, "$g_presentation_obj_2", "mesh_checkbox_off", "mesh_checkbox_on"),
        (position_set_x, pos1, 250),
        (position_set_y, pos1, 110),
        (overlay_set_position, "$g_presentation_obj_2", pos1),
        (overlay_set_val, "$g_presentation_obj_2", 1),
        (create_text_overlay, reg0, "@Show castles", tf_vertical_align_center),
        (position_set_x, pos1, 280),
        (position_set_y, pos1, 120),
        (overlay_set_position, reg0, pos1),
        # villages
        (create_check_box_overlay, "$g_presentation_obj_3", "mesh_checkbox_off", "mesh_checkbox_on"),
        (position_set_x, pos1, 450),
        (position_set_y, pos1, 110),
        (overlay_set_position, "$g_presentation_obj_3", pos1),
        (overlay_set_val, "$g_presentation_obj_3", 1),
        (create_text_overlay, reg0, "@Show villages", tf_vertical_align_center),
        (position_set_x, pos1, 480),
        (position_set_y, pos1, 120),
        (overlay_set_position, reg0, pos1),
        
        (create_text_overlay, reg0, "@Tip: move the mouse onto the blocks to show center names or faction names.", tf_vertical_align_center),
        (position_set_x, pos1, 50),
        (position_set_y, pos1, 95),
        (overlay_set_position, reg0, pos1),
        (position_set_x, pos1, 750),
        (position_set_y, pos1, 750),
        (overlay_set_size, reg0, pos1),
        
        (create_text_overlay, reg0, "@The World Map", tf_double_space|tf_center_justify),
        (position_set_x, pos1, 380),
        (position_set_y, pos1, 30),
        (overlay_set_position, reg0, pos1),
        (position_set_x, pos1, 2000),
        (position_set_y, pos1, 2000),
        (overlay_set_size, reg0, pos1),
        
        # Done
        (create_game_button_overlay, "$g_presentation_obj_5", "@Done"),
        (position_set_x, pos1, 900),
        (position_set_y, pos1, 25),
        (overlay_set_position, "$g_presentation_obj_5", pos1),
      ]),
    
    (ti_on_presentation_mouse_enter_leave,
      [
        (store_trigger_param_1, ":object"),
        (store_trigger_param_2, ":enter_leave"),
        
        (assign, ":num_centers", 0),
        (try_for_range, ":center_no", centers_begin, centers_end),
          (party_is_active, ":center_no"),
          (val_add, ":num_centers", 1),
        (try_end),
        # show center name when mouse on it
        (try_for_range, ":slot_no", 0, ":num_centers"),
          (troop_slot_eq, "trp_temp_array_a", ":slot_no", ":object"),
          (store_sub, ":display_overlay", 1, ":enter_leave"),
          (troop_get_slot, ":cur_overlay", "trp_temp_array_c", ":slot_no"),
          (overlay_set_display, ":cur_overlay", ":display_overlay"),
        (try_end),
        
        (assign, ":num_kingdoms", 0),
        (try_for_range, ":cur_kingdom", kingdoms_begin, kingdoms_end),
          (faction_slot_eq, ":cur_kingdom", slot_faction_state, sfs_active),
          (val_add, ":num_kingdoms", 1),
        (try_end),
        # show faction name when mouse on it
        (try_for_range, ":slot_no", 0, ":num_kingdoms"),
          (troop_slot_eq, "trp_temp_array_e", ":slot_no", ":object"),
          (store_sub, ":display_overlay", 1, ":enter_leave"),
          (troop_get_slot, ":cur_overlay", "trp_temp_array_d", ":slot_no"),
          (overlay_set_display, ":cur_overlay", ":display_overlay"),
        (try_end),
      ]),
  
    (ti_on_presentation_event_state_change,
      [
        (store_trigger_param_1, ":object"),
        (store_trigger_param_2, ":value"),
        
        (assign, ":num_centers", 0),
        (try_for_range, ":center_no", centers_begin, centers_end),
          (party_is_active, ":center_no"),
          (val_add, ":num_centers", 1),
        (try_end),
        
        (try_begin),
          (eq, ":object", "$g_presentation_obj_1"), # show towns
          (try_for_range, ":slot_no", 0, ":num_centers"),
            (troop_slot_eq, "trp_temp_array_b", ":slot_no", spt_town),
            (troop_get_slot, ":cur_overlay", "trp_temp_array_a", ":slot_no"),
            (overlay_set_display, ":cur_overlay", ":value"),
          (try_end),
        (else_try),
          (eq, ":object", "$g_presentation_obj_2"), # show castles
          (try_for_range, ":slot_no", 0, ":num_centers"),
            (troop_slot_eq, "trp_temp_array_b", ":slot_no", spt_castle),
            (troop_get_slot, ":cur_overlay", "trp_temp_array_a", ":slot_no"),
            (overlay_set_display, ":cur_overlay", ":value"),
          (try_end),
        (else_try),
          (eq, ":object", "$g_presentation_obj_3"), # show villages
          (try_for_range, ":slot_no", 0, ":num_centers"),
            (troop_slot_eq, "trp_temp_array_b", ":slot_no", spt_village),
            (troop_get_slot, ":cur_overlay", "trp_temp_array_a", ":slot_no"),
            (overlay_set_display, ":cur_overlay", ":value"),
          (try_end),
        (else_try),
          (eq, ":object", "$g_presentation_obj_5"),
          (presentation_set_duration, 0),
        (try_end),
      ]),
  ]),

  ("equip_npcs", 0, 0, [
    (ti_on_presentation_load,
      [
        (presentation_set_duration, 999999),
        (set_fixed_point_multiplier, 1000),
        
        ## CC
        (create_mesh_overlay, reg1, "mesh_white_plane"),
        (position_set_x, pos1, 1200),
        (position_set_y, pos1, 800),
        (overlay_set_position, reg1, pos1),
        ## CC
        
        (create_mesh_overlay, reg1, "mesh_load_window"),
        (position_set_x, pos1, 0),
        (position_set_y, pos1, 0),
        (overlay_set_position, reg1, pos1),
        
        (assign, "$g_cur_selected_item_slot", -1),
        
        # toggle weapons by strict mode
        (call_script, "script_all_toggle_weapons_set", 1),
        
        (assign, ":selected_troop", "$g_prsnt_param_1"),
        (assign, ":cur_page_of_loot_pool", "$g_prsnt_param_2"),
        # done
        (create_in_game_button_overlay, "$g_presentation_obj_admin_panel_2", "@Done"),
        (overlay_set_color, "$g_presentation_obj_admin_panel_2", 0xFFFFFF),
        (position_set_x, pos1, 870),
        (position_set_y, pos1, 10),
        (overlay_set_position, "$g_presentation_obj_admin_panel_2", pos1),
        
        # page buttons
        (create_combo_label_overlay, "$g_presentation_obj_admin_panel_3"),
        (position_set_x, pos1, 740),
        (position_set_y, pos1, 15),
        (overlay_set_position, "$g_presentation_obj_admin_panel_3", pos1),
        (position_set_x, pos1, 500),
        (position_set_y, pos1, 800),
        (overlay_set_size, "$g_presentation_obj_admin_panel_3", pos1),
        (overlay_add_item, "$g_presentation_obj_admin_panel_3", "@Page 1"),
        (overlay_add_item, "$g_presentation_obj_admin_panel_3", "@Page 2"),
        (overlay_set_val, "$g_presentation_obj_admin_panel_3", ":cur_page_of_loot_pool"),
        
        # resort
        (create_in_game_button_overlay, "$g_presentation_obj_admin_panel_4", "@Re-sort"),
        (overlay_set_color, "$g_presentation_obj_admin_panel_4", 0xFFFFFF),
        (position_set_x, pos1, 440),
        (position_set_y, pos1, 10),
        (overlay_set_position, "$g_presentation_obj_admin_panel_4", pos1),
        
        # lock
        (create_mesh_overlay, reg1, "mesh_checkbox_lock_on"),
        (position_set_x, pos1, 140),
        (position_set_y, pos1, 260),
        (overlay_set_position, reg1, pos1),
        (create_text_overlay, reg1, "@Locked. Item won't be auto-upgraded.", tf_scrollable|tf_center_justify),
        (position_set_x, pos1, 160),
        (position_set_y, pos1, 190),
        (overlay_set_position, reg1, pos1),
        (position_set_x, pos1, 150),
        (position_set_y, pos1, 90),
        (overlay_set_area_size, reg1, pos1),
        # unlock
        (create_mesh_overlay, reg1, "mesh_checkbox_lock_off"),
        (position_set_x, pos1, 140),
        (position_set_y, pos1, 180),
        (overlay_set_position, reg1, pos1),
        (create_text_overlay, reg1, "@Unlocked. Item will be auto-upgraded.", tf_scrollable|tf_center_justify),
        (position_set_x, pos1, 160),
        (position_set_y, pos1, 110),
        (overlay_set_position, reg1, pos1),
        (position_set_x, pos1, 150),
        (position_set_y, pos1, 90),
        (overlay_set_area_size, reg1, pos1),
        
        # Apply upgrading settings
        (create_in_game_button_overlay, "$g_presentation_obj_admin_panel_14", "@Apply the upgrading settings to all"),
        (overlay_set_color, "$g_presentation_obj_admin_panel_14", 0xFFFFFF),
        (position_set_x, pos1, 220),
        (position_set_y, pos1, 80),
        (overlay_set_position, "$g_presentation_obj_admin_panel_14", pos1),
        
        # Auto-upgrade equipments
        (create_in_game_button_overlay, "$g_presentation_obj_admin_panel_6", "@Auto-upgrade equipments for all"),
        (overlay_set_color, "$g_presentation_obj_admin_panel_6", 0xFFFFFF),
        (position_set_x, pos1, 220),
        (position_set_y, pos1, 30),
        (overlay_set_position, "$g_presentation_obj_admin_panel_6", pos1),

        # tips
        (create_button_overlay, "$g_presentation_obj_admin_panel_5", "@next loot troop", tf_center_justify),
        #(overlay_set_color, "$g_presentation_obj_admin_panel_5", 0x00FF00),
        (position_set_x, pos1, 910),
        (position_set_y, pos1, 60),
        (overlay_set_position, "$g_presentation_obj_admin_panel_5", pos1),
        
        # hero list
        (str_clear, s0),
        (assign, ":area_size_x", 130),
        (assign, ":area_size_y", 600),
        (assign, ":offset_y", 30),
        (create_text_overlay, reg1, s0, tf_scrollable),
        (position_set_x, pos1, 850),
        (position_set_y, pos1, 100),
        (overlay_set_position, reg1, pos1),
        (position_set_x, pos1, ":area_size_x"),
        (position_set_y, pos1, ":area_size_y"),
        (overlay_set_area_size, reg1, pos1),
        (set_container_overlay, reg1),
        # pos_y of first obj
        (call_script, "script_get_num_heroes_of_party", "p_main_party", 0),
        (assign, ":num_of_heroes", reg0),
        (store_mul, ":pos_y", ":num_of_heroes", ":offset_y"),
        (val_max, ":pos_y", ":area_size_y"),
        (val_sub, ":pos_y", ":offset_y"),
        (store_div, ":pos_x", ":area_size_x", 2),
        
        (assign, ":trp_slot_prsnt_no", 0),
        (party_get_num_companion_stacks, ":num_stacks","p_main_party"),
        (try_for_range, ":i_stack", 0, ":num_stacks"),
          (party_stack_get_troop_id,":stack_troop","p_main_party",":i_stack"),
          (troop_is_hero, ":stack_troop"),
          (str_store_troop_name, s1, ":stack_troop"),
          (position_set_x, pos1, ":pos_x"),
          (position_set_y, pos1, ":pos_y"),
          (val_sub, ":pos_y", ":offset_y"),
          (create_button_overlay, reg1, "@{s1}", tf_center_justify),
          (overlay_set_position, reg1, pos1),
          (try_begin),
            (eq, ":stack_troop", ":selected_troop"),
            (overlay_set_color, reg1, 0x999999),
          (try_end),
          (troop_set_slot, "trp_temp_array_e", ":trp_slot_prsnt_no", reg1),
          (troop_set_slot, "trp_temp_array_a", ":trp_slot_prsnt_no", ":stack_troop"),
          (val_add, ":trp_slot_prsnt_no", 1),
        (try_end),

        (set_container_overlay, -1),
        
        ################
        (str_store_troop_name, s1, ":selected_troop"),
        
        (create_text_overlay, reg1, s1, tf_double_space|tf_center_justify),
        (position_set_x, pos1, 900),
        (position_set_y, pos1, 900),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 75),
        (position_set_y, pos1, 25),
        (overlay_set_position, reg1, pos1),
        
        (store_mul, ":cur_troop", ":selected_troop", 2), #with weapons
        (create_mesh_overlay_with_tableau_material, reg1, -1, "tableau_game_party_window", ":cur_troop"),
        (position_set_x, pos1, 675),
        (position_set_y, pos1, 900),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, -25),
        (position_set_y, pos1, 50),
        (overlay_set_position, reg1, pos1),
        
        ## cur_hero equipments
        (create_mesh_overlay, "$g_presentation_obj_admin_panel_13", "mesh_inventory_equipment_panel"),
        (position_set_x, pos1, 960),
        (position_set_y, pos1, 960),
        (overlay_set_size, "$g_presentation_obj_admin_panel_13", pos1),
        (position_set_x, pos1, 10),
        (position_set_y, pos1, 15),
        (overlay_set_position, "$g_presentation_obj_admin_panel_13", pos1),
        (overlay_set_alpha, "$g_presentation_obj_admin_panel_13", 0xFF),
        
        (assign, ":init_pos_x", 219),
        (assign, ":init_pos_y", 683),
        (assign, ":cur_troop", ":selected_troop"),
        
        (create_combo_label_overlay, "$g_presentation_obj_admin_panel_1"),
        (store_add, ":pos_x", ":init_pos_x", 140), 
        (store_add, ":pos_y", ":init_pos_y", 2),
        (position_set_x, pos1, ":pos_x"),
        (position_set_y, pos1, ":pos_y"),
        (overlay_set_position, "$g_presentation_obj_admin_panel_1", pos1),
        (position_set_x, pos1, 400),
        (position_set_y, pos1, 750),
        (overlay_set_size, "$g_presentation_obj_admin_panel_1", pos1),
        (overlay_add_item, "$g_presentation_obj_admin_panel_1", "@Arms 1"),
        (overlay_add_item, "$g_presentation_obj_admin_panel_1", "@Arms 2"),
        (overlay_set_val, "$g_presentation_obj_admin_panel_1", "$g_weapons_set_no"),
        
        (create_text_overlay, reg1, "@Outfit", tf_center_justify),
        (store_add, ":pos_x", ":init_pos_x", -98), 
        (store_add, ":pos_y", ":init_pos_y", 2), 
        (position_set_x, pos1, ":pos_x"),
        (position_set_y, pos1, ":pos_y"),
        (overlay_set_position, reg1, pos1),
        (create_text_overlay, reg1, "@Horse", tf_center_justify),
        (store_add, ":pos_x", ":init_pos_x", -140), 
        (store_add, ":pos_y", ":init_pos_y", -278), 
        (position_set_x, pos1, ":pos_x"),
        (position_set_y, pos1, ":pos_y"),
        (overlay_set_position, reg1, pos1),
        
        (assign, "$g_current_opened_item_details", -1),
        
        (assign, ":pos_x", ":init_pos_x"),
        (assign, ":pos_y", ":init_pos_y"),
        (try_for_range, ":slot_no", 0, 9),
          (try_begin),
            (eq, ":slot_no", 4),
            (val_sub, ":pos_x", 96),
            (assign, ":pos_y", ":init_pos_y"),
          (else_try),
            (eq, ":slot_no", 7),
            (val_sub, ":pos_x", 84),
            (store_sub, ":pos_y", ":init_pos_y", 85),
          (else_try),
            (eq, ":slot_no", 8),
            (val_sub, ":pos_y", 108),
          (try_end),
          (val_sub, ":pos_y", 85),

          (troop_get_inventory_slot, ":cur_item", ":cur_troop", ":slot_no"),
          # background meshes
          (create_mesh_overlay, reg1, "mesh_white_plane"),
          (position_set_x, pos1, 4150),
          (position_set_y, pos1, 4150),
          (overlay_set_size, reg1, pos1),
          (position_set_x, pos1, ":pos_x"),
          (position_set_y, pos1, ":pos_y"),
          (overlay_set_position, reg1, pos1),
          (overlay_set_color, reg1, 0x000000),
          (try_begin), # alpha
            (lt, ":cur_item", 0),
            (overlay_set_alpha, reg1, 0x00),
          (else_try),
            (overlay_set_alpha, reg1, 0xFF),
          (try_end),
          
          (try_begin), # item mesh
            (lt, ":cur_item", 0),
            (assign, ":cur_item", 0),
          (try_end),
          (create_mesh_overlay_with_item_id, reg1, ":cur_item"),
          (position_set_x, pos1, 850),
          (position_set_y, pos1, 850),
          (overlay_set_size, reg1, pos1),
          (store_add, ":item_x", ":pos_x", 42),
          (store_add, ":item_y", ":pos_y", 42),
          (position_set_x, pos1, ":item_x"),
          (position_set_y, pos1, ":item_y"),
          (overlay_set_position, reg1, pos1),
          (troop_set_slot, "trp_temp_array_d", ":slot_no", reg1),
          (troop_set_slot, "trp_temp_array_c", ":slot_no", 1), # can use
          (try_begin),
            (store_add, ":upgrading_slot", slot_upgrade_wpn_1, ":slot_no"),
            (troop_get_slot, ":upg_setting", ":cur_troop", ":upgrading_slot"),
            (eq, ":upg_setting", lock_item),
            (troop_set_slot, "trp_temp_array_c", ":slot_no", 0),
          (try_end),
          
          # action layer
          (create_mesh_overlay, reg1, "mesh_white_plane"),
          (position_set_x, pos1, 4150),
          (position_set_y, pos1, 4150),
          (overlay_set_size, reg1, pos1),
          (position_set_x, pos1, ":pos_x"),
          (position_set_y, pos1, ":pos_y"),
          (overlay_set_position, reg1, pos1),
          (overlay_set_alpha, reg1, 0x00),
          (troop_set_slot, "trp_temp_array_b", ":slot_no", reg1),
          
          # Upgrade setting
          (create_check_box_overlay, reg1, "mesh_checkbox_lock_on", "mesh_checkbox_lock_off"),
          (store_add, ":lock_x", ":pos_x", 61),
          (store_add, ":lock_y", ":pos_y", 1),
          (position_set_x, pos1, ":lock_x"),
          (position_set_y, pos1, ":lock_y"),
          (overlay_set_position, reg1, pos1),
          (store_add, ":upgrading_slot", slot_upgrade_wpn_1, ":slot_no"),
          (troop_get_slot, ":upg_setting", ":selected_troop", ":upgrading_slot"),
          (try_begin),
            (eq, ":upg_setting", lock_item),
            (overlay_set_val, reg1, 0),
            (troop_set_slot, "trp_temp_array_f", ":slot_no", reg1),
            (create_mesh_overlay, reg1, "mesh_checkbox_lock_on"),
            (position_set_x, pos1, ":lock_x"),
            (position_set_y, pos1, ":lock_y"),
            (overlay_set_position, reg1, pos1),
          (else_try),
            (overlay_set_val, reg1, ":upg_setting"),
            (troop_set_slot, "trp_temp_array_f", ":slot_no", reg1),
          (try_end),
          
          
          
        # unlock
          
          
        (try_end),
          
        
        (troop_set_slot, "trp_temp_array_d", 9, -1),
        (troop_set_slot, "trp_temp_array_b", 9, -1),
        (troop_set_slot, "trp_temp_array_c", 9, 0), # can't use
        
        ## trp_temp_troop
        (assign, ":pos_x", 327),
        (assign, ":pos_y", 647),
        (assign, ":slot_no", 10),
        (try_for_range, ":unused_height", 0, 8),
          (try_for_range, ":unused_width", 0, 6),
            (create_mesh_overlay, reg1, "mesh_mp_inventory_choose"),
            (position_set_x, pos1, 680),
            (position_set_y, pos1, 680),
            (overlay_set_size, reg1, pos1),
            (position_set_x, pos1, ":pos_x"),
            (position_set_y, pos1, ":pos_y"),
            (overlay_set_position, reg1, pos1),
            (store_mul, ":item_slot_no", ":cur_page_of_loot_pool", 48),
            (val_add, ":item_slot_no", ":slot_no"),
            (troop_get_inventory_slot, ":item_no", "$g_cur_item_pool", ":item_slot_no"),
            (troop_get_inventory_slot_modifier, ":item_imod", "$g_cur_item_pool", ":item_slot_no"),
            (try_begin),
              (lt, ":item_no", 0),
              (assign, ":item_no", 0),
              (troop_set_slot, "trp_temp_array_c", ":slot_no", 1),
            (else_try),
              (gt, ":item_no", 0),
              (call_script, "script_troop_can_use_item", ":selected_troop", ":item_no", ":item_imod"),
              (assign, ":can_use", reg0),
              (troop_set_slot, "trp_temp_array_c", ":slot_no", ":can_use"),
            (try_end),
            (create_mesh_overlay_with_item_id, reg1, ":item_no"),
            (position_set_x, pos1, 850),
            (position_set_y, pos1, 850),
            (overlay_set_size, reg1, pos1),
            (store_add, ":item_x", ":pos_x", 42),
            (store_add, ":item_y", ":pos_y", 42),
            (position_set_x, pos1, ":item_x"),
            (position_set_y, pos1, ":item_y"),
            (overlay_set_position, reg1, pos1),
            (troop_set_slot, "trp_temp_array_d", ":slot_no", reg1),
            
            # action layer
            (create_mesh_overlay, reg1, "mesh_white_plane"),
            (position_set_x, pos1, 4250),
            (position_set_y, pos1, 4250),
            (overlay_set_size, reg1, pos1),
            (position_set_x, pos1, ":pos_x"),
            (position_set_y, pos1, ":pos_y"),
            (overlay_set_position, reg1, pos1),
            (overlay_set_color, reg1, 0xFF0000), # red background
            (overlay_set_alpha, reg1, 0x00),
            (try_begin),
              (troop_slot_eq, "trp_temp_array_c", ":slot_no", 0),
              (overlay_set_alpha, reg1, 0x40),
            (try_end),
            (troop_set_slot, "trp_temp_array_b", ":slot_no", reg1),
            
            (val_add, ":pos_x", 85),
            (val_add, ":slot_no", 1),
          (try_end),
          (assign, ":pos_x", 327),
          (val_sub, ":pos_y", 85),
        (try_end),

        # #### mouse fix pos system #######
        # (call_script, "script_mouse_fix_pos_ready"),
        # #### mouse fix pos system #######
      ]),

      (ti_on_presentation_run,
        [
        (set_fixed_point_multiplier, 1000),
        # ##### mouse fix pos system #######
        # (call_script, "script_mouse_fix_pos_run"),
        # ##### mouse fix pos system #######
        
        (assign, ":selected_troop", "$g_prsnt_param_1"),
        (call_script, "script_get_num_heroes_of_party", "p_main_party", 0),
        (assign, ":num_of_heroes", reg0),
        (assign, ":dest_prsnt_slot", 0),
        (try_for_range, ":trp_slot_prsnt_no", 0, ":num_of_heroes"),
          (troop_slot_eq, "trp_temp_array_a", ":trp_slot_prsnt_no", ":selected_troop"),
          (assign, ":dest_prsnt_slot", ":trp_slot_prsnt_no"),
        (try_end),
        
        (assign, ":value_change", 0),
        (try_begin),
          (this_or_next|key_clicked, key_up),
          (game_key_clicked, gk_move_forward),
          (assign, ":value_change", -1),
        (else_try),
          (this_or_next|key_clicked, key_down),
          (game_key_clicked, gk_move_backward),
          (assign, ":value_change", 1),
        (else_try),
          (this_or_next|key_clicked, key_left),
          (game_key_clicked, gk_move_left),
          (store_sub, ":value_change", 0, ":num_of_heroes"),
        (else_try),
          (this_or_next|key_clicked, key_right),
          (game_key_clicked, gk_move_right),
          (assign, ":value_change", ":num_of_heroes"),
        (try_end),
        (try_begin),
          (store_add, ":new_prsnt_slot", ":dest_prsnt_slot", ":value_change"),
          (val_clamp, ":new_prsnt_slot", 0, ":num_of_heroes"),
          (troop_get_slot, ":new_troop", "trp_temp_array_a", ":new_prsnt_slot"),
          (neq, ":new_troop", ":selected_troop"),
          (assign, ":selected_troop", ":new_troop"),
          (assign, "$g_prsnt_param_1", ":selected_troop"),
          (start_presentation, "prsnt_equip_npcs"),
        (try_end),
        
        (try_begin),
          (key_clicked, key_f),
          (val_add, "$g_weapons_set_no", 1),
          (val_mod, "$g_weapons_set_no", 2),
          (call_script, "script_all_toggle_weapons_set", 1),
          (start_presentation, "prsnt_equip_npcs"),
        (try_end),
        
        (try_begin),
          (gt, "$g_cur_selected_item_slot", -1),
          (troop_get_slot, ":object", "trp_temp_array_d", "$g_cur_selected_item_slot"),
          (mouse_get_position, pos1),
          (overlay_set_position, ":object", pos1),
          (position_set_x, pos2, 1700),
          (position_set_y, pos2, 1700),
          (overlay_set_size, ":object", pos2),
        (try_end),
      ]),

    (ti_on_presentation_mouse_press,
     [(store_trigger_param_1, ":object"),
      (store_trigger_param_2, ":mouse_state"),
      
      (assign, ":selected_troop", "$g_prsnt_param_1"),
      (assign, ":cur_page_of_loot_pool", "$g_prsnt_param_2"),
      (try_for_range, ":slot_no", 0, 58),
        (troop_slot_eq, "trp_temp_array_b", ":slot_no", ":object"),
        (troop_slot_eq, "trp_temp_array_c", ":slot_no", 1), # can use
        (try_begin),
          (is_between, ":slot_no", 0, 9),
          (assign, ":item_slot_no", ":slot_no"),
          (troop_get_inventory_slot, ":cur_item", ":selected_troop", ":item_slot_no"),
        (else_try),
          (is_between, ":slot_no", 10, 58),
          (store_mul, ":item_slot_no", ":cur_page_of_loot_pool", 48),
          (val_add, ":item_slot_no", ":slot_no"),
          (troop_get_inventory_slot, ":cur_item", "$g_cur_item_pool", ":item_slot_no"),
        (try_end),
        
        (try_begin),
          (eq, ":mouse_state", 0), # left-click
          (try_begin),
            (eq, "$g_cur_selected_item_slot", -1),
            (try_begin),
              (gt, ":cur_item", -1),
              (assign, "$g_cur_selected_item_slot", ":slot_no"),
              (close_item_details),
            (try_end),
          (else_try),
            #(gt, "$g_cur_selected_item_slot", -1),
            
            (assign, ":old_slot", "$g_cur_selected_item_slot"),
            (assign, ":new_slot", ":slot_no"),
            (call_script, "script_exchange_two_items_of_slots", ":old_slot", ":new_slot", ":selected_troop", ":cur_page_of_loot_pool"),
          (try_end),
        (else_try),
          (eq, ":mouse_state", 1), # right-click
          (try_begin),
            (eq, "$g_cur_selected_item_slot", -1),
            (is_between, ":slot_no", 10, 58),
            (gt, ":cur_item", -1),
            (assign, ":old_slot", ":slot_no"),
            (item_get_type, ":old_slot_type", ":cur_item"),
            (try_begin), # weapons
              (this_or_next|is_between, ":old_slot_type", itp_type_one_handed_wpn, itp_type_goods),
              (is_between, ":old_slot_type", itp_type_pistol, itp_type_animal),
              (assign, ":old_slot_type", itp_type_one_handed_wpn),
            (try_end),
            (assign, ":end_cond", 9),
            (try_for_range, ":new_slot", 0, ":end_cond"),
              (try_begin),
                (is_between, ":new_slot", 0, 4), # weapons
                (assign, ":new_slot_type", itp_type_one_handed_wpn),
                (troop_get_inventory_slot, ":new_item", ":selected_troop", ":new_slot"),
                (try_begin),
                  (gt, ":new_item", -1),
                  (assign, ":new_slot_type", -1),
                (try_end),
              (else_try),
                (is_between, ":new_slot", 4, 8),
                (store_add, ":new_slot_type", ":new_slot", 8),
              (else_try),
                (eq, ":new_slot", 8),
                (assign, ":new_slot_type", itp_type_horse),
              (try_end),
              (eq, ":new_slot_type", ":old_slot_type"),
              (assign, ":end_cond", 0), #stop
              (call_script, "script_exchange_two_items_of_slots", ":old_slot", ":new_slot", ":selected_troop", ":cur_page_of_loot_pool"),
            (try_end),
          (try_end),
        (try_end),
      (try_end),
    ]),
      
    (ti_on_presentation_mouse_enter_leave,
      [
      (store_trigger_param_1, ":object"),
      (store_trigger_param_2, ":enter_leave"),
      
      (assign, ":selected_troop", "$g_prsnt_param_1"),
      (assign, ":cur_page_of_loot_pool", "$g_prsnt_param_2"),
      (try_begin),
        (eq, ":enter_leave", 0),
        (try_for_range, ":slot_no", 0, 58),
          (troop_slot_eq, "trp_temp_array_b", ":slot_no", ":object"),
          (troop_get_slot, ":item_object", "trp_temp_array_d", ":slot_no"),
          (overlay_get_position, pos0, ":item_object"),
          (try_begin),
            (is_between, ":slot_no", 0, 9),
            (troop_get_inventory_slot, ":cur_item", ":selected_troop", ":slot_no"),
            (troop_get_inventory_slot_modifier, ":cur_imod", ":selected_troop", ":slot_no"),
          (else_try),
            (is_between, ":slot_no", 10, 58),
            (store_mul, ":item_slot_no", ":cur_page_of_loot_pool", 48),
            (val_add, ":item_slot_no", ":slot_no"),
            (troop_get_inventory_slot, ":cur_item", "$g_cur_item_pool", ":item_slot_no"),
            (troop_get_inventory_slot_modifier, ":cur_imod", "$g_cur_item_pool", ":item_slot_no"),
          (try_end),
          (eq, "$g_cur_selected_item_slot", -1),
          (gt, ":cur_item", -1),
          (try_begin),
            (gt, ":cur_imod", 0),
            (show_item_details_with_modifier, ":cur_item", ":cur_imod", pos0, 100),
          (else_try),
            (show_item_details, ":cur_item", pos0, 100),
          (try_end),
          (assign, "$g_current_opened_item_details", ":slot_no"),
        (try_end),
      (else_try),
        (try_for_range, ":slot_no", 0, 58),
          (troop_slot_eq, "trp_temp_array_b", ":slot_no", ":object"),
          (try_begin),
            (eq, "$g_current_opened_item_details", ":slot_no"),
            (close_item_details),
          (try_end),
        (try_end),
      (try_end),
    ]),
    
    (ti_on_presentation_event_state_change,
      [
        (store_trigger_param_1, ":object"),
        (store_trigger_param_2, ":value"),
        
        (assign, ":selected_troop", "$g_prsnt_param_1"),
        (assign, ":cur_page_of_loot_pool", "$g_prsnt_param_2"),
        
        (try_for_range, ":slot_no", 0, 9),
          (troop_slot_eq, "trp_temp_array_f", ":slot_no", ":object"),
          (store_add, ":upgrading_slot", slot_upgrade_wpn_1, ":slot_no"),
          (try_begin),
            (troop_get_slot, ":upg_setting", ":selected_troop", ":upgrading_slot"),
            (eq, ":upg_setting", lock_item),
            (troop_set_slot, ":selected_troop", ":upgrading_slot", lock_item),
          (else_try),
            (troop_set_slot, ":selected_troop", ":upgrading_slot", ":value"),
          (try_end),
          (start_presentation, "prsnt_equip_npcs"),
        (try_end),
        

        
        
        (try_begin),
          # (eq, ":object", "$g_presentation_obj_admin_panel_12"),
          # (troop_set_slot, ":selected_troop", slot_upgrade_wpn_4, ":value"),
        # (else_try),
          # (eq, ":object", "$g_presentation_obj_admin_panel_11"),
          # (troop_set_slot, ":selected_troop", slot_upgrade_wpn_3, ":value"),
        # (else_try),
          # (eq, ":object", "$g_presentation_obj_admin_panel_10"),
          # (troop_set_slot, ":selected_troop", slot_upgrade_wpn_2, ":value"),
        # (else_try),
          # (eq, ":object", "$g_presentation_obj_admin_panel_9"),
          # (troop_set_slot, ":selected_troop", slot_upgrade_wpn_1, ":value"),
        # (else_try),
          # (eq, ":object", "$g_presentation_obj_admin_panel_7"),
          # (troop_set_slot, ":selected_troop", slot_upgrade_armor, ":value"),
        # (else_try),
          # (eq, ":object", "$g_presentation_obj_admin_panel_8"),
          # (troop_set_slot, ":selected_troop", slot_upgrade_horse, ":value"),
          (eq, ":object", "$g_presentation_obj_admin_panel_14"),
          (party_get_num_companion_stacks, ":num_stacks","p_main_party"),
          (try_for_range, ":i_stack", 0, ":num_stacks"),
            (party_stack_get_troop_id,":stack_troop","p_main_party",":i_stack"),
            (troop_is_hero, ":stack_troop"),
            (neq, ":stack_troop", ":selected_troop"),
            (try_for_range, ":slot_no", 0, 13),
              (store_add, ":upgrading_slot_no", ":slot_no", slot_upgrade_wpn_1_set_2),
              (troop_get_slot, ":slot_value", ":stack_troop", ":upgrading_slot_no"),
              (try_begin),
                (eq, ":slot_value", lock_item),
                (troop_set_slot, ":stack_troop", ":upgrading_slot_no", lock_item),
              (else_try),
                (troop_set_slot, ":stack_troop", ":upgrading_slot_no", ":slot_value"),
              (try_end),
              #(troop_set_slot, ":stack_troop", ":upgrading_slot_no", ":slot_value"),
            (try_end),
          (try_end),
          # restart presentation
          (start_presentation, "prsnt_equip_npcs"),
        (else_try), # upgrade all
          (eq, ":object", "$g_presentation_obj_admin_panel_6"),
          (party_get_num_companion_stacks, ":num_stacks", "p_main_party"),
          # loot first
          (try_for_range, ":i_stack", 0, ":num_stacks"),
            (party_stack_get_troop_id, ":stack_troop", "p_main_party", ":i_stack"),
            (troop_is_hero, ":stack_troop"),
            (call_script, "script_loot_the_best_armors_and_horse_for_troop", ":stack_troop", "trp_temp_troop"),
            (call_script, "script_loot_the_best_weapons_for_troop", ":stack_troop", "trp_temp_troop"),
          (try_end),
          # toggle weapons to another set
          (val_add, "$g_weapons_set_no", 1),
          (val_mod, "$g_weapons_set_no", 2),
          (call_script, "script_all_toggle_weapons_set", 1),
          # loot weapons again
          (try_for_range, ":i_stack", 0, ":num_stacks"),
            (party_stack_get_troop_id, ":stack_troop", "p_main_party", ":i_stack"),
            (troop_is_hero, ":stack_troop"),
            (call_script, "script_loot_the_best_weapons_for_troop", ":stack_troop", "trp_temp_troop"),
          (try_end),
          # toggle back
          (val_add, "$g_weapons_set_no", 1),
          (val_mod, "$g_weapons_set_no", 2),
          (call_script, "script_all_toggle_weapons_set", 1),
          # restart presentation
          (start_presentation, "prsnt_equip_npcs"),
        (else_try),
          (eq, ":object", "$g_presentation_obj_admin_panel_5"),
#          (tutorial_box, "@Left - drag: exchange items manually^Right - click: exchange items of the same type exclude weapons automatically\
#^^Up Arrow Key: switch to the previous hero^Down Arrow Key: switch to the next hero^Left Arrow Key: switch to the first hero^Right Arrow Key: switch to the last hero^^Key F: toggle the set of weapons", "@Tips"),
		  (try_begin),
			(eq, "$g_cur_item_pool", trp_temp_troop),
			(assign, "$g_cur_item_pool", trp_temp_array_a),
		  (else_try),
		    (eq, "$g_cur_item_pool", trp_temp_array_j),
			(assign, "$g_cur_item_pool", trp_temp_troop),
		  (else_try),
		    (val_add, "$g_cur_item_pool", 1),
			(store_free_inventory_capacity, ":free_space", "$g_cur_item_pool"),
			(ge, ":free_space", 96),
			(assign, "$g_cur_item_pool", trp_temp_troop),
			#(assign, "$g_cur_page_of_loot_pool", 0),			
		  (try_end),
		  (start_presentation, "prsnt_equip_npcs"),
        (else_try),
          (eq, ":object", "$g_presentation_obj_admin_panel_4"),
          (troop_sort_inventory, "$g_cur_item_pool"), # by price first
          (call_script, "script_sort_merchant_inventory_by_type", "$g_cur_item_pool"),
          (start_presentation, "prsnt_equip_npcs"),
        (else_try), # toggle weapon set for all
          (eq, ":object", "$g_presentation_obj_admin_panel_1"),
          (assign, "$g_weapons_set_no", ":value"),
          (call_script, "script_all_toggle_weapons_set", 1),
          (start_presentation, "prsnt_equip_npcs"),
        (else_try),
          (eq, ":object", "$g_presentation_obj_admin_panel_3"),
          (assign, ":cur_page_of_loot_pool", ":value"),
          (assign, "$g_prsnt_param_2", ":cur_page_of_loot_pool"),
          (start_presentation, "prsnt_equip_npcs"),
        (else_try),
          (eq, ":object", "$g_presentation_obj_admin_panel_2"),
          (assign, ":selected_troop", "trp_player"),
          (assign, "$g_prsnt_param_1", ":selected_troop"),
          # toggle to none-empty weapons_set
          (call_script, "script_all_toggle_weapons_set", 0),
          (presentation_set_duration, 0),
		  (assign, "$g_cur_item_pool", trp_temp_troop),
        (try_end),

        (call_script, "script_get_num_heroes_of_party", "p_main_party", 0),
        (assign, ":num_of_heroes", reg0),
        (try_for_range, ":trp_slot_prsnt_no", 0, ":num_of_heroes"),
          (troop_slot_eq, "trp_temp_array_e", ":trp_slot_prsnt_no", ":object"),
          (troop_get_slot, ":cur_troop", "trp_temp_array_a", ":trp_slot_prsnt_no"),
          (assign, ":selected_troop", ":cur_troop"),
          (assign, "$g_prsnt_param_1", ":selected_troop"),
          (start_presentation, "prsnt_equip_npcs"),
        (try_end),
      ]),
    ]),
  
  
  ("set_price_threshold",0,mesh_load_window,[
      (ti_on_presentation_load,
       [(set_fixed_point_multiplier, 1000),
        
        # price_threshold_for_picking
        (position_set_x, pos1, 175),
        (position_set_y, pos1, 515),
        (create_text_overlay, reg1, "@Price threshold of items for picking:", tf_vertical_align_center),
        (overlay_set_position, reg1, pos1),
        
        (create_number_box_overlay, "$g_presentation_obj_1", 0, 10000),
        (position_set_x, pos1, 600),
        (position_set_y, pos1, 500),
        (overlay_set_position, "$g_presentation_obj_1", pos1),
        (overlay_set_val, "$g_presentation_obj_1", "$g_price_threshold_for_picking"),
        
        (create_button_overlay, "$g_presentation_obj_2", "@Continue...", tf_center_justify),
        (position_set_x, pos1, 500),
        (position_set_y, pos1, 300),
        (overlay_set_position, "$g_presentation_obj_2", pos1),
        (presentation_set_duration, 999999),
        ]),
      (ti_on_presentation_event_state_change,
       [(store_trigger_param_1, ":object"),
        (store_trigger_param_2, ":value"),
        
        (try_begin),
          (eq, ":object", "$g_presentation_obj_1"),
          (assign, "$g_price_threshold_for_picking", ":value"),
        (else_try),
          (eq, ":object", "$g_presentation_obj_2"),
          (presentation_set_duration, 0),
        (try_end),
        ]),
      ]),
      
  ("next_rank_notify", 0, mesh_set_vassal_title, [
    (ti_on_presentation_load, [
        (presentation_set_duration, 999999),
        (set_fixed_point_multiplier, 1000),
        (create_text_overlay, reg1, "@Advanced in Class", 16),
        (position_set_x, pos1, 500),
        (position_set_y, pos1, 695),
        (overlay_set_position, reg1, pos1),
        
        (try_begin),
          (eq, reg11, 0),
          (create_text_overlay, reg1, "@Congratulations, ^^You have advanced in class! Congratulations, you may call yourself one of the {s7} now.", 16),
        (else_try),
          (eq, reg11, 1),
          (create_text_overlay, reg1, "@Good morrow, ^^You have advanced in class! Congratulations, you may call yourself one of the {s7} now.", 16),
        (else_try),
          (eq, reg11, 2),
          (create_text_overlay, reg1, "@Good den, ^^You've entered the class of {s7}. Keep it up!", 16),
        (else_try),
          (eq, reg11, 3),
          (create_text_overlay, reg1, "@Good e'en, ^^Your efforts are rewared, you may call yourself a {s7} now.", 16),
        (else_try),
          (eq, reg11, 4),
          (create_text_overlay, reg1, "@Good den, ^^You have gained respect, {s7}! You will soon find yourself being part of the middle class.", 16),
        (else_try),
          (eq, reg11, 5),
          (create_text_overlay, reg1, "@Congratulations! ^^You are now part of the middle class, {s7} {playername}.", 16),
        (else_try),
          (eq, reg11, 6),
          (create_text_overlay, reg1, "@Good morrow, ^^You've gained more and more power and prestige. Lords keep track on you. Welcome to the Bourgeoisie!", 16),
        (else_try),
          (eq, reg11, 7),
          (create_text_overlay, reg1, "@My lord, ^^You entered the upper class. Power and wealth feature this social class, consisting of ambitious people. You are now one of the {s7}!", 16),
        (else_try),
          (eq, reg11, 8),
          (create_text_overlay, reg1, "@My lord, ^^You are respected powerful now. The Aristocracy welcomes you!", 16),
        (else_try),
          (eq, reg11, 9),
          (create_text_overlay, reg1, "@Good eventide, my lord. ^^You must be proud of belonging to the Patriciate now. The governing elites of towns! Even the {s10} is impressed. He might grant you a noble title soon.", 16),
        (else_try),
          (eq, reg11, 10),
          (create_text_overlay, reg1, "@My noble lord, ^^The glorious {s10} has granted you a noble title. You are now a {s6}! Congratulations and you be proud to belong to the nobility..", 16),
        (else_try),
          (eq, reg11, 11),
          (create_text_overlay, reg1, "@My noble lord, ^^You have been granted the honorific title of {s7}!", 16),
        (else_try),
          (eq, reg11, 12),
          (create_text_overlay, reg1, "@My noble lord, ^^You are now {s7}. An old title, bringing much respect.", 16),
        (else_try),
          (eq, reg11, 13),
          (create_text_overlay, reg1, "@My noble lord, ^^His Majesty granted you the title of {s7}. Most people will bow before your greatness.", 16),
        (else_try),
          (eq, reg11, 14),
          (create_text_overlay, reg1, "@Your Grace, ^^His Majesty the {s10} granted you the title of {s7}. A serious prestigious title, which brings much power and influence!", 16),
        (else_try),
          (eq, reg11, 15),
          (create_text_overlay, reg1, "@Your Grace, ^^{s7} is now your title. The {s10} must be proud of you.", 16),
        (try_end),
        (position_set_x, pos1, 500),
        (position_set_y, pos1, 85),
        (overlay_set_position, reg1, pos1),
        (create_mesh_overlay_with_tableau_material, reg1, -1, "tableau_rank_troop", reg11),
        (position_set_x, pos1, 200),
        (position_set_y, pos1, 180),
        (overlay_set_position, reg1, pos1),
        (position_set_x, pos1, 900),
        (position_set_y, pos1, 900),
        (overlay_set_size, reg1, pos1),
        (create_button_overlay, "$g_presentation_obj_1", "@Continue...", 16),
        (position_set_x, pos1, 500),
        (position_set_y, pos1, 35),
        (overlay_set_position, "$g_presentation_obj_1", pos1),
    ]),
    (ti_on_presentation_event_state_change, [
        (store_trigger_param_1, ":var_0"),
        (try_begin),
            (eq, ":var_0", "$g_presentation_obj_1"),
            (presentation_set_duration, 0),
            (change_screen_return),
        (try_end),
    ]),
  ]),

  ("book_trade", 0, 0, [
    (ti_on_presentation_load,
      [
        (presentation_set_duration, 999999),
        (set_fixed_point_multiplier, 1000),

        (create_mesh_overlay, reg1, "mesh_load_window"),
        (position_set_x, pos1, 0),
        (position_set_y, pos1, 0),
        (overlay_set_position, reg1, pos1),
        
        (assign, "$g_current_opened_item_details", -1),

        ## back
        (create_game_button_overlay, "$g_presentation_obj_1", "@Done"),
        (position_set_x, pos1, 500),
        (position_set_y, pos1, 25),
        (overlay_set_position, "$g_presentation_obj_1", pos1),

        (create_text_overlay, reg1, "@This is a new trade screen for books. Hold down control key while clicking on a book to purchase or sell it.^^The right side is your bookcase, not your inventory. You can manage your bookcase in camp menu.", tf_double_space|tf_scrollable),
        (position_set_x, pos1, 345),
        (position_set_y, pos1, 290),
        (overlay_set_position, reg1, pos1),
        (position_set_x, pos1, 310),
        (position_set_y, pos1, 300),
        (overlay_set_area_size, reg1, pos1),
        
        # money text & name text
        (assign, ":bookseller", "$g_talk_troop"),
        
        (store_troop_gold, ":troop_gold", ":bookseller"),
        (call_script, "script_game_get_money_text", ":troop_gold"),
        (create_text_overlay, reg1, "@Money: {s1}", tf_center_justify),
        (position_set_x, pos1, 170),
        (position_set_y, pos1, 40),
        (overlay_set_position, reg1, pos1),
        (str_store_troop_name, s1, ":bookseller"),
        (create_text_overlay, reg1, s1, tf_center_justify),
        (position_set_x, pos1, 170),
        (position_set_y, pos1, 660),
        (overlay_set_position, reg1, pos1),
        
        (store_troop_gold, ":troop_gold", "trp_player"),
        (call_script, "script_game_get_money_text", ":troop_gold"),
        (create_text_overlay, reg1, "@Money: {s1}", tf_center_justify),
        (position_set_x, pos1, 800),
        (position_set_y, pos1, 40),
        (overlay_set_position, reg1, pos1),
        (str_store_troop_name, s1, "trp_bookcase"),
        (create_text_overlay, reg1, s1, tf_center_justify),
        (position_set_x, pos1, 800),
        (position_set_y, pos1, 660),
        (overlay_set_position, reg1, pos1),
        
        ## bookseller's inventory
        (str_clear, s0),
        (create_text_overlay, reg1, s0, tf_scrollable),
        (position_set_x, pos1, 50),
        (position_set_y, pos1, 75),
        (overlay_set_position, reg1, pos1),
        (position_set_x, pos1, 245),
        (position_set_y, pos1, 565),
        (overlay_set_area_size, reg1, pos1),
        (set_container_overlay, reg1),

        (assign, ":pos_x", 0),
        (assign, ":pos_y", 2480),
        (assign, ":slot_no", 10),
        (try_for_range, ":unused_height", 0, 32),
          (try_for_range, ":unused_width", 0, 3),
            (create_image_button_overlay, reg1, "mesh_mp_inventory_slot_empty", "mesh_mp_inventory_slot_empty"),
            (position_set_x, pos1, 640),
            (position_set_y, pos1, 640),
            (overlay_set_size, reg1, pos1),
            (position_set_x, pos1, ":pos_x"),
            (position_set_y, pos1, ":pos_y"),
            (overlay_set_position, reg1, pos1),
            (troop_set_slot, "trp_temp_array_a", ":slot_no", reg1),
            (create_mesh_overlay, reg1, "mesh_mp_inventory_choose"),
            (position_set_x, pos1, 640),
            (position_set_y, pos1, 640),
            (overlay_set_size, reg1, pos1),
            (position_set_x, pos1, ":pos_x"),
            (position_set_y, pos1, ":pos_y"),
            (overlay_set_position, reg1, pos1),
            (troop_get_inventory_slot, ":item_no", ":bookseller", ":slot_no"),
            (try_begin),
              (gt, ":item_no", -1),
              (create_mesh_overlay_with_item_id, reg1, ":item_no"),
              (position_set_x, pos1, 800),
              (position_set_y, pos1, 800),
              (overlay_set_size, reg1, pos1),
              (store_add, ":item_x", ":pos_x", 40),
              (store_add, ":item_y", ":pos_y", 40),
              (position_set_x, pos1, ":item_x"),
              (position_set_y, pos1, ":item_y"),
              (overlay_set_position, reg1, pos1),
              (troop_set_slot, "trp_temp_array_b", ":slot_no", reg1),
            (try_end),
            (val_add, ":pos_x", 80),
            (val_add, ":slot_no", 1),
          (try_end),
          (assign, ":pos_x", 0),
          (val_sub, ":pos_y", 80),
        (try_end),
        (set_container_overlay, -1),

        ## bookcase's inventory
        (str_clear, s0),
        (create_text_overlay, reg1, s0, tf_scrollable),
        (position_set_x, pos1, 680),
        (position_set_y, pos1, 75),
        (overlay_set_position, reg1, pos1),
        (position_set_x, pos1, 245),
        (position_set_y, pos1, 565),
        (overlay_set_area_size, reg1, pos1),
        (set_container_overlay, reg1),

        (assign, ":pos_x", 0),
        (assign, ":pos_y", 2480),
        (assign, ":slot_no", 110),
        (try_for_range, ":unused_height", 0, 32),
          (try_for_range, ":unused_width", 0, 3),
            (create_image_button_overlay, reg1, "mesh_mp_inventory_slot_empty", "mesh_mp_inventory_slot_empty"),
            (position_set_x, pos1, 640),
            (position_set_y, pos1, 640),
            (overlay_set_size, reg1, pos1),
            (position_set_x, pos1, ":pos_x"),
            (position_set_y, pos1, ":pos_y"),
            (overlay_set_position, reg1, pos1),
            (troop_set_slot, "trp_temp_array_a", ":slot_no", reg1),
            (create_mesh_overlay, reg1, "mesh_mp_inventory_choose"),
            (position_set_x, pos1, 640),
            (position_set_y, pos1, 640),
            (overlay_set_size, reg1, pos1),
            (position_set_x, pos1, ":pos_x"),
            (position_set_y, pos1, ":pos_y"),
            (overlay_set_position, reg1, pos1),
            (store_sub, ":bookcase_slot_no", ":slot_no", 100),
            (troop_get_inventory_slot, ":item_no", "trp_bookcase", ":bookcase_slot_no"),
            (try_begin),
              (gt, ":item_no", -1),
              (create_mesh_overlay_with_item_id, reg1, ":item_no"),
              (position_set_x, pos1, 800),
              (position_set_y, pos1, 800),
              (overlay_set_size, reg1, pos1),
              (store_add, ":item_x", ":pos_x", 40),
              (store_add, ":item_y", ":pos_y", 40),
              (position_set_x, pos1, ":item_x"),
              (position_set_y, pos1, ":item_y"),
              (overlay_set_position, reg1, pos1),
              (troop_set_slot, "trp_temp_array_b", ":slot_no", reg1),
            (try_end),
            (val_add, ":pos_x", 80),
            (val_add, ":slot_no", 1),
          (try_end),
          (assign, ":pos_x", 0),
          (val_sub, ":pos_y", 80),
        (try_end),
        (set_container_overlay, -1),
        ## items
      ]),

    (ti_on_presentation_mouse_enter_leave,
      [
      (store_trigger_param_1, ":object"),
      (store_trigger_param_2, ":enter_leave"),

      (assign, ":bookseller", "$g_talk_troop"),
      (troop_get_inventory_capacity, ":capacity", "trp_bookcase"),
      (store_add, ":max_slot_no", ":capacity", 100),
      (try_begin),
        (eq, ":enter_leave", 0),
        (try_begin),
          (eq, "$g_current_opened_item_details", -1),
          (close_item_details),
        (try_end),
        (try_for_range, ":slot_no", 10, ":max_slot_no"),
          (troop_slot_eq, "trp_temp_array_a", ":slot_no", ":object"),
          (try_begin),
            (lt, ":slot_no", 110),
            (assign, ":cur_item_slot", ":slot_no"),
            (assign, ":cur_troop", ":bookseller"),
            (troop_get_inventory_slot, ":item_no", ":cur_troop", ":cur_item_slot"),
            (call_script, "script_game_get_item_buy_price_factor", ":item_no"),
            (assign, ":price_factor", reg0),
          (else_try),
            (store_sub, ":cur_item_slot", ":slot_no", 100),
            (assign, ":cur_troop", "trp_bookcase"),
            (troop_get_inventory_slot, ":item_no", ":cur_troop", ":cur_item_slot"),
            (call_script, "script_game_get_item_sell_price_factor", ":item_no"),
            (assign, ":price_factor", reg0),
          (try_end),
          (try_begin),
            (gt, ":item_no", -1),
            (troop_get_slot, ":target_obj", "trp_temp_array_b", ":slot_no"),
            (overlay_get_position, pos0, ":target_obj"),
            (troop_get_inventory_slot_modifier, ":imod", ":cur_troop", ":cur_item_slot"),
            (try_begin),
              (gt, ":imod", 0),
              (show_item_details_with_modifier, ":item_no", ":imod", pos0, ":price_factor"),
            (else_try),
              (show_item_details, ":item_no", pos0, ":price_factor"),
            (try_end),
            (assign, "$g_current_opened_item_details", ":slot_no"),
          (try_end),
        (try_end),
      (else_try),
        (try_for_range, ":slot_no", 10, ":max_slot_no"),
          (troop_slot_eq, "trp_temp_array_a", ":slot_no", ":object"),
          (try_begin),
            (this_or_next|eq, "$g_current_opened_item_details", ":slot_no"),
            (eq, "$g_current_opened_item_details", -1),
            (close_item_details),
          (try_end),
        (try_end),
      (try_end),
    ]),

    (ti_on_presentation_event_state_change,
      [
        (store_trigger_param_1, ":object"),

        (try_begin),
          (eq, ":object", "$g_presentation_obj_1"),
          (presentation_set_duration, 0),
          (mission_enable_talk),
        (try_end),
        
        (assign, ":bookseller", "$g_talk_troop"),
        (troop_get_inventory_capacity, ":capacity", "trp_bookcase"),
        (store_add, ":max_slot_no", ":capacity", 100),
        (try_for_range, ":slot_no", 10, ":max_slot_no"),
          (troop_slot_eq, "trp_temp_array_a", ":slot_no", ":object"),
          (this_or_next|key_is_down, key_left_control),
          (key_is_down, key_right_control),
          (try_begin),
            (lt, ":slot_no", 110),
            (troop_get_inventory_slot, ":item_no", ":bookseller", ":slot_no"),
            (troop_get_inventory_slot_modifier, ":imod", ":bookseller", ":slot_no"),
            (try_begin),
              (gt, ":item_no", -1),
              (call_script, "script_game_get_item_buy_price_factor", ":item_no"),
              (assign, ":buy_price_factor", reg0),
              (call_script, "script_get_item_value_with_imod", ":item_no", ":imod"),
              (assign, ":cost", reg0),
              (val_div, ":cost", 100),
              (val_mul, ":cost", ":buy_price_factor"),
              (val_div, ":cost", 100),
              (val_max, ":cost",1),
              (store_troop_gold, ":troop_gold", "trp_player"),
              (try_begin),
                (store_free_inventory_capacity, ":inv_cap", "trp_player"),
                (le, ":inv_cap", 0),
              (else_try),
                (lt, ":troop_gold", ":cost"),
                (display_message, "@You don't have enough money."),
              (else_try),
                (troop_remove_gold, "trp_player", ":cost"),
                (troop_add_gold, ":bookseller", ":cost"),
                (troop_set_inventory_slot, ":bookseller", ":slot_no", -1),
                (troop_add_item, "trp_bookcase", ":item_no", ":imod"),
                (start_presentation, "prsnt_book_trade"),
              (try_end),
            (try_end),
          (else_try),
            (store_sub, ":bookcase_slot_no", ":slot_no", 100),
            (troop_get_inventory_slot, ":item_no", "trp_bookcase", ":bookcase_slot_no"),
            (troop_get_inventory_slot_modifier, ":imod", "trp_bookcase", ":bookcase_slot_no"),
            (try_begin),
              (gt, ":item_no", -1),
              (call_script, "script_game_get_item_sell_price_factor", ":item_no"),
              (assign, ":sell_price_factor", reg0),
              (call_script, "script_get_item_value_with_imod", ":item_no", ":imod"),
              (assign, ":cost", reg0),
              (val_div, ":cost", 100),
              (val_mul, ":cost", ":sell_price_factor"),
              (val_div, ":cost", 100),
              (val_max, ":cost",1),
              (store_troop_gold, ":troop_gold", ":bookseller"),
              (try_begin),
                (store_free_inventory_capacity, ":inv_cap", ":bookseller"),
                (le, ":inv_cap", 0),
              (else_try),
                (lt, ":troop_gold", ":cost"),
                (display_message, "@He don't have enough money."),
              (else_try),
                (troop_remove_gold, ":bookseller", ":cost"),
                (troop_add_gold, "trp_player", ":cost"),
                (troop_set_inventory_slot, "trp_bookcase", ":bookcase_slot_no", -1),
                (troop_set_slot, "trp_bookcase", ":bookcase_slot_no", -1),
                (troop_add_item, ":bookseller", ":item_no", ":imod"),
                (start_presentation, "prsnt_book_trade"),
              (try_end),
            (try_end),
          (try_end),
        (try_end),
    ]),
  ]),
    
  ("book_exchange", 0, 0, [
    (ti_on_presentation_load,
      [
        (presentation_set_duration, 999999),
        (set_fixed_point_multiplier, 1000),

        (create_mesh_overlay, reg1, "mesh_load_window"),
        (position_set_x, pos1, 0),
        (position_set_y, pos1, 0),
        (overlay_set_position, reg1, pos1),
        
        (assign, "$g_current_opened_item_details", -1),

        ## back
        (create_game_button_overlay, "$g_presentation_obj_1", "@Done"),
        (position_set_x, pos1, 500),
        (position_set_y, pos1, 25),
        (overlay_set_position, "$g_presentation_obj_1", pos1),

        (create_text_overlay, reg1, "@This is a screen for book_exchange books for inventory or bookcase. Hold down control key while clicking on a book to inventory or bookcase.^^The right side is your bookcase, The left side is your inventory. ", tf_double_space|tf_scrollable),
        (position_set_x, pos1, 345),
        (position_set_y, pos1, 290),
        (overlay_set_position, reg1, pos1),
        (position_set_x, pos1, 310),
        (position_set_y, pos1, 300),
        (overlay_set_area_size, reg1, pos1),
                
        ## bookseller's inventory
        (str_clear, s0),
        (create_text_overlay, reg1, s0, tf_scrollable),
        (position_set_x, pos1, 50),
        (position_set_y, pos1, 75),
        (overlay_set_position, reg1, pos1),
        (position_set_x, pos1, 245),
        (position_set_y, pos1, 565),
        (overlay_set_area_size, reg1, pos1),
        (set_container_overlay, reg1),

        (assign, ":pos_x", 0),
        (assign, ":pos_y", 2480),
        (assign, ":slot_no", 10),
        (try_for_range, ":unused_height", 0, 32),
          (try_for_range, ":unused_width", 0, 3),
            (create_image_button_overlay, reg1, "mesh_mp_inventory_slot_empty", "mesh_mp_inventory_slot_empty"),
            (position_set_x, pos1, 640),
            (position_set_y, pos1, 640),
            (overlay_set_size, reg1, pos1),
            (position_set_x, pos1, ":pos_x"),
            (position_set_y, pos1, ":pos_y"),
            (overlay_set_position, reg1, pos1),
            (troop_set_slot, "trp_temp_array_a", ":slot_no", reg1),
            (create_mesh_overlay, reg1, "mesh_mp_inventory_choose"),
            (position_set_x, pos1, 640),
            (position_set_y, pos1, 640),
            (overlay_set_size, reg1, pos1),
            (position_set_x, pos1, ":pos_x"),
            (position_set_y, pos1, ":pos_y"),
            (overlay_set_position, reg1, pos1),
            (troop_get_inventory_slot, ":item_no", "trp_player", ":slot_no"),
            (try_begin),
              (gt, ":item_no", -1),
              (create_mesh_overlay_with_item_id, reg1, ":item_no"),
              (position_set_x, pos1, 800),
              (position_set_y, pos1, 800),
              (overlay_set_size, reg1, pos1),
              (store_add, ":item_x", ":pos_x", 40),
              (store_add, ":item_y", ":pos_y", 40),
              (position_set_x, pos1, ":item_x"),
              (position_set_y, pos1, ":item_y"),
              (overlay_set_position, reg1, pos1),
              (troop_set_slot, "trp_temp_array_b", ":slot_no", reg1),
            (try_end),
            (val_add, ":pos_x", 80),
            (val_add, ":slot_no", 1),
          (try_end),
          (assign, ":pos_x", 0),
          (val_sub, ":pos_y", 80),
        (try_end),
        (set_container_overlay, -1),

        ## bookcase's inventory
        (str_clear, s0),
        (create_text_overlay, reg1, s0, tf_scrollable),
        (position_set_x, pos1, 680),
        (position_set_y, pos1, 75),
        (overlay_set_position, reg1, pos1),
        (position_set_x, pos1, 245),
        (position_set_y, pos1, 565),
        (overlay_set_area_size, reg1, pos1),
        (set_container_overlay, reg1),

        (assign, ":pos_x", 0),
        (assign, ":pos_y", 2480),
        (assign, ":slot_no", 110),
        (try_for_range, ":unused_height", 0, 32),
          (try_for_range, ":unused_width", 0, 3),
            (create_image_button_overlay, reg1, "mesh_mp_inventory_slot_empty", "mesh_mp_inventory_slot_empty"),
            (position_set_x, pos1, 640),
            (position_set_y, pos1, 640),
            (overlay_set_size, reg1, pos1),
            (position_set_x, pos1, ":pos_x"),
            (position_set_y, pos1, ":pos_y"),
            (overlay_set_position, reg1, pos1),
            (troop_set_slot, "trp_temp_array_a", ":slot_no", reg1),
            (create_mesh_overlay, reg1, "mesh_mp_inventory_choose"),
            (position_set_x, pos1, 640),
            (position_set_y, pos1, 640),
            (overlay_set_size, reg1, pos1),
            (position_set_x, pos1, ":pos_x"),
            (position_set_y, pos1, ":pos_y"),
            (overlay_set_position, reg1, pos1),
            (store_sub, ":bookcase_slot_no", ":slot_no", 100),
            (troop_get_inventory_slot, ":item_no", "trp_bookcase", ":bookcase_slot_no"),
            (try_begin),
              (gt, ":item_no", -1),
              (create_mesh_overlay_with_item_id, reg1, ":item_no"),
              (position_set_x, pos1, 800),
              (position_set_y, pos1, 800),
              (overlay_set_size, reg1, pos1),
              (store_add, ":item_x", ":pos_x", 40),
              (store_add, ":item_y", ":pos_y", 40),
              (position_set_x, pos1, ":item_x"),
              (position_set_y, pos1, ":item_y"),
              (overlay_set_position, reg1, pos1),
              (troop_set_slot, "trp_temp_array_b", ":slot_no", reg1),
            (try_end),
            (val_add, ":pos_x", 80),
            (val_add, ":slot_no", 1),
          (try_end),
          (assign, ":pos_x", 0),
          (val_sub, ":pos_y", 80),
        (try_end),
        (set_container_overlay, -1),
        ## items
      ]),

    (ti_on_presentation_mouse_enter_leave,
      [
      (store_trigger_param_1, ":object"),
      (store_trigger_param_2, ":enter_leave"),

      (troop_get_inventory_capacity, ":capacity", "trp_bookcase"),
      (store_add, ":max_slot_no", ":capacity", 100),
      (try_begin),
        (eq, ":enter_leave", 0),
        (try_begin),
          (eq, "$g_current_opened_item_details", -1),
          (close_item_details),
        (try_end),
        (try_for_range, ":slot_no", 10, ":max_slot_no"),
          (troop_slot_eq, "trp_temp_array_a", ":slot_no", ":object"),
          (try_begin),
            (lt, ":slot_no", 110),
            (assign, ":cur_item_slot", ":slot_no"),
            (assign, ":cur_troop", "trp_player"),
            (troop_get_inventory_slot, ":item_no", ":cur_troop", ":cur_item_slot"),
            (call_script, "script_game_get_item_buy_price_factor", ":item_no"),
            (assign, ":price_factor", reg0),
          (else_try),
            (store_sub, ":cur_item_slot", ":slot_no", 100),
            (assign, ":cur_troop", "trp_bookcase"),
            (troop_get_inventory_slot, ":item_no", ":cur_troop", ":cur_item_slot"),
            (call_script, "script_game_get_item_sell_price_factor", ":item_no"),
            (assign, ":price_factor", reg0),
          (try_end),
          (try_begin),
            (gt, ":item_no", -1),
            (troop_get_slot, ":target_obj", "trp_temp_array_b", ":slot_no"),
            (overlay_get_position, pos0, ":target_obj"),
            (troop_get_inventory_slot_modifier, ":imod", ":cur_troop", ":cur_item_slot"),
            (try_begin),
              (gt, ":imod", 0),
              (show_item_details_with_modifier, ":item_no", ":imod", pos0, ":price_factor"),
            (else_try),
              (show_item_details, ":item_no", pos0, ":price_factor"),
            (try_end),
            (assign, "$g_current_opened_item_details", ":slot_no"),
          (try_end),
        (try_end),
      (else_try),
        (try_for_range, ":slot_no", 10, ":max_slot_no"),
          (troop_slot_eq, "trp_temp_array_a", ":slot_no", ":object"),
          (try_begin),
            (this_or_next|eq, "$g_current_opened_item_details", ":slot_no"),
            (eq, "$g_current_opened_item_details", -1),
            (close_item_details),
          (try_end),
        (try_end),
      (try_end),
      
      
    ]),

    (ti_on_presentation_event_state_change,
      [
        (store_trigger_param_1, ":object"),

        (try_begin),
          (eq, ":object", "$g_presentation_obj_1"),
          (presentation_set_duration, 0),
          (mission_enable_talk),
        (try_end),
        
        (troop_get_inventory_capacity, ":capacity", "trp_bookcase"),
        (store_add, ":max_slot_no", ":capacity", 100),
        (try_for_range, ":slot_no", 10, ":max_slot_no"),
          (troop_slot_eq, "trp_temp_array_a", ":slot_no", ":object"),
          (this_or_next|key_is_down, key_left_control),
          (key_is_down, key_right_control),
          (try_begin),
            (lt, ":slot_no", 110),
            (troop_get_inventory_slot, ":item_no", "trp_player", ":slot_no"),
            (troop_get_inventory_slot_modifier, ":imod", "trp_player", ":slot_no"),
            (try_begin),
              (gt, ":item_no", -1),
              (item_get_type, ":type", ":item_no"),
              (eq, ":type", itp_type_book),
              (try_begin),
                (store_free_inventory_capacity, ":inv_cap", "trp_bookcase"),
                (le, ":inv_cap", 0),
              (else_try),
                (troop_set_inventory_slot, "trp_player", ":slot_no", -1),
                (troop_add_item, "trp_bookcase", ":item_no", ":imod"),
                (start_presentation, "prsnt_book_exchange"),
              (try_end),
            (try_end),
          (else_try),
            (store_sub, ":bookcase_slot_no", ":slot_no", 100),
            (troop_get_inventory_slot, ":item_no", "trp_bookcase", ":bookcase_slot_no"),
            (troop_get_inventory_slot_modifier, ":imod", "trp_bookcase", ":bookcase_slot_no"),
            (try_begin),
              (gt, ":item_no", -1),
              (item_get_type, ":type", ":item_no"),
              (eq, ":type", itp_type_book),
              (try_begin),
                (store_free_inventory_capacity, ":inv_cap", "trp_player"),
                (le, ":inv_cap", 0),
              (else_try),
                (troop_set_inventory_slot, "trp_bookcase", ":bookcase_slot_no", -1),
                (troop_set_slot, "trp_bookcase", ":bookcase_slot_no", -1),
                (troop_add_item, "trp_player", ":item_no", ":imod"),
                (start_presentation, "prsnt_book_exchange"),
              (try_end),
            (try_end),
          (try_end),
        (try_end),
    ]),
  ]),
    
  ("gem_exchange", 0, 0, [
    (ti_on_presentation_load,
      [
        (presentation_set_duration, 999999),
        (set_fixed_point_multiplier, 1000),

        (create_mesh_overlay, reg1, "mesh_load_window"),
        (position_set_x, pos1, 0),
        (position_set_y, pos1, 0),
        (overlay_set_position, reg1, pos1),
        
        (assign, "$g_current_opened_item_details", -1),

        ## back
        (create_game_button_overlay, "$g_presentation_obj_1", "@Done"),
        (position_set_x, pos1, 500),
        (position_set_y, pos1, 25),
        (overlay_set_position, "$g_presentation_obj_1", pos1),

        (create_text_overlay, reg1, "@This is a screen for gem_exchange books for inventory or bookcase. Hold down control key while clicking on a book to inventory or bookcase.^^The right side is your bookcase, The left side is your inventory. ", tf_double_space|tf_scrollable),
        (position_set_x, pos1, 345),
        (position_set_y, pos1, 290),
        (overlay_set_position, reg1, pos1),
        (position_set_x, pos1, 310),
        (position_set_y, pos1, 300),
        (overlay_set_area_size, reg1, pos1),
                
        ## bookseller's inventory
        (str_clear, s0),
        (create_text_overlay, reg1, s0, tf_scrollable),
        (position_set_x, pos1, 50),
        (position_set_y, pos1, 75),
        (overlay_set_position, reg1, pos1),
        (position_set_x, pos1, 245),
        (position_set_y, pos1, 565),
        (overlay_set_area_size, reg1, pos1),
        (set_container_overlay, reg1),

        (assign, ":pos_x", 0),
        (assign, ":pos_y", 2480),
        (assign, ":slot_no", 10),
        (try_for_range, ":unused_height", 0, 32),
          (try_for_range, ":unused_width", 0, 3),
            (create_image_button_overlay, reg1, "mesh_mp_inventory_slot_empty", "mesh_mp_inventory_slot_empty"),
            (position_set_x, pos1, 640),
            (position_set_y, pos1, 640),
            (overlay_set_size, reg1, pos1),
            (position_set_x, pos1, ":pos_x"),
            (position_set_y, pos1, ":pos_y"),
            (overlay_set_position, reg1, pos1),
            (troop_set_slot, "trp_temp_array_a", ":slot_no", reg1),
            (create_mesh_overlay, reg1, "mesh_mp_inventory_choose"),
            (position_set_x, pos1, 640),
            (position_set_y, pos1, 640),
            (overlay_set_size, reg1, pos1),
            (position_set_x, pos1, ":pos_x"),
            (position_set_y, pos1, ":pos_y"),
            (overlay_set_position, reg1, pos1),
            (troop_get_inventory_slot, ":item_no", "trp_player", ":slot_no"),
            (try_begin),
              (gt, ":item_no", -1),
              (create_mesh_overlay_with_item_id, reg1, ":item_no"),
              (position_set_x, pos1, 800),
              (position_set_y, pos1, 800),
              (overlay_set_size, reg1, pos1),
              (store_add, ":item_x", ":pos_x", 40),
              (store_add, ":item_y", ":pos_y", 40),
              (position_set_x, pos1, ":item_x"),
              (position_set_y, pos1, ":item_y"),
              (overlay_set_position, reg1, pos1),
              (troop_set_slot, "trp_temp_array_b", ":slot_no", reg1),
            (try_end),
            (val_add, ":pos_x", 80),
            (val_add, ":slot_no", 1),
          (try_end),
          (assign, ":pos_x", 0),
          (val_sub, ":pos_y", 80),
        (try_end),
        (set_container_overlay, -1),

        ## bookcase's inventory
        (str_clear, s0),
        (create_text_overlay, reg1, s0, tf_scrollable),
        (position_set_x, pos1, 680),
        (position_set_y, pos1, 75),
        (overlay_set_position, reg1, pos1),
        (position_set_x, pos1, 245),
        (position_set_y, pos1, 565),
        (overlay_set_area_size, reg1, pos1),
        (set_container_overlay, reg1),

        (assign, ":pos_x", 0),
        (assign, ":pos_y", 2480),
        (assign, ":slot_no", 110),
        (try_for_range, ":unused_height", 0, 32),
          (try_for_range, ":unused_width", 0, 3),
            (create_image_button_overlay, reg1, "mesh_mp_inventory_slot_empty", "mesh_mp_inventory_slot_empty"),
            (position_set_x, pos1, 640),
            (position_set_y, pos1, 640),
            (overlay_set_size, reg1, pos1),
            (position_set_x, pos1, ":pos_x"),
            (position_set_y, pos1, ":pos_y"),
            (overlay_set_position, reg1, pos1),
            (troop_set_slot, "trp_temp_array_a", ":slot_no", reg1),
            (create_mesh_overlay, reg1, "mesh_mp_inventory_choose"),
            (position_set_x, pos1, 640),
            (position_set_y, pos1, 640),
            (overlay_set_size, reg1, pos1),
            (position_set_x, pos1, ":pos_x"),
            (position_set_y, pos1, ":pos_y"),
            (overlay_set_position, reg1, pos1),
            (store_sub, ":bookcase_slot_no", ":slot_no", 100),
            (troop_get_inventory_slot, ":item_no", "trp_trainer_5", ":bookcase_slot_no"),
            (try_begin),
              (gt, ":item_no", -1),
              (create_mesh_overlay_with_item_id, reg1, ":item_no"),
              (position_set_x, pos1, 800),
              (position_set_y, pos1, 800),
              (overlay_set_size, reg1, pos1),
              (store_add, ":item_x", ":pos_x", 40),
              (store_add, ":item_y", ":pos_y", 40),
              (position_set_x, pos1, ":item_x"),
              (position_set_y, pos1, ":item_y"),
              (overlay_set_position, reg1, pos1),
              (troop_set_slot, "trp_temp_array_b", ":slot_no", reg1),
            (try_end),
            (val_add, ":pos_x", 80),
            (val_add, ":slot_no", 1),
          (try_end),
          (assign, ":pos_x", 0),
          (val_sub, ":pos_y", 80),
        (try_end),
        (set_container_overlay, -1),
        ## items
      ]),

    (ti_on_presentation_mouse_enter_leave,
      [
      (store_trigger_param_1, ":object"),
      (store_trigger_param_2, ":enter_leave"),

      (troop_get_inventory_capacity, ":capacity", "trp_trainer_5"),
      (store_add, ":max_slot_no", ":capacity", 100),
      (try_begin),
        (eq, ":enter_leave", 0),
        (try_begin),
          (eq, "$g_current_opened_item_details", -1),
          (close_item_details),
        (try_end),
        (try_for_range, ":slot_no", 10, ":max_slot_no"),
          (troop_slot_eq, "trp_temp_array_a", ":slot_no", ":object"),
          (try_begin),
            (lt, ":slot_no", 110),
            (assign, ":cur_item_slot", ":slot_no"),
            (assign, ":cur_troop", "trp_player"),
            (troop_get_inventory_slot, ":item_no", ":cur_troop", ":cur_item_slot"),
            (call_script, "script_game_get_item_buy_price_factor", ":item_no"),
            (assign, ":price_factor", reg0),
          (else_try),
            (store_sub, ":cur_item_slot", ":slot_no", 100),
            (assign, ":cur_troop", "trp_trainer_5"),
            (troop_get_inventory_slot, ":item_no", ":cur_troop", ":cur_item_slot"),
            (call_script, "script_game_get_item_sell_price_factor", ":item_no"),
            (assign, ":price_factor", reg0),
          (try_end),
          (try_begin),
            (gt, ":item_no", -1),
            (troop_get_slot, ":target_obj", "trp_temp_array_b", ":slot_no"),
            (overlay_get_position, pos0, ":target_obj"),
            (troop_get_inventory_slot_modifier, ":imod", ":cur_troop", ":cur_item_slot"),
            (try_begin),
              (gt, ":imod", 0),
              (show_item_details_with_modifier, ":item_no", ":imod", pos0, ":price_factor"),
            (else_try),
              (show_item_details, ":item_no", pos0, ":price_factor"),
            (try_end),
            (assign, "$g_current_opened_item_details", ":slot_no"),
          (try_end),
        (try_end),
      (else_try),
        (try_for_range, ":slot_no", 10, ":max_slot_no"),
          (troop_slot_eq, "trp_temp_array_a", ":slot_no", ":object"),
          (try_begin),
            (this_or_next|eq, "$g_current_opened_item_details", ":slot_no"),
            (eq, "$g_current_opened_item_details", -1),
            (close_item_details),
          (try_end),
        (try_end),
      (try_end),
      
      
    ]),

    (ti_on_presentation_event_state_change,
      [
        (store_trigger_param_1, ":object"),

        (try_begin),
          (eq, ":object", "$g_presentation_obj_1"),
          (presentation_set_duration, 0),
          (mission_enable_talk),
        (try_end),
        
        (troop_get_inventory_capacity, ":capacity", "trp_trainer_5"),
        (store_add, ":max_slot_no", ":capacity", 100),
        (try_for_range, ":slot_no", 10, ":max_slot_no"),
          (troop_slot_eq, "trp_temp_array_a", ":slot_no", ":object"),
          (this_or_next|key_is_down, key_left_control),
          (key_is_down, key_right_control),
          (try_begin),
            (lt, ":slot_no", 110),
            (troop_get_inventory_slot, ":item_no", "trp_player", ":slot_no"),
            (troop_get_inventory_slot_modifier, ":imod", "trp_player", ":slot_no"),
            (try_begin),
              (gt, ":item_no", -1),
              (this_or_next|is_between, ":item_no", "itm_spice", "itm_smoked_fish"),
              (this_or_next|is_between, ":item_no", "itm_trophy_a", "itm_dragon_knight_lance"),
              (is_between, ":item_no", "itm_sg_human_small", "itm_green_dragon_body"),
              (try_begin),
                (store_free_inventory_capacity, ":inv_cap", "trp_trainer_5"),
                (le, ":inv_cap", 0),
              (else_try),
                (troop_set_inventory_slot, "trp_player", ":slot_no", -1),
                (troop_add_item, "trp_trainer_5", ":item_no", ":imod"),
                (start_presentation, "prsnt_gem_exchange"),
              (try_end),
            (try_end),
          (else_try),
            (store_sub, ":bookcase_slot_no", ":slot_no", 100),
            (troop_get_inventory_slot, ":item_no", "trp_trainer_5", ":bookcase_slot_no"),
            (troop_get_inventory_slot_modifier, ":imod", "trp_trainer_5", ":bookcase_slot_no"),
            (try_begin),
              (gt, ":item_no", -1),
              #(is_between, ":item_no", "itm_sg_human_small", "itm_clay"),
              (try_begin),
                (store_free_inventory_capacity, ":inv_cap", "trp_player"),
                (le, ":inv_cap", 0),
              (else_try),
                (troop_set_inventory_slot, "trp_trainer_5", ":bookcase_slot_no", -1),
                (troop_set_slot, "trp_trainer_5", ":bookcase_slot_no", -1),
                (troop_add_item, "trp_player", ":item_no", ":imod"),
                (start_presentation, "prsnt_gem_exchange"),
              (try_end),
            (try_end),
          (try_end),
        (try_end),
    ]),
  ]),
    
  ("book_management",0,0,[
    (ti_on_presentation_load,
      [
        (presentation_set_duration, 999999),
        (set_fixed_point_multiplier, 1000),

        (create_mesh_overlay, reg1, "mesh_note_window"),
        (position_set_x, pos1, 0),
        (position_set_y, pos1, 0),
        (overlay_set_position, reg1, pos1),
        
        # init holders
        (try_begin),
          (eq, "$book_holders_reseted", 0),
          (troop_get_inventory_capacity, ":inv_cap", "trp_bookcase"),
          (try_for_range, ":i_slot", 10, ":inv_cap"), # set all holder to -1
            (troop_set_slot, "trp_bookcase", ":i_slot", -1),
          (try_end),
          (party_get_num_companion_stacks, ":num_stacks", "p_main_party"),
          (try_for_range, ":i_stack", 0, ":num_stacks"),
            (party_stack_get_troop_id, ":troop_no", "p_main_party", ":i_stack"),
            (troop_is_hero, ":troop_no"),
            (troop_set_slot, ":troop_no", slot_troop_current_reading_book, 0),
          (try_end),
          (assign, "$book_holders_reseted", 1),
        (try_end),
        
        # check book holder is in player's party
        (troop_get_inventory_capacity, ":inv_cap", "trp_bookcase"),
        (try_for_range, ":i_slot", 10, ":inv_cap"),
          (troop_get_slot, ":book_holder", "trp_bookcase", ":i_slot"),
          (gt, ":book_holder", -1),
          (neg|main_party_has_troop, ":book_holder"),
          (troop_set_slot, "trp_bookcase", ":i_slot", -1),
        (try_end),
        
        (create_text_overlay, reg1, "@Click on a book on the left to select it, then click on a hero's name below to set the holder of the book or set its holder as None.", tf_double_space|tf_scrollable),
        (position_set_x, pos1, 690),
        (position_set_y, pos1, 560),
        (overlay_set_position, reg1, pos1),
        (position_set_x, pos1, 270),
        (position_set_y, pos1, 120),
        (overlay_set_area_size, reg1, pos1),
        
        ## back
        (create_game_button_overlay, "$g_presentation_obj_1", "@Done"),
        (position_set_x, pos1, 910),
        (position_set_y, pos1, 12),
        (overlay_set_position, "$g_presentation_obj_1", pos1),
        ## Reset All
        (create_game_button_overlay, "$g_presentation_obj_2", "@Reset All"),
        (position_set_x, pos1, 740),
        (position_set_y, pos1, 12),
        (overlay_set_position, "$g_presentation_obj_2", pos1),
        ## Auto-Distribute
        (create_game_button_overlay, "$g_presentation_obj_3", "@Auto-Distribute"),
        (position_set_x, pos1, 570),
        (position_set_y, pos1, 12),
        (overlay_set_position, "$g_presentation_obj_3", pos1),
        ## Sort
        (create_game_button_overlay, "$g_presentation_obj_5", "@Re-sort"),
        (position_set_x, pos1, 400),
        (position_set_y, pos1, 12),
        (overlay_set_position, "$g_presentation_obj_5", pos1),
        
        # reference books
        (assign, ":reference_books", 0),
        (assign, ":reference_book_holders", 0),
        (troop_get_inventory_capacity, ":inv_cap", "trp_bookcase"),
        (try_for_range, ":i_slot", 10, ":inv_cap"),
          (troop_get_inventory_slot, ":item", "trp_bookcase", ":i_slot"),
          (gt, ":item", -1),
          (is_between, ":item", reference_books_begin, reference_books_end),
          (val_add, ":reference_books", 1),
          (troop_get_slot, ":book_holder", "trp_bookcase", ":i_slot"),
          (gt, ":book_holder", -1),
          (val_add, ":reference_book_holders", 1),
        (try_end),
        (assign, reg4, ":reference_books"),
        (assign, reg3, ":reference_book_holders"),
        
        (create_text_overlay, reg1, "@Reference Books({reg3}/{reg4})", tf_center_justify|tf_double_space),
        (position_set_x, pos1, 1200),
        (position_set_y, pos1, 1200),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 155),
        (position_set_y, pos1, 660),
        (overlay_set_position, reg1, pos1),
        
        (str_clear, s0),
        (create_text_overlay, reg1, s0, tf_scrollable),
        (position_set_x, pos1, 0),
        (position_set_y, pos1, 70),
        (overlay_set_position, reg1, pos1),
        (position_set_x, pos1, 300),
        (position_set_y, pos1, 590),
        (overlay_set_area_size, reg1, pos1),
        (set_container_overlay, reg1),
        
        (store_div, ":num_rows", ":reference_books", 2),
        (store_mod, ":col_mod", ":reference_books", 2),
        (val_min, ":col_mod", 1),
        (val_add, ":num_rows", ":col_mod"),
        (store_mul, ":pos_y", ":num_rows", 125),
        (val_max, ":pos_y", 565),
        (val_sub, ":pos_y", 140),
        (assign, ":pos_x", 40),
        (assign, ":slot_no", 0),
        (troop_get_inventory_capacity, ":inv_cap", "trp_bookcase"),
        (try_for_range, ":i_slot", 10, ":inv_cap"),
          (troop_get_inventory_slot, ":item", "trp_bookcase", ":i_slot"),
          (gt, ":item", -1),
          (is_between, ":item", reference_books_begin, reference_books_end),
          # item slot
          (create_image_button_overlay, reg1, "mesh_mp_inventory_choose", "mesh_mp_inventory_choose"),
          (position_set_x, pos1, 640),
          (position_set_y, pos1, 640),
          (overlay_set_size, reg1, pos1),
          (position_set_x, pos1, ":pos_x"),
          (position_set_y, pos1, ":pos_y"),
          (overlay_set_position, reg1, pos1),
          (troop_set_slot, "trp_temp_array_a", ":slot_no", reg1),
          # item mesh
          (create_mesh_overlay_with_item_id, reg1, ":item"),
          (position_set_x, pos1, 800),
          (position_set_y, pos1, 800),
          (overlay_set_size, reg1, pos1),
          (store_add, ":item_x", ":pos_x", 40),
          (store_add, ":item_y", ":pos_y", 40),
          (position_set_x, pos1, ":item_x"),
          (position_set_y, pos1, ":item_y"),
          (overlay_set_position, reg1, pos1),
          (troop_set_slot, "trp_temp_array_b", ":slot_no", reg1),
          (troop_set_slot, "trp_temp_array_c", ":slot_no", ":i_slot"),
          # text
          (str_store_item_name, s1, ":item"),
          (troop_get_slot, ":book_holder", "trp_bookcase", ":i_slot"),
          (try_begin),
            (eq, ":book_holder", -1),
            (str_store_string, s2, "@None"),
          (else_try),
            (str_store_troop_name, s2, ":book_holder"),
          (try_end),
          (create_text_overlay, reg1, "@{s1}^Holder: {s2}", tf_center_justify|tf_double_space),
          (position_set_x, pos1, 800),
          (position_set_y, pos1, 800),
          (overlay_set_size, reg1, pos1),
          (store_add, ":text_x", ":pos_x", 40),
          (store_add, ":text_y", ":pos_y", -40),
          (position_set_x, pos1, ":text_x"),
          (position_set_y, pos1, ":text_y"),
          (overlay_set_position, reg1, pos1),
          (val_add, ":pos_x", 150),
          (val_add, ":slot_no", 1),
          (try_begin),
            (ge, ":pos_x", 40+150*2),
            (assign, ":pos_x", 40),
            (val_sub, ":pos_y", 125),
          (try_end),
        (try_end),
        (set_container_overlay, -1),
        
        # division line
        (call_script, "script_prsnt_lines", 2, 650, 330, 80, 0),
        
        # readable books
        (assign, ":readable_books", 0),
        (assign, ":readable_book_holders", 0),
        (troop_get_inventory_capacity, ":inv_cap", "trp_bookcase"),
        (try_for_range, ":i_slot", 10, ":inv_cap"),
          (troop_get_inventory_slot, ":item", "trp_bookcase", ":i_slot"),
          (gt, ":item", -1),
          (is_between, ":item", readable_books_begin, readable_books_end),
          (val_add, ":readable_books", 1),
          (troop_get_slot, ":book_holder", "trp_bookcase", ":i_slot"),
          (gt, ":book_holder", -1),
          (val_add, ":readable_book_holders", 1),
        (try_end),
        (assign, reg4, ":readable_books"),
        (assign, reg3, ":readable_book_holders"),
        
        (create_text_overlay, reg1, "@Readable Books({reg3}/{reg4})", tf_center_justify|tf_double_space),
        (position_set_x, pos1, 1200),
        (position_set_y, pos1, 1200),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 505),
        (position_set_y, pos1, 660),
        (overlay_set_position, reg1, pos1),
        
        (str_clear, s0),
        (create_text_overlay, reg1, s0, tf_scrollable),
        (position_set_x, pos1, 350),
        (position_set_y, pos1, 70),
        (overlay_set_position, reg1, pos1),
        (position_set_x, pos1, 300),
        (position_set_y, pos1, 590),
        (overlay_set_area_size, reg1, pos1),
        (set_container_overlay, reg1),
        
        (store_div, ":num_rows", ":readable_books", 2),
        (store_mod, ":col_mod", ":readable_books", 2),
        (val_min, ":col_mod", 1),
        (val_add, ":num_rows", ":col_mod"),
        (store_mul, ":pos_y", ":num_rows", 125),
        (val_max, ":pos_y", 565),
        (val_sub, ":pos_y", 140),
        (assign, ":pos_x", 40),
        (try_for_range, ":i_slot", 10, ":inv_cap"),
          (troop_get_inventory_slot, ":item", "trp_bookcase", ":i_slot"),
          (gt, ":item", -1),
          (is_between, ":item", readable_books_begin, readable_books_end),
          ## item slot
          (create_image_button_overlay, reg1, "mesh_mp_inventory_choose", "mesh_mp_inventory_choose"),
          (position_set_x, pos1, 640),
          (position_set_y, pos1, 640),
          (overlay_set_size, reg1, pos1),
          (position_set_x, pos1, ":pos_x"),
          (position_set_y, pos1, ":pos_y"),
          (overlay_set_position, reg1, pos1),
          (troop_set_slot, "trp_temp_array_a", ":slot_no", reg1),
          ## item
          (create_mesh_overlay_with_item_id, reg1, ":item"),
          (position_set_x, pos1, 800),
          (position_set_y, pos1, 800),
          (overlay_set_size, reg1, pos1),
          (store_add, ":item_x", ":pos_x", 40),
          (store_add, ":item_y", ":pos_y", 40),
          (position_set_x, pos1, ":item_x"),
          (position_set_y, pos1, ":item_y"),
          (overlay_set_position, reg1, pos1),
          (troop_set_slot, "trp_temp_array_b", ":slot_no", reg1),
          (troop_set_slot, "trp_temp_array_c", ":slot_no", ":i_slot"),
          # text
          (str_store_item_name, s1, ":item"),
          (troop_get_slot, ":book_holder", "trp_bookcase", ":i_slot"),
          (try_begin),
            (eq, ":book_holder", -1),
            (str_store_string, s2, "@None"),
          (else_try),
            (str_store_troop_name, s2, ":book_holder"),
          (try_end),
          (create_text_overlay, reg1, "@{s1}^Holder: {s2}", tf_center_justify|tf_double_space),
          (position_set_x, pos1, 800),
          (position_set_y, pos1, 800),
          (overlay_set_size, reg1, pos1),
          (store_add, ":text_x", ":pos_x", 40),
          (store_add, ":text_y", ":pos_y", -40),
          (position_set_x, pos1, ":text_x"),
          (position_set_y, pos1, ":text_y"),
          (overlay_set_position, reg1, pos1),
          (val_add, ":pos_x", 150),
          (val_add, ":slot_no", 1),
          (try_begin),
            (ge, ":pos_x", 40+150*2),
            (assign, ":pos_x", 40),
            (val_sub, ":pos_y", 125),
          (try_end),
        (try_end),
        (set_container_overlay, -1),
        
        (assign, "$temp", ":slot_no"),
        (try_for_range, ":slot_no", 0, "$temp"),
          (troop_slot_eq, "trp_temp_array_c", ":slot_no", "$g_selected_book_slot"),
          (gt, "$g_selected_book_slot", -1),
          (troop_get_slot, ":inventory_choose_obj", "trp_temp_array_a", ":slot_no"),
          (overlay_set_alpha, ":inventory_choose_obj", 0x80),
        (try_end),
        
        # troop list
        (assign, ":difficulty", 0),
        (try_begin),
          (gt, "$g_selected_book_slot", -1),
          (troop_get_inventory_slot, ":cur_book", "trp_bookcase", "$g_selected_book_slot"),
          (is_between, ":cur_book", readable_books_begin, readable_books_end),
          (item_get_slot, ":difficulty", ":cur_book", slot_item_intelligence_requirement),
        (try_end),
        
        # troop list
        (str_clear, s0),
        (assign, ":area_size_x", 300),
        (assign, ":area_size_y", 420),
        (assign, ":offset_y", 30),
        (create_text_overlay, reg1, s0, tf_scrollable),
        (position_set_x, pos1, 650),
        (position_set_y, pos1, 150),
        (overlay_set_position, reg1, pos1),
        (position_set_x, pos1, ":area_size_x"),
        (position_set_y, pos1, ":area_size_y"),
        (overlay_set_area_size, reg1, pos1),
        (set_container_overlay, reg1),
        # position of first obj
        (call_script, "script_get_num_heroes_of_party", "p_main_party", 0),
        (assign, ":num_of_heroes", reg0),
        (val_add, ":num_of_heroes", 1),
        (store_mul, ":pos_y", ":num_of_heroes", ":offset_y"),
        (val_max, ":pos_y", ":area_size_y"),
        (val_sub, ":pos_y", ":offset_y"),
        (store_div, ":pos_x", ":area_size_x", 2),
        
        # None
        (create_button_overlay, "$g_presentation_obj_4", "@Set as None", tf_center_justify),
        (position_set_x, pos1, ":pos_x"),
        (position_set_y, pos1, ":pos_y"),
        (overlay_set_position, "$g_presentation_obj_4", pos1),
        (val_sub, ":pos_y", ":offset_y"),

        (assign, ":trp_slot_prsnt_no", 0),
        (party_get_num_companion_stacks, ":num_stacks","p_main_party"),
        (try_for_range, ":i_stack", 0, ":num_stacks"),
          (party_stack_get_troop_id,":stack_troop","p_main_party",":i_stack"),
          (troop_is_hero, ":stack_troop"),
          (str_store_troop_name, s1, ":stack_troop"),
          (store_attribute_level, ":skill", ":stack_troop", ca_intelligence),
          (try_begin),
            (is_between, ":cur_book", readable_books_begin, readable_books_end),
            (try_begin), 
              (lt, ":skill", ":difficulty"),
              (create_button_overlay, reg1, "@{s1}(can't read)", tf_center_justify),
              (overlay_set_color, reg1, 0x404040),
            (else_try),
              (call_script, "script_get_book_read_slot", ":stack_troop", ":cur_book"),
              (assign, ":book_read_slot_no", reg0),
              (troop_slot_eq, "trp_book_read", ":book_read_slot_no", 1),
              (create_button_overlay, reg1, "@{s1}(already read)", tf_center_justify),
              (overlay_set_color, reg1, 0x404040),
            (else_try),
              (create_button_overlay, reg1, "@{s1}", tf_center_justify),
            (try_end),
          (else_try),
            (create_button_overlay, reg1, "@{s1}", tf_center_justify),
          (try_end),
          (position_set_x, pos1, ":pos_x"),
          (position_set_y, pos1, ":pos_y"),
          (val_sub, ":pos_y", ":offset_y"),
          (overlay_set_position, reg1, pos1),
          (troop_set_slot, "trp_temp_array_d", ":trp_slot_prsnt_no", reg1),
          (troop_set_slot, "trp_temp_array_e", ":trp_slot_prsnt_no", ":stack_troop"),
          (val_add, ":trp_slot_prsnt_no", 1),
        (try_end),
        (assign, "$temp_2", ":trp_slot_prsnt_no"),

        
        (set_container_overlay, -1),
        # ##### mouse fix pos system #######
        # (call_script, "script_mouse_fix_pos_ready"),
        # ##### mouse fix pos system #######
      ]),
      
    # (ti_on_presentation_run,
     #  [
        # ####### mouse fix pos system #######
       #  (call_script, "script_mouse_fix_pos_run"),
        # ####### mouse fix pos system #######
     #]),
    
    (ti_on_presentation_mouse_enter_leave,
      [
        (store_trigger_param_1, ":object"),
        (store_trigger_param_2, ":enter_leave"),
         
        # $temp = num_books, show item_details
        (try_begin),
          (eq, ":enter_leave", 0),
          (try_for_range, ":slot_no", 0, "$temp"),
            (troop_slot_eq, "trp_temp_array_a", ":slot_no", ":object"),
            (troop_get_slot, ":i_slot", "trp_temp_array_c", ":slot_no"),
            (troop_get_inventory_slot, ":item_no", "trp_bookcase", ":i_slot"),
            (gt, ":item_no", 0),
            (troop_get_slot, ":target_obj", "trp_temp_array_b", ":slot_no"),
            (overlay_get_position, pos0, ":target_obj"),
            (show_item_details, ":item_no", pos0, 100),
            (assign, "$g_current_opened_item_details", ":slot_no"),
          (try_end),
        (else_try),
          (try_for_range, ":slot_no", 0, "$temp"),
            (troop_slot_eq, "trp_temp_array_a", ":slot_no", ":object"),
            (try_begin),
              (eq, "$g_current_opened_item_details", ":slot_no"),
              (close_item_details),
            (try_end),
          (try_end),
        (try_end),
      ]),
      
    (ti_on_presentation_event_state_change,
      [
        (store_trigger_param_1, ":object"),
        #(store_trigger_param_2, ":value"),
        
        # $temp = num_books, select book
        (try_for_range, ":slot_no", 0, "$temp"),
          (troop_slot_eq, "trp_temp_array_a", ":slot_no", ":object"),
          (troop_get_slot, ":i_slot", "trp_temp_array_c", ":slot_no"),
          # reset alpha of all objects
          (try_for_range, ":slot_no_2", 0, "$temp"),
            (troop_get_slot, ":cur_object", "trp_temp_array_a", ":slot_no_2"),
            (overlay_set_alpha, ":cur_object", 0xFF),
          (try_end),
          (overlay_set_alpha, ":object", 0x80),
          (assign, "$g_selected_book_slot", ":i_slot"),
          # reset all texts of heroes 
          (assign, ":difficulty", 0),
          (try_begin),
            (troop_get_inventory_slot, ":cur_book", "trp_bookcase", "$g_selected_book_slot"),
            (is_between, ":cur_book", readable_books_begin, readable_books_end),
            (item_get_slot, ":difficulty", ":cur_book", slot_item_intelligence_requirement),
          (try_end),
          (try_for_range, ":troop_slot_no", 0, "$temp_2"),
            (troop_get_slot, ":name_obj", "trp_temp_array_d", ":troop_slot_no"),
            (troop_get_slot, ":cur_hero", "trp_temp_array_e", ":troop_slot_no"),
            (str_store_troop_name, s1, ":cur_hero"),
            (store_attribute_level, ":hero_int", ":cur_hero", ca_intelligence),
            # default 
            (overlay_set_text, ":name_obj", "@{s1}"),
            (overlay_set_color, ":name_obj", 0x000000),
            (is_between, ":cur_book", readable_books_begin, readable_books_end),
            (try_begin), 
              (lt, ":hero_int", ":difficulty"),
              (overlay_set_text, ":name_obj", "@{s1}(can't read)"),
              (overlay_set_color, ":name_obj", 0x404040),
            (else_try),
              (call_script, "script_get_book_read_slot", ":cur_hero", ":cur_book"),
              (assign, ":book_read_slot_no", reg0),
              (troop_slot_eq, "trp_book_read", ":book_read_slot_no", 1),
              (overlay_set_text, ":name_obj", "@{s1}(already read)"),
              (overlay_set_color, ":name_obj", 0x404040),
            (try_end),
          (try_end),
        (try_end),
        
        # $temp_2 = num_heroes, select holder
        (try_for_range, ":slot_no", 0, "$temp_2"),
          (troop_slot_eq, "trp_temp_array_d", ":slot_no", ":object"),
          (troop_get_slot, ":troop_no", "trp_temp_array_e", ":slot_no"),
          (gt, "$g_selected_book_slot", -1),
          (troop_get_inventory_slot, ":selected_book", "trp_bookcase", "$g_selected_book_slot"),
          (try_begin), # readable books
            (is_between, ":selected_book", readable_books_begin, readable_books_end),
            (item_get_slot, ":difficulty", ":selected_book", slot_item_intelligence_requirement),
            (store_attribute_level, ":skill", ":troop_no", ca_intelligence),
            (try_begin),
              (ge, ":skill", ":difficulty"),
              (call_script, "script_get_book_read_slot", ":troop_no", ":selected_book"),
              (assign, ":book_read_slot_no", reg0),
              (troop_slot_eq, "trp_book_read", ":book_read_slot_no", 0),
              (troop_set_slot, "trp_bookcase", "$g_selected_book_slot", ":troop_no"),
              (troop_set_slot, ":troop_no", slot_troop_current_reading_book, ":selected_book"),
              # can only hold one readable book
              (try_for_range, ":slot_no_2", 0, "$temp"),
                (troop_get_slot, ":i_slot", "trp_temp_array_c", ":slot_no_2"),
                (neq, ":i_slot", "$g_selected_book_slot"),
                (troop_get_inventory_slot, ":cur_book", "trp_bookcase", ":i_slot"),
                (is_between, ":cur_book", readable_books_begin, readable_books_end),
                (troop_get_slot, ":cur_holder", "trp_bookcase", ":i_slot"),
                (eq, ":cur_holder", ":troop_no"),
                (troop_set_slot, "trp_bookcase", ":i_slot", -1),
              (try_end),
              (assign, "$g_selected_book_slot", -1),
              (start_presentation, "prsnt_book_management"),
            (try_end),
          (else_try), # reference books
            (is_between, ":selected_book", reference_books_begin, reference_books_end),
            (troop_set_slot, "trp_bookcase", "$g_selected_book_slot", ":troop_no"),
            # can't hold the same reference book
            #(try_for_range, ":slot_no_2", 0, "$temp"),
            #  (troop_get_slot, ":i_slot", "trp_temp_array_c", ":slot_no_2"),
            #  (neq, ":i_slot", "$g_selected_book_slot"),
            #  (troop_get_inventory_slot, ":cur_book", "trp_bookcase", ":i_slot"),
            #  (eq, ":cur_book", ":selected_book"),
            #  (troop_get_slot, ":cur_holder", "trp_bookcase", ":i_slot"),
            #  (eq, ":cur_holder", ":troop_no"),
            #  (troop_set_slot, "trp_bookcase", ":i_slot", -1),
            #(try_end),
            (assign, "$g_selected_book_slot", -1),
            (start_presentation, "prsnt_book_management"),
          (try_end),
        (try_end),
        
        (try_begin), # re-sort
          (eq, ":object", "$g_presentation_obj_5"),
          # num_books
          (call_script, "script_get_num_of_item_by_type", "trp_bookcase", itp_type_book),
          (assign, ":num_books", reg0),
          (try_begin),
            (gt, ":num_books", 0),
            # init trp_temp_troop_2
            (troop_get_inventory_capacity, ":inv_cap", "trp_temp_troop_2"),
            (try_for_range, ":i_slot", 10, ":inv_cap"),
              (troop_set_inventory_slot, "trp_temp_troop_2", ":i_slot", -1),
              (troop_set_slot, "trp_temp_troop_2", ":i_slot", -1),
            (try_end),
            # sort books 
            (assign, ":cur_slot_temp_troop_2", 10),
            (try_for_range, ":unused", 0, ":num_books"),
              (assign, ":min_book_id", 999),
              (assign, ":best_i_slot", 0),
              (troop_get_inventory_capacity, ":inv_cap", "trp_bookcase"),
              (try_for_range, ":i_slot", 10, ":inv_cap"),
                (troop_get_inventory_slot, ":cur_book", "trp_bookcase", ":i_slot"),
                (gt, ":cur_book", -1),
                (lt, ":cur_book", ":min_book_id"),
                (assign, ":min_book_id", ":cur_book"),
                (assign, ":best_i_slot", ":i_slot"),
              (try_end),
              (gt, ":best_i_slot", 0),
              # set to trp_temp_troop_2
              (troop_get_inventory_slot, ":dest_book", "trp_bookcase", ":best_i_slot"),
              (troop_get_slot, ":dest_troop", "trp_bookcase", ":best_i_slot"),
              (troop_set_inventory_slot, "trp_temp_troop_2", ":cur_slot_temp_troop_2", ":dest_book"),
              (troop_set_slot, "trp_temp_troop_2", ":cur_slot_temp_troop_2", ":dest_troop"),
              # remove from trp_bookcase
              (troop_set_inventory_slot, "trp_bookcase", ":best_i_slot", -1),
              (troop_set_slot, "trp_bookcase", ":best_i_slot", -1),
              (val_add, ":cur_slot_temp_troop_2", 1),
            (try_end),
            # copy from trp_temp_troop_2 to trp_bookcase
            (troop_get_inventory_capacity, ":inv_cap", "trp_temp_troop_2"),
            (try_for_range, ":i_slot", 10, ":inv_cap"),
              (troop_get_inventory_slot, ":dest_book", "trp_temp_troop_2", ":i_slot"),
              (troop_get_slot, ":dest_troop", "trp_temp_troop_2", ":i_slot"),
              (troop_set_inventory_slot, "trp_bookcase", ":i_slot", ":dest_book"),
              (troop_set_slot, "trp_bookcase", ":i_slot", ":dest_troop"),
            (try_end),
            # restart presentation
            (assign, "$g_selected_book_slot", -1),
            (start_presentation, "prsnt_book_management"),
          (try_end),
        (else_try), # set holder to -1
          (eq, ":object", "$g_presentation_obj_4"),
          (try_begin),
            (gt, "$g_selected_book_slot", -1),
            (troop_get_slot, ":troop_no", "trp_bookcase", "$g_selected_book_slot"),
            (try_begin),
              (gt, ":troop_no", -1),
              (troop_set_slot, "trp_bookcase", "$g_selected_book_slot", -1),
              (try_begin),
                (troop_get_inventory_slot, ":selected_book", "trp_bookcase", "$g_selected_book_slot"),
                (is_between, ":selected_book", readable_books_begin, readable_books_end),
                (troop_set_slot, ":troop_no", slot_troop_current_reading_book, 0),
              (try_end),
            (try_end),
            (assign, "$g_selected_book_slot", -1),
            (start_presentation, "prsnt_book_management"),
          (try_end),
        (else_try), # Auto-Distribute
          (eq, ":object", "$g_presentation_obj_3"),
          (party_get_num_companion_stacks, ":num_stacks", "p_main_party"),
          (troop_get_inventory_capacity, ":inv_cap", "trp_bookcase"),
          (try_for_range, ":i_slot", 10, ":inv_cap"),
            (troop_get_inventory_slot, ":cur_book", "trp_bookcase", ":i_slot"),
            (gt, ":cur_book", -1),
            (is_between, ":cur_book", readable_books_begin, readable_books_end),
            (item_get_slot, ":difficulty", ":cur_book", slot_item_intelligence_requirement),
            (troop_get_slot, ":cur_holder", "trp_bookcase", ":i_slot"),
            (eq, ":cur_holder", -1),
            # choose the best holder
            (assign, ":min_skill", 999),
            (assign, ":best_party_stack", -1),
            (try_for_range, ":cur_party_stack", 0, ":num_stacks"),
              (party_stack_get_troop_id, ":stack_troop", "p_main_party", ":cur_party_stack"),
              (troop_is_hero, ":stack_troop"),
              # no current reading book
              (troop_slot_eq, ":stack_troop", slot_troop_current_reading_book, 0),
              # not read yet 
              (call_script, "script_get_book_read_slot", ":stack_troop", ":cur_book"),
              (assign, ":book_read_slot_no", reg0), 
              (troop_slot_eq, "trp_book_read", ":book_read_slot_no", 0),
              # can read
              (store_attribute_level, ":skill", ":stack_troop", ca_intelligence),
              (ge, ":skill", ":difficulty"),
              (lt, ":skill", ":min_skill"),
              # new best holder
              (assign, ":min_skill", ":skill"),
              (assign, ":best_party_stack", ":cur_party_stack"),
            (try_end),
            (gt, ":best_party_stack", -1),
            (party_stack_get_troop_id, ":best_stack_troop", "p_main_party", ":best_party_stack"),
            (troop_set_slot, "trp_bookcase", ":i_slot", ":best_stack_troop"),
            (troop_set_slot, ":best_stack_troop", slot_troop_current_reading_book, ":cur_book"),
          (try_end),
          (assign, "$g_selected_book_slot", -1),
          (start_presentation, "prsnt_book_management"),
        (else_try), # reset all
          (eq, ":object", "$g_presentation_obj_2"),
          (assign, "$book_holders_reseted", 0),
          (assign, "$g_selected_book_slot", -1),
          (start_presentation, "prsnt_book_management"),
        (else_try),
          (eq, ":object", "$g_presentation_obj_1"),
          (presentation_set_duration, 0),
        (try_end),
      ]),
    ]),

### Three Cards ### Find the Lady ###
# prsnt_three_card
  ("three_card", 0, 0,#find the lady
   [
     (ti_on_presentation_load,
      [
        (set_fixed_point_multiplier, 1000),
        (presentation_set_duration, 999999),
		
#Little Pos Helper by Kuba begin
		(create_text_overlay, "$g_little_pos_helper", "@00,00"),
		(overlay_set_color, "$g_little_pos_helper", 0xFFFFFFFF),
		(position_set_x, pos1, 10),
		(position_set_y, pos1, 700),
		(overlay_set_position, "$g_little_pos_helper", pos1),
#Little Pos Helper by Kuba end 
	  		
		(assign,"$g_presentation_obj_card1",-1),
		(assign,"$g_presentation_obj_card2",-1),
        (assign,"$g_presentation_obj_card3",-1),
        (assign,"$g_presentation_obj_1",-1), # mesh king of spades
        (assign,"$g_presentation_obj_2",-1), # mesh queen of heart      
        (assign,"$g_presentation_obj_3",-1), # mesh king of clubs       
        (assign,"$g_presentation_obj_4",-1), # text "@Bet: {reg51}Denar"
        (assign,"$g_presentation_obj_5",-1), # text "@Money: {reg1}Denar"
        (assign,"$g_presentation_obj_6",-1), # "mesh_text_bar"
        (assign,"$g_presentation_obj_7",-1), # slider
        (assign,"$g_presentation_obj_8",-1), # text "@Bet: {reg51}Denar" above slider
        (assign,"$g_presentation_obj_9",-1), # win or lose window	
        (assign,"$g_presentation_obj_10",-1), #done button 
        (assign,"$g_presentation_obj_11",-1), #find the lady
        (assign,"$g_presentation_obj_12",-1),#yes
        (assign,"$g_presentation_obj_13",-1),#no
        (assign,"$g_presentation_obj_14",-1),#start game button	
        (assign,"$g_presentation_obj_15",-1),
        (assign,"$g_presentation_obj_16",-1),
        (assign,"$g_presentation_obj_17",-1),		
		(assign, reg1,0),
		(assign, reg2,0),
		(assign, reg3,0),
        (assign, reg50, 0),		
        (assign, reg51, 1),
        (assign, reg52, 0),		
        (assign, reg55, 1),
        (assign, reg58, 0),		
		(str_clear,s1),
        (create_mesh_overlay, reg1, "mesh_3card_table"),#mesh_wood_table
        (position_set_x, pos1, 0),
        (position_set_y, pos1, 0),
        (overlay_set_position, reg1, pos1),
	
        (str_store_troop_name, s1, "$g_talk_troop"),# NPC
        (create_text_overlay, reg1, "@{s1}", tf_center_justify),
        (position_set_x, pos1, 120),#820
        (position_set_y, pos1, 470),#470
        (overlay_set_position, reg1, pos1),#
        (overlay_set_color, reg1, 0xffffff),
        (str_store_troop_name, s1, "trp_player"),#
        (create_text_overlay, reg1, "@{s1}", tf_center_justify),
        (position_set_x, pos1, 815),#120
        (position_set_y, pos1, 8),#8
        (overlay_set_position, reg1, pos1),#
        (overlay_set_color, reg1, 0xffffff),
         # "mesh_jack_black_portrait"
        (create_mesh_overlay_with_tableau_material, reg1, -1, "tableau_troop_note_mesh", "$g_talk_troop"),#-1
        (position_set_x, pos1, 750),
        (position_set_y, pos1, 750),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 7),#700
        (position_set_y, pos1, 500),#500
        (overlay_set_position, reg1, pos1),
         #"mesh_trp_player_portrait"
        (create_mesh_overlay_with_tableau_material, reg1, -1, "tableau_troop_note_mesh", "trp_player"),
        (position_set_x, pos1, 750),
        (position_set_y, pos1, 750),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 740),#7
        (position_set_y, pos1, 45),#20
        (overlay_set_position, reg1, pos1),

# info window right
        (create_mesh_overlay, reg1, "mesh_3card_window"),#3card_textbar#text_bar
        (position_set_x, pos1, 780),#700
        (position_set_y, pos1, 310),#270
        (overlay_set_position, reg1, pos1),
        (position_set_x, pos1, 250),#
        (position_set_y, pos1, 200),#
        (overlay_set_size, reg1, pos1),		

        (str_store_string, s1, "@Bet: {reg51}Denar"),#
        (create_text_overlay, "$g_presentation_obj_4", s1),#
        (position_set_x, pos1, 790),#755
        (position_set_y, pos1, 355),#355
        (overlay_set_position, "$g_presentation_obj_4", pos1),
        (overlay_set_color, "$g_presentation_obj_4",),#0xfffccc
        (store_troop_gold,reg1,"trp_player"),#
        (create_text_overlay, "$g_presentation_obj_5", "@Money: {reg1}Denar"),
        (position_set_x, pos1, 790),#755
        (position_set_y, pos1, 325),#325
        (overlay_set_position, "$g_presentation_obj_5", pos1),
        (overlay_set_color, "$g_presentation_obj_5"),#0xfffccc
        ]),
		
      (ti_on_presentation_run,#
       [
#Little Pos Helper by Kuba begin
		(mouse_get_position, pos1),
		(position_get_x, reg1, pos1),
		(position_get_y, reg2, pos1),
		(overlay_set_text, "$g_little_pos_helper", "@{reg1},{reg2}"),
#Little Pos Helper by Kuba end  
	    (store_trigger_param_1, ":cur_time"),
        (set_fixed_point_multiplier, 1000),
        (ge, ":cur_time",500),
        (try_begin),
		  (eq, reg50, 0),
          (assign, reg50, 1),#3 
          (create_mesh_overlay, "$g_presentation_obj_6", "mesh_3card_window"), #"mesh_text_bar"
          (position_set_x, pos6, 335),#685 #345
          (position_set_y, pos6, 265),#482 #217
          (position_set_x, pos1, 500),#
          (position_set_y, pos1, 500),#
          (overlay_set_size, "$g_presentation_obj_6", pos1),		  
		  (store_troop_gold,":plr_gold","trp_player"),#
		    (try_begin),
			    (ge,":plr_gold",50),
                (assign,":bet50",50), 
 			(else_try),
			    (assign,":bet50",":plr_gold"),          
		    (try_end),
          (create_slider_overlay, "$g_presentation_obj_7", 1, ":bet50"),#
          (overlay_set_val, "$g_presentation_obj_7", reg51),
          (position_set_x, pos7, 510),
          (position_set_y, pos7, 360),
          (create_text_overlay, "$g_presentation_obj_8", "@Bet: {reg51}Denar"),#
          (position_set_x, pos8, 450),#420
          (position_set_y, pos8, 400),
          (create_game_button_overlay, "$g_presentation_obj_10", "@Done", tf_center_justify),#
          (position_set_x, pos10, 500),
          (position_set_y, pos10, 284),
          (overlay_set_position, "$g_presentation_obj_6", pos6),
          (overlay_set_val, "$g_presentation_obj_7", reg51),
          (overlay_set_position, "$g_presentation_obj_7", pos7),
          (overlay_set_position, "$g_presentation_obj_8", pos8),
          (overlay_set_position, "$g_presentation_obj_10", pos10),
        (try_end),#
		
        (try_begin),
		    (eq, reg50, 2),
            (assign, reg50, 3),#5
            (position_set_x, pos14, 375),#
            (position_set_y, pos14, 550),					
	# King of Spades			
            (create_mesh_overlay, "$g_presentation_obj_1", "mesh_3card_kos"),#
            (position_set_x, pos1, 275),
            (position_set_y, pos1, 300),
			(overlay_set_position, "$g_presentation_obj_1", pos1),
			(overlay_set_size, "$g_presentation_obj_1", pos14),#
	# Queen of Heart
            (create_mesh_overlay, "$g_presentation_obj_2", "mesh_3card_qoh"),#
            (position_set_x, pos1, 425),
            (position_set_y, pos1, 300),
			(overlay_set_position, "$g_presentation_obj_2", pos1),
			(overlay_set_size, "$g_presentation_obj_2", pos14),#
	# King of Clubs
            (create_mesh_overlay, "$g_presentation_obj_3", "mesh_3card_koc"),#
            (position_set_x, pos1, 575),
            (position_set_y, pos1, 300),
			(overlay_set_position, "$g_presentation_obj_3", pos1),
			(overlay_set_size, "$g_presentation_obj_3", pos14),#
	#start game button
            (create_game_button_overlay, "$g_presentation_obj_14", "@Start Game", tf_center_justify),#
            (position_set_x, pos1, 475),
            (position_set_y, pos1, 600),
            (overlay_set_position, "$g_presentation_obj_14", pos1),
	    (try_end),

         (try_begin),
		     (eq, reg50, 4),
			 (assign,reg50, 5),
             (overlay_set_display, "$g_presentation_obj_14", 0),#start game button				 
             (assign,reg58,":cur_time"),			 
             (overlay_set_display, "$g_presentation_obj_1", 0),
             (overlay_set_display, "$g_presentation_obj_2", 0),
             (overlay_set_display, "$g_presentation_obj_3", 0),				
			
            (try_begin),
                (create_mesh_overlay, "$g_presentation_obj_16", "mesh_3card_back", "mesh_3card_back"),#
                (position_set_x, pos15, 275),
                (position_set_y, pos15, 300),
		    	(overlay_set_position, "$g_presentation_obj_16", pos15),
		     	(overlay_set_size, "$g_presentation_obj_16", pos14),
			
                (create_mesh_overlay, "$g_presentation_obj_17", "mesh_3card_back", "mesh_3card_back"),#
                (position_set_x, pos16, 425),
                (position_set_y, pos16, 300),
			    (overlay_set_position, "$g_presentation_obj_17", pos16),
			    (overlay_set_size, "$g_presentation_obj_17", pos14),#

                (create_mesh_overlay, "$g_presentation_obj_15", "mesh_3card_back", "mesh_3card_back"),#
                (position_set_x, pos17, 575),
                (position_set_y, pos17, 300),
			    (overlay_set_position, "$g_presentation_obj_15", pos17),
			    (overlay_set_size, "$g_presentation_obj_15", pos14),#

			    (overlay_animate_to_position, "$g_presentation_obj_15",500, pos15),
			    (overlay_animate_to_position, "$g_presentation_obj_16",500, pos16), 
                (overlay_animate_to_position, "$g_presentation_obj_17",500, pos17),

			(try_end),
			(assign,reg50, 6),	 
    	 (try_end),		

         (store_add, reg52, 550, reg58),		
         (ge, ":cur_time",reg52),
		 
        (try_begin),
		    (eq, reg50, 6),
            (assign, reg50, 7),
            (overlay_set_display, "$g_presentation_obj_15", 0),
			(overlay_set_display, "$g_presentation_obj_16", 0),
            (overlay_set_display, "$g_presentation_obj_17", 0),				
            (position_set_x, pos14, 375),#
            (position_set_y, pos14, 550),	

                (create_image_button_overlay, "$g_presentation_obj_card1", "mesh_3card_back", "mesh_3card_back"),
                (position_set_x, pos1, 275),
                (position_set_y, pos1, 300),
		    	(overlay_set_position, "$g_presentation_obj_card1", pos1),
		     	(overlay_set_size, "$g_presentation_obj_card1", pos14),
			
                (create_image_button_overlay, "$g_presentation_obj_card2", "mesh_3card_back", "mesh_3card_back"),
                (position_set_x, pos1, 425),
                (position_set_y, pos1, 300),
			    (overlay_set_position, "$g_presentation_obj_card2", pos1),
			    (overlay_set_size, "$g_presentation_obj_card2", pos14),#

                (create_image_button_overlay, "$g_presentation_obj_card3", "mesh_3card_back", "mesh_3card_back"),
                (position_set_x, pos1, 575),
                (position_set_y, pos1, 300),
			    (overlay_set_position, "$g_presentation_obj_card3", pos1),
			    (overlay_set_size, "$g_presentation_obj_card3", pos14),#			

			(assign, reg55, 2),
            (create_mesh_overlay, "$g_presentation_obj_9", "mesh_3card_window"), #"mesh_text_bar"
            (position_set_x, pos1, 375),#
            (position_set_y, pos1, 595),#
            (overlay_set_position, "$g_presentation_obj_9", pos1),			
            (position_set_x, pos1, 300),#
            (position_set_y, pos1, 125),#
            (overlay_set_size, "$g_presentation_obj_9", pos1),				
						
            (str_store_string, s1, "@Find the Lady"),
            (create_text_overlay, "$g_presentation_obj_11", "@{s1}", tf_center_justify),
            (position_set_x, pos1, 475),
            (position_set_y, pos1, 600),
            (overlay_set_position, "$g_presentation_obj_11", pos1),#Find the Lady
            (position_set_x, pos1, 2000),
            (position_set_y, pos1, 2000),
            (overlay_set_size, "$g_presentation_obj_11", pos1),
#            (overlay_set_color, "$g_presentation_obj_11", 0xffffff),#
        (try_end),

        (try_begin),
		    (eq, reg50, 8),	
            (assign, reg50, 9),
            (overlay_set_display, "$g_presentation_obj_card1", 0),
			(overlay_set_display, "$g_presentation_obj_card2", 0),
            (overlay_set_display, "$g_presentation_obj_card3", 0),			
		    (store_random_in_range,":lady",1,4),
			(store_random_in_range,":king",1,3),
			(store_random_in_range,":queen",1,3),
			    (try_begin),
                    (eq,":king",1), 
                    (assign,":king1","mesh_3card_kos"),
                    (assign,":king2","mesh_3card_koc"),
		        (else_try),
                    (assign,":king1","mesh_3card_koc"),
                    (assign,":king2","mesh_3card_kos"),				
				(try_end),

			    (try_begin),
                    (eq,":queen",1), 
                    (assign,":queen1","mesh_3card_qoh"),
                    (assign,":queen2",":king2"),
		        (else_try),
                    (assign,":queen1",":king2"),
                    (assign,":queen2","mesh_3card_qoh"),				
				(try_end),
				
                (try_begin),
				    (eq,reg55, 3),#1card
					    (try_begin),
						    (eq,":lady",1), #win
							(assign,reg55,7),#win
							(assign,":card1","mesh_3card_qoh"),
                            (assign,":card2",":king1"),
                            (assign,":card3",":king2"),
						(else_try),
      					    (assign,reg55,8),#loose 
							(assign,":card1",":king1"),
                            (assign,":card2",":queen1"),
                            (assign,":card3",":queen2"),
						(try_end),
				(else_try),
				    (eq,reg55, 4),#2card  
					    (try_begin),
						    (eq,":lady",1), #win
							(assign,reg55,7),#win
							(assign,":card1",":king1"),
                            (assign,":card2","mesh_3card_qoh"),
                            (assign,":card3",":king2"),
						(else_try),
						    (assign,reg55,8),#loose 
                            (assign,":card1", ":queen1"),#
                            (assign,":card2", ":king1"),#
                            (assign,":card3", ":queen2"),#
						(try_end),	
                (else_try),
                    (eq,reg55, 5),#3card  
					    (try_begin),
						    (eq,":lady",1), #win
							(assign,reg55,7),#win
							(assign,":card1",":king1"),
                            (assign,":card2",":king2"),
                            (assign,":card3","mesh_3card_qoh"),							
						(else_try),
						    (assign,reg55,8),#loose
                            (assign,":card1", ":queen1"),#
                            (assign,":card2", ":queen2"),#
                            (assign,":card3", ":king1"),#							
						(try_end),						
				(try_end),
				
                (try_begin),#open cards
				    (position_set_x, pos14, 375),#
                    (position_set_y, pos14, 550),		
				
                    (create_mesh_overlay, reg1, ":card1"),#
                    (position_set_x, pos1, 275),
                    (position_set_y, pos1, 300),
                 	(overlay_set_position, reg1, pos1),
					(overlay_set_size, reg1, pos14),# 

                    (create_mesh_overlay, reg2, ":card2"),#
                    (position_set_x, pos1, 425),
                    (position_set_y, pos1, 300),
		            (overlay_set_position, reg2, pos1),
                    (overlay_set_size, reg2, pos14),#

                    (create_mesh_overlay, reg3, ":card3"),#
                    (position_set_x, pos1, 575),
                    (position_set_y, pos1, 300),
	                (overlay_set_position, reg3, pos1),
	                (overlay_set_size, reg3, pos14),#						                       
				(try_end),
				
                (str_clear,s1),				
			    (try_begin),
                    (eq,reg55,7),#
                    (val_mul,reg51,2),					
					(call_script, "script_troop_add_gold", "trp_player", reg51),
                    (str_store_string, s1, "@You win! Try again?"),					
                (else_try),
                    (str_store_string, s1, "@You lose. Try again?"),
                (try_end),
                (create_text_overlay, reg1, "@{s1}", tf_center_justify),
                (position_set_x, pos1, 480),
                (position_set_y, pos1, 650),
                (overlay_set_position, reg1, pos1),#
                (position_set_x, pos1, 2000),
                (position_set_y, pos1, 2000),
                (overlay_set_size, reg1, pos1),#
#                (overlay_set_color, reg1, 0xffffff),#0xffffff #white

                (create_mesh_overlay, reg1, "mesh_3card_window"),#3card_textbar#text_bar
                (position_set_x, pos1, 306),#700
                (position_set_y, pos1, 580),#270
                (overlay_set_position, reg1, pos1),
                (position_set_x, pos1, 500),#
                (position_set_y, pos1, 300),#
                (overlay_set_size, reg1, pos1),		
				
                (create_game_button_overlay, "$g_presentation_obj_12", "@Yes", tf_center_justify),				
                (position_set_x, pos1, 400),#450
                (position_set_y, pos1, 600),
                (overlay_set_position, "$g_presentation_obj_12", pos1),

                (create_game_button_overlay, "$g_presentation_obj_13", "@No", tf_center_justify),
                (position_set_x, pos1, 560),#500
                (position_set_y, pos1, 600),
                (overlay_set_position, "$g_presentation_obj_13", pos1),
        (try_end),			
        ]),

      (ti_on_presentation_event_state_change,#
       [(store_trigger_param_1, ":object"),
        (store_trigger_param_2, ":value"),
        (position_set_x, pos13, 1400),
        (position_set_y, pos13, 1400),		
        (try_begin),
          (eq, ":object", "$g_presentation_obj_7"),#
          (try_begin),
            (neq, reg51, ":value"),
            (assign, reg51, ":value"),
          (try_end),
          (overlay_set_val, "$g_presentation_obj_7", reg51),
          (str_store_string, s1, "@Bet: {reg51}Denar"),
          (overlay_set_text, "$g_presentation_obj_8", s1),
        (else_try),
          (eq, ":object", "$g_presentation_obj_10"),#
          (store_troop_gold,reg1,"trp_player"),#
          (try_begin),
            (lt,reg1,reg51),#
            (display_message, "@You don't have enough money."),
          (else_try),
            (troop_remove_gold, "trp_player", reg51),#
            (play_sound, "snd_money_paid"),

            (overlay_set_display, "$g_presentation_obj_6", 0),
			(overlay_set_display, "$g_presentation_obj_7", 0),
            (overlay_set_display, "$g_presentation_obj_8", 0),
            (overlay_set_display, "$g_presentation_obj_10", 0),

            (store_troop_gold,reg1,"trp_player"),#
            (str_store_string, s1, "@Bet: {reg51}Denar"),#
            (overlay_set_text, "$g_presentation_obj_4", s1),
            (str_store_string, s1, "@Money: {reg1}Denar"),#
            (overlay_set_text, "$g_presentation_obj_5", s1),
            (assign, reg50, 2),#4
          (try_end),
		(try_end),  
        (try_begin),
            (eq, ":object", "$g_presentation_obj_14"),#start game button	
		    (assign, reg50, 4),#6
		(try_end),

        (try_begin),
	    	(eq, reg50, 7), 
		    (eq, reg55, 2),          
		        (try_begin),         
                    (eq, ":object", "$g_presentation_obj_card1"),
					(assign, reg55, 3),
				(else_try),	
	                (eq, ":object", "$g_presentation_obj_card2"),
                    (assign, reg55, 4), 
				(else_try),	
			        (eq, ":object", "$g_presentation_obj_card3"),
					(assign, reg55, 5),
				(try_end),
            (overlay_set_display, "$g_presentation_obj_11", 0),	#Find the Lady	
			(overlay_set_display, "$g_presentation_obj_9", 0),
		    (assign, reg50, 8),
		(try_end),

        (try_begin),
          (eq, ":object", "$g_presentation_obj_12"),#yes
          (store_troop_gold,reg1,"trp_player"),#
          (try_begin),
            (lt,reg1,1),#
            (display_message, "@You don't have enough money."),
          (else_try),
            (presentation_set_duration, 0),
            (assign, reg50,0),
            (start_presentation, "prsnt_three_card"),
          (try_end),
        (else_try),
          (eq, ":object", "$g_presentation_obj_13"),#no
          (assign,reg1,0),#
          (assign, reg51, 1),
          (assign, reg55, 0),#
          (presentation_set_duration, 0),
        (try_end),		
        ]),
     ]),  
### Three Cards ### Find the Lady ### END ### 

### Dice game ### Dice game ###

# prsnt_dices_game
  ("dices_game", 0, 0,#dices game reg0
   [
    (ti_on_presentation_load,
       [
        (set_fixed_point_multiplier, 1000),
        (presentation_set_duration, 999999),        
        #(call_script, "script_pos_helper",1),
        (call_script, "script_mmc_gamblers_header"),
        ]),

    (ti_on_presentation_run,#
       [#(call_script, "script_pos_helper",2),
        (store_trigger_param_1, ":cur_time"),
        (set_fixed_point_multiplier, 1000),
        (ge, ":cur_time",500),
            (try_begin),
                (eq, reg50, 0),
                (assign, reg50, 1),
                (create_mesh_overlay, "$g_presentation_obj_6", "mesh_3card_window"), 
                (position_set_x, pos6, 335),
                (position_set_y, pos6, 265),
                (position_set_x, pos1, 500),#
                (position_set_y, pos1, 500),#
                (overlay_set_size, "$g_presentation_obj_6", pos1),          
                (store_troop_gold,":plr_gold","trp_player"),#
                    (try_begin),
                        (ge,":plr_gold",50),
                        (assign,":bet50",50), 
                     (else_try),
                        (assign,":bet50",":plr_gold"),          
                    (try_end),
            
                    (try_begin),
                        (eq,"$g_gamble",1),
                         (assign,reg51,"$temp"),                 
                    (else_try), 
                        (create_slider_overlay, "$g_presentation_obj_7", 1, ":bet50"),#
                        (overlay_set_val, "$g_presentation_obj_7", reg51),
                        (position_set_x, pos7, 510),
                        (position_set_y, pos7, 360),
                    (try_end),    
                (create_text_overlay, "$g_presentation_obj_8", "@Bet: {reg51}Denar"),#
                (position_set_x, pos8, 450),
                (position_set_y, pos8, 400),
                (create_game_button_overlay, "$g_presentation_obj_10", "@Done", tf_center_justify),#
                (position_set_x, pos10, 500),
                (position_set_y, pos10, 284),
                (overlay_set_position, "$g_presentation_obj_6", pos6),
                    (try_begin), 
                        (eq,"$g_gamble",0),
                        (overlay_set_val, "$g_presentation_obj_7", reg51),
                        (overlay_set_position, "$g_presentation_obj_7", pos7),
                    (try_end),          
                (overlay_set_position, "$g_presentation_obj_8", pos8),
                (overlay_set_position, "$g_presentation_obj_10", pos10),
            (try_end),
    
            (try_begin),
                (eq, reg50, 2),
                (assign, reg50, 3),
                (create_game_button_overlay, "$g_presentation_obj_14", "@Roll Dice", tf_center_justify),#
                (position_set_x, pos1, 475),
                (position_set_y, pos1, 515),
                (overlay_set_position, "$g_presentation_obj_14", pos1),
            (try_end),

            (try_begin),        
                (eq, reg50, 4),
                (assign, reg50, 5),
                (call_script, "script_d6_roll",0),# d6_1
                (assign, reg10, reg1),
                (call_script, "script_d6_roll",0),# d6_2
                (assign, reg20, reg1),
                # (call_script, "script_d6_roll",0),# d6_3
                # (assign, reg30, reg1),                
                (store_add, reg3, reg10, reg20),
                # (val_add,reg3,reg30),
                    (try_begin),    
                        (store_random_in_range,reg11,1,7),# dice1 start side
                        (store_random_in_range,reg21,1,7),# dice2 start side
                        # (store_random_in_range,reg31,1,7),# dice3 start side
                            (try_begin),
                                (gt, reg11, reg10),
                                (val_add, reg10, 6),
                            (try_end),
                            (try_begin),
                                (gt,reg21,reg20),
                                (val_add,reg20,6),
                            (try_end),
                            # (try_begin),# dice3
                                # (gt,reg31,reg30),# dice3
                                # (val_add,reg30,6),# dice3
                            # (try_end),# dice3                            
                    (try_end),
                (assign, reg5, 0),
                (assign, reg6, 0),
                (assign, reg58,":cur_time"),                
            (try_end),
               
            (try_begin),            
                (eq, reg50, 5),
                (eq, reg6, 0),                        
                (lt, reg5, 6),
                (store_sub, ":time_pass",":cur_time",reg58),
                (ge, ":time_pass",200),
                (assign, reg58,":cur_time"),                
                (val_add, reg5,1),                
                    (try_begin),
                        (le, reg11, reg10),
                        (call_script, "script_draw_d6_side",1,reg5,reg11),
                        (val_add, reg11, 1),
                    (try_end),
                    (try_begin),
                        (le,reg21,reg20),
                        (call_script, "script_draw_d6_side",2,reg5,reg21),
                        (val_add,reg21,1),
                    (try_end),
                    # (try_begin),# dice3
                        # (le,reg31,reg30),# dice3
                        # (call_script, "script_draw_d6_side",3,reg5,reg31),# dice3
                        # (val_add,reg31,1),# dice3
                    # (try_end),
            (else_try),
                (eq, reg50, 5),            
                (eq, reg5, 6),
                (assign, reg6, 1),
                (assign, reg50, 6),   
                (assign, reg58,":cur_time"),            
            (try_end),            
        (ge, reg6, 1),
            (try_begin),
                (eq, reg6, 1),                
                (eq, reg50, 6),
                (assign, reg50, 7),            
                (eq, reg5, 6),                
                (str_store_string, s1, "@{reg3}"),
                (create_text_overlay, "$g_presentation_obj_15", "@{s1}", tf_center_justify),
                (position_set_x, pos1, 850),
                (position_set_y, pos1, 470),
                (overlay_set_position, "$g_presentation_obj_15", pos1),#sum
                (position_set_x, pos1, 5000),
                (position_set_y, pos1, 5000),
                (overlay_set_size, "$g_presentation_obj_15", pos1),
                (assign, reg50, 8),    
            (try_end),
    
            (try_begin),
                (eq, reg50, 8),
                (assign, reg50, 9),
                (overlay_set_display, "$g_presentation_obj_14", 0),
                (str_store_troop_name, s1, "$g_talk_troop"), 
                (create_game_button_overlay, "$g_presentation_obj_14", "@{s1} Rolls", tf_center_justify),#
                (position_set_x, pos1, 475),
                (position_set_y, pos1, 515),
                (overlay_set_position, "$g_presentation_obj_14", pos1),
            (try_end),

            (try_begin),        
                (eq, reg50, 10),#80
                (assign, reg50, 11),                
                (overlay_set_display, "$g_presentation_obj_1", 0),
                (overlay_set_display, "$g_presentation_obj_2", 0),
                #(overlay_set_display, "$g_presentation_obj_3", 0),# dice3
                (call_script, "script_d6_roll",0),# d6_1
                (assign, reg10, reg1),
                (call_script, "script_d6_roll",0),# d6_2
                (assign, reg20, reg1),
                (store_add, reg4, reg10, reg20),
                # (call_script, "script_d6_roll",0),# d6_3
                # (assign, reg30, reg1),                
                # (val_add,reg4,reg30),
                    (try_begin),    
                        (store_random_in_range,reg11,1,7),# dice1 start side
                        (store_random_in_range,reg21,1,7),# dice2 start side
                        # (store_random_in_range,reg31,1,7),# dice3 start side
                            (try_begin),
                                (gt, reg11, reg10),
                                (val_add, reg10, 6),
                            (try_end),
                            (try_begin),
                                (gt,reg21,reg20),
                                (val_add,reg20,6),
                            (try_end),
                            # (try_begin),# dice3
                                # (gt,reg31,reg30),# dice3
                                # (val_add,reg30,6),# dice3
                            # (try_end),# dice3                            
                    (try_end),
                (assign, reg5, 0),
                (assign, reg6, 2),
                (assign, reg58,":cur_time"),                
            (try_end),

            (try_begin),            
                (eq, reg50, 11),                          
                (eq, reg6, 2),                        
                (lt, reg5, 6),
                (store_sub, ":time_pass",":cur_time",reg58),
                (ge, ":time_pass",200),
                (assign, reg58,":cur_time"),                
                (val_add, reg5,1),                
                    (try_begin),
                        (le, reg11, reg10),
                        (call_script, "script_draw_d6_side",1,reg5,reg11),
                        (val_add, reg11, 1),
                    (try_end),
                    (try_begin),
                        (le,reg21,reg20),
                        (call_script, "script_draw_d6_side",2,reg5,reg21),
                        (val_add,reg21,1),
                    (try_end),
                    # (try_begin),# dice3
                        # (le,reg31,reg30),# dice3
                        # (call_script, "script_draw_d6_side",3,reg5,reg31),# dice3
                        # (val_add,reg31,1),# dice3
                    # (try_end),
            (else_try),
                (eq, reg50, 11),
                (eq, reg5, 6),
                (assign, reg6, 3),
                (assign, reg50, 12), 
            (try_end),                        
    (gt, reg6, 2),                    
        (try_begin),
            (eq, reg50, 12),
            (eq, reg6, 3),                
            (str_store_string, s1, "@{reg4}"),
            (create_text_overlay, "$g_presentation_obj_15", "@{s1}", tf_center_justify),
            (position_set_x, pos1, 130),
            (position_set_y, pos1, 180),
            (overlay_set_position, "$g_presentation_obj_15", pos1),#sum
            (position_set_x, pos1, 5000),
            (position_set_y, pos1, 5000),
            (overlay_set_size, "$g_presentation_obj_15", pos1),
            (assign, reg50, 13),

        (try_begin),
            (str_clear,s1),  
            (eq, reg50, 13),
            (overlay_set_display, "$g_presentation_obj_14", 0),
            (assign, reg50, 14),
                (try_begin),
                    (eq,reg3,reg4),
                    (str_clear,s1), 
                    (str_store_string, s1, "@Draw! Bet Twice?"),# Bet Twice?
                    (assign, reg50, 15),
                (else_try),
                    (gt, reg3, reg4),
                    (val_mul,reg51,2),                    
                    (call_script, "script_troop_add_gold", "trp_player", reg51),
                    (str_store_string, s1, "@You win! Try again?"),                    
                (else_try),
                    (gt, reg4, reg3),
                    (str_store_string, s1, "@You lose. Try again?"),                    
                (try_end),
                (create_text_overlay, reg1, "@{s1}", tf_center_justify),
                (position_set_x, pos1, 480),
                (position_set_y, pos1, 650),
                (overlay_set_position, reg1, pos1),#
                (position_set_x, pos1, 2000),
                (position_set_y, pos1, 2000),
                (overlay_set_size, reg1, pos1),#
                (create_mesh_overlay, reg1, "mesh_3card_window"),
                (position_set_x, pos1, 306),#
                (position_set_y, pos1, 580),#
                (overlay_set_position, reg1, pos1),
                (position_set_x, pos1, 500),#
                (position_set_y, pos1, 300),#
                (overlay_set_size, reg1, pos1),        
                
                (create_game_button_overlay, "$g_presentation_obj_12", "@Yes", tf_center_justify),                
                (position_set_x, pos1, 400),
                (position_set_y, pos1, 600),
                (overlay_set_position, "$g_presentation_obj_12", pos1),

                (create_game_button_overlay, "$g_presentation_obj_13", "@No", tf_center_justify),
                (position_set_x, pos1, 560),
                (position_set_y, pos1, 600),
                (overlay_set_position, "$g_presentation_obj_13", pos1),                
        (try_end),    
       ]),
       
      (ti_on_presentation_event_state_change,
       [(store_trigger_param_1, ":object"),
        (store_trigger_param_2, ":value"),
        (try_begin),
          (eq,"$g_gamble",0),
          (eq, ":object", "$g_presentation_obj_7"),#
          (try_begin),
            (neq, reg51, ":value"),
            (assign, reg51, ":value"),
          (try_end),
          (overlay_set_val, "$g_presentation_obj_7", reg51),
          (str_store_string, s1, "@Bet: {reg51}Denar"),
          (overlay_set_text, "$g_presentation_obj_8", s1),
        (else_try),
          (eq, ":object", "$g_presentation_obj_10"),#
          (store_troop_gold,reg1,"trp_player"),#
          (try_begin),
            (lt,reg1,reg51),#
            (display_message, "@You don't have enough money."),
          (else_try),
            (troop_remove_gold, "trp_player", reg51),#
            (play_sound, "snd_money_paid"),
            (overlay_set_display, "$g_presentation_obj_6", 0),
              (try_begin), 
                (eq,"$g_gamble",0),            
                (overlay_set_display, "$g_presentation_obj_7", 0),
              (try_end),    
            (overlay_set_display, "$g_presentation_obj_8", 0),
            (overlay_set_display, "$g_presentation_obj_10", 0),
            (store_troop_gold,reg1,"trp_player"),#
            (str_store_string, s1, "@Bet: {reg51}Denar"),#
            (overlay_set_text, "$g_presentation_obj_4", s1),
            (str_store_string, s1, "@Money: {reg1}Denar"),#
            (overlay_set_text, "$g_presentation_obj_5", s1),
            (assign, reg50, 2),
          (try_end),
        (try_end),  
        (try_begin),
            (eq, reg50, 3),        
            (eq, ":object", "$g_presentation_obj_14"),#Roll Dice button
            (play_sound, "snd_dice_roll"),                         
            (assign, reg50, 4),
        (try_end),
        (try_begin),
            (eq, reg50, 9),   
            (eq, ":object", "$g_presentation_obj_14"),#Oppo Roll Dice button
            (play_sound, "snd_dice_roll"),                         
            (assign, reg50, 10),
        (try_end),

        (try_begin),#DRAW
          (eq, reg50, 15),# 
          (eq,reg3,reg4),#
          (assign,"$g_gamble",0),
          (eq, ":object", "$g_presentation_obj_12"),#yes
          (store_troop_gold,reg1,"trp_player"),#
          (try_begin),
            (lt,reg1,reg51),#
            (display_message, "@You don't have enough money."),
          (else_try),
            (presentation_set_duration, 0),
            (assign,"$g_gamble",1),
            (val_mul,reg51,2),
            (assign,"$temp",reg51),
            (call_script, "script_troop_add_gold", "trp_player", reg51),            
            (assign, reg50,0),
            (start_presentation, "prsnt_dices_game"),
          (try_end),
        (else_try),
          (eq, ":object", "$g_presentation_obj_13"),#no
          (call_script, "script_troop_add_gold", "trp_player", reg51),
          (assign,reg1,0),#
          (assign, reg51, 1),
          (presentation_set_duration, 0),
        (try_end),                
        
        (try_begin),
          (eq, reg50, 14),#12         
          (eq, ":object", "$g_presentation_obj_12"),#yes
          (store_troop_gold,reg1,"trp_player"),#
          (try_begin),
            (lt,reg1,1),#
            (display_message, "@You don't have enough money."),
          (else_try),
            (presentation_set_duration, 0),
            (assign, reg50,0),
            (assign,"$g_gamble",0),
            (start_presentation, "prsnt_dices_game"),
          (try_end),
        (else_try),
          (eq, ":object", "$g_presentation_obj_13"),#no
          (assign,"$g_gamble",0),
          (presentation_set_duration, 0),
        (try_end),        
        ]),
     ]),
# prsnt_dices game end END    
### Dice game ### Dice game ### END ### 

  ("town_recruit_troops", 0, 0, [
    (ti_on_presentation_load,
      [
        (presentation_set_duration, 999999),
        (set_fixed_point_multiplier, 1000),
        
        (create_mesh_overlay, reg1, "mesh_note_window"),
        (position_set_x, pos1, 0),
        (position_set_y, pos1, 0),
        (overlay_set_position, reg1, pos1),
        
        (assign, ":cur_stack", "$g_prsnt_param_1"),
        (assign, ":recruiting_times", "$g_prsnt_param_2"),
        
        (party_get_free_companions_capacity, ":free_capacity", "p_main_party"),
        (try_begin),
          (le, ":free_capacity", 0),
          (assign, ":recruiting_times", 0),
        (try_end),
        
        #(str_clear, s0),
        #(create_text_overlay, "$g_presentation_obj_admin_panel_1", s0, tf_scrollable),
        #(position_set_x, pos1, 0),
        #(position_set_y, pos1, 100),
        #(overlay_set_position, "$g_presentation_obj_admin_panel_1", pos1),
        #(position_set_x, pos1, 300),
        #(position_set_y, pos1, 600),
        #(overlay_set_area_size, "$g_presentation_obj_admin_panel_1", pos1),
        #(set_container_overlay, "$g_presentation_obj_admin_panel_1"),
        
        (assign, ":num_stacks", 0),
        (assign, ":stack_size", 0),
        (store_faction_of_party, ":party_faction", "$g_encountered_party"),

        (try_begin),
          (this_or_next|party_slot_eq, "$g_encountered_party", slot_party_type, spt_town),
          (party_slot_eq, "$g_encountered_party", slot_party_type, spt_castle),
          (call_script, "script_get_town_faction_for_recruiting", "$g_encountered_party"),
          (assign, ":party_faction", reg0),
        (try_end),
                
        (try_for_range, ":slot_no", slot_faction_infantry_1_troop, slot_faction_infantry_end_troop),
            (faction_get_slot, ":troop_no", ":party_faction", ":slot_no"),
            (gt, ":troop_no", 0),
            (val_add, ":num_stacks", 1),
        (try_end),
        
        (assign, ":pos_x", 100),
        (store_mul, ":pos_y", ":num_stacks", 40),
        (val_sub, ":pos_y", 40),
        (val_max, ":pos_y", 560),
        
        (try_for_range, ":slot_no", 0, ":num_stacks"),
          (store_add, ":cur_troop_slot", slot_faction_infantry_1_troop, ":slot_no"),
          (faction_get_slot, ":troop_no", ":party_faction", ":cur_troop_slot"),
          (gt, ":troop_no", 0),
        
          (store_add, ":selected_num_slot", slot_center_infantry_1_number, ":slot_no"),
          (party_get_slot, ":cur_stack_size", "$g_encountered_party", ":selected_num_slot"),
          
          (try_begin),
            (this_or_next|party_slot_eq, "$g_encountered_party", slot_party_type, spt_town),
            (party_slot_eq, "$g_encountered_party", slot_party_type, spt_castle),
            (store_faction_of_party, ":center_faction", "$g_encountered_party"),
            (neg|eq, ":center_faction", "$players_kingdom"),
            (this_or_next|eq, ":slot_no",2),  
            (this_or_next|eq, ":slot_no",5),  
            (this_or_next|eq, ":slot_no",7),  
            (eq, ":slot_no",8), 
            (assign, ":cur_stack_size",0),
          (try_end),
          
          (try_begin),
            (le, ":free_capacity", 0),
            (assign, ":cur_stack_size", 0),
          (try_end),
          (try_begin),
            (eq, ":slot_no", ":cur_stack"),
            (assign, ":stack_size", ":cur_stack_size"),
          (try_end),
          
          (str_store_troop_name, s1, ":troop_no"),
          (store_character_level, ":troop_level", ":troop_no"),
          (assign, reg1, ":troop_level"),
          
          (assign, reg2, ":cur_stack_size"),
          (try_begin),
            (eq, ":cur_stack_size", 0),
            (str_store_string, s1, "@{s1} LV{reg1} (can nor recruit)"),
          (else_try),
            (str_store_string, s1, "@{s1} LV{reg1} ({reg2} can recruit)"),
          (try_end),
          (create_game_button_overlay, reg1, "@{s1}"),
          (position_set_x, pos1, ":pos_x"),
          (position_set_y, pos1, ":pos_y"),
          (overlay_set_position, reg1, pos1),
          (position_set_x, pos1, 280),
          (position_set_y, pos1, 32),
          (overlay_set_size, reg1, pos1),
          (troop_set_slot, "trp_temp_array_a", ":slot_no", reg1),
          (val_sub, ":pos_y", 40),
        (try_end),
        (try_begin),
          (gt, ":cur_stack", -1),
          (troop_get_slot, ":dest_obj", "trp_temp_array_a", ":cur_stack"),
          (overlay_set_alpha, ":dest_obj", 0x80),
        (try_end),
        (set_container_overlay, -1),

        (assign, ":recruiting_cost", -1),
        (str_store_string, s1, "@{s1} LV{reg1} (can nor recruit)"),        
        # cur troop
        (try_begin),
          (gt, ":cur_stack", -1),
          (store_add, ":cur_troop_slot", slot_faction_infantry_1_troop, ":cur_stack"),
          (faction_get_slot, ":troop_no", ":party_faction", ":cur_troop_slot"),
          
          (troop_get_slot, ":special", ":troop_no", slot_troop_special_ability),
          (call_script, "script_get_special_ability_text_to_s2", ":special", 0),
          (str_store_string, s3, "@special: {s2}"),
          (troop_get_slot, ":special", ":troop_no", slot_troop_special_ability_extra),
          (call_script, "script_get_special_ability_text_to_s2", ":special", 1),
          (str_store_string, s4, "@special2: {s2}"),
          (troop_get_slot, ":special", ":troop_no", slot_troop_special_ability_passive),
          (call_script, "script_get_special_ability_text_to_s2", ":special", 2),
          (str_store_string, s5, "@passive_special: {s2}"),
          (call_script, "script_game_get_join_cost", ":troop_no"),
          (assign, reg1, reg0),
          (call_script, "script_game_get_troop_wage", ":troop_no", "p_main_party"),
          (str_store_string, s2, "@join_cost: {reg1} wage: {reg0}"),
          (assign, ":recruiting_cost", reg1),
          
          (str_store_troop_name, s1, ":troop_no"),
          
          (store_mul, ":cur_troop", ":troop_no", 2), #with weapons
          (create_mesh_overlay_with_tableau_material, "$g_presentation_obj_admin_panel_6", -1, "tableau_game_party_window", ":cur_troop"),
          (position_set_x, pos1, 370),
          (position_set_y, pos1, 350),
          (overlay_set_position, "$g_presentation_obj_admin_panel_6", pos1),
          (position_set_x, pos1, 750),
          (position_set_y, pos1, 1000),
          (overlay_set_size, "$g_presentation_obj_admin_panel_6", pos1),
        (else_try),
          (create_mesh_overlay, "$g_presentation_obj_admin_panel_6", "mesh_white_plane"),
          (overlay_set_display, "$g_presentation_obj_admin_panel_6", 0),
          (assign, ":recruiting_times", 0),
          (str_store_string, s3, "str_space"),
          (str_store_string, s4, "str_space"),
          (str_store_string, s5, "str_space"),
          (str_store_string, s2, "str_space"),
          (str_store_string, s1, "str_space"),
        (try_end),
        
        (create_listbox_overlay, "$g_presentation_obj_admin_panel_2", "str_space", 0),
        (position_set_x, pos1, 325),
        (position_set_y, pos1, 150),
        (overlay_set_position, "$g_presentation_obj_admin_panel_2", pos1),
        (overlay_add_item, "$g_presentation_obj_admin_panel_2", "@{s5}"),
        (overlay_add_item, "$g_presentation_obj_admin_panel_2", "@{s4}"),
        (overlay_add_item, "$g_presentation_obj_admin_panel_2", "@{s3}"),
        (overlay_add_item, "$g_presentation_obj_admin_panel_2", "@{s2}"),
        (position_set_x, pos1, 1500),
        (position_set_y, pos1, 1500),
        (overlay_set_size, "$g_presentation_obj_admin_panel_2", pos1),
        
        (assign, reg9, ":recruiting_cost"),
        (assign, reg8, ":free_capacity"),
        (assign, reg7, ":recruiting_times"),
        (store_troop_gold, reg10, "trp_player"),
         
        (store_div, ":max_recruiting_times", reg10, ":recruiting_cost"),
        (val_min, ":max_recruiting_times", ":stack_size"),
        (val_min, ":max_recruiting_times", ":free_capacity"),
        (assign, reg6, ":max_recruiting_times"),
        (str_store_faction_name, s2, ":party_faction"),
        
        (create_text_overlay, reg1, "@You can recruiting troops of {s2}. It costs {reg9} dinaers per troop. ^^You can recruiting {reg6} {s1} left here  ^have {reg10} dinaers in your package.", tf_double_space|tf_scrollable),
        (position_set_x, pos1, 685),
        (position_set_y, pos1, 430),
        (overlay_set_position, reg1, pos1),
        (position_set_x, pos1, 270),
        (position_set_y, pos1, 250),
        (overlay_set_area_size, reg1, pos1),
        
        (create_text_overlay, reg1, "@Number of recruiting: {reg7}", tf_center_justify),
        (position_set_x, pos1, 835),
        (position_set_y, pos1, 400),
        (overlay_set_position, reg1, pos1),
        
        # Increase 
        (create_listbox_overlay, "$g_presentation_obj_admin_panel_8", "str_space", 0),
        (position_set_x, pos1, 720),
        (position_set_y, pos1, 250),
        (overlay_set_position, "$g_presentation_obj_admin_panel_8", pos1),
        (overlay_add_item, "$g_presentation_obj_admin_panel_8", "@+1 time"),
        (overlay_add_item, "$g_presentation_obj_admin_panel_8", "@+2 times"),
        (overlay_add_item, "$g_presentation_obj_admin_panel_8", "@+5 times"),
        (overlay_add_item, "$g_presentation_obj_admin_panel_8", "@+10 times"),
        (overlay_add_item, "$g_presentation_obj_admin_panel_8", "@Max times"),
        # Decrease
        (create_listbox_overlay, "$g_presentation_obj_admin_panel_9", "str_space", 0),
        (position_set_x, pos1, 720),
        (position_set_y, pos1, 100),
        (overlay_set_position, "$g_presentation_obj_admin_panel_9", pos1),
        (overlay_add_item, "$g_presentation_obj_admin_panel_9", "@remove all time"),
        (overlay_add_item, "$g_presentation_obj_admin_panel_9", "@-10 times"),
        (overlay_add_item, "$g_presentation_obj_admin_panel_9", "@-5 times"),
        (overlay_add_item, "$g_presentation_obj_admin_panel_9", "@-2 times"),
        (overlay_add_item, "$g_presentation_obj_admin_panel_9", "@-1 times"),
                
        # done
        (create_game_button_overlay, "$g_presentation_obj_admin_panel_10", "@Done"),
        (position_set_x, pos1, 485),
        (position_set_y, pos1, 12),
        (overlay_set_position, "$g_presentation_obj_admin_panel_10", pos1),
        
        # buy
        (create_game_button_overlay, "$g_presentation_obj_admin_panel_11", "@buy"),
        (position_set_x, pos1, 820),
        (position_set_y, pos1, 12),
        (overlay_set_position, "$g_presentation_obj_admin_panel_11", pos1),
        
        # ####### mouse fix pos system #######
         # (call_script, "script_mouse_fix_pos_ready"),
        # ####### mouse fix pos system #######
      ]),
      
     # (ti_on_presentation_run,
       # [
      # ####### mouse fix pos system #######
       # (call_script, "script_mouse_fix_pos_run"),
      # ####### mouse fix pos system #######
     # ]),
    
    (ti_on_presentation_event_state_change,
      [
        (store_trigger_param_1, ":object"),
        (store_trigger_param_2, ":value"),
        
        (assign, ":cur_stack", "$g_prsnt_param_1"),
        (assign, ":recruiting_times", "$g_prsnt_param_2"),
        (party_get_free_companions_capacity, ":free_capacity", "p_main_party"),

        (troop_get_slot, ":troop_no", "trp_temp_array_b", ":cur_stack"),
        
        (assign, ":num_stacks", 0),
        
        (store_faction_of_party, ":party_faction", "$g_encountered_party"),
        (try_begin),
          (this_or_next|party_slot_eq, "$g_encountered_party", slot_party_type, spt_town),
          (party_slot_eq, "$g_encountered_party", slot_party_type, spt_castle),
          (call_script, "script_get_town_faction_for_recruiting", "$g_encountered_party"),
          (assign, ":party_faction", reg0),
        (try_end),
        
        (try_for_range, ":slot_no", slot_faction_infantry_1_troop, slot_faction_infantry_end_troop),
            (faction_get_slot, ":troop_no", ":party_faction", ":slot_no"),
            (gt, ":troop_no", 0),
            (val_add, ":num_stacks", 1),
        (try_end),
        
        
        (try_for_range, ":slot_no", 0, ":num_stacks"),
          (troop_slot_eq, "trp_temp_array_a", ":slot_no", ":object"),
          (assign, ":cur_stack", ":slot_no"),
          (assign, "$g_prsnt_param_1", ":cur_stack"),
          (assign, "$g_prsnt_param_2", 0),
          (start_presentation, "prsnt_town_recruit_troops"),
        (try_end),
        
        (try_begin),
          (this_or_next|eq, ":object", "$g_presentation_obj_admin_panel_8"),
          (this_or_next|eq, ":object", "$g_presentation_obj_admin_panel_9"),
          (eq, ":object", "$g_presentation_obj_admin_panel_11"),
          
          (store_add, ":cur_troop_slot", slot_faction_infantry_1_troop, ":cur_stack"),
          (faction_get_slot, ":troop_no", ":party_faction", ":cur_troop_slot"),
          (gt, ":troop_no", 0),
          (store_add, ":selected_num_slot", slot_center_infantry_1_number, ":cur_stack"),
          (party_get_slot, ":stack_size", "$g_encountered_party", ":selected_num_slot"),
                  
          (try_begin),
            (this_or_next|party_slot_eq, "$g_encountered_party", slot_party_type, spt_town),
            (party_slot_eq, "$g_encountered_party", slot_party_type, spt_castle),
            (store_faction_of_party, ":center_faction", "$g_encountered_party"),
            (neg|eq, ":center_faction", "$players_kingdom"),
            (this_or_next|eq, ":cur_stack",2),  
            (this_or_next|eq, ":cur_stack",5),  
            (this_or_next|eq, ":cur_stack",7),  
            (eq, ":cur_stack",8), 
            (assign, ":stack_size",0),
          (try_end),
                  
          (call_script, "script_game_get_join_cost", ":troop_no"),
          (assign, ":recruiting_cost", reg0),
          (store_troop_gold, ":player_gold", "trp_player"),
          (store_div, ":max_recruiting_times", ":player_gold", ":recruiting_cost"),
          (val_min, ":max_recruiting_times", ":stack_size"),
          (try_begin),
            (eq, ":object", "$g_presentation_obj_admin_panel_8"),
            (gt, ":stack_size", 0),
            (gt, ":troop_no", 0),
            (try_begin),
              (eq, ":value", 0),
              (val_add, ":recruiting_times", 1),
            (else_try),
              (eq, ":value", 1),
              (val_add, ":recruiting_times", 2),
            (else_try),
              (eq, ":value", 2),
              (val_add, ":recruiting_times", 5),
            (else_try),
              (eq, ":value", 3),
              (val_add, ":recruiting_times", 10),
            (else_try),
              (eq, ":value", 4),
              (assign, ":recruiting_times", ":max_recruiting_times"),
            (try_end),
            (val_min, ":recruiting_times", ":stack_size"),
            (val_min, ":recruiting_times", ":free_capacity"),
            (assign, "$g_prsnt_param_2", ":recruiting_times"),
            (start_presentation, "prsnt_town_recruit_troops"),
          (else_try),
            (eq, ":object", "$g_presentation_obj_admin_panel_9"),
            (gt, ":stack_size", 0),
            (gt, ":troop_no", 0),
            (try_begin),
              (eq, ":value", 0),
              (assign, ":recruiting_times", 0),
            (else_try),
              (eq, ":value", 1),
              (val_add, ":recruiting_times", -10),
            (else_try),
              (eq, ":value", 2),
              (val_add, ":recruiting_times", -5),
            (else_try),
              (eq, ":value", 3),
              (val_add, ":recruiting_times", -2),
            (else_try),
              (eq, ":value", 4),
              (val_add, ":recruiting_times", -1),
            (try_end),
            (val_max, ":recruiting_times", 0),
            (val_min, ":recruiting_times", ":stack_size"),
            (val_min, ":recruiting_times", ":free_capacity"),
            (assign, "$g_prsnt_param_2", ":recruiting_times"),
            (start_presentation, "prsnt_town_recruit_troops"),
          (else_try),
            (eq, ":object", "$g_presentation_obj_admin_panel_11"),
            (gt, ":troop_no", 0),
            (gt, ":stack_size", 0),
            (gt, ":selected_num_slot", 0),
            (gt, ":recruiting_times", 0),
            (store_mul, ":total_recruiting_cost", ":recruiting_times", ":recruiting_cost"),
            (troop_remove_gold, "trp_player", ":total_recruiting_cost"),
            (party_add_members, "p_main_party", ":troop_no", ":recruiting_times"),
            (party_get_slot, ":recruit_gold", "$g_encountered_party", ":selected_num_slot"),
            (val_sub, ":recruit_gold", ":recruiting_times"),
            (party_set_slot, "$g_encountered_party", ":selected_num_slot", ":recruit_gold"),
            (assign, ":recruiting_times", 0),
            (assign, "$g_prsnt_param_2", ":recruiting_times"),
            (start_presentation, "prsnt_town_recruit_troops"),
          (try_end),
        (try_end),
        
        (try_begin),
          (eq, ":object", "$g_presentation_obj_admin_panel_10"),
          (presentation_set_duration, 0),
        (try_end),
    ]),
  ]),

  ("set_npcs_magic", 0, 0, [
    (ti_on_presentation_load,
      [
        (presentation_set_duration, 999999),
        (set_fixed_point_multiplier, 1000),
        
        ## CC
        (create_mesh_overlay, reg1, "mesh_white_plane"),
        (position_set_x, pos1, 1200),
        (position_set_y, pos1, 800),
        (overlay_set_position, reg1, pos1),
        ## CC
        
        (create_mesh_overlay, reg1, "mesh_load_window"),
        (position_set_x, pos1, 0),
        (position_set_y, pos1, 0),
        (overlay_set_position, reg1, pos1),
        
        (assign, "$g_cur_selected_item_slot", -1),
        
        
        (assign, ":selected_troop", "$g_prsnt_param_1"),
        (assign, ":cur_page_of_loot_pool", "$g_prsnt_param_2"),

        
        # done
        (create_in_game_button_overlay, "$g_presentation_obj_admin_panel_2", "@Done"),
        (overlay_set_color, "$g_presentation_obj_admin_panel_2", 0xFFFFFF),
        (position_set_x, pos1, 870),
        (position_set_y, pos1, 10),
        (overlay_set_position, "$g_presentation_obj_admin_panel_2", pos1),

        # page buttons
        (create_combo_label_overlay, "$g_presentation_obj_admin_panel_3"),
        (position_set_x, pos1, 740),
        (position_set_y, pos1, 15),
        (overlay_set_position, "$g_presentation_obj_admin_panel_3", pos1),
        (position_set_x, pos1, 500),
        (position_set_y, pos1, 800),
        (overlay_set_size, "$g_presentation_obj_admin_panel_3", pos1),
        (overlay_add_item, "$g_presentation_obj_admin_panel_3", "@Page 1"),
        (overlay_add_item, "$g_presentation_obj_admin_panel_3", "@Page 2"),
        (overlay_set_val, "$g_presentation_obj_admin_panel_3", ":cur_page_of_loot_pool"),
        # resort
        (create_in_game_button_overlay, "$g_presentation_obj_admin_panel_4", "@Re-sort"),
        (overlay_set_color, "$g_presentation_obj_admin_panel_4", 0xFFFFFF),
        (position_set_x, pos1, 440),
        (position_set_y, pos1, 10),
        (overlay_set_position, "$g_presentation_obj_admin_panel_4", pos1),
        

        # tips
        (create_button_overlay, "$g_presentation_obj_admin_panel_9", "@Tips", tf_center_justify),
        (overlay_set_color, "$g_presentation_obj_admin_panel_9", 0x00FF00),
        (position_set_x, pos1, 910),
        (position_set_y, pos1, 120),
        (overlay_set_position, "$g_presentation_obj_admin_panel_9", pos1),
        
        (create_combo_label_overlay, "$g_presentation_obj_admin_panel_5"),
        (position_set_x, pos1, 910),
        (position_set_y, pos1, 60),
        (overlay_set_position, "$g_presentation_obj_admin_panel_5", pos1),
        (position_set_x, pos1, 500),
        (position_set_y, pos1, 800),
        (overlay_set_size, "$g_presentation_obj_admin_panel_5", pos1),
        (overlay_add_item, "$g_presentation_obj_admin_panel_5", "@Page 1 voice"),
        (overlay_add_item, "$g_presentation_obj_admin_panel_5", "@Page 2 spell"),
        (overlay_add_item, "$g_presentation_obj_admin_panel_5", "@Page 3 special_ability"),
        (overlay_add_item, "$g_presentation_obj_admin_panel_5", "@Page 4 special_ability_extra"),
        (overlay_add_item, "$g_presentation_obj_admin_panel_5", "@Page 5 special_ability_passive"),
        (overlay_add_item, "$g_presentation_obj_admin_panel_5", "@Page 6 bash"),
        (overlay_add_item, "$g_presentation_obj_admin_panel_5", "@Page 7 drink"),
        
        (overlay_set_val, "$g_presentation_obj_admin_panel_5", "$g_cur_item_pool"),
        (store_add, ":case_troop", bookcase_troops_begin, "$g_cur_item_pool"),
        
        
        # hero list
        (str_clear, s0),
        (assign, ":area_size_x", 130),
        (assign, ":area_size_y", 600),
        (assign, ":offset_y", 30),
        (create_text_overlay, reg1, s0, tf_scrollable),
        (position_set_x, pos1, 850),
        (position_set_y, pos1, 100),
        (overlay_set_position, reg1, pos1),
        (position_set_x, pos1, ":area_size_x"),
        (position_set_y, pos1, ":area_size_y"),
        (overlay_set_area_size, reg1, pos1),
        (set_container_overlay, reg1),
        # pos_y of first obj
        (call_script, "script_get_num_heroes_of_party", "p_main_party", 0),
        (assign, ":num_of_heroes", reg0),
        (store_mul, ":pos_y", ":num_of_heroes", ":offset_y"),
        (val_max, ":pos_y", ":area_size_y"),
        (val_sub, ":pos_y", ":offset_y"),
        (store_div, ":pos_x", ":area_size_x", 2),
        
        (assign, ":trp_slot_prsnt_no", 0),
        (party_get_num_companion_stacks, ":num_stacks","p_main_party"),
        (try_for_range, ":i_stack", 0, ":num_stacks"),
          (party_stack_get_troop_id,":stack_troop","p_main_party",":i_stack"),
          (troop_is_hero, ":stack_troop"),
          (str_store_troop_name, s1, ":stack_troop"),
          (position_set_x, pos1, ":pos_x"),
          (position_set_y, pos1, ":pos_y"),
          (val_sub, ":pos_y", ":offset_y"),
          (create_button_overlay, reg1, "@{s1}", tf_center_justify),
          (overlay_set_position, reg1, pos1),
          (try_begin),
            (eq, ":stack_troop", ":selected_troop"),
            (overlay_set_color, reg1, 0x999999),
          (try_end),
          (troop_set_slot, "trp_temp_array_e", ":trp_slot_prsnt_no", reg1),
          (troop_set_slot, "trp_temp_array_a", ":trp_slot_prsnt_no", ":stack_troop"),
          (val_add, ":trp_slot_prsnt_no", 1),
        (try_end),

        (set_container_overlay, -1),
        
        ################
        (str_store_troop_name, s1, ":selected_troop"),
        
        (create_text_overlay, reg1, s1, tf_double_space|tf_center_justify),
        (position_set_x, pos1, 900),
        (position_set_y, pos1, 900),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 75),
        (position_set_y, pos1, 25),
        (overlay_set_position, reg1, pos1),
        
        (store_mul, ":cur_troop", ":selected_troop", 2), #with weapons
        (create_mesh_overlay_with_tableau_material, reg1, -1, "tableau_game_party_window", ":cur_troop"),
        (position_set_x, pos1, 675),
        (position_set_y, pos1, 900),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, -25),
        (position_set_y, pos1, 50),
        (overlay_set_position, reg1, pos1),
        
        ## cur_hero equipments
        (create_mesh_overlay, "$g_presentation_obj_admin_panel_13", "mesh_inventory_equipment_panel"),
        (position_set_x, pos1, 960),
        (position_set_y, pos1, 960),
        (overlay_set_size, "$g_presentation_obj_admin_panel_13", pos1),
        (position_set_x, pos1, 10),
        (position_set_y, pos1, 15),
        (overlay_set_position, "$g_presentation_obj_admin_panel_13", pos1),
        (overlay_set_alpha, "$g_presentation_obj_admin_panel_13", 0xFF),
        
        (assign, ":init_pos_x", 219),
        (assign, ":init_pos_y", 683),
        (assign, ":cur_troop", ":selected_troop"),
        
        
        
        (assign, "$g_current_opened_item_details", -1),
        
        (assign, ":pos_x", ":init_pos_x"),
        (assign, ":pos_y", ":init_pos_y"),
        #(try_for_range, ":slot_no", slot_troop_spell_1, slot_troop_spell_end),
        (try_for_range, ":slot_no", 0, 9),
          (try_begin),
            (eq, ":slot_no", 4),
            (val_sub, ":pos_x", 96),
            (assign, ":pos_y", ":init_pos_y"),
          (else_try),
            (eq, ":slot_no", 7),
            (val_sub, ":pos_x", 84),
            (store_sub, ":pos_y", ":init_pos_y", 85),
          (else_try),
            (eq, ":slot_no", 8),
            (val_sub, ":pos_y", 108),
          (try_end),
          (val_sub, ":pos_y", 85),
          (troop_get_slot, ":cur_item", ":cur_troop", ":slot_no"),

          # background meshes
          (create_mesh_overlay, reg1, "mesh_white_plane"),
          (position_set_x, pos1, 4150),
          (position_set_y, pos1, 4150),
          (overlay_set_size, reg1, pos1),
          (position_set_x, pos1, ":pos_x"),
          (position_set_y, pos1, ":pos_y"),
          (overlay_set_position, reg1, pos1),
          (overlay_set_color, reg1, 0x000000),
          (try_begin), # alpha
            (lt, ":cur_item", 0),
            (overlay_set_alpha, reg1, 0x00),
          (else_try),
            (overlay_set_alpha, reg1, 0xFF),
          (try_end),
          
          (try_begin), # item mesh
            (gt, ":cur_item", 0),
            (create_mesh_overlay_with_item_id, reg1, ":cur_item"),
            (position_set_x, pos1, 850),
            (position_set_y, pos1, 850),
            (overlay_set_size, reg1, pos1),
            (store_add, ":item_x", ":pos_x", 42),
            (store_add, ":item_y", ":pos_y", 42),
            (position_set_x, pos1, ":item_x"),
            (position_set_y, pos1, ":item_y"),
            (overlay_set_position, reg1, pos1),
            (troop_set_slot, "trp_temp_array_d", ":slot_no", reg1),
          (try_end),
          (troop_set_slot, "trp_temp_array_c", ":slot_no", 1), # can use
          
          # action layer
          (create_mesh_overlay, reg1, "mesh_white_plane"),
          (position_set_x, pos1, 4150),
          (position_set_y, pos1, 4150),
          (overlay_set_size, reg1, pos1),
          (position_set_x, pos1, ":pos_x"),
          (position_set_y, pos1, ":pos_y"),
          (overlay_set_position, reg1, pos1),
          (overlay_set_alpha, reg1, 0x00),
          (troop_set_slot, "trp_temp_array_b", ":slot_no", reg1),
        (try_end),
          
        
        (troop_set_slot, "trp_temp_array_d", 9, -1),
        (troop_set_slot, "trp_temp_array_b", 9, -1),
        (troop_set_slot, "trp_temp_array_c", 9, 0), # can't use
        
        ## trp_temp_troop
        (assign, ":pos_x", 327),
        (assign, ":pos_y", 647),
        (assign, ":slot_no", 10),
        (try_for_range, ":unused_height", 0, 8),
          (try_for_range, ":unused_width", 0, 6),
            (create_mesh_overlay, reg1, "mesh_mp_inventory_choose"),
            (position_set_x, pos1, 680),
            (position_set_y, pos1, 680),
            (overlay_set_size, reg1, pos1),
            (position_set_x, pos1, ":pos_x"),
            (position_set_y, pos1, ":pos_y"),
            (overlay_set_position, reg1, pos1),
            
            
            (troop_set_slot, "trp_temp_array_a", ":slot_no", reg1),
            (create_mesh_overlay, reg1, "mesh_mp_inventory_choose"),
            (position_set_x, pos1, 640),
            (position_set_y, pos1, 640),
            (overlay_set_size, reg1, pos1),
            (position_set_x, pos1, ":pos_x"),
            (position_set_y, pos1, ":pos_y"),
            (overlay_set_position, reg1, pos1),
            
            (troop_get_inventory_slot, ":item_no", ":case_troop", ":slot_no"),
            (try_begin),
              (lt, ":item_no", 0),
              (assign, ":item_no", 0),
              (troop_set_slot, "trp_temp_array_c", ":slot_no", 1),
            (else_try),
              (gt, ":item_no", 0),
              (troop_set_slot, "trp_temp_array_c", ":slot_no", 1),
             # (call_script, "script_troop_can_use_item", ":selected_troop", ":item_no", ":item_imod"),
             # (assign, ":can_use", reg0),
             # (troop_set_slot, "trp_temp_array_c", ":slot_no", ":can_use"),
            (try_end),
            (create_mesh_overlay_with_item_id, reg1, ":item_no"),
            (position_set_x, pos1, 850),
            (position_set_y, pos1, 850),
            (overlay_set_size, reg1, pos1),
            (store_add, ":item_x", ":pos_x", 42),
            (store_add, ":item_y", ":pos_y", 42),
            (position_set_x, pos1, ":item_x"),
            (position_set_y, pos1, ":item_y"),
            (overlay_set_position, reg1, pos1),
            (troop_set_slot, "trp_temp_array_d", ":slot_no", reg1),
            
            # action layer
            (create_mesh_overlay, reg1, "mesh_white_plane"),
            (position_set_x, pos1, 4250),
            (position_set_y, pos1, 4250),
            (overlay_set_size, reg1, pos1),
            (position_set_x, pos1, ":pos_x"),
            (position_set_y, pos1, ":pos_y"),
            (overlay_set_position, reg1, pos1),
            (overlay_set_color, reg1, 0xFF0000), # red background
            (overlay_set_alpha, reg1, 0x00),
            (try_begin),
              (troop_slot_eq, "trp_temp_array_c", ":slot_no", 0),
              (overlay_set_alpha, reg1, 0x40),
            (try_end),
            (troop_set_slot, "trp_temp_array_b", ":slot_no", reg1),
            
            (val_add, ":pos_x", 85),
            (val_add, ":slot_no", 1),
          (try_end),
          (assign, ":pos_x", 327),
          (val_sub, ":pos_y", 85),
        (try_end),

        # #### mouse fix pos system #######
        # (call_script, "script_mouse_fix_pos_ready"),
        # #### mouse fix pos system #######
      ]),

      (ti_on_presentation_run,
        [
        (set_fixed_point_multiplier, 1000),
        # ##### mouse fix pos system #######
        # (call_script, "script_mouse_fix_pos_run"),
        # ##### mouse fix pos system #######
        
        (assign, ":selected_troop", "$g_prsnt_param_1"),
        (call_script, "script_get_num_heroes_of_party", "p_main_party", 0),
        (assign, ":num_of_heroes", reg0),
        (assign, ":dest_prsnt_slot", 0),
        (try_for_range, ":trp_slot_prsnt_no", 0, ":num_of_heroes"),
          (troop_slot_eq, "trp_temp_array_a", ":trp_slot_prsnt_no", ":selected_troop"),
          (assign, ":dest_prsnt_slot", ":trp_slot_prsnt_no"),
        (try_end),
        
        (assign, ":value_change", 0),
        (try_begin),
          (this_or_next|key_clicked, key_up),
          (game_key_clicked, gk_move_forward),
          (assign, ":value_change", -1),
        (else_try),
          (this_or_next|key_clicked, key_down),
          (game_key_clicked, gk_move_backward),
          (assign, ":value_change", 1),
        (else_try),
          (this_or_next|key_clicked, key_left),
          (game_key_clicked, gk_move_left),
          (store_sub, ":value_change", 0, ":num_of_heroes"),
        (else_try),
          (this_or_next|key_clicked, key_right),
          (game_key_clicked, gk_move_right),
          (assign, ":value_change", ":num_of_heroes"),
        (try_end),
        (try_begin),
          (store_add, ":new_prsnt_slot", ":dest_prsnt_slot", ":value_change"),
          (val_clamp, ":new_prsnt_slot", 0, ":num_of_heroes"),
          (troop_get_slot, ":new_troop", "trp_temp_array_a", ":new_prsnt_slot"),
          (neq, ":new_troop", ":selected_troop"),
          (assign, ":selected_troop", ":new_troop"),
          (assign, "$g_prsnt_param_1", ":selected_troop"),
          (start_presentation, "prsnt_set_npcs_magic"),
        (try_end),
        
        
        (try_begin),
          (gt, "$g_cur_selected_item_slot", -1),
          (troop_get_slot, ":object", "trp_temp_array_d", "$g_cur_selected_item_slot"),
          (mouse_get_position, pos1),
          (overlay_set_position, ":object", pos1),
          (position_set_x, pos2, 1700),
          (position_set_y, pos2, 1700),
          (overlay_set_size, ":object", pos2),
        (try_end),
      ]),

    (ti_on_presentation_mouse_press,
     [(store_trigger_param_1, ":object"),
      (store_trigger_param_2, ":mouse_state"),
      
      (assign, ":selected_troop", "$g_prsnt_param_1"),
      (assign, ":cur_page_of_loot_pool", "$g_prsnt_param_2"),
      (try_for_range, ":slot_no", 0, 58),
        (troop_slot_eq, "trp_temp_array_b", ":slot_no", ":object"),
        (troop_slot_eq, "trp_temp_array_c", ":slot_no", 1), # can use
        (try_begin),
          (is_between, ":slot_no", 0, 9),
          (store_add, ":item_slot_no", slot_troop_spell_1, ":slot_no"),
          (troop_get_slot, ":cur_item", ":selected_troop", ":item_slot_no"),
        (else_try),
          (is_between, ":slot_no", 10, 58),
          (store_mul, ":item_slot_no", ":cur_page_of_loot_pool", 48),
          (val_add, ":item_slot_no", ":slot_no"),
          (store_add, ":case_troop", bookcase_troops_begin, "$g_cur_item_pool"),

          (troop_get_inventory_slot, ":cur_item", ":case_troop", ":item_slot_no"),
        (try_end),
        

        (try_begin),
          (eq, ":mouse_state", 0), # left-click
          (try_begin),
            (eq, "$g_cur_selected_item_slot", -1),
            (try_begin),
              (gt, ":cur_item", -1),
              (assign, "$g_cur_selected_item_slot", ":slot_no"),
              (close_item_details),
            (try_end),
          (else_try),
            #(gt, "$g_cur_selected_item_slot", -1),
            
            (assign, ":old_slot", "$g_cur_selected_item_slot"),
            (assign, ":new_slot", ":slot_no"),
            (call_script, "script_exchange_two_items_of_slots_2", ":old_slot", ":new_slot", ":selected_troop", ":cur_page_of_loot_pool"),
          (try_end),
        (else_try),
          (eq, ":mouse_state", 1), # right-click
          (try_begin),
            (eq, "$g_cur_selected_item_slot", -1),
            (is_between, ":slot_no", 10, 58),
            (gt, ":cur_item", -1),
            (assign, ":old_slot", ":slot_no"),
            (item_get_type, ":old_slot_type", ":cur_item"),
            (try_begin), # weapons
              (this_or_next|is_between, ":old_slot_type", itp_type_one_handed_wpn, itp_type_goods),
              (is_between, ":old_slot_type", itp_type_pistol, itp_type_animal),
              (assign, ":old_slot_type", itp_type_one_handed_wpn),
            (try_end),
            (assign, ":end_cond", 9),
            (try_for_range, ":new_slot", 0, ":end_cond"),
              (try_begin),
                (is_between, ":new_slot", 0, 4), # weapons
                (assign, ":new_slot_type", itp_type_one_handed_wpn),
                (troop_get_inventory_slot, ":new_item", ":selected_troop", ":new_slot"),
                (try_begin),
                  (gt, ":new_item", -1),
                  (assign, ":new_slot_type", -1),
                (try_end),
              (else_try),
                (is_between, ":new_slot", 4, 8),
                (store_add, ":new_slot_type", ":new_slot", 8),
              (else_try),
                (eq, ":new_slot", 8),
                (assign, ":new_slot_type", itp_type_horse),
              (try_end),
              (eq, ":new_slot_type", ":old_slot_type"),
              (assign, ":end_cond", 0), #stop
              (call_script, "script_exchange_two_items_of_slots_2", ":old_slot", ":new_slot", ":selected_troop", ":cur_page_of_loot_pool"),
            (try_end),
          (try_end),
        (try_end),
      (try_end),
        
      (try_end),
    ]),
      
    (ti_on_presentation_mouse_enter_leave,
      [
      (store_trigger_param_1, ":object"),
      (store_trigger_param_2, ":enter_leave"),
      
      (assign, ":selected_troop", "$g_prsnt_param_1"),
      (assign, ":cur_page_of_loot_pool", "$g_prsnt_param_2"),
      (try_begin),
        (eq, ":enter_leave", 0),
        (try_for_range, ":slot_no", 0, 58),
          (troop_slot_eq, "trp_temp_array_b", ":slot_no", ":object"),
          (troop_get_slot, ":item_object", "trp_temp_array_d", ":slot_no"),
          (overlay_get_position, pos0, ":item_object"),
          (try_begin),
            (is_between, ":slot_no", 0, 9),
            (store_add, ":item_slot_no", slot_troop_spell_1, ":slot_no"),
            (troop_get_slot, ":cur_item", ":selected_troop", ":item_slot_no"),
          (else_try),
            (is_between, ":slot_no", 10, 58),
            (store_mul, ":item_slot_no", ":cur_page_of_loot_pool", 48),
            (val_add, ":item_slot_no", ":slot_no"),
            (store_add, ":case_troop", bookcase_troops_begin, "$g_cur_item_pool"),
            (troop_get_inventory_slot, ":cur_item", ":case_troop", ":item_slot_no"),
          (try_end),
          
          
          
          (eq, "$g_cur_selected_item_slot", -1),
          (gt, ":cur_item", -1),
          (show_item_details, ":cur_item", pos0, 100),
          (assign, "$g_current_opened_item_details", ":slot_no"),
        (try_end),
      (else_try),
        (try_for_range, ":slot_no", 0, 58),
          (troop_slot_eq, "trp_temp_array_b", ":slot_no", ":object"),
          (try_begin),
            (eq, "$g_current_opened_item_details", ":slot_no"),
            (close_item_details),
          (try_end),
        (try_end),
      (try_end),
    ]),
    
    (ti_on_presentation_event_state_change,
      [
        (store_trigger_param_1, ":object"),
        (store_trigger_param_2, ":value"),
        
        (assign, ":selected_troop", "$g_prsnt_param_1"),
        (assign, ":cur_page_of_loot_pool", "$g_prsnt_param_2"),


        (try_for_range, ":slot_no", 0, 9),
          (troop_slot_eq, "trp_temp_array_f", ":slot_no", ":object"),
          (store_add, ":upgrading_slot", slot_upgrade_wpn_1, ":slot_no"),
          (troop_set_slot, ":selected_troop", ":upgrading_slot", ":value"),
          (start_presentation, "prsnt_set_npcs_magic"),
        (try_end),
        (try_begin),
          (eq, ":object", "$g_presentation_obj_admin_panel_5"),
          (assign, "$g_prsnt_param_2", 0),
          (assign, "$g_cur_item_pool", ":value"),
          (start_presentation, "prsnt_set_npcs_magic"),
        (else_try), 
          (eq, ":object", "$g_presentation_obj_admin_panel_3"),
          (assign, ":cur_page_of_loot_pool", ":value"),
          (assign, "$g_prsnt_param_2", ":cur_page_of_loot_pool"),
          (start_presentation, "prsnt_set_npcs_magic"),
        (else_try),
          (eq, ":object", "$g_presentation_obj_admin_panel_2"),
          (assign, ":selected_troop", "trp_player"),
          (assign, "$g_prsnt_param_1", ":selected_troop"),
          (presentation_set_duration, 0),
        (else_try),
          (eq, ":object", "$g_presentation_obj_admin_panel_4"),
          (call_script, "script_refresh_bookcase"),
          (start_presentation, "prsnt_set_npcs_magic"),
        (try_end),

        (call_script, "script_get_num_heroes_of_party", "p_main_party", 0),
        (assign, ":num_of_heroes", reg0),
        (try_for_range, ":trp_slot_prsnt_no", 0, ":num_of_heroes"),
          (troop_slot_eq, "trp_temp_array_e", ":trp_slot_prsnt_no", ":object"),
          (troop_get_slot, ":cur_troop", "trp_temp_array_a", ":trp_slot_prsnt_no"),
          (assign, ":selected_troop", ":cur_troop"),
          (assign, "$g_prsnt_param_1", ":selected_troop"),
          (start_presentation, "prsnt_set_npcs_magic"),
        (try_end),
      ]),
    ]),
  
  ("magic_book_exchange", 0, 0, [
    (ti_on_presentation_load,
      [
        (presentation_set_duration, 999999),
        (set_fixed_point_multiplier, 1000),

        (create_mesh_overlay, reg1, "mesh_load_window"),
        (position_set_x, pos1, 0),
        (position_set_y, pos1, 0),
        (overlay_set_position, reg1, pos1),
        
        (assign, "$g_current_opened_item_details", -1),

        ## back
        (create_game_button_overlay, "$g_presentation_obj_1", "@Done"),
        (position_set_x, pos1, 500),
        (position_set_y, pos1, 25),
        (overlay_set_position, "$g_presentation_obj_1", pos1),

        (create_text_overlay, reg1, "@This is a screen for book_exchange books for inventory or bookcase. Hold down control key while clicking on a book to inventory or bookcase.^^The right side is your bookcase, The left side is your inventory. ", tf_double_space|tf_scrollable),
        (position_set_x, pos1, 345),
        (position_set_y, pos1, 290),
        (overlay_set_position, reg1, pos1),
        (position_set_x, pos1, 310),
        (position_set_y, pos1, 300),
        (overlay_set_area_size, reg1, pos1),
                
        ## bookseller's inventory
        (str_clear, s0),
        (create_text_overlay, reg1, s0, tf_scrollable),
        (position_set_x, pos1, 50),
        (position_set_y, pos1, 75),
        (overlay_set_position, reg1, pos1),
        (position_set_x, pos1, 245),
        (position_set_y, pos1, 565),
        (overlay_set_area_size, reg1, pos1),
        (set_container_overlay, reg1),

        (assign, ":pos_x", 0),
        (assign, ":pos_y", 2480),
        (assign, ":slot_no", 10),
        (try_for_range, ":unused_height", 0, 32),
          (try_for_range, ":unused_width", 0, 3),
            (create_image_button_overlay, reg1, "mesh_mp_inventory_slot_empty", "mesh_mp_inventory_slot_empty"),
            (position_set_x, pos1, 640),
            (position_set_y, pos1, 640),
            (overlay_set_size, reg1, pos1),
            (position_set_x, pos1, ":pos_x"),
            (position_set_y, pos1, ":pos_y"),
            (overlay_set_position, reg1, pos1),
            (troop_set_slot, "trp_temp_array_a", ":slot_no", reg1),
            (create_mesh_overlay, reg1, "mesh_mp_inventory_choose"),
            (position_set_x, pos1, 640),
            (position_set_y, pos1, 640),
            (overlay_set_size, reg1, pos1),
            (position_set_x, pos1, ":pos_x"),
            (position_set_y, pos1, ":pos_y"),
            (overlay_set_position, reg1, pos1),
            (troop_get_inventory_slot, ":item_no", "trp_player", ":slot_no"),
            (try_begin),
              (gt, ":item_no", -1),
              (create_mesh_overlay_with_item_id, reg1, ":item_no"),
              (position_set_x, pos1, 800),
              (position_set_y, pos1, 800),
              (overlay_set_size, reg1, pos1),
              (store_add, ":item_x", ":pos_x", 40),
              (store_add, ":item_y", ":pos_y", 40),
              (position_set_x, pos1, ":item_x"),
              (position_set_y, pos1, ":item_y"),
              (overlay_set_position, reg1, pos1),
              (troop_set_slot, "trp_temp_array_b", ":slot_no", reg1),
            (try_end),
            (val_add, ":pos_x", 80),
            (val_add, ":slot_no", 1),
          (try_end),
          (assign, ":pos_x", 0),
          (val_sub, ":pos_y", 80),
        (try_end),
        (set_container_overlay, -1),

        ## bookcase's inventory
        (str_clear, s0),
        (create_text_overlay, reg1, s0, tf_scrollable),
        (position_set_x, pos1, 680),
        (position_set_y, pos1, 75),
        (overlay_set_position, reg1, pos1),
        (position_set_x, pos1, 245),
        (position_set_y, pos1, 565),
        (overlay_set_area_size, reg1, pos1),
        (set_container_overlay, reg1),

        (assign, ":pos_x", 0),
        (assign, ":pos_y", 2480),
        (assign, ":slot_no", 110),
        (try_for_range, ":unused_height", 0, 32),
          (try_for_range, ":unused_width", 0, 3),
            (create_image_button_overlay, reg1, "mesh_mp_inventory_slot_empty", "mesh_mp_inventory_slot_empty"),
            (position_set_x, pos1, 640),
            (position_set_y, pos1, 640),
            (overlay_set_size, reg1, pos1),
            (position_set_x, pos1, ":pos_x"),
            (position_set_y, pos1, ":pos_y"),
            (overlay_set_position, reg1, pos1),
            (troop_set_slot, "trp_temp_array_a", ":slot_no", reg1),
            (create_mesh_overlay, reg1, "mesh_mp_inventory_choose"),
            (position_set_x, pos1, 640),
            (position_set_y, pos1, 640),
            (overlay_set_size, reg1, pos1),
            (position_set_x, pos1, ":pos_x"),
            (position_set_y, pos1, ":pos_y"),
            (overlay_set_position, reg1, pos1),
            (store_sub, ":bookcase_slot_no", ":slot_no", 100),
            (troop_get_inventory_slot, ":item_no", "trp_bookcase_spell", ":bookcase_slot_no"),
            (try_begin),
              (gt, ":item_no", -1),
              (create_mesh_overlay_with_item_id, reg1, ":item_no"),
              (position_set_x, pos1, 800),
              (position_set_y, pos1, 800),
              (overlay_set_size, reg1, pos1),
              (store_add, ":item_x", ":pos_x", 40),
              (store_add, ":item_y", ":pos_y", 40),
              (position_set_x, pos1, ":item_x"),
              (position_set_y, pos1, ":item_y"),
              (overlay_set_position, reg1, pos1),
              (troop_set_slot, "trp_temp_array_b", ":slot_no", reg1),
            (try_end),
            (val_add, ":pos_x", 80),
            (val_add, ":slot_no", 1),
          (try_end),
          (assign, ":pos_x", 0),
          (val_sub, ":pos_y", 80),
        (try_end),
        (set_container_overlay, -1),
        ## items
      ]),

    (ti_on_presentation_mouse_enter_leave,
      [
      (store_trigger_param_1, ":object"),
      (store_trigger_param_2, ":enter_leave"),

      (troop_get_inventory_capacity, ":capacity", "trp_bookcase_spell"),
      (store_add, ":max_slot_no", ":capacity", 100),
      (try_begin),
        (eq, ":enter_leave", 0),
        (try_begin),
          (eq, "$g_current_opened_item_details", -1),
          (close_item_details),
        (try_end),
        (try_for_range, ":slot_no", 10, ":max_slot_no"),
          (troop_slot_eq, "trp_temp_array_a", ":slot_no", ":object"),
          (try_begin),
            (lt, ":slot_no", 110),
            (assign, ":cur_item_slot", ":slot_no"),
            (assign, ":cur_troop", "trp_player"),
            (troop_get_inventory_slot, ":item_no", ":cur_troop", ":cur_item_slot"),
            (call_script, "script_game_get_item_buy_price_factor", ":item_no"),
            (assign, ":price_factor", reg0),
          (else_try),
            (store_sub, ":cur_item_slot", ":slot_no", 100),
            (assign, ":cur_troop", "trp_bookcase_spell"),
            (troop_get_inventory_slot, ":item_no", ":cur_troop", ":cur_item_slot"),
            (call_script, "script_game_get_item_sell_price_factor", ":item_no"),
            (assign, ":price_factor", reg0),
          (try_end),
          (try_begin),
            (gt, ":item_no", -1),
            (troop_get_slot, ":target_obj", "trp_temp_array_b", ":slot_no"),
            (overlay_get_position, pos0, ":target_obj"),
            (troop_get_inventory_slot_modifier, ":imod", ":cur_troop", ":cur_item_slot"),
            (try_begin),
              (gt, ":imod", 0),
              (show_item_details_with_modifier, ":item_no", ":imod", pos0, ":price_factor"),
            (else_try),
              (show_item_details, ":item_no", pos0, ":price_factor"),
            (try_end),
            (assign, "$g_current_opened_item_details", ":slot_no"),
          (try_end),
        (try_end),
      (else_try),
        (try_for_range, ":slot_no", 10, ":max_slot_no"),
          (troop_slot_eq, "trp_temp_array_a", ":slot_no", ":object"),
          (try_begin),
            (this_or_next|eq, "$g_current_opened_item_details", ":slot_no"),
            (eq, "$g_current_opened_item_details", -1),
            (close_item_details),
          (try_end),
        (try_end),
      (try_end),
      
      
    ]),

    (ti_on_presentation_event_state_change,
      [
        (store_trigger_param_1, ":object"),

        (try_begin),
          (eq, ":object", "$g_presentation_obj_1"),
          (presentation_set_duration, 0),
          (mission_enable_talk),
        (try_end),
        
        (troop_get_inventory_capacity, ":capacity", "trp_bookcase_spell"),
        (store_add, ":max_slot_no", ":capacity", 100),
        (try_for_range, ":slot_no", 10, ":max_slot_no"),
          (troop_slot_eq, "trp_temp_array_a", ":slot_no", ":object"),
          (this_or_next|key_is_down, key_left_control),
          (key_is_down, key_right_control),
          (try_begin),
            (lt, ":slot_no", 110),
            (troop_get_inventory_slot, ":item_no", "trp_player", ":slot_no"),
            (troop_get_inventory_slot_modifier, ":imod", "trp_player", ":slot_no"),
            (try_begin),
              (gt, ":item_no", -1),
              (item_slot_eq, ":item_no", slot_item_is_magic_spell, 1),
              (try_begin),
                (store_free_inventory_capacity, ":inv_cap", "trp_bookcase_spell"),
                (le, ":inv_cap", 0),
              (else_try),
                (troop_set_inventory_slot, "trp_player", ":slot_no", -1),
                (troop_add_item, "trp_bookcase_spell", ":item_no", ":imod"),
                (start_presentation, "prsnt_book_exchange"),
              (try_end),
            (try_end),
          (else_try),
            (store_sub, ":bookcase_slot_no", ":slot_no", 100),
            (troop_get_inventory_slot, ":item_no", "trp_bookcase_spell", ":bookcase_slot_no"),
            (troop_get_inventory_slot_modifier, ":imod", "trp_bookcase_spell", ":bookcase_slot_no"),
            (try_begin),
              (gt, ":item_no", -1),
              (item_slot_eq, ":item_no", slot_item_is_magic_spell, 1),
              (try_begin),
                (store_free_inventory_capacity, ":inv_cap", "trp_player"),
                (le, ":inv_cap", 0),
              (else_try),
                (troop_set_inventory_slot, "trp_bookcase_spell", ":bookcase_slot_no", -1),
                (troop_set_slot, "trp_bookcase_spell", ":bookcase_slot_no", -1),
                (troop_add_item, "trp_player", ":item_no", ":imod"),
                (start_presentation, "prsnt_book_exchange"),
              (try_end),
            (try_end),
          (try_end),
        (try_end),
    ]),
  ]),

  ]
# modmerger_start version=201 type=2
try:
    component_name = "presentations"
    var_set = { "presentations" : presentations }
    from modmerger import modmerge
    modmerge(var_set)
except:
    raise
# modmerger_end
